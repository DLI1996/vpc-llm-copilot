{"https://docs.aws.amazon.com/cli/latest/reference/vpc-lattice/": "AWS CLI Command Reference\nHome\nUser Guide\nForum\nGitHub\nNavigation\nindex\nnext\n|\nprevious\n|\nAWS CLI 1.30.3 Command Reference\n\u00bb\naws\n\u00bb\n\u2190 update-watchlist\n/\nbatch-update-rule \u2192\nTable Of Contents\nvpc-lattice\nDescription\nAvailable Commands\nQuick search\nSearch box\nSearch\nFeedback\nDid you find this page useful? Do you have a suggestion to improve the documentation?\nGive us feedback\n.\nIf you would like to suggest an improvement or fix for the AWS CLI, check out our\ncontributing guide\non GitHub.\nUser Guide\nFirst time using the AWS CLI? See the\nUser Guide\nfor\n  help getting started.\nNote:\nYou are viewing the documentation for an older major version of the AWS CLI (version 1).\nAWS CLI version 2, the latest major version of AWS CLI, is now stable and recommended for general use.\n                        \n                            To view this page for the AWS CLI version 2, click\nhere\n.\n                        \n                        For more information see the AWS CLI version 2\ninstallation instructions\nand\nmigration guide\n.\n[\naws\n]\nvpc-lattice\n\u00c2\u00b6\nDescription\n\u00c2\u00b6\nAmazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the\nAmazon VPC Lattice User Guide\nAvailable Commands\n\u00c2\u00b6\nbatch-update-rule\ncreate-access-log-subscription\ncreate-listener\ncreate-rule\ncreate-service\ncreate-service-network\ncreate-service-network-service-association\ncreate-service-network-vpc-association\ncreate-target-group\ndelete-access-log-subscription\ndelete-auth-policy\ndelete-listener\ndelete-resource-policy\ndelete-rule\ndelete-service\ndelete-service-network\ndelete-service-network-service-association\ndelete-service-network-vpc-association\ndelete-target-group\nderegister-targets\nget-access-log-subscription\nget-auth-policy\nget-listener\nget-resource-policy\nget-rule\nget-service\nget-service-network\nget-service-network-service-association\nget-service-network-vpc-association\nget-target-group\nlist-access-log-subscriptions\nlist-listeners\nlist-rules\nlist-service-network-service-associations\nlist-service-network-vpc-associations\nlist-service-networks\nlist-services\nlist-tags-for-resource\nlist-target-groups\nlist-targets\nput-auth-policy\nput-resource-policy\nregister-targets\ntag-resource\nuntag-resource\nupdate-access-log-subscription\nupdate-listener\nupdate-rule\nupdate-service\nupdate-service-network\nupdate-service-network-vpc-association\nupdate-target-group\n\u2190 update-watchlist\n/\nbatch-update-rule \u2192\nNavigation\nindex\nnext\n|\nprevious\n|\nAWS CLI 1.30.3 Command Reference\n\u00bb\naws\n\u00bb", "https://docs.aws.amazon.com/vpc/latest/userguide/how-it-works.html": "How Amazon VPC works - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nVPCs and subnets\nDefault and nondefault VPCs\nRoute tables\nAccess the internet\nAccess a corporate or home network\nConnect VPCs and networks\nAWS private global network\nHow Amazon VPC works\nWith Amazon Virtual Private Cloud (Amazon VPC), you can launch AWS resources in a logically isolated virtual \n\t\tnetwork that you've defined. This virtual network closely resembles a traditional network \n\t\tthat you'd operate in your own data center, with the benefits of using the scalable \n\t\tinfrastructure of AWS.\nThe following is a visual representation of a VPC and its resources from the\nPreview\npane shown when you create a VPC using the AWS Management Console. For\n\t\tan existing VPC, you can access this visualization on the\nResource map\ntab. This example shows the resources that are initially selected on the\nCreate\n\t\t\tVPC\npage when you choose to create the VPC plus other networking resources.\n\t\tThis VPC is configured with an IPv4 CIDR and an Amazon-provided IPv6\n\t\tCIDR, subnets in two Availability Zones, three route tables, an internet gateway, and a gateway\n\t\tendpoint. Because we've selected the internet gateway, the visualization indicates that\n\t\ttraffic from the public subnets is routed to the internet because the corresponding route\n\t\ttable sends the traffic to the internet gateway.\nConcepts\nVPCs and subnets\nDefault and nondefault VPCs\nRoute tables\nAccess the internet\nAccess a corporate or home network\nConnect VPCs and networks\nAWS private global network\nVPCs and subnets\nA\nvirtual private cloud\n(VPC) is a virtual network dedicated to your\n\t\t\tAWS account. It is logically isolated from other virtual networks in the AWS Cloud.\n\t\t\tYou can specify an IP address range for the VPC, add subnets, add gateways, and\n\t\t\tassociate security groups.\nA\nsubnet\nis a range of IP addresses in your VPC. You launch AWS\n\t\t\tresources, such as Amazon EC2 instances, into your subnets. You can connect a subnet to the\n\t\t\tinternet, other VPCs, and your own data centers, and route traffic to and from your\n\t\t\tsubnets using route tables.\nLearn more\nIP addressing for your VPCs and subnets\nVirtual private clouds (VPC)\nSubnets for your VPC\nDefault and nondefault VPCs\nIf your account was created after December 4, 2013, it comes with a\ndefault VPC\nin each Region. A default VPC is\n\t\t\tconfigured and ready for you to use. For example, it has a\ndefault\n\t\t\t\tsubnet\nin each Availability Zone in the Region, an attached internet\n\t\t\tgateway, a route in the main route table that sends all traffic to the internet gateway,\n\t\t\tand DNS settings that automatically assign public DNS hostnames to instances with public\n\t\t\tIP addresses and enable DNS resolution through the Amazon-provided DNS server (see\nDNS attributes in your VPC\n). Therefore, an EC2\n\t\t\tinstance that is launched in a default subnet automatically has access to the internet.\n\t\t\tIf you have a default VPC in a Region and you don't specify a subnet when you launch an\n\t\t\tEC2 instance into that Region, we choose one of the default subnets and launch the\n\t\t\tinstance into that subnet.\nYou can also create your own VPC, and configure it as you need. This is known as a\nnondefault VPC\n. Subnets that you create in your nondefault\n                VPC and additional subnets that you create in your default VPC are called\nnondefault subnets\n.\nLearn more\nDefault VPCs\nCreate a VPC\nRoute tables\nA\nroute table\ncontains a set of rules, called routes, that are\n            used to determine where network traffic from your VPC is directed. You can explicitly\n            associate a subnet with a particular route table. Otherwise, the subnet is implicitly\n            associated with the main route table.\nEach route in a route table specifies the range of IP addresses where you want the\n            traffic to go (the destination) and the gateway, network interface, or connection\n            through which to send the traffic (the target).\nLearn more\nConfigure route tables\nAccess the internet\nYou control how the instances that you launch into a VPC access resources outside\n\t\t\t\tthe VPC.\nA default VPC includes an internet gateway, and each default subnet is a public subnet.\n\t\t\tEach instance that you launch into a default subnet has a private IPv4 address and a\n\t\t\tpublic IPv4 address. These instances can communicate with the internet through the\n\t\t\tinternet gateway. An internet gateway enables your instances to connect to the internet\n\t\t\tthrough the Amazon EC2 network edge.\nBy default, each instance that you launch into a nondefault subnet has a private IPv4\n\t\t\t\taddress, but no public IPv4 address, unless you specifically assign one at launch,\n\t\t\t\tor you modify the subnet's public IP address attribute. These instances can\n\t\t\t\tcommunicate with each other, but can't access the internet.\nYou can enable internet access for an instance launched into a nondefault subnet by\n\t\t\t\tattaching an internet gateway to its VPC (if its VPC is not a default VPC) and\n\t\t\t\tassociating an Elastic IP address with the instance.\nAlternatively, to allow an instance in your VPC to initiate outbound connections to the\n\t\t\tinternet but prevent unsolicited inbound connections from the internet, you can use a\n\t\t\tnetwork address translation (NAT) device. NAT maps multiple private IPv4 addresses to a\n\t\t\tsingle public IPv4 address. You can configure the NAT device with an Elastic IP address\n\t\t\tand connect it to the internet through an internet gateway. This makes it possible for\n\t\t\tan instance in a private subnet to connect to the internet through the NAT device,\n\t\t\trouting traffic from the instance to the internet gateway and any responses to the\n\t\t\tinstance.\nIf you associate an IPv6 CIDR block with your VPC and assign IPv6 addresses to your\n            instances, instances can connect to the internet over IPv6 through an internet gateway.\n            Alternatively, instances can initiate outbound connections to the internet over IPv6\n            using an egress-only internet gateway. IPv6 traffic is separate from IPv4 traffic; your\n            route tables must include separate routes for IPv6 traffic.\nLearn more\nConnect to the internet using an internet gateway\nEnable outbound IPv6 traffic using an egress-only internet gateway\nConnect to the internet or other networks using NAT devices\nAccess a corporate or home network\nYou can optionally connect your VPC to your own corporate data center using an IPsec\n\t\t\tAWS Site-to-Site VPN connection, making the AWS Cloud an extension of your data center.\nA Site-to-Site VPN connection consists of two VPN tunnels between a virtual private gateway or transit\n            gateway on the AWS side, and a customer gateway device located in your data center. A\n            customer gateway device is a physical device or software appliance that you configure on\n            your side of the Site-to-Site VPN connection.\nLearn more\nAWS Site-to-Site VPN User Guide\nAmazon VPC Transit Gateways\nConnect VPCs and networks\nYou can create a\nVPC peering connection\nbetween two VPCs that\n\t\t\tenables you to route traffic between them privately. Instances in either VPC can\n\t\t\tcommunicate with each other as if they are within the same network.\nYou can also create a\ntransit gateway\nand use it to interconnect\n\t\t\tyour VPCs and on-premises networks. The transit gateway acts as a Regional virtual\n\t\t\trouter for traffic flowing between its attachments, which can include VPCs, VPN\n\t\t\tconnections, AWS Direct Connect gateways, and transit gateway peering connections.\nLearn more\nAmazon VPC Peering Guide\nAmazon VPC Transit Gateways\nAWS private global network\nAWS provides a high-performance, and low-latency private global network that\n\t\t\tdelivers a secure cloud computing environment to support your networking needs. AWS\n\t\t\tRegions are connected to multiple Internet Service Providers (ISPs) as well as to a\n\t\t\tprivate global network backbone, which provides improved network performance for\n\t\t\tcross-Region traffic sent by customers.\nThe following considerations apply:\nTraffic that is in an Availability Zone, or between Availability Zones in\n\t\t\t\t\tall Regions, routes over the AWS private global network.\nTraffic that is between Regions always routes over the AWS private global\n\t\t\t\t\tnetwork, except for China Regions.\nNetwork packet loss can be caused by a number of factors, including network flow\n\t\t\tcollisions, lower level (Layer 2) errors, and other network failures. We engineer\n\t\t\tand operate our networks to minimize packet loss. We measure packet-loss rate (PLR)\n\t\t\tacross the global backbone that connects the AWS Regions. We operate our backbone\n\t\t\tnetwork to target a p99 of the hourly PLR of less than 0.0001%.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWhat is Amazon VPC?\nGet started\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-getting-started.html": "Get started with Amazon VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nSign up for an AWS account\nVerify permissions\nDetermine your IP address ranges\nSelect your Availability Zones\nPlan your internet connectivity\nCreate your VPC\nDeploy your application\nGet started with Amazon VPC\nComplete the following tasks to prepare to create and connect your VPCs.\n    When you are finished, you will be ready to deploy your application on AWS.\nTasks\nSign up for an AWS account\nVerify permissions\nDetermine your IP address ranges\nSelect your Availability Zones\nPlan your internet connectivity\nCreate your VPC\nDeploy your application\nSign up for an AWS account\nIf you do not have an AWS account, complete the following steps to create one.\nTo sign up for an AWS account\nOpen\nhttps://portal.aws.amazon.com/billing/signup\n.\nFollow the online instructions.\nPart of the sign-up procedure involves receiving a phone call and entering \n  a verification code on the phone keypad.\nWhen you sign up for an AWS account, an\nAWS account root user\nis created. The root user has access to all AWS services\n  and resources in the account. As a security best practice,\nassign administrative access to an administrative user\n, and use only the root user to perform\ntasks that require root user access\n.\nAWS sends you a confirmation email after the sign-up process is\n      complete. At any time, you can view your current account activity and manage your account by\n      going to\nhttps://aws.amazon.com/\nand choosing\nMy\n        Account\n.\nVerify permissions\nBefore you can use Amazon VPC, you must have the required permissions. For more information, \n      see\nIdentity and access management for Amazon VPC\nand\nAmazon VPC policy examples\n.\nDetermine your IP address ranges\nThe resources in your VPC communicate with each other and with resources over the\n      internet using IP addresses. When you create VPCs and subnets, you can select their IP \n      address ranges. When you deploy resources in a subnet, such as EC2 instances, they\n      receive IP addresses from the IP address range of the subnet. For more information, see\nIP addressing for your VPCs and subnets\n.\nAs you choose a size for your VPC, consider how many IP addresses you'll need across your\n      AWS accounts and VPCs. Ensure that the IP address ranges for your VPCs don't overlap with the\n      IP address ranges for your own network. If you need connectivity between multiple VPCs, you\n      must ensure that they have no overlapping IP addresses.\nIP Address Manager (IPAM) makes it easier to plan, track, and monitor the IP addresses\n      for your application. For more information, see the\nIP Address Manager Guide\n.\nSelect your Availability Zones\nAn AWS Region is a physical location where we cluster data centers, known\n        as Availability Zones. Each Availability Zone has independent power, cooling, and\n        physical security, with redundant power, networking, and connectivity. The Availability\n        Zones in a Region are physically separated by a meaningful distance, and interconnected \n        through high-bandwidth, low-latency networking. You can design your application to run \n        in multiple Availability Zones to achieve even greater fault tolerance.\nProduction environment\nFor a production environment, we recommend that you select at least two Availability\n        Zones and deploy your AWS resources evenly in each active Availability Zone.\nDevelopment or test environment\nFor a development or test environment, you might choose to save money by deploying \n        your resources in only one Availability Zone.\nPlan your internet connectivity\nPlan to divide each VPC into subnets based on your connectivity requirements. For\n      example:\nIf you have web servers that will receive traffic from clients on the internet, \n          create a subnet for these servers in each Availability Zone.\nIf you also have servers that will receive traffic only from other servers in the \n          VPC, create a separate subnet for these servers in each Availability Zone.\nIf you have servers that will receive traffic only through a VPN connection to your \n          network, create a separate subnet for these servers in each Availability Zone.\nIf your application will receive traffic from the internet, the VPC must have an internet\n      gateway. Attaching an internet gateway to a VPC does not automatically make your instances\n      accessible from the internet. In addition to attaching the internet gateway, you must update\n      the subnet route table with a route to the internet gateway. You must also ensure that the\n      instances have public IP addresses and an associated security group that allows traffic from\n      the internet over specific ports and protocols required by your application.\nAlternatively, register your instances with an internet-facing load balancer. The load\n      balancer  receives traffic from the clients and distributes it across the registered instances\n      in one or more Availability Zones. For more information, see\nElastic Load Balancing\n. To allow instances in a private subnet to access \n      the internet (for example, to download updates) without allowing unsolicited inbound connections\n      from the internet, add a public NAT gateway in each active Availability Zone and update the\n      route table to send internet traffic to the NAT gateway. For more information, see\nAccess the internet from a private subnet\n.\nCreate your VPC\nAfter you've determined the number of VPCs and subnets that you need, what CIDR blocks to\n      assign to your VPCs and subnets, and how to connect your VPC to the internet, you are ready to\n      create your VPC. If you create your VPC using the AWS Management Console and include public subnets in your\n      configuration, we create a route table for the subnet and add the routes required for direct\n      access to the internet. For more information, see\nCreate a VPC\n.\nDeploy your application\nAfter you've created your VPC, you can deploy your application.\nProduction environment\nFor a production environment, you can use one of the following services to deploy\n        servers in multiple Availability Zones, to configure scaling so that you maintain the\n        minimum number of servers required by your application, and to register your servers with a\n        load balancer to distribute traffic evenly across your servers.\nAmazon EC2 Auto Scaling\nEC2 Fleet\nAmazon Elastic Container Service (Amazon ECS)\nDevelopment or test environment\nFor a development or test environment, you might choose to launch a single EC2 instance. \n        For more information, see\nGet started with Amazon EC2\nin the\nAmazon EC2 User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow Amazon VPC works\nIP addressing\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html": "IP addressing for your VPCs and subnets - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nCompare IPv4 and IPv6\nPrivate IPv4 addresses\nPublic IPv4 addresses\nIPv6 addresses\nUse your own IP addresses\nUse Amazon VPC IP Address Manager\nIP addressing for your VPCs and subnets\nIP addresses enable resources in your VPC to communicate with each other, and with resources\n    over the internet.\nClassless Inter-Domain Routing (CIDR) notation is a way to represent an IP address and\n    its network mask. The format of these addresses is as follows:\nAn individual IPv4 address is 32 bits, with 4 groups of up to 3 decimal digits. For\n        example, 10.0.1.0.\nAn IPv4 CIDR block has four groups of up to three decimal digits, 0-255,\n        separated by periods, followed by a slash and a number from 0 to 32. For example, 10.0.0.0/16.\nAn individual IPv6 address is 128 bits, with 8 groups of 4 hexadecimal digits. For\n        example, 2001:0db8:85a3:0000:0000:8a2e:0370:7334.\nAn IPv6 CIDR block has four groups of up to four hexadecimal digits, separated by colons,\n        followed by a double colon, followed by a slash and a number from 1 to 128. For example,\n        2001:db8:1234:1a00::/56.\nFor more information, see\nWhat is CIDR?\nContents\nCompare IPv4 and IPv6\nPrivate IPv4 addresses\nPublic IPv4 addresses\nIPv6 addresses\nUse your own IP addresses\nUse Amazon VPC IP Address Manager\nVPC CIDR blocks\nSubnet CIDR blocks\nManaged prefix lists\nAWS IP address ranges\nMigrate from IPv4 to IPv6\nIPv6 support on AWS\nCompare IPv4 and IPv6\nThe following table summarizes the differences between IPv4 and IPv6 in Amazon EC2 and\n      Amazon VPC. For a list of AWS services that support dual-stack configuration (IPv4 and IPv6)\n      and IPv6-only configurations, see\nServices that support IPv6\n.\nCharacteristic\nIPv4\nIPv6\nVPC size\nUp to 5 CIDRs from /16 to /28. This\nquota\nis adjustable.\nUp to 5 CIDRs fixed at /56. This\nquota\nis adjustable.\nSubnet size\nFrom /16 to /28\nFixed at /64\nAddress selection\nYou can choose the IPv4 CIDR block for your VPC or you can allocate a\n              CIDR block from Amazon VPC IP Address Manager (IPAM). For more information, see\nWhat is IPAM?\nin the\nAmazon VPC IPAM User Guide\n.\nYou can bring your own IPv6 CIDR block to AWS for your VPC, choose an\n              Amazon-provided IPv6 CIDR block, or you can allocate a CIDR block from Amazon VPC IP\n              Address Manager (IPAM). For more information, see\nWhat is IPAM?\nin the\nAmazon VPC IPAM User Guide\n.\nInternet access\nRequires an\ninternet gateway\n.\nRequires an internet gateway. Supports outbound-only communication using an\negress-only internet gateway\n.\nElastic IP addresses\nSupported. Gives an EC2 instance a permanent, static public IPv4 address.\nNot supported. EIPs keep the public IPv4 address of an instance static on\n              instance restart. IPv6 addresses are static by default.\nNAT gateways\nSupported. Instances in private subnets can connect to the internet using a\n                public NAT gateway or to resources in other VPCs using a private NAT gateway.\nSupported. You can use a NAT gateway with NAT64 to enable instances in IPv6-only\n              subnets to communicate with IPv4-only resources within VPCs, between VPCs, in your\n              on-premises networks, or over the internet.\nDNS names\nInstances receive Amazon-provided IPBN or RBN-based DNS names. The DNS name\n              resolves to the DNS records selected for the instance.\nInstance receive Amazon-provided IPBN or RBN-based DNS names. The DNS name\n              resolves to the DNS records selected for the instance.\nPrivate IPv4 addresses\nPrivate IPv4 addresses (also referred to as\nprivate IP addresses\nin\n            this topic) are not reachable over the internet, and can be used for communication\n            between the instances in your VPC. When you launch an instance into a VPC, a primary\n            private IP address from the IPv4 address range of the subnet is assigned to the default\n            network interface (eth0) of the instance. Each instance is also given a private\n            (internal) DNS hostname that resolves to the private IP address of the instance. \n            The hostname can be of two types: resource-based or IP-based. For more information, \n            see\nEC2 instance naming\n. If you\n            don't specify a primary private IP address, we select an available IP address in the\n            subnet range for you. For more information about network interfaces, see\nElastic Network Interfaces\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nYou can assign additional private IP addresses, known as secondary private IP addresses,\n      to instances that are running in a VPC. Unlike a primary private IP address, you can reassign\n      a secondary private IP address from one network interface to another. A private IP address\n      remains associated with the network interface when the instance is stopped and restarted, and\n      is released when the instance is terminated. For more information about primary and secondary\n      IP addresses, see\nMultiple IP Addresses\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nWe refer to private IP addresses as the IP addresses that are within the IPv4 CIDR range\n      of the VPC. Most VPC IP address ranges fall within the private (non-publicly\n      routable) IP address ranges specified in RFC 1918; however, you can use publicly\n      routable CIDR blocks for your VPC. Regardless of the IP address range of your VPC,\n      we do not support direct access to the internet from your VPC's CIDR block,\n      including a publicly-routable CIDR block. You must set up internet access through a\n      gateway; for example, an internet gateway, virtual private gateway, a AWS Site-to-Site VPN connection, \n      or AWS Direct Connect.\nWe never advertise the IPv4 address range of a subnet to the internet.\nPublic IPv4 addresses\nAll subnets have an attribute that determines whether a network interface created in the\n      subnet automatically receives a public IPv4 address (also referred to as a\npublic IP address\nin this topic). Therefore, when you launch an\n      instance into a subnet that has this attribute enabled, a public IP address is assigned to the\n      primary network interface (eth0) that's created for the instance. A public IP address is\n      mapped to the primary private IP address through network address translation (NAT).\nYou can control whether your instance receives a public IP address by doing the following:\nModifying the public IP addressing attribute of your subnet. For more information, see\nModify the public IPv4 addressing attribute for your subnet\n.\nEnabling or disabling the public IP addressing feature during instance launch, which\n          overrides the subnet's public IP addressing attribute.\nA public IP address is assigned from Amazon's pool of public IP addresses; it's not\n            associated with your account. When a public IP address is disassociated from your\n            instance, it's released back into the pool, and is no longer available for you to use.\n            You cannot manually associate or disassociate a public IP address. Instead, in certain\n            cases, we release the public IP address from your instance, or assign it a new one. For\n            more information, see\nPublic\n                IP addresses\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nIf you require a persistent public IP address allocated to your account that can be\n            assigned to and removed from instances as you require, use an Elastic IP address\n            instead. For more information, see\nAssociate Elastic IP addresses with resources in your VPC\n.\nIf your VPC is enabled to support DNS hostnames, each instance that receives a public IP\n      address or an Elastic IP address is also given a public DNS hostname. We resolve a public DNS\n      hostname to the public IP address of the instance outside the instance network, and to the\n      private IP address of the instance from within the instance network. For more information, see\nDNS attributes for your VPC\n.\nIPv6 addresses\nYou can optionally associate an IPv6 CIDR block with your VPC and associate IPv6 CIDR\n      blocks with your subnets. The IPv6 CIDR block for your VPC is automatically assigned from\n      Amazon's pool of IPv6 addresses; you cannot choose the range yourself. For more information,\n      see the following topics:\nAdd an IPv6 CIDR block to your VPC\nAdd an IPv6 CIDR block to your subnet\nIPv6 addresses are globally unique and can be configured to remain private or reachable\n      over the Internet. Your instance receives an IPv6 address if an IPv6 CIDR block is associated \n      with your VPC and subnet, and if one of the following is true:\nYour subnet is configured to automatically assign an IPv6 address to an instance during\n          launch. For more information, see\nModify the IPv6 addressing attribute for your subnet\n.\nYou assign an IPv6 address to your instance during launch.\nYou assign an IPv6 address to the primary network interface of your\n          instance after launch.\nYou assign an IPv6 address to a network interface in the same subnet, and\n          attach the network interface to your instance after launch.\nWhen your instance receives an IPv6 address during launch, the address is associated with\n      the primary network interface (eth0) of the instance. You can manage the IPv6 addresses for your \n      instances primary network interface (eth0) in the following ways:\nAssign and unassign IPv6 addresses from the network interface. The number of IPv6 addresses you can assign to a\n        network interface and the number of network interfaces you can attach to an instance\n        varies per instance type. For more information, see\nIP addresses per network interface per instance type\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nEnable a primary IPv6 address. A primary IPv6 address enables you to avoid disrupting traffic to instances or ENIs. \n        For more information, see\nCreate a network interface\nand\nManage IP addresses\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nAn IPv6 address persists when you stop and start, or hibernate and start, your instance, and\n      is released when you terminate your instance. You cannot reassign an IPv6 address while\n      it's assigned to another network interface\u00e2\u0080\u0094you must first unassign it.\nYou can control whether instances are reachable via their IPv6 addresses by controlling the routing \n      for your subnet or by using security group and network ACL rules. For more information, see\nInternetwork traffic privacy in Amazon VPC\n.\nFor more information about reserved IPv6 address ranges, see\nIANA IPv6 Special-Purpose Address Registry\nand\nRFC4291\n.\nUse your own IP addresses\nYou can bring part or all of your own public IPv4 address range or IPv6 address range\n            to your AWS account. You continue to own the address range, but AWS  advertises it on the\n            internet by default. After you bring the address range to AWS, it appears in your\n            account as an address pool. You can create an Elastic IP address from your IPv4 address\n            pool, and you can associate an IPv6 CIDR block from your IPv6 address pool with a\n            VPC.\nFor more information, see\nBring your own IP\n                addresses (BYOIP)\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nUse Amazon VPC IP Address Manager\nAmazon VPC IP Address Manager (IPAM) is a VPC feature that makes it easier for you to\n      plan, track, and monitor IP addresses for your AWS workloads. You can use IPAM to allocate\n      IP address CIDRs to VPCs using specific business rules.\nFor more information, see\nWhat is IPAM?\nin the\nAmazon VPC IPAM User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGet started\nVPC CIDR blocks\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-cidr-blocks.html": "VPC CIDR blocks - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nIPv4 VPC CIDR blocks\nManage IPv4 CIDR blocks for a VPC\nIPv4 CIDR block association restrictions\nIPv6 VPC CIDR blocks\nVPC CIDR blocks\nThe IP addresses for your virtual private cloud (VPC) are represented using Classless \n        Inter-Domain Routing (CIDR) notation. A VPC must have an associated IPv4 CIDR block. \n        You can optionally associate additional IPv4 CIDR blocks and one or more IPv6 CIDR blocks. \n        For more information, see\nIP addressing for your VPCs and subnets\n.\nContents\nIPv4 VPC CIDR blocks\nManage IPv4 CIDR blocks for a VPC\nIPv4 CIDR block association restrictions\nIPv6 VPC CIDR blocks\nIPv4 VPC CIDR blocks\nWhen you create a VPC, you must specify an IPv4 CIDR block for the VPC. The allowed\n          block size is between a\n/16\nnetmask (65,536 IP addresses) and\n/28\nnetmask (16 IP addresses). After you've created your VPC, you\n          can associate additional IPv4 CIDR blocks with the VPC. For more information, see\nAdd an IPv4 CIDR block to your VPC\n.\nWhen you create a VPC, we recommend that you specify a CIDR block from the private IPv4\n          address ranges as specified in\nRFC 1918\n.\nRFC 1918 range\nExample CIDR block\n10.0.0.0 - 10.255.255.255 (10/8 prefix)\n10.0.0.0/16\n172.16.0.0 - 172.31.255.255 (172.16/12 prefix)\n172.31.0.0/16\n192.168.0.0 - 192.168.255.255 (192.168/16 prefix)\n192.168.0.0/20\nImportant\nSome AWS services use the\n172.17.0.0/16\nCIDR range. To avoid future conflicts, don\u00e2\u0080\u0099t use this range when creating your VPC. For example, services like AWS Cloud9 or Amazon SageMaker can experience IP address conflicts if the\n172.17.0.0/16\nIP address range is already in use anywhere in your network. For more information, see\nCan't connect to EC2 environment because VPC's IP addresses are used by Docker\nin the\nAWS Cloud9 User Guide\n.\nYou can create a VPC with a publicly routable CIDR block that falls outside of the private\n          IPv4 address ranges specified in RFC 1918. However, for the purposes of this documentation,\n          we refer to\nprivate IP addresses\nas the IPv4 addresses that are within\n          the CIDR range of your VPC.\nWhen you create a VPC for use with an AWS service, check the service documentation\n          to verify if there are specific requirements for its configuration.\nIf you create a VPC using a command line tool or the Amazon EC2 API, the CIDR block is\n          automatically modified to its canonical form. For example, if you specify 100.68.0.18/18 for the \n          CIDR block, we create a CIDR block of 100.68.0.0/18.\nManage IPv4 CIDR blocks for a VPC\nYou can associate secondary IPv4 CIDR blocks with your VPC. When you associate a CIDR block\n          with your VPC, a route is automatically added to your VPC route tables to enable\n          routing within the VPC (the destination is the CIDR block and the target is\nlocal\n).\nIn the following example, the VPC has both a primary and a secondary CIDR block.\n          The CIDR blocks for Subnet A and Subnet B are from the primary VPC CIDR block.\n          The CIDR block for Subnet C is from the secondary VPC CIDR block.\nThe following route table shows the local routes for the VPC.\nDestination\nTarget\n10.0.0.0/16\nLocal\n10.2.0.0/16\nLocal\nTo add a CIDR block to your VPC, the following rules apply:\nThe allowed block size is between a\n/28\nnetmask and\n/16\nnetmask.\nThe CIDR block must not overlap with any existing CIDR block that's associated with the\n              VPC.\nThere are restrictions on the ranges of IPv4 addresses you can use. For more information,\n              see\nIPv4 CIDR block association restrictions\n.\nYou cannot increase or decrease the size of an existing CIDR block.\nYou have a quota on the number of CIDR blocks you can associate with a VPC and the number\n              of routes you can add to a route table. You cannot associate a CIDR block if\n              this results in you exceeding your quotas. For more information, see\nAmazon VPC quotas\n.\nThe CIDR block must not be the same or larger than a destination CIDR range in a route in\n              any of the VPC route tables. For example, in a VPC where the primary CIDR\n              block is\n10.2.0.0/16\n, you have an existing route in a route\n              table with a destination of\n10.0.0.0/24\nto a virtual private\n              gateway. You want to associate a secondary CIDR block in the\n10.0.0.0/16\nrange. Because of the existing route, you\n              cannot associate a CIDR block of\n10.0.0.0/24\nor larger.\n              However, you can associate a secondary CIDR block of\n10.0.0.0/25\nor smaller.\nThe following rules apply when you add IPv4 CIDR blocks to a VPC that's part of a VPC\n              peering connection:\nIf the VPC peering connection is\nactive\n, you can add CIDR blocks to a VPC\n                  provided they do not overlap with a CIDR block of the peer\n                  VPC.\nIf the VPC peering connection is\npending-acceptance\n, the owner of the\n                  requester VPC cannot add any CIDR block to the VPC, regardless of\n                  whether it overlaps with the CIDR block of the accepter VPC. Either\n                  the owner of the accepter VPC must accept the peering connection, or\n                  the owner of the requester VPC must delete the VPC peering\n                  connection request, add the CIDR block, and then request a new VPC\n                  peering connection.\nIf the VPC peering connection is\npending-acceptance\n, the owner of the\n                  accepter VPC can add CIDR blocks to the VPC. If a secondary CIDR\n                  block overlaps with a CIDR block of the requester VPC, the VPC\n                  peering connection request fails and cannot be accepted.\nIf you're using AWS Direct Connect to connect to multiple VPCs through a Direct\n              Connect gateway, the VPCs that are associated with the Direct Connect\n              gateway must not have overlapping CIDR blocks. If you add a CIDR block to\n              one of the VPCs that's associated with the Direct Connect gateway, ensure\n              that the new CIDR block does not overlap with an existing CIDR block of any\n              other associated VPC. For more information, see\nDirect Connect\n                gateways\nin the\nAWS Direct Connect User Guide\n.\nWhen you add or remove a CIDR block, it can go through various states:\nassociating\n|\nassociated\n|\ndisassociating\n|\ndisassociated\n|\nfailing\n|\nfailed\n. The CIDR block is ready for\n              you to use when it's in the\nassociated\nstate.\nYou can disassociate a CIDR block that you've associated with your VPC; however, you cannot\n          disassociate the CIDR block with which you originally created the VPC (the primary\n          CIDR block). To view the primary CIDR for your VPC in the Amazon VPC console, choose\nYour VPCs\n, select the checkbox for your VPC, and choose the\nCIDRs\ntab. To view the primary CIDR using the AWS CLI, use the\ndescribe-vpcs\ncommand\n          as follows. The primary CIDR is returned in the top-level\nCidrBlock element\n.\naws ec2 describe-vpcs --vpc-id\nvpc-1a2b3c4d\n--query Vpcs[*].CidrBlock --output text\nThe following is example output.\n10.0.0.0/16\nIPv4 CIDR block association restrictions\nThe following table provides an overview of permitted and restricted VPC CIDR block\n          associations. The reason for restrictions is that some AWS services make use of\n          cross-VPC and cross-account features that require non-conflicting CIDR blocks on\n          the AWS service side.\nIP address range\nRestricted associations\nPermitted associations\n10.0.0.0/8\nCIDR blocks from other RFC 1918* ranges (172.16.0.0/12 and 192.168.0.0/16).\nIf any of the CIDR blocks associated with the VPC are from the 10.0.0.0/15 range (10.0.0.0 to 10.1.255.255), \n                    you cannot add a CIDR block from the 10.0.0.0/16 range (10.0.0.0 to 10.0.255.255).\nCIDR blocks from the 198.19.0.0/16 range.\nAny other CIDR block from the 10.0.0.0/8 range that's not restricted.\nAny publicly routable IPv4 CIDR block (non-RFC 1918), or a CIDR block from the\n                    100.64.0.0/10 range.\n169.254.0.0/16\nCIDR blocks from the \"link local\" block are reserved as described in\nRFC 5735\nand cannot be\n                    assigned to VPCs.\n172.16.0.0/12\nCIDR blocks from other RFC 1918* ranges (10.0.0.0/8 and 192.168.0.0/16).\nCIDR blocks from the 172.31.0.0/16 range.\nCIDR blocks from the 198.19.0.0/16 range.\nAny other CIDR block from the 172.16.0.0/12 range that's not restricted.\nAny publicly routable IPv4 CIDR block (non-RFC 1918), or a CIDR block from the\n                    100.64.0.0/10 range.\n192.168.0.0/16\nCIDR blocks from other RFC 1918* ranges (10.0.0.0/8 and 172.16.0.0/12).\nCIDR blocks from the 198.19.0.0/16 range.\nAny other CIDR block from the 192.168.0.0/16 range.\nAny publicly routable IPv4 CIDR block (non-RFC 1918), or a CIDR block from the\n                    100.64.0.0/10 range.\n198.19.0.0/16\nCIDR blocks from the RFC 1918* ranges.\nAny publicly routable IPv4 CIDR block (non-RFC 1918), or a CIDR block from the\n                    100.64.0.0/10 range.\nPublicly routable CIDR block (non-RFC 1918), or a  CIDR block from the 100.64.0.0/10\n                    range\nCIDR blocks from the RFC 1918* ranges.\nCIDR blocks from the 198.19.0.0/16 range.\nAny other publicly routable IPv4 CIDR block (non-RFC 1918), or a CIDR block from the\n                    100.64.0.0/10 range.\n* RFC 1918 ranges are the private IPv4 address ranges specified in\nRFC 1918\n.\nIPv6 VPC CIDR blocks\nYou can associate a single IPv6 CIDR block when\n          you create a new VPC or you can associate up to five IPv6 CIDR blocks by modifying an existing VPC. The CIDR block is a fixed prefix length of\n/56\n.\n          You can request an IPv6 CIDR block from Amazon's pool of IPv6 addresses. For more information, see\nAdd an IPv6 CIDR block to your VPC\n.\nIf you've associated an IPv6 CIDR block with your VPC, you can associate an IPv6 CIDR\n          block with an existing subnet in your VPC or when you create a new subnet. For \n          more information, see\nSubnet sizing for IPv6\n.\nFor example, you create a VPC and specify that you want to associate an Amazon-provided\n          IPv6 CIDR block with the VPC. Amazon assigns the following IPv6 CIDR block to your\n          VPC:\n2001:db8:1234:1a00::/56\n. You cannot choose the range of IP\n          addresses yourself. You can create a subnet and associate an IPv6 CIDR block from\n          this range; for example,\n2001:db8:1234:1a00::/64\n.\nYou can disassociate an IPv6 CIDR block from a VPC. After you've disassociated an \n          IPv6 CIDR block from a VPC, you cannot expect to receive the same CIDR if you associate \n          an IPv6 CIDR block with your VPC again later.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIP addressing\nSubnet CIDR blocks\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/subnet-sizing.html": "Subnet CIDR blocks - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nSubnet sizing for IPv6\nSubnet CIDR blocks\nThe IP addresses for your subnets are represented using Classless Inter-Domain Routing\n      (CIDR) notation. The CIDR block of a subnet can be the same as the CIDR block for the VPC (to\n      create a single subnet in the VPC), or a subset of the CIDR block for the VPC (to create\n      multiple subnets in the VPC). The allowed block size is between a /28 netmask and /16 netmask.\n      If you create more than one subnet in a VPC, the CIDR blocks of the subnets cannot\n      overlap.\nFor example, if you create a VPC with CIDR block\n10.0.0.0/24\n, it supports\n      256 IP addresses. You can break this CIDR block into two subnets, each supporting 128 IP\n      addresses. One subnet uses CIDR block\n10.0.0.0/25\n(for addresses\n10.0.0.0\n-\n10.0.0.127\n) and the other uses CIDR block\n10.0.0.128/25\n(for addresses\n10.0.0.128\n-\n10.0.0.255\n).\nThere are tools available on the internet to help you calculate and create IPv4 subnet\n      CIDR blocks. You can find tools that suit your needs by searching for terms such as 'subnet\n      calculator' or 'CIDR calculator'. Your network engineering group can also help you determine\n      the IPv4 CIDR blocks to specify for your subnets.\nThe first four IP addresses and the last IP address in each subnet CIDR block are not\n      available for your use, and they cannot be assigned to a resource, such as an EC2\n      instance. For example, in a subnet with CIDR block\n10.0.0.0/24\n, the\n      following five IP addresses are reserved:\n10.0.0.0: Network address.\n10.0.0.1: Reserved by AWS for the VPC router.\n10.0.0.2: Reserved by AWS. The IP address of the DNS server is the base\n            of the VPC network range plus two. For VPCs with multiple CIDR blocks, the\n            IP address of the DNS server is located in the primary CIDR. We also reserve\n            the base of each subnet range plus two for all CIDR blocks in the VPC. For\n            more information, see\nAmazon DNS server\n.\n10.0.0.3: Reserved by AWS for future use.\n10.0.0.255: Network broadcast address. We do not support\n            broadcast in a VPC, therefore we reserve this address.\nIf you create a subnet using a command line tool or the Amazon EC2 API, the CIDR block is\n      automatically modified to its canonical form. For example, if you specify\n      100.68.0.18/18 for the CIDR block, we create a CIDR block of 100.68.0.0/18.\nSubnet sizing for IPv6\nIf you've associated an IPv6 CIDR block with your VPC, you can associate an IPv6 CIDR\n        block with an existing subnet in your VPC, or when you create a new subnet. A\n        subnet's IPv6 CIDR block is a fixed prefix length of\n/64\n.\nThere are tools available on the internet to help you calculate and create IPv6 subnet\n        CIDR blocks. You can find tools that suit your needs by searching for terms such as 'IPv6\n        subnet calculator' or 'IPv6 CIDR calculator'. Your network engineering group can also help\n        you determine the IPv6 CIDR blocks to specify for your subnets.\nThe first four IPv6 addresses and the last IPv6 address in each subnet CIDR block\n        are not available for your use, and they cannot be assigned to an EC2 instance. For\n        example, in a subnet with CIDR block\n2001:db8:1234:1a00/64\n, the\n        following five IP addresses are reserved:\n2001:db8:1234:1a00::\n2001:db8:1234:1a00::1\n: Reserved by AWS for the VPC router.\n2001:db8:1234:1a00::2\n2001:db8:1234:1a00::3\n2001:db8:1234:1a00:ffff:ffff:ffff:ffff\nIn addition to the IP address reserved by AWS for the VPC router in the example above, the following IPv6 addresses are reserved for the default VPC router:\nA link-local IPv6 address in the FE80::/10 range generated using EUI-64. For more information\n          about link-local addresses, see\nLink-local\n            address\n.\nThe link-local IPv6 address\nFE80:ec2::1\n.\nIf you need to communicate with the VPC router over IPv6, you can configure your applications to communicate with whichever address best fits your need.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVPC CIDR blocks\nManaged prefix lists\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/managed-prefix-lists.html": "Group CIDR blocks using managed prefix lists - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nPrefix lists concepts and rules\nIdentity and access management for prefix lists\nGroup CIDR blocks using managed prefix lists\nA managed prefix list is a set of one or more CIDR blocks. You can use prefix lists to make it\n        easier to configure and maintain your security groups and route tables. You can create a\n        prefix list from the IP addresses that you frequently use, and reference them as a set in\n        security group rules and routes instead of referencing them individually. For example, you \n        can consolidate security group rules with different CIDR blocks but the same port and protocol \n        into a single rule that uses a prefix list. If you scale your network and need to allow traffic \n        from another CIDR block, you can update the relevant prefix list and all security groups that \n        use the prefix list are updated. You can also use managed prefix lists with other AWS accounts using Resource Access Manager (RAM).\nThere are two types of prefix lists:\nCustomer-managed prefix lists\n\u00e2\u0080\u0094 Sets of\n                IP address ranges that you define and manage. You can share your prefix list\n                with other AWS accounts, enabling those accounts to reference the prefix list in\n                their own resources.\nAWS-managed prefix lists\n\u00e2\u0080\u0094 Sets of IP\n                address ranges for AWS services. You cannot create, modify, share, or delete an \n                AWS-managed prefix list.\nContents\nPrefix lists concepts and rules\nIdentity and access management for prefix lists\nWork with customer-managed prefix lists\nWork with AWS-managed prefix lists\nWork with shared prefix lists\nReference prefix lists in your AWS\n                resources\nPrefix lists concepts and rules\nA prefix list consists of\nentries\n. Each entry consists of a CIDR\n            block and, optionally, a description for the CIDR block.\nCustomer-managed prefix lists\nThe following rules apply to customer-managed prefix lists:\nA prefix list supports a single type of IP addressing only (IPv4 or IPv6). You\n                    cannot combine IPv4 and IPv6 CIDR blocks in a single prefix list.\nA prefix list applies only to the Region where you created it.\nWhen you create a prefix list, you must specify the maximum number of entries\n                    that the prefix list can support.\nWhen you reference a prefix list in a resource, the maximum number of entries for \n                    the prefix lists counts against the quota for the number of entries for the resource. \n                    For example, if you create a prefix list with 20 maximum entries and you reference \n                    that prefix list in a security group rule, this counts as 20 security group rules.\nWhen you reference a prefix list in a route table, route priority rules apply.\n                    For more information, see\nRoute priority and prefix\n                    lists\n.\nYou can modify a prefix list. When you add or remove entries, we create a new version of \n                    the prefix list. Resources that reference the prefix always use the current (latest) \n                    version. You can restore the entries from a previous version of the prefix list, which\n                    also creates a new version.\nThere are quotas related to prefix lists. For more information, see\nCustomer-managed prefix lists\n.\nCustomer-managed prefix lists are available in all commercial\nAWS Regions\n(including GovCloud (US) and China Regions).\nAWS-managed prefix lists\nThe following rules apply to AWS-managed prefix lists:\nYou cannot create, modify, share, or delete an AWS-managed prefix list.\nDifferent AWS-managed prefix lists have a different weight when you use them. For more information, see\nAWS-managed prefix list weight\n.\nYou cannot view the version number of an AWS-managed prefix list.\nIdentity and access management for prefix lists\nBy default, users do not have permission to create, view, modify, or delete prefix lists. You can create an IAM policy and attach it to a role that allows users to work with prefix lists.\nTo see a list of Amazon VPC actions and the resources and condition keys that you can use\n            in an IAM policy, see\nActions,\n                Resources, and Condition Keys for Amazon EC2\nin the\nIAM User Guide\n.\nThe following example policy allows users to view and work with prefix list\npl-123456abcde123456\nonly. Users cannot create or delete prefix\n            lists.\n{\n\"Version\": \"2012-10-17\",\n   \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:GetManagedPrefixListAssociations\",\n        \"ec2:GetManagedPrefixListEntries\",\n        \"ec2:ModifyManagedPrefixList\",\n        \"ec2:RestoreManagedPrefixListVersion\"\n      ],\n      \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount\n:prefix-list/\npl-123456abcde123456\n\"\n    },\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"ec2:DescribeManagedPrefixLists\",\n      \"Resource\": \"*\"\n    }\n   ]\n}\nFor more information about working with IAM in Amazon VPC, see\nIdentity and access management for Amazon VPC\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSubnet CIDR blocks\nCustomer-managed prefix lists\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/working-with-managed-prefix-lists.html": "Work with customer-managed prefix lists - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nCreate a prefix list\nView prefix lists\nView the entries for a prefix list\nView associations (references) for your prefix\n                    list\nModify a prefix list\nResize a prefix list\nRestore a previous version of a prefix list\nDelete a prefix list\nWork with customer-managed prefix lists\nYou can create and manage customer-managed prefix lists. You can view AWS-managed prefix lists.\nTasks\nCreate a prefix list\nView prefix lists\nView the entries for a prefix list\nView associations (references) for your prefix\n                    list\nModify a prefix list\nResize a prefix list\nRestore a previous version of a prefix list\nDelete a prefix list\nCreate a prefix list\nWhen you create a prefix list, you must specify the maximum number of entries\n                that the prefix list can support.\nLimitation\nYou can't add a prefix list to a security group rule if the number of rules plus \n                the max entries for the prefix list exceeds the quota for rules per security group \n                for your account.\nTo create a prefix list using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nManaged Prefix Lists\n.\nChoose\nCreate prefix list\n.\nFor\nPrefix list name\n, enter a name for the prefix\n                        list.\nFor\nMax entries\n, enter the maximum number of entries\n                        for the prefix list.\nFor\nAddress family\n, choose whether the prefix list\n                        supports IPv4 or IPv6 entries.\nFor\nPrefix list entries\n, choose\nAdd new\n                            entry\n, and enter the CIDR block and a description for the\n                        entry. Repeat this step for each entry.\n(Optional) For\nTags\n, add tags to the prefix list to\n                        help you identify it later.\nChoose\nCreate prefix list\n.\nTo create a prefix list using the AWS CLI\nUse the\ncreate-managed-prefix-list\ncommand.\nView prefix lists\nYou can view your prefix lists, prefix lists that are shared with you, and\n                AWS-managed prefix lists.\nTo view prefix lists using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nManaged Prefix\n                        Lists\n.\nThe\nOwner ID\ncolumn shows the AWS account ID of the\n                        prefix list owner. For AWS-managed prefix lists, the\nOwner\n                            ID\nis\nAWS\n.\nTo view prefix lists using the AWS CLI\nUse the\ndescribe-managed-prefix-lists\ncommand.\nView the entries for a prefix list\nYou can view the entries for your prefix lists, prefix lists that are shared with you,\n                and AWS-managed prefix lists.\nTo view the entries for a prefix list using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nManaged Prefix Lists\n.\nSelect the checkbox for the prefix list.\nIn the lower pane, choose\nEntries\nto view the entries\n                        for the prefix list.\nTo view the entries for a prefix list using the AWS CLI\nUse the\nget-managed-prefix-list-entries\ncommand.\nView associations (references) for your prefix\n                    list\nYou can view the IDs and owners of the resources that are associated with your\n                prefix list. Associated resources are resources that reference your prefix list in\n                their entries or rules.\nLimitation\nYou cannot view associated resources for an AWS-managed prefix list.\nTo view prefix list associations using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nManaged Prefix Lists\n.\nSelect the checkbox for the prefix list.\nIn the lower pane, choose\nAssociations\nto view the\n                        resources that are referencing the prefix list.\nTo view prefix list associations using the AWS CLI\nUse the\nget-managed-prefix-list-associations\ncommand.\nModify a prefix list\nYou can modify the name of your prefix list, and you can add or remove\n                entries. To modify the maximum number of entries, \n                see\nResize a prefix list\n.\nUpdating the entries of a prefix list creates a new version of the prefix list.\n                Updating the name or maximum number of entries for a prefix list does not create\n                a new version of the prefix list.\nConsiderations\nYou cannot modify an AWS-managed prefix list.\nWhen you increase the maximum number of entries in a prefix list, the increased \n                        maximum size is applied to the quota of entries for the resources that reference \n                        the prefix list. If any of these resources can't support the increased maximum\n                        size, the modify operation fails and the previous maximum size is restored.\nTo modify a prefix list using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nManaged Prefix\n                        Lists\n.\nSelect the checkbox for prefix list, and choose\nActions\n,\nModify prefix list\n.\nFor\nPrefix list name\n, enter a new name for the prefix\n                        list.\nFor\nPrefix list entries\n, choose\nRemove\nto remove an existing entry. To add a new\n                        entry, choose\nAdd new entry\nand enter the CIDR block\n                        and a description for the entry.\nChoose\nSave prefix list\n.\nTo modify a prefix list using the AWS CLI\nUse the\nmodify-managed-prefix-list\ncommand.\nResize a prefix list\nYou can resize a prefix list and modify the maximum number of entries for the\n                prefix list up to 1000. For more\n                information about customer-managed prefix list quotas, see\nCustomer-managed prefix lists\n.\nTo resize a prefix list using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nManaged Prefix\n                        Lists\n.\nSelect the checkbox for the prefix list, and choose\nActions\n,\nResize prefix list\n.\nFor\nNew max entries\n, enter a value.\nChoose\nResize\n.\nTo resize a prefix list using the AWS CLI\nUse the\nmodify-managed-prefix-list\ncommand.\nRestore a previous version of a prefix list\nYou can restore the entries from a previous version of your prefix list. This creates a new\n                version of the prefix list.\nIf you decreased the size of the prefix list, you must ensure that the prefix list is \n                large enough to contain the entries from the previous version.\nTo restore a previous version of a prefix list using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nManaged Prefix\n                        Lists\n.\nSelect the checkbox for the prefix list, and choose\nActions\n,\nRestore prefix list\n.\nFor\nSelect prefix list version\n, choose a previous version.\n                        The entries for the selected version are displayed in\nPrefix list \n                        entries\n.\nChoose\nRestore prefix list\n.\nTo restore a previous version of a prefix list using the AWS CLI\nUse the\nrestore-managed-prefix-list-version\ncommand.\nDelete a prefix list\nTo delete a prefix list, you must first remove any references to it in your\n                resources (such as in your route tables). If you've shared the prefix list using\n                AWS RAM, any references in consumer-owned resources must first be removed.\nLimitation\nYou cannot delete an AWS-managed prefix list.\nTo delete a prefix list using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nManaged Prefix\n                        Lists\n.\nSelect the prefix list, and choose\nActions\n,\nDelete prefix list\n.\nIn the confirmation dialog box, enter\ndelete\n, and choose\nDelete\n.\nTo delete a prefix list using the AWS CLI\nUse the\ndelete-managed-prefix-list\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nManaged prefix lists\nAWS-managed prefix lists\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/working-with-aws-managed-prefix-lists.html": "Work with AWS-managed prefix lists - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nUse an AWS-managed prefix list\nAWS-managed prefix list weight\nAvailable AWS-managed prefix lists\nWork with AWS-managed prefix lists\nAWS-managed prefix lists are sets of IP address ranges for AWS services.\nContents\nUse an AWS-managed prefix list\nAWS-managed prefix list weight\nAvailable AWS-managed prefix lists\nUse an AWS-managed prefix list\nAWS-managed prefix lists are created and maintained by AWS and can be used by anyone \n                with an AWS account. You cannot create, modify, share, or delete an AWS-managed prefix\n                list.\nAs with customer-managed prefix lists, you can use AWS-managed prefix lists with \n                AWS resources such as security groups and route tables. For more information, see\nReference prefix lists in your AWS\n                resources\n.\nAWS-managed prefix list weight\nThe weight of an AWS-managed prefix list refers to the number of entries that \n                it takes up in a resource.\nFor example, the weight of a Amazon CloudFront managed prefix list is 55. Here's how the this\n                affects your Amazon VPC quotas:\nSecurity groups\n\u00e2\u0080\u0093 The\ndefault quota\nis 60 rules, leaving room for only 5 additional rules in a security group. You can\nrequest a quota increase\nfor this quota.\nRoute tables\n\u00e2\u0080\u0093 The\ndefault quota\nis 50 routes, so you must\nrequest a quota increase\nbefore you can add the prefix list to a route table.\nAvailable AWS-managed prefix lists\nThe following services provide AWS-managed prefix lists.\nAWS service\nPrefix list name\nWeight\nAmazon CloudFront\ncom.amazonaws.global.cloudfront.origin-facing\n55\nAmazon DynamoDB\ncom.amazonaws.\nregion\n.dynamodb\n1\nAWS Ground Station\ncom.amazonaws.global.groundstation\n5\nAmazon Route\u00c2\u00a053\ncom.amazonaws.\nregion\n.ipv6.route53-healthchecks\n25\ncom.amazonaws.\nregion\n.route53-healthchecks\n25\nAmazon S3\ncom.amazonaws.\nregion\n.s3\n1\nAmazon VPC Lattice\ncom.amazonaws.\nregion\n.vpc-lattice\n10\ncom.amazonaws.\nregion\n.ipv6.vpc-lattice\n10\nTo view the AWS-managed prefix lists using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nManaged Prefix Lists\n.\nIn the search field, add the\nOwner ID: AWS\nfilter.\nTo view the AWS-managed prefix lists using the AWS CLI\nUse the\ndescribe-managed-prefix-lists\ncommand as follows.\naws ec2 describe-managed-prefix-lists --filters Name=owner-id,Values=AWS\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCustomer-managed prefix lists\nShared prefix lists\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/sharing-managed-prefix-lists.html": "Work with shared prefix lists - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nPrerequisites for sharing prefix lists\nShare a prefix list\nIdentify a shared prefix list\nIdentify references to a shared prefix list\nUnshare a shared prefix list\nShared prefix list permissions\nBilling and metering\nQuotas for AWS RAM\nWork with shared prefix lists\nWith AWS Resource Access Manager (AWS RAM), the owner of a prefix list can share a prefix list with the following:\nSpecific AWS accounts inside or outside of its organization in AWS Organizations\nAn organizational unit inside its organization in AWS Organizations\nAn entire organization in AWS Organizations\nConsumers with whom a prefix list has been shared can view the prefix list and its\n            entries, and they can reference the prefix list in their AWS resources.\nFor more information about AWS RAM, see the\nAWS RAM User Guide\n.\nContents\nPrerequisites for sharing prefix lists\nShare a prefix list\nIdentify a shared prefix list\nIdentify references to a shared prefix list\nUnshare a shared prefix list\nShared prefix list permissions\nBilling and metering\nQuotas for AWS RAM\nPrerequisites for sharing prefix lists\nTo share a prefix list, you must own it. You cannot share a prefix list\n                        that has been shared with you. You cannot share an AWS-managed prefix\n                        list.\nTo share a prefix list with your organization or an organizational unit in\n                        AWS Organizations, you must enable sharing with AWS Organizations. For more information, see\nEnable sharing with AWS Organizations\nin the\nAWS RAM User Guide\n.\nShare a prefix list\nTo share a prefix list, you must add it to a resource share. If you do not have a\n                resource share, you must first create one using the\nAWS RAM console\n.\nIf you are part of an organization in AWS Organizations, and sharing within your\n                organization is enabled, consumers in your organization are automatically granted\n                access to the shared prefix list. Otherwise, consumers receive an invitation to join\n                the resource share and are granted access to the shared prefix list after accepting\n                the invitation.\nYou can create a resource share and share a prefix list that you own using the\n                AWS RAM console, or the AWS CLI.\nTo create a resource share and share a prefix list using the AWS RAM\n                    console\nFollow the steps in\nCreate a resource share\nin the\nAWS RAM User Guide\n.\n                    For\nSelect resource type\n, choose\nPrefix\n                        Lists\n, and then select the check box for your prefix list.\nTo add a prefix list to an existing resource share using the AWS RAM\n                    console\nTo add a managed prefix that you own to an existing resource share, follow the\n                    steps in\nUpdating a resource share\nin the\nAWS RAM User Guide\n. For\nSelect resource\n                        type\n, choose\nPrefix Lists\n, and then select\n                    the check box for your prefix list.\nTo share a prefix list that you own using the AWS CLI\nUse the following commands to create and update a resource share:\ncreate-resource-share\nassociate-resource-share\nupdate-resource-share\nIdentify a shared prefix list\nOwners and consumers can identify shared prefix lists using the Amazon VPC console and\n                AWS CLI.\nTo identify a shared prefix list using the Amazon VPC console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nManaged Prefix\n                        Lists\n.\nThe page displays the prefix lists that you own and the prefix lists that\n                        are shared with you. The\nOwner ID\ncolumn shows the\n                        AWS account ID of the prefix list owner.\nTo view the resource share information for a prefix list, select the\n                        prefix list and choose\nSharing\nin the lower\n                        pane.\nTo identify a shared prefix list using the AWS CLI\nUse the\ndescribe-managed-prefix-lists\ncommand. The command returns the\n                    prefix lists that you own and the prefix lists that are shared with you.\nOwnerId\nshows the AWS account ID of the prefix list\n                    owner.\nIdentify references to a shared prefix list\nOwners can identify the consumer-owned resources that are referencing a shared\n                prefix list.\nTo identify references to a shared prefix list using the Amazon VPC\n                    console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nManaged Prefix\n                        Lists\n.\nSelect the prefix list and choose\nAssociations\nin the\n                        lower pane.\nThe IDs of the resources that are referencing the prefix list are listed\n                        in the\nResource ID\ncolumn. The owners of the resources\n                        are listed in the\nResource Owner\ncolumn.\nTo identify references to a shared prefix list using the AWS CLI\nUse the\nget-managed-prefix-list-associations\ncommand.\nUnshare a shared prefix list\nWhen you unshare a prefix list, consumers can no longer view the prefix list or\n                its entries in their account, and they cannot reference the prefix list in their\n                resources. If the prefix list is already referenced in the consumer's resources,\n                those references continue to function as normal, and you can continue to\nview those references\n. If you\n                update the prefix list to a new version, the references use the latest\n                version.\nTo unshare a shared prefix list that you own, you must remove it from the resource\n                share using AWS RAM.\nTo unshare a shared prefix list that you own using the AWS RAM console\nSee\nUpdating a resource share\nin the\nAWS RAM User Guide\n.\nTo unshare a shared prefix list that you own using the AWS CLI\nUse the\ndisassociate-resource-share\ncommand.\nShared prefix list permissions\nPermissions for owners\nOwners are responsible for managing a shared prefix list and its entries.\n                    Owners can view the IDs of the AWS resources that reference the prefix list.\n                    However, they cannot add or remove references to a prefix list in AWS resources\n                    that are owned by consumers.\nOwners cannot delete a prefix list if the prefix list is referenced in a\n                    resource that's owned by a consumer.\nPermissions for consumers\nConsumers can view the entries in a shared prefix list, and they can reference\n                    a shared prefix list in their AWS resources. However, consumers can't modify,\n                    restore, or delete a shared prefix list.\nBilling and metering\nThere are no additional charges for sharing prefix lists.\nQuotas for AWS RAM\nFor more information, see\nService quotas\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS-managed prefix lists\nReference prefix lists in your AWS\n                resources\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/managed-prefix-lists-referencing.html": "Reference prefix lists in your AWS resources - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nVPC security groups\nSubnet route tables\nTransit gateway route tables\nAWS Network Firewall rule groups\nAmazon Managed Grafana network access control\nReference prefix lists in your AWS\n                resources\nYou can reference a prefix list in the following AWS resources.\nResources\nVPC security groups\nSubnet route tables\nTransit gateway route tables\nAWS Network Firewall rule groups\nAmazon Managed Grafana network access control\nVPC security groups\nYou can specify a prefix list as the source for an inbound rule, or as the destination \n                    for an outbound rule. For more information, see\nSecurity groups\n.\nTo reference a prefix list in a security group rule using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSecurity\n                            Groups\n.\nSelect the security group to update.\nChoose\nActions\n,\nEdit inbound\n                            rules\nor\nActions\n,\nEdit\n                                outbound rules\n.\nChoose\nAdd rule\n. For\nType\n, select\n                            the traffic type. For\nSource\n(inbound rules) or\nDestination\n(outbound rules), choose the ID of the\n                            prefix list.\nChoose\nSave rules\n.\nTo reference a prefix list in a security group rule using the AWS CLI\nUse the\nauthorize-security-group-ingress\nand\nauthorize-security-group-egress\ncommands. For the\n--ip-permissions\nparameter, specify the ID of the prefix list\n                        using\nPrefixListIds\n.\nSubnet route tables\nYou can specify a prefix list as the destination for route table\n                    entry. You cannot reference a prefix list in a gateway route table. For\n                    more information about route tables, see\nConfigure route tables\n.\nTo reference a prefix list in a route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute Tables\n, and select the\n                            route table.\nChoose\nActions\n,\nEdit routes\n.\nTo add a route, choose\nAdd route\n.\nFor\nDestination\nenter the ID of a prefix list.\nFor\nTarget\n, choose a target.\nChoose\nSave changes\n.\nTo reference a prefix list in a route table using the AWS CLI\nUse the\ncreate-route\n(AWS CLI) command. Use the\n--destination-prefix-list-id\nparameter to\n                        specify the ID of a prefix list.\nTransit gateway route tables\nYou can specify a prefix list as the destination for a route. For more\n                    information, see\nPrefix\n                        list references\nin\nAmazon VPC Transit Gateways\n.\nAWS Network Firewall rule groups\nAn AWS Network Firewall rule group is a reusable set of criteria for inspecting and\n                    handling network traffic. If you create Suricata-compatible stateful rule groups\n                    in AWS Network Firewall, you can reference a prefix list from the rule group. For more\n                    information, see\nReferencing Amazon VPC prefix lists\nand\nCreating a stateful\n                            rule group\nin the\nAWS Network Firewall Developer\n                                Guide\n.\nAmazon Managed Grafana network access control\nYou can specify one or more  prefix lists as an inbound rule for requests to \n                    Amazon Managed Grafana workspaces. For more information about Grafana workspace network access \n                    control, including how to reference prefix lists, see\nManaging network\n                        access\nin the\nAmazon Managed Grafana User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nShared prefix lists\nAWS IP address ranges\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/aws-ip-ranges.html": "AWS IP address ranges - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nDownload\nSyntax\nRange overlaps\nFiltering the JSON file\nImplementing egress control\nAWS IP address ranges notifications\nRelease notes\nLearn more\nAWS IP address ranges\nAWS publishes its current IP address ranges in JSON format. With this information, you can\n        identify traffic from AWS. You can also use this information to allow or deny traffic to or from some AWS services.\nNote\nOnly some AWS service IP address ranges are published in ip-ranges.json; we publish the IP address ranges for services that customers commonly want to perform\negress filtering\non.\nServices may use the IP address ranges to communicate with other services (for example Route 53 health checks may use an EC2 IP address range to check the health of a web server instance) or services may use the IP ranges to communicate with a customer network.\nTo view the current ranges, download the\n.json\nfile. To maintain history, \n        save successive versions of the\n.json\nfile on your system. To determine\n        whether there have been changes since the last time that you saved the file, check the\n        publication time in the current file and compare it to the publication time in the last file\n        that you saved.\nThe IP address ranges that you bring to AWS through bring your own IP addresses (BYOIP)\n        are not included in the\n.json\nfile.\nAlternatively, some services publish their address ranges using AWS-managed prefix lists.\n        For more information, see\nAvailable AWS-managed prefix lists\n.\nContents\nDownload\nSyntax\nRange overlaps\nFiltering the JSON file\nImplementing egress control\nAWS IP address ranges notifications\nRelease notes\nLearn more\nDownload\nDownload\nip-ranges.json\n.\nIf you access this file programmatically, it is your responsibility to ensure that the\n            application downloads the file only after successfully verifying the TLS certificate\n            presented by the server.\nSyntax\nThe syntax of\nip-ranges.json\nis as follows.\n{\n\"syncToken\": \"\n0123456789\n\",\n  \"createDate\": \"\nyyyy\n-\nmm\n-\ndd\n-\nhh\n-\nmm\n-\nss\n\",\n  \"prefixes\": [\n{\n\"ip_prefix\": \"\ncidr\n\",\n      \"region\": \"\nregion\n\",\n      \"network_border_group\": \"\nnetwork_border_group\n\",\n      \"service\": \"\nsubset\n\"\n    }\n  ],\n  \"ipv6_prefixes\": [\n{\n\"ipv6_prefix\": \"\ncidr\n\",\n      \"region\": \"\nregion\n\",\n      \"network_border_group\": \"\nnetwork_border_group\n\",\n      \"service\": \"\nsubset\n\"\n    }\n  ]  \n}\nsyncToken\nThe publication time, in Unix epoch time format.\nType: String\nExample:\n\"syncToken\": \"1416435608\"\ncreateDate\nThe publication date and time, in UTC YY-MM-DD-hh-mm-ss format.\nType: String\nExample:\n\"createDate\": \"2014-11-19-23-29-02\"\nprefixes\nThe IP prefixes for the IPv4 address ranges.\nType: Array\nipv6_prefixes\nThe IP prefixes for the IPv6 address ranges.\nType: Array\nip_prefix\nThe public IPv4 address range, in CIDR notation. Note that AWS may\n                        advertise a prefix in more specific ranges. For example, prefix\n                        96.127.0.0/17 in the file may be advertised as 96.127.0.0/21, 96.127.8.0/21,\n                        96.127.32.0/19, and 96.127.64.0/18.\nType: String\nExample:\n\"ip_prefix\": \"198.51.100.2/24\"\nipv6_prefix\nThe public IPv6 address range, in CIDR notation. Note that AWS may\n                        advertise a prefix in more specific ranges.\nType: String\nExample:\n\"ipv6_prefix\": \"2001:db8:1234::/64\"\nnetwork_border_group\nThe name of the network border group, which is a unique set of Availability Zones or Local Zones from which AWS advertises IP addresses, or\nGLOBAL\n. Traffic for\nGLOBAL\nservices can be attracted to or originate from multiple (up to all) Availability Zones or Local Zones from which AWS advertises IP addresses.\nType: String\nExample:\n\"network_border_group\": \"us-west-2-lax-1\"\nregion\nThe AWS Region or\nGLOBAL\n. Traffic for\nGLOBAL\nservices can be attracted to or originate from multiple (up to all) AWS Regions.\nType: String\nValid values:\naf-south-1\n|\nap-east-1\n|\nap-northeast-1\n|\nap-northeast-2\n|\nap-northeast-3\n|\nap-south-1\n|\nap-south-2\n|\nap-southeast-1\n|\nap-southeast-2\n|\nap-southeast-3\n|\nap-southeast-4\n|\nca-central-1\n|\ncn-north-1\n|\ncn-northwest-1\n|\neu-central-1\n|\neu-central-2\n|\neu-north-1\n|\neu-south-1\n|\neu-south-2\n|\neu-west-1\n|\neu-west-2\n|\neu-west-3\n|\nme-central-1\n|\nme-south-1\n|\nsa-east-1\n|\nus-east-1\n|\nus-east-2\n|\nus-gov-east-1\n|\nus-gov-west-1\n|\nus-west-1\n|\nus-west-2\n|\nGLOBAL\nExample:\n\"region\": \"us-east-1\"\nservice\nThe subset of IP address ranges. \n                        The addresses listed for\nAPI_GATEWAY\nare egress only. \n                        Specify\nAMAZON\nto get all IP address ranges (meaning \n                        that every subset is also in the\nAMAZON\nsubset). \n                        However, some IP address ranges are only in the\nAMAZON\nsubset (meaning that they are not also available in another subset).\nType: String\nValid values:\nAMAZON\n|\nAMAZON_APPFLOW\n|\nAMAZON_CONNECT\n|\nAPI_GATEWAY\n|\nCHIME_MEETINGS\n|\nCHIME_VOICECONNECTOR\n|\nCLOUD9\n|\nCLOUDFRONT\n|\nCLOUDFRONT_ORIGIN_FACING\n|\nCODEBUILD\n|\nDYNAMODB\n|\nEBS\n|\nEC2\n|\nEC2_INSTANCE_CONNECT\n|\nGLOBALACCELERATOR\n|\nKINESIS_VIDEO_STREAMS\n|\nMEDIA_PACKAGE_V2\n|\nROUTE53\n|\nROUTE53_HEALTHCHECKS\n|\nROUTE53_HEALTHCHECKS_PUBLISHING\n|\nROUTE53_RESOLVER\n|\nS3\n|\nWORKSPACES_GATEWAYS\nExample:\n\"service\": \"AMAZON\"\nRange overlaps\nThe IP address ranges returned by any service code are also returned by the\nAMAZON\nservice code. For example, all IP address ranges that are\n            returned by the\nS3\nservice code are also returned by the\nAMAZON\nservice code.\nWhen service A uses resources from service B, there are IP address ranges that are\n            returned by the service codes for both service A and service B. However, these IP \n            address ranges are used exclusively by service A, and can't be used by service B. \n            For example, Amazon S3 uses resources from Amazon EC2, so there are IP address ranges that are\n            returned by both the\nS3\nand\nEC2\nservice codes. However these \n            IP address ranges are used exclusively by Amazon S3. Therefore, the\nS3\nservice \n            code returns all IP address ranges that are used exclusively by Amazon S3. To identify the IP \n            address ranges that are used exclusively by Amazon EC2, find the IP address ranges that are \n            returned by the\nEC2\nservice code but not the\nS3\nservice code.\nFiltering the JSON file\nYou can download a command line tool to help you filter the information to just what\n            you are looking for.\nWindows\nThe\nAWS Tools for Windows PowerShell\nincludes a cmdlet,\nGet-AWSPublicIpAddressRange\n, \n                to parse this JSON file. The following examples demonstrate its use. For more information, see\nQuerying the Public IP Address Ranges for AWS\nand\nGet-AWSPublicIpAddressRange\n.\nExample 1. Get the creation date\nPS C:\\>\nGet-AWSPublicIpAddressRange -OutputPublicationDate\nWednesday, August 22, 2018 9:22:35 PM\nExample 2. Get the information for a specific Region\nPS C:\\>\nGet-AWSPublicIpAddressRange -Region us-east-1\nIpPrefix        Region      NetworkBorderGroup         Service\n--------        ------       -------                   -------\n23.20.0.0/14    us-east-1    us-east-1                 AMAZON\n50.16.0.0/15    us-east-1    us-east-1                 AMAZON\n50.19.0.0/16    us-east-1    us-east-1                 AMAZON\n...\nExample 3. Get all IP addresses\nPS C:\\>\n(Get-AWSPublicIpAddressRange).IpPrefix\n23.20.0.0/14\n27.0.0.0/22\n43.250.192.0/24\n...\n2406:da00:ff00::/64\n2600:1fff:6000::/40\n2a01:578:3::/64\n2600:9000::/28\nExample 4. Get all IPv4 addresses\nPS C:\\>\nGet-AWSPublicIpAddressRange | where\n{\n$_.IpAddressFormat -eq \"Ipv4\"} | select IpPrefix\nIpPrefix\n--------\n23.20.0.0/14\n27.0.0.0/22\n43.250.192.0/24\n...\nExample 5. Get all IPv6 addresses\nPS C:\\>\nGet-AWSPublicIpAddressRange | where\n{\n$_.IpAddressFormat -eq \"Ipv6\"} | select IpPrefix\nIpPrefix\n--------\n2a05:d07c:2000::/40\n2a05:d000:8000::/40\n2406:dafe:2000::/40\n...\nExample 6. Get all IP addresses for a specific service\nPS C:\\>\nGet-AWSPublicIpAddressRange -ServiceKey CODEBUILD | select IpPrefix\nIpPrefix\n--------\n52.47.73.72/29\n13.55.255.216/29\n52.15.247.208/29\n...\nLinux\nThe following example commands use\nthe\n                    jq tool\nto parse a local copy of the JSON file.\nExample 1. Get the creation date\n$\njq .createDate < ip-ranges.json\n\"2016-02-18-17-22-15\"\nExample 2. Get the information for a specific Region\n$\njq '.prefixes[] | select(.region==\"us-east-1\")' < ip-ranges.json\n{\n\"ip_prefix\": \"23.20.0.0/14\",\n  \"region\": \"us-east-1\",\n  \"network_border_group\": \"us-east-1\",\n  \"service\": \"AMAZON\"\n},\n{\n\"ip_prefix\": \"50.16.0.0/15\",\n  \"region\": \"us-east-1\",\n  \"network_border_group\": \"us-east-1\",\n  \"service\": \"AMAZON\"\n},\n{\n\"ip_prefix\": \"50.19.0.0/16\",\n  \"region\": \"us-east-1\",\n  \"network_border_group\": \"us-east-1\",\n  \"service\": \"AMAZON\"\n},\n...\nExample 3. Get all IPv4 addresses\n$\njq -r '.prefixes | .[].ip_prefix' < ip-ranges.json\n23.20.0.0/14\n27.0.0.0/22\n43.250.192.0/24\n...\nExample 4. Get all IPv6 addresses\n$\njq -r '.ipv6_prefixes | .[].ipv6_prefix' < ip-ranges.json\n2a05:d07c:2000::/40\n2a05:d000:8000::/40\n2406:dafe:2000::/40\n...\nExample 5. Get all IPv4 addresses for a specific service\n$\njq -r '.prefixes[] | select(.service==\"CODEBUILD\") | .ip_prefix' < ip-ranges.json\n52.47.73.72/29\n13.55.255.216/29\n52.15.247.208/29\n...\nExample 6. Get all IPv4 addresses for a specific service in a specific Region\n$\njq -r '.prefixes[] | select(.region==\"us-east-1\") | select(.service==\"CODEBUILD\") | .ip_prefix' < ip-ranges.json\n34.228.4.208/28\nExample 7. Get information for a certain network border group\n$\njq -r '.prefixes[] | select(.region==\"us-west-2\") | select(.network_border_group==\"us-west-2-lax-1\") | .ip_prefix' < ip-ranges.json\n70.224.192.0/18\n52.95.230.0/24\n15.253.0.0/16\n...\nImplementing egress control\nTo allow resources you've created with one AWS service to only access other AWS\n            services, you can use the IP address range information in the ip-ranges.json file to\n            perform\negress\n                filtering\n. Ensure that the security group rules allow outbound traffic to\n            the CIDR blocks in the AMAZON list. There are\nquotas for security groups\n. Depending on the number of IP address ranges in\n            each Region, you might need multiple security groups per Region.\nNote\nSome AWS services built on EC2 and use EC2 IP address space. If you block traffic to EC2 IP\n                address space, you block traffic to these non-EC2 services as well.\nAWS IP address ranges notifications\nWhenever there is a change to the AWS IP address ranges, we send notifications to\n            subscribers of the\nAmazonIpSpaceChanged\ntopic. The payload contains\n            information in the following format:\n{\n\"create-time\":\"\nyyyy\n-\nmm\n-\ndd\nT\nhh\n:\nmm\n:\nss\n+00:00\",\n  \"synctoken\":\"\n0123456789\n\",\n  \"md5\":\"\n6a45316e8bc9463c9e926d5d37836d33\n\",\n  \"url\":\"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n}\ncreate-time\nThe creation date and time.\nNotifications could be delivered out of order. Therefore, we recommend\n                        that you check the timestamps to ensure the correct order.\nsynctoken\nThe publication time, in Unix epoch time format.\nmd5\nThe cryptographic hash value of the\nip-ranges.json\nfile. You can use this value to check whether the downloaded file is\n                        corrupted.\nurl\nThe location of the\nip-ranges.json\nfile.\nIf you want to be notified whenever there is a change to the AWS IP address ranges,\n            you can subscribe as follows to receive notifications using Amazon SNS.\nTo subscribe to AWS IP address range notifications\nOpen the Amazon SNS console at\nhttps://console.aws.amazon.com/sns/v3/home\n.\nIn the navigation bar, change the Region to\nUS East (N. Virginia)\n, if necessary. You must select this\n                    Region because the SNS notifications that you are subscribing to were created in\n                    this Region.\nIn the navigation pane, choose\nSubscriptions\n.\nChoose\nCreate subscription\n.\nIn the\nCreate subscription\ndialog box, do the\n                    following:\nFor\nTopic ARN\n, copy the following Amazon Resource\n                            Name (ARN):\narn:aws:sns:us-east-1:806199016981:AmazonIpSpaceChanged\nFor\nProtocol\n, choose the protocol to use (for\n                            example,\nEmail\n).\nFor\nEndpoint\n, type the endpoint to receive the\n                            notification (for example, your email address).\nChoose\nCreate subscription\n.\nYou'll be contacted on the endpoint that you specified and asked to confirm\n                    your subscription. For example, if you specified an email address, you'll\n                    receive an email message with the subject line\nAWS Notification -\n                        Subscription Confirmation\n. Follow the directions to confirm your\n                    subscription.\nNotifications are subject to the availability of the endpoint. Therefore, you might\n            want to check the JSON file periodically to ensure that you've got the latest ranges.\n            For more information about Amazon SNS reliability, see\nhttps://aws.amazon.com/sns/faqs/#Reliability\n.\nIf you no longer want to receive these notifications, use the following procedure to\n            unsubscribe.\nTo unsubscribe from AWS IP address ranges notifications\nOpen the Amazon SNS console at\nhttps://console.aws.amazon.com/sns/v3/home\n.\nIn the navigation pane, choose\nSubscriptions\n.\nSelect the check box for the subscription.\nChoose\nActions\n,\nDelete\n                    subscriptions\n.\nWhen prompted for confirmation, choose\nDelete\n.\nFor more information about Amazon SNS, see the\nAmazon Simple Notification Service Developer Guide\n.\nRelease notes\nThe following table describes updates to the syntax of\nip-ranges.json\n. \n            We also add new Region codes with each Region launch.\nDescription\nRelease date\nAdded the\nMEDIA_PACKAGE_V2\nservice code.\nMay 9, 2023\nAdded the\nCLOUDFRONT_ORIGIN_FACING\nservice code.\nOctober 12, 2021\nAdded the\nROUTE53_RESOLVER\nservice code.\nJune 24, 2021\nAdded the\nEBS\nservice code.\nMay 12, 2021\nAdded the\nKINESIS_VIDEO_STREAMS\nservice code.\nNovember 19, 2020\nAdded the\nCHIME_MEETINGS\nand\nCHIME_VOICECONNECTOR\nservice codes.\nJune 19, 2020\nAdded the\nAMAZON_APPFLOW\nservice code.\nJune 9, 2020\nAdd support for the network border group.\nApril 7, 2020\nAdded the\nWORKSPACES_GATEWAYS\nservice code.\nMarch 30, 2020\nAdded the\nROUTE53_HEALTHCHECK_PUBLISHING\nservice code.\nJanuary 30, 2020\nAdded the\nAPI_GATEWAY\nservice code.\nSeptember 26, 2019\nAdded the\nEC2_INSTANCE_CONNECT\nservice code.\nJune 26, 2019\nAdded the\nDYNAMODB\nservice code.\nApril 25, 2019\nAdded the\nGLOBALACCELERATOR\nservice code.\nDecember 20, 2018\nAdded the\nAMAZON_CONNECT\nservice code.\nJune 20, 2018\nAdded the\nCLOUD9\nservice code.\nJune 20, 2018\nAdded the\nCODEBUILD\nservice code.\nApril 19, 2018\nAdded the\nS3\nservice code.\nFebruary 28, 2017\nAdded support for IPv6 address ranges.\nAugust 22, 2016\nInitial release\nNovember 19, 2014\nLearn more\nAMAZON_APPFLOW\n\u00e2\u0080\u0093\nIP address ranges\nAMAZON_CONNECT\n\u00e2\u0080\u0093\nSet up your network\nCHIME_MEETINGS\n\u00e2\u0080\u0093\nConfiguring for media and signaling\nCLOUDFRONT\n\u00e2\u0080\u0093\nLocations and IP address ranges of CloudFront edge servers\nDYNAMODB\n\u00e2\u0080\u0093\nIP address ranges\nEC2\n\u00e2\u0080\u0093\nPublic IPV4 addresses\nEC2_INSTANCE_CONNECT\n\u00e2\u0080\u0093\nEC2 Instance Connect prerequisites\nGLOBALACCELERATOR\n\u00e2\u0080\u0093\nLocation and IP address ranges of Global Accelerator edge servers\nROUTE53\n\u00e2\u0080\u0093\nIP address ranges of Amazon Route\u00c2\u00a053 servers\nROUTE53_HEALTHCHECKS\n\u00e2\u0080\u0093\nIP address ranges of Amazon Route\u00c2\u00a053 servers\nROUTE53_HEALTHCHECKS_PUBLISHING\n\u00e2\u0080\u0093\nIP address ranges of Amazon Route\u00c2\u00a053 servers\nWORKSPACES_GATEWAYS\n\u00e2\u0080\u0093\nPCoIP gateway servers\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nReference prefix lists in your AWS\n                resources\nMigrate from IPv4 to IPv6\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-migrate-ipv6.html": "Migrate your VPC from IPv4 to IPv6 - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nExample: Enable IPv6 in a VPC with a public and private\n                subnet\nStep 1: Associate an IPv6 CIDR block with your VPC and\n                subnets\nStep 2: Update your route tables\nStep 3: Update your security group rules\nStep 4: Assign IPv6 addresses to your\n                instances\nMigrate your VPC from IPv4 to IPv6\nIf you have an existing VPC that supports IPv4 only, and resources in your subnet that are configured to use IPv4 only, you can enable IPv6 support for your VPC and resources. Your VPC can operate in dual-stack mode \u00e2\u0080\u0094 your resources can communicate over IPv4, or IPv6, or both. IPv4 and IPv6 communication are independent of each other.\nYou cannot disable IPv4 support for your VPC and subnets; this is the default IP\n        addressing system for Amazon VPC and Amazon EC2.\nConsiderations\nThere is no migration path from IPv4-only subnets to IPv6-only subnets. For information \n                about creating IPv6-only subnets, see\nCreate a subnet\n.\nThis example assumes that you have an existing VPC with public and private\n                subnets. For information about creating a new VPC for use with IPv6, see\nCreate a VPC\n.\nBefore you migrate to using IPv6, ensure that you have read the features of IPv6\n                addressing for Amazon VPC:\nCompare IPv4 and IPv6\n.\nMigration process\nThe following table provides an overview of the process to enable IPv6 for your VPC.\nStep\nNotes\nStep 1: Associate an IPv6 CIDR block with your VPC and\n                subnets\nAssociate an Amazon-provided or BYOIP IPv6 CIDR block with your VPC\n                        and with your subnets.\nStep 2: Update your route tables\nUpdate your route tables to route your IPv6 traffic. For a public\n                        subnet, create a route that routes all IPv6 traffic from the subnet to the\n                        internet gateway. For a private subnet, create a route that routes all\n                        internet-bound IPv6 traffic from the subnet to an egress-only internet\n                        gateway.\nStep 3: Update your security group rules\nUpdate your security group rules to include rules for IPv6 addresses.\n                            This enables IPv6 traffic to flow to and from your instances. If you've\n                            created custom network ACL rules to control the flow of traffic to and\n                            from your subnet, you must include rules for IPv6 traffic.\nStep 4: Assign IPv6 addresses to your\n                instances\nAssign IPv6 addresses to your instances from the IPv6 address range\n                            of your subnet.\nExample: Enable IPv6 in a VPC with a public and private\n                subnet\nIn this example, your VPC has a public and a private subnet. You have a database\n            instance in your private subnet that has outbound communication with the internet\n            through a NAT gateway in your VPC. You have a public-facing web server in your public\n            subnet that has internet access through the internet gateway. The following diagram\n            represents the architecture of your VPC.\nThe security group for your web server (for example with the security group ID\nsg-11aa22bb11aa22bb1\n) has the\n            following inbound rules:\nType\nProtocol\nPort range\nSource\nComment\nAll traffic\nAll\nAll\nsg-33cc44dd33cc44dd3\nAllows inbound access for all traffic from instances associated with\n                            sg-33cc44dd33cc44dd3 (the database instance).\nHTTP\nTCP\n80\n0.0.0.0/0\nAllows inbound traffic from the internet over HTTP.\nHTTPS\nTCP\n443\n0.0.0.0/0\nAllows inbound traffic from the internet over HTTPS.\nSSH\nTCP\n22\n203.0.113.123/32\nAllows inbound SSH access from your local computer; for example, when\n                            you need to connect to your instance to perform administration\n                            tasks.\nThe security group for your database instance (for example with the security group ID\nsg-33cc44dd33cc44dd3\n) has\n            the following inbound rule:\nType\nProtocol\nPort range\nSource\nComment\nMySQL\nTCP\n3306\nsg-11aa22bb11aa22bb1\nAllows inbound access for MySQL traffic from instances associated\n                            with sg-11aa22bb11aa22bb1 (the web server instance).\nBoth security groups have the default outbound rule that allows all outbound IPv4\n            traffic, and no other outbound rules.\nYour web server is\nt2.medium\ninstance type. Your database server is an\nm3.large\n.\nYou want your VPC and resources to be enabled for IPv6, and you want them to operate\n            in dual-stack mode; in other words, you want to use both IPv6 and IPv4 addressing\n            between resources in your VPC and resources over the internet.\nStep 1: Associate an IPv6 CIDR block with your VPC and\n                subnets\nYou can associate an IPv6 CIDR block with your VPC, and then associate a\n/64\nCIDR block from that range with each subnet.\nTo associate an IPv6 CIDR block with a VPC\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect your VPC.\nChoose\nActions\n,\nEdit CIDRs\nand then choose\nAdd new IPv6 CIDR\n.\nSelect one of the following options, and then choose\nSelect CIDR\n:\nAmazon-provided IPv6 CIDR block\n\u00e2\u0080\u0093 Use an IPv6\n                                CIDR block from Amazon's pool of IPv6 addresses. For\nNetwork\n                                    Border Group\n, choose the group from which AWS advertises\n                                IP addresses.\nIPAM-allocated IPv6 CIDR block\n\u00e2\u0080\u0093 Use an IPv6\n                                CIDR block from an\nIPAM pool\n. Choose the IPAM pool and the IPv6 CIDR block.\nIPv6 CIDR owned by me\n\u00e2\u0080\u0093 Use an IPv6 CIDR block \n                                from your IPv6 address pool (\nBYOIP\n). Choose the IPv6 address pool and the IPv6 CIDR block.\nChoose\nClose\n.\nTo associate an IPv6 CIDR block with a subnet\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nSelect a subnet.\nChoose\nActions\n,\nEdit IPv6 CIDRs\nand \n                        then choose\nAdd IPv6 CIDR\n.\nEdit the CIDR block as needed (for example, replace the\n00\n).\nChoose\nSave\n.\nRepeat this procedure for any other subnets in your VPC.\nFor more information, see\nIPv6 VPC CIDR blocks\n.\nStep 2: Update your route tables\nWhen you associate an IPv6 CIDR block with your VPC, we automatically add a local route\n                to each route table for the VPC to allow IPv6 traffic within the VPC.\nYou must update the route tables for your public subnets to enable instances (such\n            as web servers) to use the internet gateway for IPv6 traffic. You must also update the\n            route tables for your private subnets to enable instances (such as database instances)\n            to use an egress-only internet gateway for IPv6 traffic, because NAT gateways do not\n            support IPv6.\nTo update the route table for a public subnet\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n. Select the public subnet. On the\nRoute table\ntab, choose the route table ID to open the\n                    details page for the route table.\nSelect the route table. On the\nRoutes\ntab, choose\nEdit routes\n.\nChoose\nAdd route\n. Choose\n::/0\nfor\nDestination\n. Choose the ID of the internet gateway for\nTarget\n.\nChoose\nSave changes\n.\nTo update the route table for a private subnet\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEgress-only internet gateways\n.\n                        Choose\nCreate egress only internet gateway\n. Choose your VPC\n                        from\nVPC\n, and then choose\nCreate egress only internet \n                            gateway\n.\nFor more information, see\nEnable outbound IPv6 traffic using an egress-only internet gateway\n.\nIn the navigation pane, choose\nSubnets\n. Select the private subnet.\n                        On the\nRoute table\ntab, choose the route table ID to open the details \n                        page for the route table.\nSelect the route table. On the\nRoutes\ntab, choose\nEdit routes\n.\nChoose\nAdd route\n. Choose\n::/0\nfor\nDestination\n. Choose the ID of the egress-only internet gateway\n\t\t\t\t        for\nTarget\n.\nChoose\nSave changes\n.\nFor more information, see\nExample routing options\n.\nStep 3: Update your security group rules\nTo enable your instances to send and receive traffic over IPv6, you must update your\n                security group rules to include rules for IPv6 addresses. For example, in the example above, \n                you can update the web server security group (\nsg-11aa22bb11aa22bb1\n) to add \n                rules that allow inbound HTTP, HTTPS, and SSH access from IPv6 addresses. You don't need \n                to make any changes to the inbound rules for your database security group; the rule that\n                allows all communication from\nsg-11aa22bb11aa22bb1\nincludes IPv6 communication.\nTo update your inbound security group rules\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSecurity groups\nand select your web server\n                    security group.\nIn the\nInbound rules\ntab, choose\nEdit\n                        inbound rules\n.\nFor each rule that allows IPv4 traffic, choose\nAdd\n                        rule\nand configure the rule to allow the corresponding IPv6\n                        traffic. For example, to add a rule that allows all HTTP traffic over\n                        IPv6, choose\nHTTP\nfor\nType\nand\n::/0\nfor\nSource\n.\nWhen you are finished adding rules, choose\nSave rules\n.\nUpdate your outbound security group rules\nWhen you associate an IPv6 CIDR block with your VPC, we automatically add an outbound\n                    rule to the security groups for the VPC that allows all IPv6 traffic. However, if\n                    you modified the original outbound rules for your security group, this rule is not\n                    automatically added, and you must add equivalent outbound rules for IPv6 traffic.\nUpdate your network ACL rules\nWhen you associate an IPv6 CIDR block with a VPC, we automatically add rules\n                    to the default network ACL to allow IPv6 traffic. However, if you modified your \n                    default network ACL or if you've created a custom network ACL, you must manually \n                    add rules for IPv6 traffic. For more information, see\nWork with network ACLs\n.\nStep 4: Assign IPv6 addresses to your\n                instances\nAll current generation instance types support IPv6. If your instance type does not support \n                IPv6, you must resize the instance to a supported instance type before you can assign an IPv6\n                address. The process that you'll use depends on whether the new instance type that you choose \n                is compatible with the current instance type. For more information, see\nChange the instance type\nin the\nAmazon EC2 User Guide for Linux Instances\n. If you must launch an instance from a new AMI to\n                support IPv6, you can assign an IPv6 address to your instance during launch.\nAfter you've verified that your instance type supports IPv6, you can assign an\n                IPv6 address to your instance using the Amazon EC2 console. The IPv6 address is assigned\n                to the primary network interface (eth0) for the instance. For more information, see\nAssign an\n                    IPv6 address to an instance\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nYou can connect to an instance using its IPv6 address. For more information, see\nConnect to your Linux instance using an SSH client\nin the\nAmazon EC2 User Guide for Linux Instances\nor\nConnect to a Windows instance using its IPv6 address\nin the\nAmazon EC2 User Guide for Windows Instances\n.\nIf you launched your instance using an AMI for a current version of your operating\n                system, your instance is configured for IPv6. If you can't ping an IPv6 address from \n                your instance, refer to the documentation for your operating system to configure IPv6.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS IP address ranges\nIPv6 support on AWS\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/aws-ipv6-support.html": "AWS services that support IPv6 - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nServices that support IPv6\nAdditional IPv6 support\nLearn more\nAWS services that support IPv6\nComputers and smart devices use IP addresses to communicate with each other over the\n        internet and other networks. As the internet continues to grow, so does the need for IP\n        addresses. The most common format for IP addresses is IPv4. The new format for IP addresses\n        is IPv6, which provides a larger address space than IPv4.\nAWS services support for IPv6 includes support for dual stack configuration (IPv4 and\n        IPv6) or IPv6 only configurations. For example, a virtual private cloud (VPC) is a logically\n        isolated section of the AWS Cloud where you can launch AWS resources. Within a VPC, you\n        can create subnets that are IPv4 only, dual stack, or IPv6 only.\nAWS services support access through public endpoints. Some AWS services also support\n        access using private endpoints powered by AWS PrivateLink. AWS services can support IPv6\n        through their private endpoints even if they do not support IPv6 through their public\n        endpoints. Endpoints that support IPv6 can respond to DNS queries with AAAA records.\nServices that support IPv6\nThe following table lists the AWS services that provide dual stack support, IPv6\n            only support, and endpoints that support IPv6. We will update this table as we release\n            additional support for IPv6. For the specifics about how a service supports IPv6, refer\n            to the documentation for the service.\nService name\nDual stack support\nIPv6 only support\nPublic endpoints support IPv6\nPrivate endpoints support IPv6 \u00e2\u0080\nAWS App Mesh\nYes\nYes\nYes\nNo\nAmazon AppStream 2.0\nYes\nNo\nNo\nNo\nAmazon Athena\nYes\nNo\nYes\nYes\nAmazon Aurora\nYes\nNo\nYes\nNo\nAmazon CloudFront\nYes\nNo\nNo\nAWS Cloud Map\nYes\nYes\nYes\nYes\nAWS Cloud WAN\nYes\nNo\nYes\nNo\nAWS Database Migration Service\nYes\nNo\nNo\nNo\nAWS Direct Connect\nYes\nYes\nNo\nAmazon EC2\nYes\nYes\nYes\nNo\nAmazon ECS\nYes\nNo\nNo\nNo\nAmazon EKS\nNo\nYes\nNo\nNo\nElastic Load Balancing\nLoad balancers:\u00c2\u00a0Yes \n                            Target groups:\u00c2\u00a0No\nLoad balancers:\u00c2\u00a0No \n                            Target groups:\u00c2\u00a0Yes\nNo\nNo\nAmazon ElastiCache\nYes\nYes\nNo\nNo\nAWS Fargate\nYes\nNo\nNo\nNo\nAWS Global Accelerator\nYes\nNo\nNo\nAWS Glue\nNo\nNo\nNo\nYes\nAWS IoT\nYes\nYes\nNo\nNo\nAWS Lake Formation\nNo\nNo\nNo\nYes\nAWS Lambda\nYes\nNo\nYes\nNo\nAmazon Lightsail\nYes\nNo\nNo\nAWS Network Firewall\nYes\nYes\nNo\nAWS PrivateLink\nYes\nYes\nYes\nAmazon RDS\nYes\nNo\nYes\nNo\nAmazon Route\u00c2\u00a053\nYes\nYes\nNo\nAmazon S3\nYes\nNo\nYes\nNo\nAWS Secrets Manager\nYes\nNo\nYes\nNo\nAWS Shield\nYes\nYes\nNo\nAWS Site-to-Site VPN\nYes\nNo\nYes\nNo\nAWS Transit Gateway\nYes\nNo\nYes\nNo\nAmazon VPC\nYes\nYes\nYes\nNo\nAWS WAF\nYes\nYes\nNo\nAmazon WorkSpaces\nYes\nNo\nNo\nNo\n\u00e2\u0080\u00a0 An empty cell indicates that the service does not\nintegrate with AWS PrivateLink\n.\nAdditional IPv6 support\nCompute\nAmazon EC2 supports launching instances based on the Nitro System into IPv6-only subnets.\nAmazon EC2 provides IPv6 endpoints for Instance Metadata Service (IMDS) and Amazon\n                    Time Sync Service.\nNetworking and Content Delivery\nAmazon VPC supports creating IPv6-only subnets.\nAmazon VPC helps IPv6 AWS resources communicate with IPv4 resources by supporting \n                    DNS64 on your subnets and NAT64 on your NAT gateways.\nSecurity, Identity, and Compliance\nAWS Identity and Access Management (IAM) supports IPv6 addresses in IAM policies.\nAmazon Macie supports IPv6 addresses in personally identifiable information\n                    (PII).\nManagement and Governance\nAWS CloudTrail records include source IPv6 information.\nAWS CLI v2 supports download over IPv6 connections for IPv6-only clients.\nLearn more\nIPv6 on\n                    AWS\nDual Stack and IPv6-only Amazon VPC Reference Architectures\n(PDF)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMigrate from IPv4 to IPv6\nVirtual private clouds\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/configure-your-vpc.html": "Virtual private clouds (VPC) - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nVPC basics\nVirtual private clouds (VPC)\nA\nvirtual private cloud\n(VPC) is a virtual network dedicated to your\n        AWS account. It is logically isolated from other virtual networks in the AWS Cloud.\n        You can launch AWS resources, such as Amazon EC2 instances, into your VPC.\nYour account contains a default VPC for each AWS Region. You can also create\n        additional VPCs.\nContents\nVPC basics\nDefault VPCs\nCreate a VPC\nConfigure your VPC\nDHCP option sets\nDNS attributes\nNetwork Address Usage\nShare your VPC\nExtend a VPC to other Zones\nDelete your VPC\nVPC basics\nA VPC spans all of the Availability Zones in a Region. After you create a VPC, you \n            can add one or more subnets in each Availability Zone. For more information, see\nSubnets for your VPC\n.\nContents\nVPC IP address range\nVPC diagram\nVPC resources\nVPC IP address range\nWhen you create a VPC, you specify its IP addresses as follows:\nIPv4 only\n\u00e2\u0080\u0093 The VPC has an \n                        IPv4 CIDR block but does not have an IPv6 CIDR block.\nDual stack\n\u00e2\u0080\u0093 The VPC has both an \n                        IPv4 CIDR block and an IPv6 CIDR block.\nFor more information, see\nIP addressing for your VPCs and subnets\n.\nVPC diagram\nThe following diagram shows a VPC with no additional VPC resources.\n                For example VPC configurations, see\nVPC examples\n.\nVPC resources\nEach VPC automatically comes with the following resources:\nDefault DHCP option set\nDefault network ACL\nDefault security group\nMain route table\nYou can create the following resources for your VPC:\nNetwork ACLs\nCustom route tables\nSecurity groups\nInternet gateway\nNAT gateways\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIPv6 support on AWS\nDefault VPCs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html": "Default VPCs - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nDefault VPC components\nDefault subnets\nView your default VPC and default subnets\nCreate a default VPC\nCreate a default subnet\nDelete your default subnets and default VPC\nDefault VPCs\nWhen you start using Amazon VPC, you have a default VPC \n\t\tin each AWS Region. A default VPC comes with a public subnet in each Availability Zone, an \n\t\tinternet gateway, and settings to enable DNS resolution. Therefore, you can immediately\n\t\tstart launching Amazon EC2 instances into a default VPC. You can also use services such as\n\t\tElastic Load Balancing, Amazon RDS, and Amazon EMR in your default VPC.\nA default VPC is suitable for getting started quickly and for launching public instances\n\t\tsuch as a blog or simple website. You can modify the components of your default VPC as\n\t\tneeded.\nYou can add subnets to your default VPC. For more information, see\nCreate a subnet\n.\nContents\nDefault VPC components\nDefault subnets\nView your default VPC and default subnets\nCreate a default VPC\nCreate a default subnet\nDelete your default subnets and default VPC\nDefault VPC components\nWhen we create a default VPC, we do the following to set it up for you:\nCreate a VPC with a size\n/16\nIPv4 CIDR block (\n172.31.0.0/16\n).\n\t\t\t\t\tThis provides up to 65,536 private IPv4 addresses.\nCreate a size\n/20\ndefault subnet in each Availability Zone. This provides up\n\t\t\t\t\tto 4,096 addresses per subnet, a few of which are reserved for our use.\nCreate an\ninternet gateway\nand connect it to\n\t\t\t\t\tyour default VPC.\nAdd a route to the main route table that points all traffic\n                        (\n0.0.0.0/0\n) to the internet gateway.\nCreate a default security group and associate it with your default VPC.\nCreate a default network access control list (ACL) and associate it with your\n\t\t\t\t\tdefault VPC.\nAssociate the default DHCP options set for your AWS account with your default\n\t\t\t\t\tVPC.\nNote\nAmazon creates the above resources on your behalf. IAM policies do not apply to these\n                actions because you do not perform these actions. For example, if you have an IAM\n                policy that denies the ability to call CreateInternetGateway, and then you call\n                CreateDefaultVpc, the internet gateway in the default VPC is still created.\nThe following figure illustrates the key components that we set up for a default VPC.\nThe following table shows the routes in the main route table for the default VPC.\nDestination\nTarget\n172.31.0.0/16\nlocal\n0.0.0.0/0\ninternet_gateway_id\nYou can use a default VPC as you would use any other VPC:\nAdd additional nondefault subnets.\nModify the main route table.\nAdd additional route tables.\nAssociate additional security groups.\nUpdate the rules of the default security group.\nAdd AWS Site-to-Site VPN connections.\nAdd more IPv4 CIDR blocks.\nAccess VPCs in a remote Region by using a Direct Connect gateway. For\n\t\t\t\t\tinformation about Direct Connect gateway options, see\nDirect Connect gateways\nin the\nAWS Direct Connect User Guide\n.\nYou can use a default subnet as you would use any other subnet; add custom route tables and\n\t\t\tset network ACLs. You can also specify a specific default subnet when you launch an EC2\n\t\t\tinstance.\nYou can optionally associate an IPv6 CIDR block with your default VPC.\nDefault subnets\nBy default, a default subnet is a public subnet, because the main route table sends the\n\t\t\tsubnet's traffic that is destined for the internet to the internet gateway. You can\n\t\t\tmake a default subnet into a private subnet by removing the route from the\n\t\t\tdestination 0.0.0.0/0 to the internet gateway. However, if you do this, no EC2\n\t\t\tinstance running in that subnet can access the internet.\nInstances that you launch into a default subnet receive both a public IPv4 address and a\n\t\t\tprivate IPv4 address, and both public and private DNS hostnames. Instances that you\n\t\t\tlaunch into a nondefault subnet in a default VPC don't receive a public IPv4 address\n\t\t\tor a DNS hostname. You can change your subnet's default public IP addressing\n\t\t\tbehavior. For more information, see\nModify the public IPv4 addressing attribute for your subnet\n.\nFrom time to time, AWS may add a new Availability Zone to a Region. In most cases, we\n\t\t\tautomatically create a new default subnet in this Availability Zone for your default\n\t\t\tVPC within a few days. However, if you made any modifications to your default VPC,\n\t\t\twe do not add a new default subnet. If you want a default subnet for the new\n\t\t\tAvailability Zone, you can create one yourself. For more information, see\nCreate a default subnet\n.\nView your default VPC and default subnets\nYou can view your default VPC and subnets using the Amazon VPC console or the command\n\t\t\tline.\nTo view your default VPC and subnets using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nIn the\nDefault VPC\ncolumn, look for a value of\nYes\n. Take note of the ID of the default VPC.\nIn the navigation pane, choose\nSubnets\n.\nIn the search bar, type the ID of the default VPC. The returned subnets are\n\t\t\t\t\tsubnets in your default VPC.\nTo verify which subnets are default subnets, look for a value of\nYes\nin the\nDefault Subnet\ncolumn.\nTo describe your default VPC using the command line\nUse the\ndescribe-vpcs\n(AWS CLI)\nUse the\nGet-EC2Vpc\n(AWS Tools for Windows PowerShell)\nUse the commands with the\nisDefault\nfilter and set the filter value to\ntrue\n.\nTo describe your default subnets using the command line\nUse the\ndescribe-subnets\n(AWS CLI)\nUse the\nGet-EC2Subnet\n(AWS Tools for Windows PowerShell)\nUse the commands with the\nvpc-id\nfilter and set the filter value to the ID\n\t\t\tof the default VPC. In the output, the\nDefaultForAz\nfield is set to\ntrue\nfor default subnets.\nCreate a default VPC\nIf you delete your default VPC, you can create a new one. You cannot restore a previous\n\t\t\tdefault VPC that you deleted, and you cannot mark an existing nondefault VPC as a\n\t\t\tdefault VPC.\nWhen you create a default VPC, it is created with the standard\ncomponents\nof a default VPC, including a\n\t\t\tdefault subnet in each Availability Zone. You cannot specify your own components. The\n\t\t\tsubnet CIDR blocks of your new default VPC may not map to the same Availability Zones as\n\t\t\tyour previous default VPC. For example, if the subnet with CIDR block\n172.31.0.0/20\nwas created in\nus-east-2a\nin your previous\n\t\t\tdefault VPC, it may be created in\nus-east-2b\nin your new default\n\t\t\tVPC.\nIf you already have a default VPC in the Region, you cannot create another one.\nTo create a default VPC using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nChoose\nActions\n,\nCreate Default VPC\n.\nChoose\nCreate\n. Close the confirmation screen.\nTo create a default VPC using the command line\nYou can use the\ncreate-default-vpc\nAWS CLI command. This command does not have any input\n\t\t\t\tparameters.\naws ec2 create-default-vpc\nThe following is example output.\n{\n\"Vpc\":\n{\n\"VpcId\": \"vpc-3f139646\", \n        \"InstanceTenancy\": \"default\", \n        \"Tags\": [], \n        \"Ipv6CidrBlockAssociationSet\": [], \n        \"State\": \"pending\", \n        \"DhcpOptionsId\": \"dopt-61079b07\", \n        \"CidrBlock\": \"172.31.0.0/16\", \n        \"IsDefault\": true\n    }\n}\nAlternatively, you can use the\nNew-EC2DefaultVpc\nTools for Windows PowerShell command or the\nCreateDefaultVpc\nAmazon EC2 API action.\nCreate a default subnet\nYou can create a default subnet in an Availability Zone that does not have one. For\n            example, you might want to create a default subnet if you have deleted a default subnet,\n            or if AWS has added a new Availability Zone and did not automatically create a default\n            subnet for that zone in your default VPC.\nWhen you create a default subnet, it is created with a size\n/20\nIPv4 CIDR\n            block in the next available contiguous space in your default VPC. The following rules\n            apply:\nYou cannot specify the CIDR block yourself.\nYou cannot restore a previous default subnet that you deleted.\nYou can have only one default subnet per Availability Zone.\nYou cannot create a default subnet in a nondefault VPC.\nIf there is not enough address space in your default VPC to create a size\n/20\nCIDR block, the request fails. If you need more address space, you\n            can\nadd an IPv4 CIDR block to your VPC\n.\nIf you've associated an IPv6 CIDR block with your default VPC, the new default subnet\n            does not automatically receive an IPv6 CIDR block. Instead, you can associate an IPv6\n            CIDR block with the default subnet after you create it. For more information, see\nAdd an IPv6 CIDR block to your subnet\n.\nYou cannot create a default subnet using the AWS Management Console.\nTo create a default subnet using the AWS CLI\nUse the\ncreate-default-subnet\nAWS CLI\n                    command and specify the Availability Zone in which to create the subnet.\naws ec2 create-default-subnet --availability-zone us-east-2a\nThe following is example output.\n{\n\"Subnet\":\n{\n\"AvailabilityZone\": \"us-east-2a\", \n        \"Tags\": [], \n        \"AvailableIpAddressCount\": 4091, \n        \"DefaultForAz\": true, \n        \"Ipv6CidrBlockAssociationSet\": [], \n        \"VpcId\": \"vpc-1a2b3c4d\", \n        \"State\": \"available\", \n        \"MapPublicIpOnLaunch\": true, \n        \"SubnetId\": \"subnet-1122aabb\", \n        \"CidrBlock\": \"172.31.32.0/20\", \n        \"AssignIpv6AddressOnCreation\": false\n    }\n}\nFor more information about setting up the AWS CLI, see the\nAWS Command Line Interface User Guide\n.\nAlternatively, you can use the\nNew-EC2DefaultSubnet\nTools for Windows PowerShell command or the\nCreateDefaultSubnet\nAmazon EC2 API action.\nDelete your default subnets and default VPC\nYou can delete a default subnet or default VPC just as you can delete any other subnet or\n\t\t\tVPC. However, if you delete your default subnets or default VPC, you must explicitly \n\t\t\tspecify a subnet in one of your VPCs when you launch instances. If you do not have\n\t\t\tanother VPC, you must create a VPC with a subnet in at least one Availability Zone. For more\n\t\t\tinformation, see\nCreate a VPC\n.\nIf you delete your default VPC, you can create a new one. For more information, see\nCreate a default VPC\n.\nIf you delete a default subnet, you can create a new one. For more information, see\nCreate a default subnet\n. To ensure\n\t\t\tthat your new default subnet behaves as expected, modify the subnet attribute to assign\n\t\t\tpublic IP addresses to instances that are launched in that subnet. For more information,\n\t\t\tsee\nModify the public IPv4 addressing attribute for your subnet\n. You can only\n\t\t\thave one default subnet per Availability Zone. You cannot create a default subnet in a\n\t\t\tnondefault VPC.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVirtual private clouds\nCreate a VPC\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/create-vpc.html": "Create a VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nVPC configuration options\nCreate a VPC plus other VPC resources\nCreate a VPC only\nCreate a VPC using the AWS CLI\nCreate a VPC\nUse the following procedures to create a virtual private cloud (VPC). A VPC must have\n\t\tadditional resources, such as subnets, route tables, and gateways, before you can create\n\t\tAWS resources in the VPC.\nContents\nVPC configuration options\nCreate a VPC plus other VPC resources\nCreate a VPC only\nCreate a VPC using the AWS CLI\nFor information about viewing or modifying a VPC, see\nConfigure your VPC\n.\nVPC configuration options\nYou can specify the following configuration options when you create a VPC.\nAvailability Zones\nDiscrete data centers with redundant power, networking, and connectivity in an AWS \n\t\t\t\t\t\tRegion. You can use multiple AZs to operate production applications and databases that \n\t\t\t\t\t\tare more highly available, fault tolerant, and scalable than would be possible from a \n\t\t\t\t\t\tsingle data center. If you partition your applications running in subnets across AZs, \n\t\t\t\t\t\tyou are better isolated and protected from issues such as power outages, lightning \n\t\t\t\t\t\tstrikes, tornadoes, and earthquakes.\nCIDR blocks\nYou must specify IP address ranges for your VPC and subnets. For more information, \n\t\t\t\t\t\tsee\nIP addressing for your VPCs and subnets\n.\nDNS options\nIf you need public IPv4 DNS hostnames for the EC2 instances launched \n\t\t\t\t\t\tinto your subnets, you must enable both of the DNS options. For more information,\n\t\t\t\t\t\tsee\nDNS attributes for your VPC\n.\nEnable DNS hostnames\n: EC2 instances launched in the VPC \n\t\t\t\t\t\t\treceive public DNS hostnames that correspond to their public IPv4 addresses.\nEnable DNS resolution\n: DNS resolution for private DNS \n\t\t\t\t\t\t\thostnames is provided for the VPC by the Amazon DNS server, called the Route\u00c2\u00a053 Resolver.\nInternet gateway\nConnects your VPC to the internet. The instances in a public subnet can access \n\t\t\t\t\t  the internet because the subnet route table contains a route that sends traffic bound \n\t\t\t\t\t  for the internet to the internet gateway. If a server doesn't need to be directly\n\t\t\t\t\t  reachable from the internet, you should not deploy it into a public subnet. For more\n\t\t\t\t\t  information, see\nInternet gateways\n.\nName\nThe names that you specify for the VPC and the other VPC resources are used\n\t\t\t\t\t\tto create Name tags. If you use the name tag auto-generation feature in the console,\n\t\t\t\t\t\tthe tag values have the format\nname\n-\nresource\n.\nNAT gateways\nEnables instances in a private subnet to send outbound traffic to the internet, \n\t\t\t\t\t\tbut prevents resources on the internet from connecting to the instances. In\n\t\t\t\t\t\tproduction, we recommend that you deploy a NAT gateway in each active AZ.\n\t\t\t\t\t\tFor more information, see\nNAT gateways\n.\nRoute tables\nContains a set of rules, called routes, that determine where network traffic\n\t\t\t\t\t\tfrom your subnet or gateway is directed. For more information, see\nRoute tables\n.\nSubnets\nA range of IP addresses in your VPC. You can launch AWS resources, such as EC2\n\t\t\t\t\t\tinstances, into your subnets. Each subnet resides entirely within one Availability\n\t\t\t\t\t    Zone. By launching instances in at least two Availability Zones, you can protect\n\t\t\t\t\t    your applications from the failure of a single Availability Zone.\nA public subnet has a direct route to an internet gateway. Resources in a public\n\t\t\t\t\t    subnet can access the public internet. A private subnet does not have a direct\n\t\t\t\t\t    route to an internet gateway. Resources in a private subnet require another \n\t\t\t\t\t    component, such as a NAT device, to access the public internet.\nFor more information, see\nSubnets\n.\nTenancy\nThis option defines if EC2 instances that\n\t\t\t\t\t\tyou launch into the VPC will run on hardware that's shared with other\n\t\t\t\t\t\tAWS accounts or on hardware that's dedicated for your use only. If you choose\n\t\t\t\t\t\tthe tenancy of the VPC to be\nDefault\n, EC2 instances launched\n\t\t\t\t\t\tinto this VPC will use the tenancy attribute specified when you launch the\n\t\t\t\t\t\tinstance -- For more information, see\nLaunch an\n\t\t\t\t\t\t\tinstance using defined parameters\nin the\nAmazon EC2 User Guide for Linux Instances\n. If you choose the tenancy of the VPC\n\t\t\t\t\t\tto be\nDedicated\n, the instances will always run as\nDedicated Instances\non\n\t\t\t\t\t\thardware that's dedicated for your use. If you're using AWS Outposts, your\n\t\t\t\t\t\tOutpost requires private connectivity; you must use\nDefault\ntenancy.\nCreate a VPC plus other VPC resources\nUse the following procedure to create a VPC plus the additional VPC resources\n\t\t\tthat you need to run your application, such as subnets, route tables, internet \n\t\t\tgateways, and NAT gateways. For example VPC configurations, see\nVPC examples\n.\nTo create a VPC, subnets, and other VPC resources using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the VPC dashboard, choose\nCreate VPC\n.\nFor\nResources to create\n, choose\nVPC and more\n.\nKeep\nName tag auto-generation\nselected to create Name tags for \n\t\t\t\t\tthe VPC resources, or clear it to provide your own Name tags for the VPC resources.\nFor\nIPv4 CIDR block\n, enter an IPv4 address range for the VPC. A VPC must have an IPv4 address range.\n(Optional) To support IPv6 traffic, choose\nIPv6 CIDR block\n,\nAmazon-provided IPv6 CIDR block\n.\nChoose a\nTenancy\noption. This option defines if EC2 instances that\n\t\t\t\t\tyou launch into the VPC will run on hardware that's shared with other\n\t\t\t\t\tAWS accounts or on hardware that's dedicated for your use only. If you choose\n\t\t\t\t\tthe tenancy of the VPC to be\nDefault\n, EC2 instances launched\n\t\t\t\t\tinto this VPC will use the tenancy attribute specified when you launch the\n\t\t\t\t\tinstance -- For more information, see\nLaunch an\n\t\t\t\t\t\tinstance using defined parameters\nin the\nAmazon EC2 User Guide for Linux Instances\n. If you choose the tenancy of the VPC\n\t\t\t\t\tto be\nDedicated\n, the instances will always run as\nDedicated Instances\non\n\t\t\t\t\thardware that's dedicated for your use. If you're using AWS Outposts, your\n\t\t\t\t\tOutpost requires private connectivity; you must use\nDefault\ntenancy.\nFor\nNumber of Availability Zones (AZs)\n, we recommend that you\n\t\t\t\t\tprovision subnets in at least two Availability Zones for a production\n\t\t\t\t\tenvironment. To choose the AZs for your subnets, expand\nCustomize\n\t\t\t\t\t\tAZs\n. Otherwise, let AWS choose them for you.\nTo configure your subnets, choose values for\nNumber of public subnets\nand\nNumber of private subnets\n. To choose the IP address ranges\n\t\t\t\t\tfor your subnets, expand\nCustomize subnets CIDR blocks\n.\n\t\t\t\t\tOtherwise, let AWS choose them for you.\n(Optional) If resources in a private subnet need access to the public internet over IPv4,\n\t\t\t\t\tfor\nNAT gateways\n, choose the number of AZs in which to\n\t\t\t\t\tcreate NAT gateways. In production, we recommend that you deploy a NAT gateway\n\t\t\t\t\tin each AZ with resources that need access to the public internet. Note that\n\t\t\t\t\tthere is a cost associated with NAT gateways. For more information, see\nPricing\n.\n(Optional) If resources in a private subnet need access to the public internet over IPv6, \n\t\t\t\t\tfor\nEgress only internet gateway\n, choose\nYes\n.\n(Optional) If you need to access Amazon S3 directly from your VPC, choose\nVPC\n\t\t\t\t\t\tendpoints\n,\nS3 Gateway\n. This creates a\n\t\t\t\t\tgateway VPC endpoint for Amazon S3. For more information, see\nGateway\n\t\t\t\t\t\tVPC endpoints\nin the\nAWS PrivateLink Guide\n.\n(Optional) For\nDNS options\n, both options for domain name resolution \n\t\t\t\t\tare enabled by default. If the default doesn't meet your needs, you can disable these options.\n(Optional) To add a tag to your VPC, expand\nAdditional tags\n, \n\t\t\t\t\tchoose\nAdd new tag\n, and enter a tag key and a tag value.\nIn the\nPreview\npane, you can visualize the relationships between \n\t\t\t\t\tthe VPC resources that you've configured. Solid lines represent relationships between resources. \n\t\t\t\t\tDotted lines represent network traffic to NAT gateways, internet gateways, and gateway endpoints. \n\t\t\t\t\tAfter you create the VPC, you can visualize the resources in your VPC in this format at any time \n\t\t\t\t\tusing the\nResource map\ntab. For more information, see\nVisualize the resources in your VPC\n.\nWhen you are finished configuring your VPC, choose\nCreate VPC\n.\nCreate a VPC only\nUse the following procedure to create a VPC with no additional VPC resources\n\t\t\tusing the Amazon VPC console.\nTo create a VPC with no additional VPC resources using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the VPC dashboard, choose\nCreate VPC\n.\nFor\nResources to create\n, choose\nVPC only\n.\n(Optional) For\nName tag\n, enter a name for your\n\t\t\t\t\tVPC. Doing so creates a tag with a key of\nName\nand the\n\t\t\t\t\tvalue that you specify.\nFor\nIPv4 CIDR block\n, do one of the following:\nChoose\nIPv4 CIDR manual input\nand enter\n\t\t\t\t\t\t\tan IPv4 address range for your VPC.\nChoose\nIPAM-allocated IPv4 CIDR block\n, select your Amazon VPC IP\n\t\t\t\t\t\t\tAddress Manager (IPAM) IPv4 address pool and a netmask. The size of the\n\t\t\t\t\t\t\tCIDR block is limited by the allocation rules on the IPAM pool.  IPAM is\n\t\t\t\t\t\t\ta VPC feature that makes it easier for you to plan, track, and monitor\n\t\t\t\t\t\t\tIP addresses for your AWS workloads. For more information, see\nWhat\n\t\t\t\t\t\t\t\tis IPAM?\nin the\nAmazon VPC IPAM User Guide\n.\nIf you are using IPAM to manage your IP addresses, we recommend that you choose this\n\t\t\t\t\t\t\toption. Otherwise, the CIDR block that you specify for your VPC might\n\t\t\t\t\t\t\toverlap with an IPAM CIDR allocation.\n(Optional) To create a dual stack VPC, specify an IPv6 address range \n\t\t\t\t\tfor your VPC. For\nIPv6 CIDR block\n, do one of the\n\t\t\t\t\tfollowing:\nChoose\nIPAM-allocated IPv6 CIDR block\nif you are using Amazon VPC IP Address Manager and you want to provision a IPv6 CIDR from an IPAM pool. You have two options for provisioning an IP address\n\t\t\t\t\t\t\trange to the VPC under\nCIDR block\n:\nNetmask length\n: Choose this option to select a netmask length for\n\t\t\t\t\t\t\t\t\tthe CIDR. Do one of the following:\nIf there is a default netmask length selected for the IPAM pool, you can choose\nDefault to IPAM netmask length\nto use\n\t\t\t\t\t\t\t\t\t\tthe default netmask length set for the IPAM pool by the IPAM\n\t\t\t\t\t\t\t\t\t\tadministrator. For more information about the optional default\n\t\t\t\t\t\t\t\t\t\tnetmask length allocation rule, see\nCreate a\n\t\t\t\t\t\t\t\t\t\t\tRegional IPv6 pool\nin the\nAmazon VPC IPAM User Guide\n.\nIf there is no default netmask length selected for the IPAM pool, choose a netmask length\n\t\t\t\t\t\t\t\t\t\t\tthat's more specific than the netmask length of the IPAM\n\t\t\t\t\t\t\t\t\t\t\tpool CIDR. For example, if the IPAM pool CIDR is /50,\n\t\t\t\t\t\t\t\t\t\t\tyou can choose a netmask length between\n/52\nto\n/60\nfor the VPC. Possible netmask lengths are between\n/44\nand\n/60\nin increments of /4.\nSelect a CIDR\n: Choose this option to manually enter an IPv6 address. You\n\t\t\t\t\t\t\t\t\tcan only choose a netmask length that's more specific than the\n\t\t\t\t\t\t\t\t\tnetmask length of the IPAM pool CIDR. For example, if the IPAM\n\t\t\t\t\t\t\t\t\tpool CIDR is /50, you can choose a netmask length between\n/52\nto\n/60\nfor the\n\t\t\t\t\t\t\t\t\tVPC. Possible IPv6 netmask lengths are between\n/44\nand\n/60\nin\n\t\t\t\t\t\t\t\t\tincrements of /4.\nChoose\nAmazon-provided IPv6 CIDR block\nto\n\t\t\t\t\t\trequest an IPv6 CIDR block from an Amazon pool of IPv6 addresses. \n\t\t\t\t\t\tFor\nNetwork Border Group\n, select the group \n\t\t\t\t\t\tfrom which AWS advertises IP addresses. Amazon provides a fixed \n\t\t\t\t\t\tIPv6 CIDR block size of\n/56\n.\nChoose\nIPv6 CIDR owned by me\nto provision an IPv6 CIDR that you have\n\t\t\t\t\t\t\talready brought to AWS. For more information about bringing your own\n\t\t\t\t\t\t\tIP address ranges to AWS, see\nBring your own IP addresses\n\t\t\t\t\t\t\t\t(BYOIP) in Amazon EC2\nin the\nAmazon EC2 User Guide for Linux Instances\n. You have two options for\n\t\t\t\t\t\t\tprovisioning an IP address range to the VPC under\nCIDR\n\t\t\t\t\t\t\t\tblock\n:\nNo preference\n: Choose this option to use netmask length of\n/56\n.\nSelect a CIDR\n: Choose this option to manually enter an IPv6\n\t\t\t\t\t\t\t\t\taddress and choose a netmask length that's more specific than\n\t\t\t\t\t\t\t\t\tthe size of BYOIP CIDR. For example, if the BYOIP pool CIDR is\n\t\t\t\t\t\t\t\t\t/50, you can choose a netmask length between\n/52\nto\n/60\nfor the\n\t\t\t\t\t\t\t\t\tVPC. Possible IPv6 netmask lengths are between\n/44\nand\n/60\nin\n\t\t\t\t\t\t\t\t\tincrements of /4.\n(Optional) Choose a\nTenancy\noption. This option defines if EC2 instances that\n\t\t\t\t\tyou launch into the VPC will run on hardware that's shared with other\n\t\t\t\t\tAWS accounts or on hardware that's dedicated for your use only. If you choose\n\t\t\t\t\tthe tenancy of the VPC to be\nDefault\n, EC2 instances launched\n\t\t\t\t\tinto this VPC will use the tenancy attribute specified when you launch the\n\t\t\t\t\tinstance -- For more information, see\nLaunch an\n\t\t\t\t\t\tinstance using defined parameters\nin the\nAmazon EC2 User Guide for Linux Instances\n. If you choose the tenancy of the VPC\n\t\t\t\t\tto be\nDedicated\n, the instances will always run as\nDedicated Instances\non\n\t\t\t\t\thardware that's dedicated for your use. If you're using AWS Outposts, your\n\t\t\t\t\tOutpost requires private connectivity; you must use\nDefault\ntenancy.\n(Optional) To add a tag to your VPC, choose\nAdd new tag\nand enter a tag key and a tag value.\nChoose\nCreate VPC\n.\nAfter you create a VPC, you can add subnets. For more information, see\nCreate a subnet\n.\nCreate a VPC using the AWS CLI\nThe following procedure contains example AWS CLI commands to create a VPC plus the additional\n\t\t\tVPC resources needed to run an application. If you run all of the commands in this\n\t\t\tprocedure, you'll create a VPC, a public subnet, a private subnet, a route table for\n\t\t\teach subnet, an internet gateway, an egress-only internet gateway, and a public NAT\n\t\t\tgateway. If you do not need all of these resources, you can use only the example\n\t\t\tcommands that you need.\nPrerequisites\nBefore you begin, install and configure the AWS CLI. When you configure the AWS CLI, \n\t\t\t\tyou are prompted for AWS credentials. The examples in this procedure assume that \n\t\t\t\tyou also configured a default Region. Otherwise, add the\n--region\noption \n\t\t\t\tto each command. For more information, see\nInstalling or updating the AWS CLI\nand\nConfiguring the AWS CLI\n.\nTagging\nYou can add tags to a resource after you create it by using the\ncreate-tags\ncommand.\n\t\t\t\tAlternatively, you can add the\n--tag-specification\noption to the\n\t\t\t\tcreation command for the resource as follows.\n--tag-specifications ResourceType=\nvpc\n,Tags=[\n{\nKey=Name,Value=\nmy-project\n}]\nTo create a VPC plus VPC resources by using the AWS CLI\nUse the following\ncreate-vpc\ncommand to create a VPC with the specified IPv4 CIDR block.\naws ec2 create-vpc --cidr-block\n10.0.0.0/24\n--query Vpc.VpcId --output text\nAlternatively, to create a dual stack VPC, add the\n--amazon-provided-ipv6-cidr-block\noption to add an Amazon-provided IPv6 CIDR block, as shown in the following example.\naws ec2 create-vpc --cidr-block\n10.0.0.0/24\n--amazon-provided-ipv6-cidr-block --query Vpc.VpcId --output text\nThese commands return the ID of the new VPC. The following is an example.\nvpc-\n1a2b3c4d5e6f1a2b3\n[Dual stack VPC] Get the IPv6 CIDR block that's associated with your VPC by using the\n\t\t\t\t\tfollowing\ndescribe-vpcs\ncommand.\naws ec2 describe-vpcs --vpc-id vpc-\n1a2b3c4d5e6f1a2b3\n--query Vpcs[].Ipv6CidrBlockAssociationSet[].Ipv6CidrBlock --output text\nThe following is example output.\n2600:1f13:cfe:3600::/56\nCreate one or more subnets, depending on your use case. In production, we recommend that\n\t\t\t\t\tyou launch resources in at least two Availability Zones. Use one of the\n\t\t\t\t\tfollowing commands to create each subnet.\nIPv4-only subnet\n\u00e2\u0080\u0093 To create a subnet with a specific IPv4 CIDR block, use the following\ncreate-subnet\ncommand.\naws ec2 create-subnet --vpc-id vpc-\n1a2b3c4d5e6f1a2b3\n--cidr-block\n10.0.1.0/20\n--availability-zone\nus-east-2a\n--query Subnet.SubnetId --output text\nDual stack subnet\n\u00e2\u0080\u0093 If you created a dual stack VPC, you can use the\n--ipv6-cidr-block\noption to create a dual stack subnet, as shown\n\t\t\t\t\t\t\tin the following command.\naws ec2 create-subnet --vpc-id vpc-\n1a2b3c4d5e6f1a2b3\n--cidr-block\n10.0.1.0/20\n--ipv6-cidr-block\n2600:1f13:cfe:3600::/64\n--availability-zone\nus-east-2a\n--query Subnet.SubnetId --output text\nIPv6-only subnet\n\u00e2\u0080\u0093 If you created a dual stack VPC,\n\t\t\t\t\t\t\tyou can use the\n--ipv6-native\noption to create an IPv6-only\n\t\t\t\t\t\t\tsubnet, as shown in the following command.\naws ec2 create-subnet --vpc-id vpc-\n1a2b3c4d5e6f1a2b3\n--ipv6-native --ipv6-cidr-block\n2600:1f13:cfe:3600::/64\n--availability-zone\nus-east-2a\n--query Subnet.SubnetId --output text\nThese commands return the ID of the new subnet. The following is an example.\nsubnet-\n1a2b3c4d5e6f1a2b3\nIf you need a public subnet for your web servers, or for a NAT gateway, do the following:\nCreate an internet gateway by using the following\ncreate-internet-gateway\ncommand. The command returns the ID\n\t\t\t\t\t\t\tof the new internet gateway.\naws ec2 create-internet-gateway --query InternetGateway.InternetGatewayId --output text\nAttach the internet gateway to your VPC by using the following\nattach-internet-gateway\ncommand. Use the internet gateway\n\t\t\t\t\t\t\tID returned from the previous step.\naws ec2 attach-internet-gateway --vpc-id vpc-\n1a2b3c4d5e6f1a2b3\n--internet-gateway-id\nigw-id\nCreate a custom route table for your public subnet by using the following\ncreate-route-table\ncommand. The command returns the ID of\n\t\t\t\t\t\t\tthe new route table.\naws ec2 create-route-table --vpc-id vpc-\n1a2b3c4d5e6f1a2b3\n--query RouteTable.RouteTableId --output text\nCreate a route in the route table that sends all IPv4 traffic to the internet gateway by\n\t\t\t\t\t\t\tusing the following\ncreate-route\ncommand. Use the ID of the route table for the\n\t\t\t\t\t\t\tpublic subnet.\naws ec2 create-route --route-table-id\nrtb-id-public\n--destination-cidr-block 0.0.0.0/0 --gateway-id\nigw-id\nAssociate the route table with the public subnet by using the following\nassociate-route-table\ncommand. Use the ID of the route\n\t\t\t\t\t\t\ttable for the public subnet and the ID of the public subnet.\naws ec2 associate-route-table --route-table-id\nrtb-id-public\n--subnet-id\nsubnet-id-public-subnet\n[IPv6] You can add an egress-only internet gateway so that instances in a private subnet\n\t\t\t\t\tcan access the internet over IPv6 (for example, to get software updates), but\n\t\t\t\t\thosts on the internet can't access your instances.\nCreate an egress-only internet gateway by using the following\ncreate-egress-only-internet-gateway\ncommand. The command\n\t\t\t\t\t\t\treturns the ID of the new internet gateway.\naws ec2 create-egress-only-internet-gateway --vpc-id vpc-\n1a2b3c4d5e6f1a2b3\n--query EgressOnlyInternetGateway.EgressOnlyInternetGatewayId --output text\nCreate a custom route table for your private subnet by using the following\ncreate-route-table\ncommand. The command returns the ID of\n\t\t\t\t\t\t\tthe new route table.\naws ec2 create-route-table --vpc-id vpc-\n1a2b3c4d5e6f1a2b3\n--query RouteTable.RouteTableId --output text\nCreate a route in the route table for the private subnet that sends all IPv6 traffic to\n\t\t\t\t\t\t\tthe egress-only internet gateway by using the following\ncreate-route\ncommand. Use the ID of the route table returned in the previous\n\t\t\t\t\t\t\tstep.\naws ec2 create-route --route-table-id\nrtb-id-private\n--destination-cidr-block\n::/0\n--egress-only-internet-gateway\neigw-id\nAssociate the route table with the private subnet by using the following\nassociate-route-table\ncommand.\naws ec2 associate-route-table --route-table-id\nrtb-id-private\n--subnet-id\nsubnet-id-private-subnet\nIf you need a NAT gateway for your resources in a private subnet, do the following:\nCreate an elastic IP address for the NAT gateway by using the following\nallocate-address\ncommand.\naws ec2 allocate-address --domain vpc --query AllocationId --output text\nCreate the NAT gateway by using the following\ncreate-nat-gateway\ncommand. Use the allocation ID returned\n\t\t\t\t\t\t\tfrom the previous step.\naws ec2 create-nat-gateway --subnet-id\nsubnet-id-private-subnet\n--allocation-id\neipalloc-id\n(Optional) If you already created a route table for the private subnet in step 5, skip\n\t\t\t\t\t\t\tthis step. Otherwise, use the following\ncreate-route-table\ncommand to create a route table for your\n\t\t\t\t\t\t\tprivate subnet. The command returns the ID of the new route\n\t\t\t\t\t\t\ttable.\naws ec2 create-route-table --vpc-id vpc-\n1a2b3c4d5e6f1a2b3\n--query RouteTable.RouteTableId --output text\nCreate a route in the route table for the private subnet that sends all IPv4 traffic to\n\t\t\t\t\t\t\tthe NAT gateway by using the following\ncreate-route\ncommand. Use the ID of the route table for the private subnet, which you\n\t\t\t\t\t\t\tcreated either in this step or in step 5.\naws ec2 create-route --route-table-id\nrtb-id-private\n--destination-cidr-block\n0.0.0.0/0\n--gateway-id\nnat-id\n(Optional) If you already associated a route table with the private subnet in step 5,\n\t\t\t\t\t\t\tskip this step. Otherwise, use the following\nassociate-route-table\ncommand to associate the route table\n\t\t\t\t\t\t\twith the private subnet. Use the ID of the route table for the private\n\t\t\t\t\t\t\tsubnet, which you created either in this step or in step 5.\naws ec2 associate-route-table --route-table-id\nrtb-id-private\n--subnet-id\nsubnet-id-private-subnet\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDefault VPCs\nConfigure your VPC\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/modify-vpcs.html": "Configure your VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nView details about your VPC\nVisualize the resources in your VPC\nAdd an IPv4 CIDR block\nAdd an IPv6 CIDR block\nRemove an IPv4 CIDR block\nRemove an IPv6 CIDR block\nConfigure your VPC\nUse the following procedures to view and configure your virtual private clouds (VPC).\nTasks\nView details about your VPC\nVisualize the resources in your VPC\nAdd an IPv4 CIDR block to your VPC\nAdd an IPv6 CIDR block to your VPC\nRemove an IPv4 CIDR block from your VPC\nRemove an IPv6 CIDR block from your VPC\nFor information about creating or deleting a VPC, see\nCreate a VPC\nor\nDelete your VPC\n.\nView details about your VPC\nUse the following steps to view the details about your VPCs.\nTo view VPC details using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nVPCs\n.\nSelect the VPC, and then choose\nView Details\nto see the\n\t\t\t\t\tconfiguration details of your VPC.\nTo describe a VPC using the AWS CLI\nUse the\ndescribe-vpcs\ncommand.\nTo view all of your VPCs across all Regions\nOpen the Amazon EC2 Global View console at\nhttps://console.aws.amazon.com/ec2globalview/home\n.\n\t\t\t\tFor more information, see\nList and filter\n\t\t\t\t\tresources using the Amazon EC2 Global View\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nVisualize the resources in your VPC\nUse the following steps to see a visual representation of the resources in your VPC using\n\t\t\tthe\nResource map\ntab. The following resources are visible in the\n\t\t\tresource map:\nVPC\nSubnets\nRoute tables\nInternet gateways\nEgress-only internet gateways\nNAT gateways\nGateway endpoints (Amazon S3 and Amazon DynamoDB)\nThe resource map shows relationships between resources inside a VPC and how traffic flows\n\t\t\tfrom subnets to NAT gateways, internet gateway and gateway endpoints.\nYou can use the resource map to understand the architecture of a VPC, see how many\n\t\t\tsubnets it has in it, which subnets are associated with which route tables, and which\n\t\t\troute tables have routes to NAT gateways, internet gateways, and gateway\n\t\t\tendpoints.\nYou can also use the resource map to spot undesirable or incorrect configurations,\n\t\t\tsuch as private subnets disconnected from NAT gateways or private subnets with a route\n\t\t\tdirectly to the internet gateway. You can choose resources within the resource map, such\n\t\t\tas route tables, and edit the configurations for those resources.\nTo visualize the resources in your VPC\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nVPCs\n.\nSelect the VPC.\nChoose the\nResource map\ntab to display a visualization of the resources.\nChoose\nShow details\nto view details in addition to the\n\t\t\t\t\tresource IDs and zones displayed by default.\nVPC\n: The IPv4 and IPv6 CIDR ranges assigned to\n\t\t\t\t\t\t\tthe VPC.\nSubnets\n: The IPv4 and IPv6 CIDR ranges assigned \n\t\t\t\t\t\t\tto each subnet.\nRoute tables\n: The subnet associations, and the number of routes in\n\t\t\t\t\t\t\tthe route table.\nNetwork connections\n: The details related to each\n\t\t\t\t\t\t\ttype of connection:\nIf there are public subnets in the VPC, there is an internet gateway resource with the\n\t\t\t\t\t\t\t\t\tnumber of routes and the source and destination subnets for\n\t\t\t\t\t\t\t\t\ttraffic using the internet gateway.\nIf there is an egress-only internet gateway, there is an egress-only internet gateway\n\t\t\t\t\t\t\t\t\tresource with the number of routes and the source and\n\t\t\t\t\t\t\t\t\tdestination subnets for traffic using the egress-only internet\n\t\t\t\t\t\t\t\t\tgateway.\nIf there is a NAT gateway, there is a NAT gateway resource with the number of network\n\t\t\t\t\t\t\t\t\tinterfaces and Elastic IP addresses for the NAT gateway.\nIf there is a gateway endpoint, there is a gateway endpoint resource with the name of\n\t\t\t\t\t\t\t\t\tthe AWS service (Amazon S3 or Amazon DynamoDB) that you can connect to\n\t\t\t\t\t\t\t\t\tusing the endpoint.\nHover over a resource to see the relationship between the resources. Solid\n\t\t\t\t\tlines represent relationships between resources. Dotted lines represent network\n\t\t\t\t\ttraffic to network connections.\nAdd an IPv4 CIDR block to your VPC\nYour VPC can have up to five IPv4 CIDR blocks by default, but this limit is\n\t\t\tadjustable. For more information, see\nAmazon VPC quotas\n. For information about restrictions on \n\t\t\tIPv4 CIDR blocks for a VPC, see\nVPC CIDR blocks\n.\nTo add an IPv4 CIDR block to a VPC using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect the VPC, and then choose\nActions\n,\nEdit\n\t\t\t\t\t\tCIDRs\n.\nChoose\nAdd new IPv4 CIDR\n.\nFor\nIPv4 CIDR block\n, do one of the following:\nChoose\nIPv4 CIDR manual input\nand enter an IPv4\n\t\t\t\t\t\t\tCIDR block.\nChoose\nIPAM-allocated IPv4 CIDR\nand select a CIDR\n\t\t\t\t\t\t\tfrom an IPv4 IPAM pool.\nChoose\nSave\nand then choose\nClose\n.\nAfter you've added an IPv4 CIDR block to your VPC, you can create subnets that \n\t\t\t\t\tuse the new CIDR block. For more information, see\nCreate a subnet\n.\nTo associate an IPv4 CIDR block with a VPC using the AWS CLI\nUse the\nassociate-vpc-cidr-block\ncommand.\nAdd an IPv6 CIDR block to your VPC\nYour VPC can have up to five IPv6 CIDR blocks by default, but this limit is \n\t\t\tadjustable. For more information, see\nAmazon VPC quotas\n. For information about restrictions on IPv6 CIDR\n\t\t\tblocks for a VPC, see\nVPC CIDR blocks\n.\nTo add an IPv6 CIDR block to a VPC using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect the VPC, and then choose\nActions\n,\nEdit\n\t\t\t\t\t\tCIDRs\n.\nChoose\nAdd new IPv6 CIDR\n.\nFor\nIPv6 CIDR block\n, do one of the\n\t\t\t\tfollowing:\nChoose\nIPAM-allocated IPv6 CIDR block\nif you are using Amazon VPC IP Address Manager and you want to provision a IPv6 CIDR from an IPAM pool. You have two options for provisioning an IP address\n\t\t\t\t\t\trange to the VPC under\nCIDR block\n:\nNetmask length\n: Choose this option to select a netmask length for\n\t\t\t\t\t\t\t\t\tthe CIDR. Do one of the following:\nIf there is a default netmask length selected for the IPAM pool, you can choose\nDefault to IPAM netmask length\nto use\n\t\t\t\t\t\t\t\t\t\tthe default netmask length set for the IPAM pool by the IPAM\n\t\t\t\t\t\t\t\t\t\tadministrator. For more information about the optional default\n\t\t\t\t\t\t\t\t\t\tnetmask length allocation rule, see\nCreate a\n\t\t\t\t\t\t\t\t\t\t\tRegional IPv6 pool\nin the\nAmazon VPC IPAM User Guide\n.\nIf there is no default netmask length selected for the IPAM pool, choose a netmask length\n\t\t\t\t\t\t\t\t\t\tthat's more specific than the netmask length of the IPAM\n\t\t\t\t\t\t\t\t\t\tpool CIDR. For example, if the IPAM pool CIDR is /50,\n\t\t\t\t\t\t\t\t\t\tyou can choose a netmask length between\n/52\nto\n/60\nfor the VPC. Possible netmask lengths are between\n/44\nand\n/60\nin increments of /4.\nSelect a CIDR\n: Choose this option to manually enter an IPv6 address. You\n\t\t\t\t\t\t\t\tcan only choose a netmask length that's more specific than the\n\t\t\t\t\t\t\t\tnetmask length of the IPAM pool CIDR. For example, if the IPAM\n\t\t\t\t\t\t\t\tpool CIDR is /50, you can choose a netmask length between\n/52\nto\n/60\nfor the\n\t\t\t\t\t\t\t\tVPC. Possible IPv6 netmask lengths are between\n/44\nand\n/60\nin\n\t\t\t\t\t\t\t\tincrements of /4.\nChoose\nAmazon-provided IPv6 CIDR block\nto\n\t\t\t\t\t\trequest an IPv6 CIDR block from an Amazon pool of IPv6 addresses. \n\t\t\t\t\t\tFor\nNetwork Border Group\n, select the group \n\t\t\t\t\t\tfrom which AWS advertises IP addresses. Amazon provides a fixed \n\t\t\t\t\t\tIPv6 CIDR block size of\n/56\n.\nChoose\nIPv6 CIDR owned by me\nto provision an IPv6 CIDR that you have\n\t\t\t\t\t\talready brought to AWS. For more information about bringing your own\n\t\t\t\t\t\tIP address ranges to AWS, see\nBring your own IP addresses\n\t\t\t\t\t\t\t(BYOIP) in Amazon EC2\nin the\nAmazon EC2 User Guide for Linux Instances\n. You have two options for\n\t\t\t\t\t\tprovisioning an IP address range to the VPC under\nCIDR\n\t\t\t\t\t\t\tblock\n:\nNo preference\n: Choose this option to use netmask length of\n/56\n.\nSelect a CIDR\n: Choose this option to manually enter an IPv6\n\t\t\t\t\t\t\t\t\taddress and choose a netmask length that's more specific than\n\t\t\t\t\t\t\t\t\tthe size of BYOIP CIDR. For example, if the BYOIP pool CIDR is\n\t\t\t\t\t\t\t\t\t/50, you can choose a netmask length between\n/52\nto\n/60\nfor the\n\t\t\t\t\t\t\t\t\tVPC. Possible IPv6 netmask lengths are between\n/44\nand\n/60\nin\n\t\t\t\t\t\t\t\t\tincrements of /4.\nChoose\nSelect CIDR\nand then choose\nClose\n.\nAfter you've added an IPv6 CIDR block to your VPC, you can create subnets that \n\t\t\t\t\tuse the new CIDR block. For more information, see\nCreate a subnet\n.\nTo associate an IPv6 CIDR block with a VPC using the AWS CLI\nUse the\nassociate-vpc-cidr-block\ncommand.\nRemove an IPv4 CIDR block from your VPC\nIf your VPC has more than one IPv4 CIDR block associated with it, you can remove\n\t\t\tan IPv4 CIDR block from the VPC. You cannot remove the primary IPv4 CIDR block.\n\t\t\tYou must remove an entire CIDR block; you cannot remove a subset of a CIDR block \n\t\t\tor a merged range of CIDR blocks. You must first delete all subnets in the CIDR \n\t\t\tblock.\nTo remove a CIDR block from a VPC using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect the VPC, and choose\nActions\n,\nEdit\n\t\t\t\t\t\tCIDRs\n.\nUnder\nVPC IPv4 CIDRs\n, remove the CIDR by choosing\nRemove\n.\nChoose\nClose\n.\nTo disassociate an IPv4 CIDR block from a VPC using the AWS CLI\nUse the\ndisassociate-vpc-cidr-block\ncommand.\nRemove an IPv6 CIDR block from your VPC\nIf you no longer want IPv6 support in your VPC, but you want to continue using your\n\t\t\tVPC to create and communicate with IPv4 resources, you can remove the IPv6 CIDR\n\t\t\tblock.\nTo remove an IPv6 CIDR block, you must first unassign any IPv6 addresses that\n\t\t\tare assigned to any instances in your subnet.\nRemoving an IPv6 CIDR block does not automatically delete any security group\n\t\t\trules, network ACL rules, or route table routes that you've configured for IPv6\n\t\t\tnetworking. You must manually modify or delete these rules or routes.\nTo remove an IPv6 CIDR block from a VPC using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect your VPC, choose\nActions\n,\nEdit\n\t\t\t\t\t\tCIDRs\n.\nUnder\nIPv6 CIDRs\n, remove the IPv6 CIDR block by choosing\nRemove\n.\nChoose\nClose\n.\nTo disassociate an IPv6 CIDR block from a VPC using the AWS CLI\nUse the\ndisassociate-vpc-cidr-block\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a VPC\nDHCP option sets\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html": "DHCP option sets in Amazon VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nWhat is DHCP?\nDHCP option sets in Amazon VPC\nNetwork devices in your VPC use Dynamic Host Configuration Protocol (DHCP). You can use DHCP \n    option sets to control the following aspects of the network configuration in your virtual network:\nThe DNS servers, domain names, or Network Time Protocol (NTP) servers used by the devices in your VPC.\nWhether DNS resolution is enabled in your VPC.\nContents\nWhat is DHCP?\nDHCP option set concepts\nWork with DHCP option sets\nWhat is DHCP?\nEvery device on a TCP/IP network requires an IP address to communicate over the network.\n      In the past, IP addresses had to be assigned to each device in your network manually. Today,\n      IP addresses are assigned dynamically by DHCP servers using the Dynamic Host Configuration\n      Protocol (DHCP).\nApplications running on EC2 instances can communicate with Amazon DHCP servers as needed\n      to retrieve their IP address lease or other network configuration information (such as the IP\n      address of an Amazon DNS server or the IP address of the router in your VPC).\nYou can specify the network configurations that are provided by Amazon DHCP servers by\n      using DHCP option sets.\nIf you have a VPC configuration that requires your applications to make direct requests \n          to the Amazon IPv6 DHCP server, note the following:\nAn EC2 instance in a dual-stack subnet can only retrieve its IPv6 address from the IPv6 DHCP\n          server.\nIt cannot retrieve any additional network\n            configurations from the IPv6 DHCP server, such as DNS server names or domain\n            names.\nAn EC2 instance in a IPv6-only subnet can retrieve its IPv6 address from the IPv6 DHCP server\nand can retrieve additional networking configuration\n            information, such as DNS server names and domain names.\nThe Amazon DHCP servers can also provide an entire IPv4 or IPv6 prefix to a network\n      interface in your VPC using prefix delegation (see\nAssigning prefixes to Amazon EC2 network\n        interfaces\nin the\nAmazon EC2 User Guide for Linux Instances\n). IPv4 prefix delegation is\n      not provided in DHCP responses. IPv4 prefixes assigned to the interface can be retrieved using\n      IMDS (see\nInstance metadata\n        categories\nin the\nAmazon EC2 User Guide for Linux Instances\n).\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConfigure your VPC\nDHCP option set concepts\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/DHCPOptionSetConcepts.html": "DHCP option set concepts - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nDefault DHCP option set\nCustom DHCP option set\nDHCP option set concepts\nA\nDHCP option set\nis a group of network settings used by resources in\n        your VPC, such as EC2 instances, to communicate over your virtual network.\nEach Region has a default DHCP option set. Each VPC uses the default DHCP option set\n        for its Region unless you either create and associate a custom DHCP option set with the\n        VPC or configure the VPC with no DHCP option set. If your VPC has no DHCP option set,\n        the instances in the VPC can't access the internet because they have no access to a \n        DNS server.\nYou can associate a DHCP option set with multiple VPCs, but each VPC can have only one \n        associated DHCP option set.\nIf you delete a VPC, the DHCP option set that is associated with the VPC is\n        disassociated from the VPC.\nContents\nDefault DHCP option set\nCustom DHCP option set\nDefault DHCP option set\nThe default DHCP option set contains the following settings:\nDomain name servers\n: The DNS servers that your network\n                    interfaces use for domain name resolution. For a default DHCP option set, this\n                    is always\nAmazonProvidedDNS\n. For more information, see\nAmazon DNS server\n.\nDomain name\n: The domain name that a client should use\n                    when resolving hostnames using the Domain Name System (DNS). For more\n                    information about the domain names used for EC2 instances, see\nAmazon EC2 instance\n                        hostnames\n.\nWhen you use a default DHCP options set, the following settings are not used,\n                but there are defaults for EC2 instances:\nNTP servers\n: By default, EC2 instances use the\nAmazon Time Sync Service\nto \n                retrieve the time.\nNetBIOS name servers\n: For EC2 instances running\n                Windows, the NetBIOS computer name is a friendly name assigned to the instance to \n                identify it on the network. The NetBIOS name server maintains a list of mappings \n                between NetBIOS computer names and network addresses for networks that use NetBIOS \n                as their naming service.\nNetBIOS node type\n: For EC2 instances running \n                Windows, this is the method that the instances use to resolve NetBIOS names to IP \n                addresses.\nWhen you use the default option set, the Amazon DHCP server uses the network settings\n            in the default option set. When you launch instances in your VPC, they do the following,\n            as shown in the diagram: (1) interact with the DHCP server, (2) interact with the Amazon\n            DNS server, and (3) connect to other devices in the network through the router for your\n            VPC. The instances can interact with the Amazon DHCP server at any time to get their IP\n            address lease and additional network settings.\nCustom DHCP option set\nYou can create a custom DHCP option set with the following settings, and then\n                associate it with a VPC:\nDomain name servers\n: The DNS servers that your network interfaces use for\n                    domain name resolution.\nDomain name\n: The domain name that a client uses when\n                    resolving hostnames using the Domain Name System (DNS).\nNTP servers\n: The NTP servers that provide the time to the\n                    instances.\nNetBIOS name servers\n: For EC2 instances running Windows, the NetBIOS\n                    computer name is a friendly name assigned to the instance to identify it on the\n                    network. A NetBIOS name server maintains a list of mappings between NetBIOS\n                    computer names and network addresses for networks that use NetBIOS as their\n                    naming service.\nNetBIOS node type\n: For EC2 instances running Windows, the method that the\n                    instances use to resolve NetBIOS names to IP addresses.\nWhen you use a custom option set, instances launched into your VPC do the following,\n            as shown in the diagram: (1) use the network settings in the custom DHCP option set, (2)\n            interact with the DNS, NTP, and NetBIOS servers specified in the custom DHCP option set,\n            and (3) connect to other devices in the network through the router for your VPC.\nRelated tasks\nCreate a DHCP option set\nChange the option set associated with a VPC\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDHCP option sets\nWork with DHCP option sets\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/DHCPOptionSet.html": "Work with DHCP option sets - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nView your DHCP option sets\nCreate a DHCP option set\nChange the option set associated with a VPC\nDelete a DHCP option set\nWork with DHCP option sets\nUse the following procedures to view and work with DHCP option sets. For more information \n    about how DHCP option sets work, see\nDHCP option set concepts\n.\nTasks\nView your DHCP option sets\nCreate a DHCP option set\nChange the option set associated with a VPC\nDelete a DHCP option set\nView your DHCP option sets\nYou can view your DHCP option sets as follows. For a default DHCP option set,\n      the only settings with values are\nDomain name\nand\nDomain name servers\n.\nTo view your DHCP option sets using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nDHCP option sets\n.\nChoose the ID of a DHCP option set to open its details page.\nTo view your DHCP option sets using the command line\nFor more information about these command line interfaces, see\nWorking with Amazon VPC\n.\ndescribe-dhcp-options\n(AWS CLI)\nGet-EC2DhcpOption\n(AWS Tools for Windows PowerShell)\nCreate a DHCP option set\nA custom DHCP option set enables you to customize your VPC with your own DNS server,\n      domain name, and more. You can create as many additional DHCP option sets as you want.\n      However, you can only associate a VPC with one DHCP option set at a time.\nNote\nAfter you create a DHCP option set, you can't modify it. To update the DHCP options for your\n        VPC, you must create a new DHCP option set and then associate it with your VPC.\nTo create a DHCP options set using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nDHCP option sets\n.\nChoose\nCreate DHCP options set\n.\nFor\nTag settings\n, optionally enter a name for the DHCP option\n          set. If you enter a value, it automatically creates a Name tag for the DHCP option\n          set.\nFor\nDHCP options\n, provide the configuration settings that you need.\nDomain name\n(optional): Enter the domain name that a client should use when resolving hostnames via the Domain Name System. If you are not using AmazonProvidedDNS, your custom domain name servers must resolve the\n              hostname as appropriate. If you use an Amazon Route\u00c2\u00a053 private hosted zone, you can use\n              AmazonProvidedDNS. For more information, see\nDNS attributes for your VPC\n.\nSome Linux operating systems accept multiple domain names separated by spaces.\n              However, other Linux operating systems and Windows treat the value as a single domain,\n              which results in unexpected behavior. If your DHCP option set is associated with a VPC\n              that contains instances that are not all running the same operating systems, specify\n              only one domain name.\nDomain name servers\n(optional): Enter the DNS servers that will be used to resolve the IP address of a host from the host's name.\nYou can enter either\nAmazonProvidedDNS\nor custom domain name\n              servers. Using both might cause unexpected behavior. You can enter the IP addresses of up to four IPv4 domain name servers (or up to three IPv4\n              domain name servers and\nAmazonProvidedDNS\n) and four IPv6\n              domain name servers separated by commas. Although you can specify up to eight domain name servers, some operating systems might impose lower limits. For more information about\nAmazonProvidedDNS\nand the Amazon DNS server, see\nAmazon DNS server\n.\nImportant\nIf your VPC has an internet gateway, be sure to specify your own DNS server\n                or an Amazon DNS server (AmazonProvidedDNS) for the\nDomain name\n                  servers\nvalue. Otherwise, the instances in the VPC won't have \n                access to DNS, which disable internet access.\nNTP servers\n(optional): Enter the IP addresses of up to eight Network Time Protocol (NTP) servers (four IPv4 addresses and four IPv6 addresses).\nNTP servers provide the time to your network. You can\n              specify the Amazon Time Sync Service at IPv4 address\n169.254.169.123\nor IPv6 address\nfd00:ec2::123\n. Instances communicate with the Amazon Time Sync Service by default. Note that the IPv6 address is only accessible on\nEC2 instances \n                built on the Nitro System\n.\nFor more information about the NTP servers option, see\nRFC 2132\n. For more information about the Amazon Time Sync Service, see\nSet the time for your instance\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nNetBIOS name servers\n(optional): Enter the IP addresses of up to four NetBIOS name servers.\nFor EC2 instances running a Windows OS, the NetBIOS computer name is a friendly name assigned to the instance to identify it on the network. The NetBIOS name server maintains a list of mappings between NetBIOS computer names and network addresses for networks that use NetBIOS as their naming service.\nNetBIOS node type\n(optional): Enter\n1\n,\n2\n,\n4\n, or\n8\n. We recommend that you specify\n2\n(point-to-point or P-node). Broadcast and multicast are not currently supported. For more information about these node types, see section 8.7 of\nRFC 2132\nand section 10 of\nRFC1001\n.\nFor EC2 instances running a Windows OS, this is the method that the instances use to resolve NetBIOS names to IP addresses. In the default options set, there is no value for NetBIOS node type.\nAdd\nTags\n.\nChoose\nCreate DHCP options set\n. Note the name or ID of the new DHCP option set.\nTo configure a VPC to use the new option set, see\nChange the option set associated with a VPC\n.\nTo create a DHCP option set for your VPC using the command line\nFor more information about these command line interfaces, see\nWorking with Amazon VPC\n.\ncreate-dhcp-options\n(AWS CLI)\nNew-EC2DhcpOption\n(AWS Tools for Windows PowerShell)\nChange the option set associated with a VPC\nAfter you create a DHCP option set, you can associate it with one or more VPCs. You can\n      associate only one DHCP option set with a VPC at a time. If you do not associate a DHCP option \n      set with a VPC, this disables domain name resolution in the VPC.\nWhen you associate a new set of DHCP options with a VPC, any existing instances and all \n      new instances that you launch in that VPC use the new options. \nYou don't need to restart or relaunch your instances. Instances automatically pick up the changes within a few hours, depending on how frequently they renew their DHCP leases. \nIf you prefer, you can explicitly renew the lease using the operating system on the instance.\nTo change the DHCP option set associated with a VPC using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect the check box for the VPC, and then choose\nActions\n,\nEdit VPC settings\n.\nFor\nDHCP options set\n, choose a new DHCP option set.\n          Alternatively, choose\nNo DHCP option set\nto disable domain\n          name resolution for the VPC.\nChoose\nSave\n.\nTo change the DHCP option set associated with a VPC using the command line\nFor more information about these command line interfaces, see\nWorking with Amazon VPC\n.\nassociate-dhcp-options\n(AWS CLI)\nRegister-EC2DhcpOption\n(AWS Tools for Windows PowerShell)\nDelete a DHCP option set\nWhen you no longer need a DHCP option set, use the following procedure to delete it. You\n      can't delete a DHCP option set if it's in use. For each VPC associated with the DHCP option\n      set to delete, you must associate a different DHCP option set with the VPC or configure the\n      VPC to use no DHCP option set. For more information, see\nChange the option set associated with a VPC\n.\nTo delete a DHCP option set using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nDHCP option sets\n.\nSelect the radio button for the DHCP option set, and then choose\nActions\n,\nDelete DHCP option set\n.\nWhen prompted for confirmation, enter\ndelete\n, and then choose\nDelete DHCP option set\n.\nTo delete a DHCP option set using the command line\nFor more information about these command line interfaces, see\nWorking with Amazon VPC\n.\ndelete-dhcp-options\n(AWS CLI)\nRemove-EC2DhcpOption\n(AWS Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDHCP option set concepts\nDNS attributes\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html": "DNS attributes for your VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nAmazon DNS server\nDNS hostnames\nDNS attributes in your VPC\nDNS quotas\nView DNS hostnames for your EC2 instance\nView and update DNS attributes for your VPC\nPrivate hosted zones\nDNS attributes for your VPC\nDomain Name System (DNS) is a standard by which names used on the internet are resolved to\n    their corresponding IP addresses. A DNS hostname is a name that uniquely and absolutely names a\n    computer; it's composed of a host name and a domain name. DNS servers resolve DNS hostnames to\n    their corresponding IP addresses.\nPublic IPv4 addresses enable communication over the internet, while private IPv4 addresses\n    enable communication within the network of the instance. For more information, see\nIP addressing for your VPCs and subnets\n.\nAmazon provides a DNS server (\nthe Amazon Route\u00c2\u00a053 Resolver\n) for\n    your VPC. To use your own DNS server instead, create a new set of DHCP options for your VPC. For\n    more information, see\nDHCP option sets in Amazon VPC\n.\nContents\nAmazon DNS server\nDNS hostnames\nDNS attributes in your VPC\nDNS quotas\nView DNS hostnames for your EC2 instance\nView and update DNS attributes for your VPC\nPrivate hosted zones\nAmazon DNS server\nThe Route 53 Resolver (also called \"Amazon DNS server\" or \"AmazonProvidedDNS\") is a DNS\n      Resolver service which is built into each Availability Zone in an AWS Region. The Route 53\n      Resolver is located at\n169.254.169.253\n(IPv4),\nfd00:ec2::253\n(IPv6), and at the primary private IPV4 CIDR range provisioned to your VPC plus two. For\n      example, if you have a VPC with an IPv4 CIDR of\n10.0.0.0/16\nand an IPv6 CIDR of\nfd00:ec2::253\n,\n      you can reach the Route 53 Resolver at\n169.254.169.253\n(IPv4),\nfd00:ec2::253\n(IPv6), or\n10.0.0.2\n(IPv4).\nWhen you launch an instance into a VPC, we provide the instance with a private DNS\n      hostname. We also provide a public DNS hostname if the instance is configured with a public\n      IPv4 address and the VPC DNS attributes are enabled.\nThe format of the private DNS hostname depends on how you configure the EC2 instance when you launch it. For\n      more information on the types of private DNS hostnames, see\nEC2 instance naming\n.\nThe Amazon DNS server in your VPC is used to resolve the DNS domain names that you specify\n      in a private hosted zone in Route\u00c2\u00a053. For more information about private hosted zones, see\nWorking with private hosted\n        zones\nin the\nAmazon Route\u00c2\u00a053 Developer Guide\n.\nRules and considerations\nWhen using the Amazon DNS server, the following rules and considerations\n        apply.\nYou cannot filter traffic to or from the Amazon DNS server using network\n            ACLs or security groups.\nServices that use the Hadoop framework, such as Amazon EMR, require instances\n            to resolve their own fully qualified domain names (FQDN). In such cases, DNS\n            resolution can fail if the\ndomain-name-servers\noption is set to\n            a custom value. To ensure proper DNS resolution, consider adding a\n            conditional forwarder on your DNS server to forward queries for the domain\nregion-name\n.compute.internal\nto the Amazon DNS server. For more information, see\nSetting up a VPC to host\n              clusters\nin the\nAmazon EMR Management Guide\n.\nWindows Server 2008 disallows the use of a DNS server located in the link-local\n            address range (169.254.0.0/16).\nThe Amazon Route\u00c2\u00a053 Resolver only supports recursive DNS queries.\nDNS hostnames\nWhen you launch an instance, it always receives a private IPv4 address and a private\n      DNS hostname that corresponds to its private IPv4 address. If your instance has a public IPv4\n      address, the DNS attributes for its VPC determines whether it receives a public DNS hostname\n      that corresponds to the public IPv4 address. For more information, see\nDNS attributes in your VPC\n.\nWith the Amazon provided DNS server enabled, DNS hostnames are assigned and resolved as\n      follows.\nPrivate IP DNS name (IPv4 only)\nYou can use the Private IP DNS name (IPv4 only) hostname for communication between instances in the same VPC. You can resolve the Private IP DNS name (IPv4 only) hostnames of other instances in other VPCs as long as the instances are in the same AWS Region and the hostname of the other instance is in the private address space range defined by\nRFC 1918\n:\n10.0.0.0 - 10.255.255.255 (10/8 prefix)\n,\n172.16.0.0 - 172.31.255.255 (172.16/12 prefix)\n, and\n192.168.0.0 - 192.168.255.255 (192.168/16 prefix)\n.\nPrivate resource DNS name\nThe RBN-based DNS name that can resolve to the A and AAAA DNS records selected for this\n        instance. This DNS hostname is visible in the instance details for instances in dual-stack\n        and IPv6-only subnets. For more information about RBN, see\nEC2 instance hostname types\n.\nPublic IPv4 DNS\nA public (external) IPv4 DNS hostname takes the form\nec2-\npublic-ipv4-address\n.compute-1.amazonaws.com\nfor the\nus-east-1\nRegion, and\nec2-\npublic-ipv4-address\n.\nregion\n.compute.amazonaws.com\nfor other Regions. The Amazon DNS server resolves a public DNS hostname to the public IPv4\n        address of the instance outside the network of the instance, and to the private IPv4 address\n        of the instance from within the network of the instance. For more information, see\nPublic IPv4\n          addresses and external DNS hostnames\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nDNS attributes in your VPC\nThe following VPC attributes determine the DNS support provided for your VPC.\n      If both attributes are enabled, an instance launched into the VPC receives a public\n      DNS hostname if it is assigned a public IPv4 address or an Elastic IP address at \n      creation. If you enable both attributes for a VPC that didn't previously have them \n      both enabled, instances that were already launched into that VPC receive public DNS \n      hostnames if they have a public IPv4 address or an Elastic IP address.\nTo check whether these attributes are enabled for your VPC, see\nView and update DNS attributes for your VPC\n.\nAttribute\nDescription\nenableDnsHostnames\nDetermines whether the VPC supports assigning public DNS hostnames to\n                instances with public IP addresses.\nThe default for this attribute is\nfalse\nunless the VPC is a default VPC.\nenableDnsSupport\nDetermines whether the VPC supports DNS resolution through the Amazon provided\n                  DNS server.\nIf this attribute is\ntrue\n, queries to the Amazon provided DNS\n                  server succeed. For more information, see\nAmazon DNS server\n.\nThe default for this attribute is\ntrue\n.\nRules and considerations\nIf both attributes are set to\ntrue\n, the following occurs:\nInstances with public IP addresses receive corresponding public DNS\n              hostnames.\nThe Amazon Route\u00c2\u00a053 Resolver server can resolve Amazon-provided\n                            private DNS hostnames.\nIf at least one of the attributes is set to\nfalse\n, the\n                    following occurs:\nInstances with public IP addresses do not receive corresponding public\n              DNS hostnames.\nThe Amazon Route\u00c2\u00a053 Resolver cannot resolve Amazon-provided\n                            private DNS hostnames.\nInstances receive custom private DNS hostnames if there is a custom\n                            domain name in the\nDHCP options\n                                set\n. If you are not using the Amazon Route\u00c2\u00a053 Resolver\n                            server, your custom domain name servers must resolve the hostname as\n                            appropriate.\nIf you use custom DNS domain names defined in a private hosted zone in\n                    Amazon Route\u00c2\u00a053, or use private DNS with interface VPC endpoints (AWS PrivateLink),\n                    you must set both the\nenableDnsHostnames\nand\nenableDnsSupport\nattributes to\ntrue\n.\nThe Amazon Route\u00c2\u00a053 Resolver can resolve private DNS hostnames to\n                    private IPv4 addresses for all address spaces, including where the IPv4 address\n                    range of your VPC falls outside of the private IPv4 addresses ranges specified\n                    by\nRFC 1918\n. However,\n                    if you created your VPC before October 2016, the Amazon Route\u00c2\u00a053 Resolver\n                    does not resolve private DNS hostnames if your VPC's IPv4 address range falls\n                    outside of these ranges. To enable support for this, contact\nAWS Support\n.\nIf you use VPC peering, you must enable both attributes for both VPCs, and\n                 you must enable DNS resolution for the peering connection. For more information,\n                 see\nEnable DNS resolution for a VPC peering connection\n.\nDNS quotas\nEach EC2 instance can send 1024 packets per second per network interface to Route\u00c2\u00a053 Resolver \n            (specifically the .2 address, such as 10.0.0.2 and 169.254.169.253). This quota cannot be increased. \n            The number of DNS queries per second supported by Route\u00c2\u00a053 Resolver varies by the type of query, the size of the \n            response, and the protocol in use. For more information and recommendations for a scalable DNS architecture, \n            see the\nAWS Hybrid DNS with Active Directory\nTechnical Guide.\nIf you reach the quota, the Route\u00c2\u00a053 Resolver rejects traffic. Some of the causes for reaching\n      the quota might be a DNS throttling issue, or instance metadata queries that use the \n      Route\u00c2\u00a053 Resolver network interface. For information about how to solve VPC DNS\n      throttling issues, see\nHow can I determine whether my DNS queries to the Amazon provided DNS server are failing due\n        to VPC DNS throttling\n. For information about instance metadata retrieval, see\nRetrieve\n          instance metadata\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nView DNS hostnames for your EC2 instance\nYou can view the DNS hostnames for a running instance or a network interface using the \n        Amazon EC2 console or the command line.\nThe\nPublic DNS (IPv4)\nand\nPrivate DNS\nfields are\n            available when the DNS options are enabled for the VPC that is associated with the\n            instance. For more information, see\nDNS attributes in your VPC\n.\nInstance\nTo view DNS hostnames for an instance using the console\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\nIn the navigation pane, choose\nInstances\n.\nSelect your instance from the list.\nIn the details pane, the\nPublic DNS (IPv4)\nand\nPrivate DNS\nfields display the DNS hostnames, if\n            applicable.\nTo view DNS hostnames for an instance using the command line\nYou can use one of the following commands. For more information about these command line interfaces,\n          see\nWorking with Amazon VPC\n.\ndescribe-instances\n(AWS CLI)\nGet-EC2Instance\n(AWS Tools for Windows PowerShell)\nNetwork interface\nTo view the private DNS hostname for a network interface using the console\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\nIn the navigation pane, choose\nNetwork Interfaces\n.\nSelect the network interface from the list.\nIn the details pane, the\nPrivate DNS (IPv4)\nfield displays the\n            private DNS hostname.\nTo view DNS hostnames for a network interface using the command line\nYou can use one of the following commands. For more information about these command line interfaces,\n          see\nWorking with Amazon VPC\n.\ndescribe-network-interfaces\n(AWS CLI)\nGet-EC2NetworkInterface\n(AWS Tools for Windows PowerShell)\nView and update DNS attributes for your VPC\nYou can view and update the DNS support attributes for your VPC using the Amazon VPC console.\nTo describe and update DNS support for a VPC using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect the checkbox for the VPC.\nReview the information in\nDetails\n. In this example, both\nDNS hostnames\nand\nDNS resolution\nare\n          enabled.\nTo update these settings, choose\nActions\nand then choose\nEdit VPC settings\n. Select or clear\nEnable\non\n          the appropriate DNS attribute and choose\nSave changes\n.\nTo describe DNS support for a VPC using the command line\nYou can use one of the following commands. For more information about these command line interfaces,\n        see\nWorking with Amazon VPC\n.\ndescribe-vpc-attribute\n(AWS CLI)\nGet-EC2VpcAttribute\n(AWS Tools for Windows PowerShell)\nTo update DNS support for a VPC using the command line\nYou can use one of the following commands. For more information about these command line interfaces,\n        see\nWorking with Amazon VPC\n.\nmodify-vpc-attribute\n(AWS CLI)\nEdit-EC2VpcAttribute\n(AWS Tools for Windows PowerShell)\nPrivate hosted zones\nTo access the resources in your VPC using custom DNS domain names, such as\nexample.com\n,\n\t\t  instead of using private IPv4 addresses or AWS-provided private DNS\n            hostnames, you can create a private hosted zone in Route\u00c2\u00a053. A private hosted zone is a\n            container that holds information about how you want to route traffic for a domain and\n            its subdomains within one or more VPCs without exposing your resources to the internet.\n            You can then create Route\u00c2\u00a053 resource record sets, which determine how Route\u00c2\u00a053 responds to\n            queries for your domain and subdomains. For example, if you want browser requests for\n            example.com to be routed to a web server in your VPC, you'll create an A record in your\n            private hosted zone and specify the IP address of that web server. For more information\n            about creating a private hosted zone, see\nWorking with private hosted\n                zones\nin the\nAmazon Route\u00c2\u00a053 Developer Guide\n.\nTo access resources using custom DNS domain names, you must be connected to an instance\n      within your VPC. From your instance, you can test that your resource in your private hosted\n      zone is accessible from its custom DNS name by using the\nping\ncommand; for\n      example,\nping mywebserver.example.com\n. (You must ensure that your instance's\n      security group rules allow inbound ICMP traffic for the\nping\ncommand to\n      work.)\nPrivate hosted zones do not support transitive relationships outside of the VPC;\n      for example, you cannot access your resources using their custom private DNS names\n      from the other side of a VPN connection.\nImportant\nIf you use custom DNS domain names defined in a private hosted zone in Amazon Route\u00c2\u00a053, \n\t\t    you must set both the\nenableDnsHostnames\nand\nenableDnsSupport\nattributes to\ntrue\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWork with DHCP option sets\nNetwork Address Usage\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/network-address-usage.html": "Network Address Usage for your VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nHow NAU is calculated\nNAU examples\nNetwork Address Usage for your VPC\nNetwork Address Usage (NAU) is a metric applied to resources in your virtual network\n        to help you plan for and monitor the size of your VPC. Each NAU unit contributes to a \n        total that represents the size of your VPC.\nIt's important to understand the total number of units that make up the NAU of\n        your VPC because the following VPC quotas limit the size of a VPC:\nNetwork Address Usage\n\u00e2\u0080\u0093 \n                The maximum number of NAU units that a single VPC can have. Each VPC can have \n                up to 64,000 NAU units by default. You can request a quota increase up to \n                256,000.\nPeered Network Address Usage\n\u00e2\u0080\u0093 \n                The maximum number of NAU units for a VPC and all of its peered VPCs. If a \n                VPC is peered with other VPCs in the same Region, the VPCs combined can have \n                up to 128,000 NAU units by default. You can request a quota increase up to \n                512,000. VPCs that are peered across different Regions do not contribute to \n                this limit.\nYou can use the NAU in the following ways:\nBefore you create your virtual network, calculate the NAU units to help\n                you decide if you should spread workloads across multiple VPCs.\nAfter you\u00e2\u0080\u0099ve created your VPC, use Amazon CloudWatch to monitor the NAU usage of \n                the VPC so that it doesn't grow beyond the NAU quota limits. For more information,\n                see\nCloudWatch metrics for your VPCs\n.\nHow NAU is calculated\nIf you understand how NAU is calculated, it can help you plan for the scaling \n            of your VPCs.\nThe following table explains which resources make up the NAU count in a VPC and \n            how many NAU units each resource uses. Some AWS resources are represented as \n            single NAU units and some resources are represented as multiple NAU units. You \n            can use the table to learn how NAU is calculated.\nResource\nNAU units\nEach IPv4 and IPv6 address assigned to a network interface for an EC2\n                            instance in the VPC\n1\nAdditional network interfaces attached to an EC2 instance\n1\nPrefix assigned to a network interface\n1\nNetwork Load Balancer per AZ\n6\nVPC endpoint per AZ\n6\nTransit gateway attachment\n6\nLambda function\n6\nNAT gateway\n6\nEFS attached to an EC2 instance\n6\nNAU examples\nThe following examples show how to calculate NAU.\nExample 1 - Two VPCs connected using VPC peering\nPeered VPCs in the same Region contribute to a combined NAU quota.\nVPC 1\n50 Network Load Balancers in 2 subnets in separate Availability Zones - 600 NAU units\n5,000 instances (each with an IPv4 address and IPv6 address) in one\n                            subnet and 5,000 instances (each with an IPv4 address and IPv6 address)\n                            in another subnet - 20,000 units\n100 Lambda functions - 600 NAU units\nVPC 2\n50 Network Load Balancers in 2 subnets in separate Availability Zones - 600 NAU units\n5,000 instances (each with an IPv4 address and IPv6 address) in one\n                            subnet and 5,000 instances (each with an IPv4 address and IPv6 address)\n                            in another subnet - 20,000 units\n100 Lambda functions - 600 NAU units\nTotal peering NAU count: 42,400 units\nDefault peering NAU quota: 128,000 units\nExample 2 - Two VPCs connected using a transit gateway\nVPCs that are connected using a transit gateway do not contribute to a combined NAU quota \n                as they do for peered VPCs.\nVPC 1\n50 Network Load Balancers in 2 subnets in separate Availability Zones - 600 NAU units\n5,000 instances (each with an IPv4 address and IPv6 address) in one\n                            subnet and 5,000 instances (each with an IPv4 address and IPv6 address)\n                            in another subnet - 20,000 units\n100 Lambda functions - 600 NAU units\nVPC 2\n50 Network Load Balancers in 2 subnets in separate Availability Zones - 600 NAU units\n5,000 instances (each with an IPv4 address and IPv6 address) in one\n                            subnet and 5,000 instances (each with an IPv4 address and IPv6 address)\n                            in another subnet - 20,000 units\n100 Lambda functions - 600 NAU units\nTotal NAU count per VPC: 21,200 units\nDefault NAU quota per VPC: 64,000 units\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDNS attributes\nShare your VPC\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-sharing.html": "Share your VPC with other accounts - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nShared VPCs prerequisites\nShare a subnet\nUnshare a shared subnet\nIdentify the owner of a shared subnet\nManage VPC resources\nResponsibilities and permissions for owners and\n        participants\nAWS resources and shared VPC subnets\nVPC sharing quotas\nShare your VPC with other accounts\nVPC sharing allows multiple AWS accounts to create their application resources, such as\n    Amazon EC2 instances, Amazon Relational Database Service (RDS) databases, Amazon Redshift clusters, and AWS Lambda functions, into\n    shared, centrally-managed virtual private clouds (VPCs). In this model, the account that\n    owns the VPC (owner) shares one or more subnets with other accounts (participants) that belong\n    to the same organization from AWS Organizations. After a subnet is shared, the participants can view,\n    create, modify, and delete their application resources in the subnets shared with them.\n    Participants cannot view, modify, or delete resources that belong to other participants or the\n    VPC owner.\nYou can share your VPCs to leverage the implicit routing within a VPC for applications\n    that require a high degree of interconnectivity and are within the same trust boundaries. This\n    reduces the number of VPCs that you create and manage, while using separate accounts for billing\n    and access control. You can simplify network topologies by interconnecting shared Amazon VPCs\n    using connectivity features, such as AWS PrivateLink, transit gateways, and VPC peering.\n    For more information about the benefits of VPC sharing, see\nVPC sharing: A new approach to multiple accounts and VPC management\n.\nContents\nShared VPCs prerequisites\nShare a subnet\nUnshare a shared subnet\nIdentify the owner of a shared subnet\nManage VPC resources\nResponsibilities and permissions for owners and\n        participants\nAWS resources and shared VPC subnets\nVPC sharing quotas\nExample of sharing public subnets and private subnets\nShared VPCs prerequisites\nYou must enable resource sharing from the management account for your organization. For\n            information about enabling resource sharing, see\nEnable\n                sharing with AWS Organizations\nin the\nAWS RAM User Guide\n.\nShare a subnet\nYou can share non-default subnets with other accounts within your organization. To share\n            subnets, you must first create a Resource Share with the subnets to be shared and the\n            AWS accounts, organizational units, or an entire organization that you want to share the\n            subnets with. For information about creating a Resource Share, see\nCreating a resource share\nin the\nAWS RAM User Guide\n.\nTo share a subnet using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nSelect your subnet and choose\nActions\n,\nShare\n            subnet\n.\nSelect your resource share and choose\nShare subnet\n.\nTo share a subnet using the AWS CLI\nUse the\ncreate-resource-share\nand\nassociate-resource-share\ncommands.\nMap subnets across Availability Zones\nTo ensure that resources are distributed across the Availability Zones for a Region, \n        we independently map Availability Zones to names for each account. For example, the\n        Availability Zone\nus-east-1a\nfor your AWS account might not have the same \n        location as\nus-east-1a\nfor another AWS account.\nTo coordinate Availability Zones across accounts for VPC sharing, you must use an\nAZ ID\n, which is a unique and consistent identifier for an Availability \n        Zone. For example,\nuse1-az1\nis the AZ ID for one of the Availability Zones in \n        the\nus-east-1\nRegion. Use AZ IDs to determine the location of resources in one \n        account relative to another account. You can view the AZ ID for each subnet in the Amazon VPC\n        console.\nThe following diagram illustrates two accounts with different mappings of Availability \n        Zone code to AZ ID.\nUnshare a shared subnet\nThe owner can unshare a shared subnet with participants at any time. After the owner \n      unshares a shared subnet, the following rules apply:\nExisting participant resources continue to run in the unshared subnet. AWS managed \n          services (for example, Elastic Load Balancing) that have automated/managed workflows (such as auto scaling \n          or node replacement) may require continuous access to the shared subnet for some resources.\nParticipants can no longer create new resources in the unshared subnet.\nParticipants can modify, describe, and delete their resources that are in the\n          subnet.\nIf participants still have resources in the unshared subnet, the owner cannot delete\n          the shared subnet or the shared-subnet VPC. The owner can only delete the subnet or\n          shared-subnet VPC after the participants delete all the resources in the unshared\n          subnet.\nTo unshare a subnet using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nSelect your subnet and choose\nActions\n,\nShare\n            subnet\n.\nChoose\nActions\n,\nStop sharing\n.\nTo unshare a subnet using the AWS CLI\nUse the\ndisassociate-resource-share\ncommand.\nIdentify the owner of a shared subnet\nParticipants can view the subnets that have been shared with them by using the Amazon VPC\n      console, or the command line tool.\nTo identify a subnet owner using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n. The\nOwner\ncolumn displays the subnet owner.\nTo identify a subnet owner using the AWS CLI\nUse the\ndescribe-subnets\nand\ndescribe-vpcs\ncommands, which\n          include the ID of the owner in their output.\nManage VPC resources\nOwners and participants are responsible for the VPC resources that they own.\nOwner resources\nVPC owners are responsible for creating, managing, and deleting the resources associated\n        with a shared VPC. These include subnets, route tables, network ACLs, peering connections,\n        gateway endpoints, interface endpoints, Amazon Route\u00c2\u00a053 Resolver endpoints, internet\n        gateways, NAT gateways, virtual private gateways, and transit gateway attachments.\nParticipant resources\nParticipants can create a limited set of VPC resources in a shared VPC. For example,\n        participants can create network interfaces and security groups, and enable VPC flow logs for\n        the network interfaces that they own. The VPC resources that a participant creates count\n        against the VPC quotas in the participant account, not the owner account. For more information, see\nVPC sharing\n.\nBilling and metering for the owner and participants\nIn a shared VPC, each participant pays for their application resources including Amazon EC2\n        instances, Amazon Relational Database Service databases, Amazon Redshift clusters, and AWS Lambda functions. Participants also\n        pay for data transfer charges associated with inter-Availability Zone data transfer, data\n        transfer over VPC peering connections, and data transfer through an AWS Direct Connect gateway. VPC\n        owners pay hourly charges (where applicable), data processing and data transfer charges across\n        NAT gateways, virtual private gateways, transit gateways, AWS PrivateLink, and VPC endpoints.\n        Data transfer within the same Availability Zone (uniquely identified using the AZ-ID) is free\n        irrespective of account ownership of the communicating resources.\nResponsibilities and permissions for owners and\n        participants\nThe following responsibilities and permissions apply to VPC resources when working with shared VPC subnets:\nFlow logs\nParticipants cannot create, delete, or describe flow logs in a shared VPC subnet that they do not own.\nParticipants can create, delete, and describe flow logs in a shared VPC subnet that they own.\nVPC owners cannot describe or delete flow logs created by a particpant.\nInternet gateways and egress-only internet gateways\nParticipants cannot create, attach, or delete internet gateways and egress-only internet gateways in a shared VPC subnet. Participants can describe internet gateways and egress-only internet gateways in a shared VPC subnet.\nNAT gateways\nParticipants cannot create, delete, or describe NAT gateways in a shared VPC subnet.\nNetwork access control lists (NACLs)\nParticipants cannot create, delete, or replace NACLs in a shared VPC subnet. Participants can describe NACLs created by VPC owners in a shared VPC subnet.\nNetwork interfaces\nParticipants can create network interfaces in a shared VPC subnet. Participants cannot work with network interfaces created by VPC owners in a shared VPC subnet in any other way, such as attaching, detaching, or modifying the network interfaces. Participants can modify or delete the network interfaces in a shared VPC that they created. For example, participants can associate or disassociate IP addresses with the network interfaces that they created.\nVPC owners can describe network interfaces owned by particpants in a shared VPC subnet. VPC owners cannot work with network interfaces owned by particpants in any other way, such as attaching, detaching, or modifying the network interfaces owned by participants in a shared VPC subnet.\nRoute tables\nParticipants cannot work with route tables (for example, create, delete, or associate route tables) in a shared VPC subnet. Participants can describe route tables in a shared VPC subnet.\nSecurity groups\nParticipants can create, delete, describe, modify, or create ingress and egress rules for security groups in a shared VPC subnet. Participants cannot work with security groups created by VPC owners in any other way.\nParticipants can create rules in the security groups that they own that reference security groups that belong to other participants or the VPC owner as follows: account-number/security-group-id\nParticipants can't launch instances using security groups that are owned by the VPC owner or other participants. Participants can't launch instances using the default security group for the VPC because it belongs to the owner.\nVPC owners can describe the security groups created by participants in a shared VPC subnet. VPC owners cannot work with security groups created by particpants in any other way. For example, VPC owners can't launch instances using security groups created by participants.\nSubnets\nParticipants cannot modify shared subnets or their related attributes. Only the VPC owner can. Participants can describe subnets in a shared VPC subnet.\nVPC owners can share subnets only with other accounts or organizational units that are in the same organization from AWS Organizations. VPC owners can't share subnets that are in a default VPC.\nTransit gateways\nOnly the VPC owner can attach a transit gateway to a shared VPC subnet. Participants can't.\nVPCs\nParticipants cannot modify VPCs or their related attributes. Only the VPC owner can. Participants can describe VPCs, their attibutes, and the DHCP option sets.\nVPC tags and tags for the resources within the shared VPC are not shared with the participants.\nAWS resources and shared VPC subnets\nThe following AWS services support resources in shared VPC subnets. For more information\n      about how the service supports shared VPC subnets, follow the links to the corresponding\n      service documentation.\nAmazon Aurora\nAWS CodeBuild\nAWS Database Migration Service\nAmazon EC2\nAmazon Elastic Kubernetes Service\nElastic Load Balancing\nApplication Load Balancers\nGateway Load Balancers\nNetwork Load Balancers\nAmazon EMR\nAWS Glue\nAWS Lambda\nAWS Network Manager\nAWS Cloud WAN\nNetwork Access Analyzer\nReachability Analyzer\nAWS PrivateLink\n\u00e2\u0080\nAmazon Route\u00c2\u00a053\nAWS Transit Gateway\nAWS Verified Access\nAmazon VPC\nPeering\nTraffic Mirroring\nAmazon VPC Lattice\n\u00e2\u0080\nYou can connect to all AWS services that support PrivateLink using a VPC endpoint in a shared VPC. For a list of services that support PrivateLink, see\nAWS services that integrate with AWS PrivateLink\nin the\nAWS PrivateLink Guide\n.\nVPC sharing quotas\nThere are quotas related to VPC sharing. For more information, see\nVPC sharing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nNetwork Address Usage\nExample of sharing subnets\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/example-vpc-share.html": "Example of sharing public subnets and private subnets - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nExample of sharing public subnets and private subnets\nConsider this scenario where you want an account (Account A) to manage the infrastructure,\n\t\tincluding VPCs, subnets, route tables, gateways, and CIDR ranges, and other member accounts\n\t\tto use the subnets for their applications. Account D has applications that need to connect\n\t\tto the internet. Account B and Account C have applications that do not need to connect to\n\t\tthe internet.\nAccount A uses AWS Resource Access Manager to create a Resource Share for the subnets, and shares the public\n\t\tsubnet with Account D and the private subnet with Account B and Account C. Account B,\n\t\tAccount C, and Account D can create resources in the subnets. Each account can only see and\n\t\tcreate resources in the subnets that are shared with them. Each account can control the\n\t\tresources that they create in these subnets (for example, EC2 instances and security\n\t\tgroups).\nThere is no additional configuration required for shared subnets, so the route tables are the\n\t\tsame as unshared subnet route tables.\nAccount A (111111111111) shares the public subnet with Account D (444444444444).\n        Account D sees the following subnet, and the\nOwner\ncolumn provides two\n        indicators that the subnet is shared.\nThe owner account ID is Account A (111111111111), not Account D (444444444444).\nThe word \"shared\" appears beside the owner account ID.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nShare your VPC\nExtend a VPC to other Zones\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/Extend_VPCs.html": "Extend a VPC to a Local Zone, Wavelength Zone, or Outpost - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nSubnets in AWS Local Zones\nSubnets in AWS Wavelength\nSubnets in AWS Outposts\nExtend a VPC to a Local Zone, Wavelength Zone, or Outpost\nYou can host VPC resources, such as subnets, in multiple locations world-wide. These\n\t\tlocations are composed of Regions, Availability Zones, Local Zones, and Wavelength Zones.\n\t\tEach\nRegion\nis a separate geographic area.\nAvailability Zones are multiple, isolated locations within each Region.\nLocal Zones allow you to place resources, such as compute and storage, in multiple\n\t\t\t\tlocations closer to your end users.\nAWS Outposts brings native AWS services, infrastructure, and operating models to\n\t\t\t\tvirtually any data center, co-location space, or on-premises facility.\nWavelength Zones allow developers to build applications that deliver ultra-low\n\t\t\t\tlatencies to 5G devices and end users. Wavelength deploys standard AWS compute and\n\t\t\t\tstorage services to the edge of telecommunication carriers' 5G networks.\nAWS operates state-of-the-art, highly available data centers. Although rare, failures\n\t\tcan occur that affect the availability of instances that are in the same location. If you\n\t\thost all of your instances in a single location that is affected by a failure, none of your\n\t\tinstances would be available.\nTo help you determine which deployment is best for you, see\nAWS Wavelength FAQs\n.\nSubnets in AWS Local Zones\nAWS Local Zones allow you to place resources closer to your users, and seamlessly\n\t\t\tconnect to the full range of services in the AWS Region, using familiar APIs and tool\n\t\t\tsets. When you create a subnet in a Local Zone, you extend the VPC to that Local\n\t\t\tZone.\nTo use a Local Zone, you use the following process:\nOpt in to the Local Zone.\nCreate a subnet in the Local Zone.\nLaunch resources in the Local Zone subnet, so that your\n\t\t\t\t\tapplications are closer to your users.\nThe following diagram illustrates a VPC in the US West (Oregon) (\nus-west-2\n)\n\t\t\tRegion that spans Availability Zones and a Local Zone.\nWhen you create a VPC, you can choose to assign a set of Amazon-provided public IP addresses\n\t\t\tto the VPC. You can also set a network border group for the addresses that limits the\n\t\t\taddresses to the group. When you set a network border group, the IP addresses can't move\n\t\t\tbetween network border groups. Local Zone network traffic will go directly to the\n\t\t\tinternet or to points-of-presence (PoPs) without traversing the Local Zone's parent\n\t\t\tRegion, enabling access to low-latency computing. For the complete \n\t\t\tlist of Local Zones and their corresponding parent Regions, see\nAvailable Local Zones\nin the\nAWS Local Zones User Guide\n.\nThe following rules apply to Local Zones:\nThe Local Zone subnets follow the same routing rules as Availability Zone\n\t\t\t\t\tsubnets, including route tables, security groups, and network ACLs.\nOutbound internet traffic leaves a Local Zone from the Local Zone.\nYou must provision public IP addresses for use in a Local Zone. When you\n\t\t\t\t\tallocate addresses, you can specify the location from which the IP address is\n\t\t\t\t\tadvertised. We refer to this as a network border group, and you can set this\n\t\t\t\t\tparameter to limit the addresses to this location. After you provision the IP\n\t\t\t\t\taddresses, you cannot move them between the Local Zone and the parent Region\n\t\t\t\t\t(for example, from\nus-west-2-lax-1a\nto\nus-west-2\n).\nIf the Local Zone supports IPv6, you can request IPv6 Amazon-provided IP addresses and\n\t\t\t\t\tassociate them with the network border group for a new or existing VPC. For the\n\t\t\t\t\tlist of Local Zones that support IPv6, see\nConsiderations\nin the\nAWS Local Zones User\n\t\t\t\t\t\tGuide\nYou can't create VPC endpoints in Local Zone subnets.\nFor more information about working with Local Zones, see the\nAWS Local Zones User Guide\n.\nConsiderations for internet gateways\nTake the following information into account when you use internet gateways (in the parent\n\t\t\t\tRegion) in Local Zones:\nYou can use internet gateways in Local Zones with Elastic IP addresses or Amazon\n\t\t\t\t\t\tauto-assigned public IP addresses. The Elastic IP addresses that you\n\t\t\t\t\t\tassociate must include the network border group of the Local Zone. For more\n\t\t\t\t\t\tinformation, see\nAssociate Elastic IP addresses with resources in your VPC\n.\nYou cannot associate an Elastic IP address that is set for the Region.\nElastic IP addresses that are used in Local Zones have the same quotas as Elastic IP\n\t\t\t\t\t\taddresses in a Region. For more information, see\nElastic IP addresses\n.\nYou can use internet gateways in route tables that are associated with\n\t\t\t\t\t\tLocal Zone resources. For more information, see\nRouting to an internet gateway\n.\nAccess Local Zones using a Direct Connect gateway\nConsider the scenario where you want an on-premises data center to access resources that are\n\t\t\t\tin a Local Zone. You use a virtual private gateway for the VPC that's associated\n\t\t\t\twith the Local Zone to connect to a Direct Connect gateway. The Direct Connect\n\t\t\t\tgateway connects to an AWS Direct Connect location in a Region. The on-premises data center\n\t\t\t\thas an AWS Direct Connect connection to the AWS Direct Connect location.\nNote\nTraffic within the US that is destined for a subnet in a Local Zone using Direct Connect does not travel through the parent Region of the Local Zone. Instead, traffic takes the shortest path to the Local Zone. This decreases latency and helps make your applications more responsive.\nYou configure the following resources for this configuration:\nA virtual private gateway for the VPC that is associated with the Local Zone subnet. You\n\t\t\t\t\t\tcan view the VPC for the subnet on the subnet details page in the\n\t\t\t\t\t\tAmazon Virtual Private Cloud Console, or use\ndescribe-subnets\n.\nFor information about creating a virtual private gateway, see\nCreate a target gateway\nin the\nAWS Site-to-Site VPN User Guide\n.\nA Direct Connect connection. For the best latency performance, AWS recommends that you\n\t\t\t\t\t\tuse the\nDirect Connect location\nclosest to the Local Zone to which\n\t\t\t\t\t\tyou'll be extending your subnet.\nFor information about ordering a connection, see\nCross connects\nin the\nAWS Direct Connect User Guide\n.\nA Direct Connect gateway. For information about creating a Direct Connect gateway, see\nCreate a Direct Connect gateway\nin the\nAWS Direct Connect User\n\t\t\t\t\t\t\tGuide\n.\nA virtual private gateway association to connect the VPC to the Direct Connect gateway.\n\t\t\t\t\t\tFor information about creating a virtual private gateway association, see\nAssociating and disassociating virtual private gateways\nin the\nAWS Direct Connect User Guide\n.\nA private virtual interface on the connection from the AWS Direct Connect location to the\n\t\t\t\t\t\ton-premises data center. For information about creating a Direct Connect\n\t\t\t\t\t\tgateway, see\nCreating a private virtual interface to the Direct Connect gateway\nin the\nAWS Direct Connect User Guide\n.\nConnect Local Zone subnets to a transit gateway\nYou can't create a transit gateway attachment for a subnet in a Local Zone. The following\n\t\t\t\tdiagram shows how to configure your network so that subnets in the Local Zone\n\t\t\t\tconnect to a transit gateway through the parent Availability Zone. Create subnets in the Local\n\t\t\t\tZones and subnets in the parent Availability Zones. Connect the subnets in the\n\t\t\t\tparent Availability Zones to the transit gateway, and then create a route in the route table\n\t\t\t\tfor each VPC that routes traffic destined for the other VPC CIDR to the network\n\t\t\t\tinterface for the transit gateway attachment.\nNote\nTraffic destined for a subnet in a Local Zone that originates from a transit gateway will\n\t\t\t\t\tfirst traverse the parent Region.\nCreate the following resources for this scenario:\nA subnet in each parent Availability Zone. For more information, see\nCreate a subnet\n.\nA transit gateway. For more information, see\nCreate a\n\t\t\t\t\t\t\ttransit gateway\nin\nAmazon VPC Transit Gateways\n.\nA transit gateway attachment for each VPC using the parent Availability Zone. For more information,\n\t\t\t\t\t\tsee\nCreate a transit gateway attachment to a VPC\nin\nAmazon VPC Transit Gateways\n.\nA transit gateway route table associated with the transit gateway attachment. For more information, see\nTransit gateway \n\t\t\t\t\t\t\troute tables\nin\nAmazon VPC Transit Gateways\n.\nFor each VPC, an entry in the VPC route table that has the other VPC CIDR as the\n\t\t\t\t\t\tdestination, and the ID of the network interface for the transit gateway attachment as\n\t\t\t\t\t\tthe target. To find the network interface for the transit gateway attachment, search the \n\t\t\t\t\t\tdescriptions of your network interfaces for the ID of the transit gateway attachment. For \n\t\t\t\t\t\tmore information, see\nRouting for a transit gateway\n.\nThe following is an example route table for VPC 1.\nDestination\nTarget\nVPC 1 CIDR\nlocal\nVPC 2 CIDR\nvpc1-attachment-network-interface-id\nThe following is an example route table for VPC 2.\nDestination\nTarget\nVPC 2 CIDR\nlocal\nVPC 1 CIDR\nvpc2-attachment-network-interface-id\nThe following is an example of the transit gateway route table.\n\t\t\t\tThe CIDR blocks for each VPC propagate to the transit gateway route table.\nCIDR\nAttachment\nRoute type\nVPC 1 CIDR\nAttachment for VPC 1\npropagated\nVPC 2 CIDR\nAttachment for VPC 2\npropagated\nSubnets in AWS Wavelength\nAWS Wavelength\nallows developers to build applications that deliver\n\t\t\tultra-low latencies to mobile devices and end-users. Wavelength deploys standard AWS\n\t\t\tcompute and storage services to the edge of telecommunication carriers' 5G networks.\n\t\t\tDevelopers can extend a virtual private cloud (VPC) to one or more Wavelength\n\t\t\tZones, and then use AWS resources like Amazon EC2 instances to run applications that \n\t\t\trequire ultra-low latency and connect to AWS services in the Region.\nTo use a Wavelength Zones, you must first opt in to the Zone. Next, create a subnet in the\n\t\t\tWavelength Zone. You can create Amazon EC2 instances, Amazon EBS volumes, and Amazon VPC subnets and\n\t\t\tcarrier gateways in Wavelength Zones. You can also use services that orchestrate or work\n\t\t\twith EC2, EBS, and VPC, such as Amazon EC2 Auto Scaling, Amazon EKS clusters, Amazon ECS clusters, Amazon EC2 Systems Manager,\n\t\t\tAmazon CloudWatch, AWS CloudTrail, and AWS CloudFormation. The services in Wavelength are part of a\n\t\t\tVPC that is connected over a reliable, high bandwidth connection to an AWS Region for\n\t\t\teasy access to services including Amazon DynamoDB and Amazon RDS.\nThe following rules apply to Wavelength Zones:\nA VPC extends to a Wavelength Zone when you create a subnet in the VPC and\n\t\t\t\t\tassociate it with the Wavelength Zone.\nBy default, every subnet that you create in a VPC that spans a Wavelength Zone\n\t\t\t\t\tinherits the main VPC route table, including the local route.\nWhen you launch an EC2 instance in a subnet in a Wavelength Zone, you assign a\n\t\t\t\t\tcarrier IP address to it. The carrier gateway uses the address for traffic from\n\t\t\t\t\tthe interface to the internet, or mobile devices. The carrier gateway uses NAT\n\t\t\t\t\tto translate the address, and then sends the traffic to the destination. Traffic\n\t\t\t\t\tfrom the telecommunication carrier network routes through the carrier\n\t\t\t\t\tgateway.\nYou can set the target of a VPC route table, or subnet route table in a Wavelength Zone to\n\t\t\t\t\ta carrier gateway, which allows inbound traffic from a carrier network in a\n\t\t\t\t\tspecific location, and outbound traffic to the carrier network and internet. For\n\t\t\t\t\tmore information about routing options in a Wavelength Zone, see\nRouting\nin the\nAWS Wavelength Developer Guide\n.\nSubnets in Wavelength Zones have the same networking components as subnets in\n\t\t\t\t\t\tAvailability Zones, including IPv4 addresses, DHCP option sets, and network\n\t\t\t\t\t\tACLs.\nYou can't create a transit gateway attachment to a subnet in a Wavelength Zone. Instead, create the\n\t\t\t\t\tattachment through a subnet in the parent Availability Zone, and then route\n\t\t\t\t\ttraffic to the desired destinations through the transit gateway. For an example, see the\n\t\t\t\t\tnext section.\nConsiderations for multiple Wavelength Zones\nEC2 instances that are in different Wavelength Zones in the same VPC are not allowed\n\t\t\t\tto communicate with each other. If you need Wavelength Zone to Wavelength Zone\n\t\t\t\tcommunication, AWS recommends that you use multiple VPCs, one for each\n\t\t\t\tWavelength Zone. You can use a transit gateway to connect the VPCs. This\n\t\t\t\tconfiguration enables communication between instances in the Wavelength\n\t\t\t\tZones.\nWavelength Zone to Wavelength Zone traffic routes through the AWS Region. For more\n\t\t\t\tinformation, see\nAWS Transit Gateway\n.\nThe following diagram shows how to configure your network so that instances in two\n\t\t\t\tdifferent Wavelength Zones can communicate.  You have two Wavelength Zones\n\t\t\t\t(Wavelength Zone A and Wavelength Zone B). You need to create the following\n\t\t\t\tresources to enable communication:\nFor each Wavelength Zone, a subnet in an Availability Zone that is the parent\n\t\t\t\t\t\tAvailability Zone for the Wavelength Zone. In the example, you create subnet\n\t\t\t\t\t\t1 and subnet 2. For information about creating subnets, see\nCreate a subnet\n.  Use\ndescribe-availability-zones\nto find the parent zone.\nA transit gateway. The transit gateway connects the VPCs. For information about creating a transit gateway, see\nCreate a\n\t\t\t\t\t\t\ttransit gateway\nin the\nAmazon VPC Transit Gateways\n\t\t\t\t\t\t\tGuide\n.\nFor each VPC, a VPC attachment to the transit gateway in the parent Availability Zone of the\n\t\t\t\t\t\tWavelength Zone. For more  information, see\nTransit gateway\n\t\t\t\t\t\t\tattachments to a VPC\nin the\nAmazon VPC Transit Gateways\n\t\t\t\t\t\t\tGuide\n.\nEntries for each VPC in the transit gateway route table. For information about creating\n\t\t\t\t\t\ttransit gateway routes, see\nTransit gateway route\n\t\t\t\t\t\t\ttables\nin the\nAmazon VPC Transit Gateways Guide\n.\nFor each VPC, an entry in the VPC route table that has the other VPC CIDR as the\n\t\t\t\t\t\tdestination, and the transit gateway ID as the target. For more information, see\nRouting for a transit gateway\n.\nIn the example, the route table for VPC 1 has the following entry:\nDestination\nTarget\n10.1.0.0/24\ntgw-22222222222222222\nThe route table for VPC 2 has the following entry:\nDestination\nTarget\n10.0.0.0/24\ntgw-22222222222222222\nSubnets in AWS Outposts\nAWS Outposts offers you the same AWS hardware infrastructure, services, APIs, and tools to\n\t\t\tbuild and run your applications on premises and in the cloud. AWS Outposts is ideal for\n\t\t\tworkloads that need low latency access to on-premises applications or systems, and for\n\t\t\tworkloads that need to store and process data locally. For more information about AWS Outposts,\n\t\t\tsee\nAWS Outposts\n.\nA VPC spans all Availability Zones in an AWS Region. After you connect\n\t\t\tyour Outpost to its parent Region, you can extend any VPC in the Region to your\n\t\t\tOutpost by creating a subnet for the Outpost in that VPC.\nThe following rules apply to AWS Outposts:\nThe subnets must reside in one Outpost location.\nYou create a subnet for an Outpost by specifying the Amazon Resource Name\n\t\t\t\t\t(ARN) of the Outpost when you create the subnet.\nOutposts rack - A local gateway handles the network connectivity between your VPC \n\t\t\t\t\tand on-premises networks. For more information, see\nLocal gateways\nin the\nAWS Outposts User Guide for Outposts rack\n.\nOutposts servers - A local network interface handles the network connectivity between \n\t\t\t\t\tyour VPC and on-premises networks. For more information, see\nLocal network interfaces\nin the\nAWS Outposts User Guide for Outposts servers\n.\nBy default, every subnet that you create in a VPC, including subnets for your \n\t\t\t\t\tOutposts, is implicitly associated with the main route table for the VPC.\n\t\t\t\t\tAlternatively, you can explicitly associate a custom route table with the \n\t\t\t\t\tsubnets in your VPC and have a local gateway as a next-hop target for all \n\t\t\t\t\ttraffic destined for your on-premises network.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExample of sharing subnets\nDelete your VPC\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/delete-vpc.html": "Delete your VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nDelete using the console\nDelete using the CLI\nDelete your VPC\nWhen you are finished with a VPC, you can delete it.\nRequirement\nBefore you can delete a VPC, you must first terminate or delete any resources that created a\nrequester-managed network interface\nin the VPC. For example, you must terminate your EC2 instances and delete your load balancers,\n\t\t\tNAT gateways, transit gateway VPC attachments, and interface VPC endpoints.\nContents\nDelete a VPC using the console\nDelete a VPC using the command line\nDelete a VPC using the console\nIf you delete a VPC using the Amazon VPC console, we also delete the following VPC components \n\t\t\tfor you:\nDHCP options\nEgress-only internet gateways\nGateway endpoints\nInternet gateways\nNetwork ACLs\nRoute tables\nSecurity groups\nSubnets\nTo delete your VPC using the console\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\nTerminate all instances in the VPC. For more information, see\nTerminate Your\n\t\t\t\t\tInstance\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect the VPC to delete and choose\nActions\n,\nDelete VPC\n.\nIf there are resources that you must delete or terminate before we can \n\t\t\t\t\tdelete the VPC, we display them. Delete or terminate these resources and \n\t\t\t\t\tthen try again. Otherwise, we display the resources that we will delete \n\t\t\t\t\tin addition to the VPC. Review the list and then proceed to the next \n\t\t\t\t    step.\n(Optional) If you have a Site-to-Site VPN connection, you can select the option \n\t\t\t\t\tto delete it. If you plan to use the customer gateway with another VPC, \n\t\t\t\t\twe recommend that you keep the Site-to-Site VPN connection and the gateways. Otherwise, \n\t\t\t\t\tyou must configure your customer gateway device again after you create a \n\t\t\t\t\tnew Site-to-Site VPN connection.\nWhen prompted for confirmation, enter\ndelete\nand \n\t\t\t\t\tthen choose\nDelete\n.\nDelete a VPC using the command line\nBefore you can delete a VPC using the command line, you must terminate or delete any\n\t\t\tresources that created a requester-managed network interface in the VPC. You must also\n\t\t\tdelete or detach all VPC resources that you created, such as subnets, security groups,\n\t\t\tnetwork ACLs, route tables, internet gateways, and egress-only internet gateways. You do\n\t\t\tnot need to delete the default security group, default route table, or default network\n\t\t\tACL.\nThe following procedure demonstrates the commands that you use to delete common VPC\n\t\t\tresources and then to delete your VPC. You must use these commands in this order. If you\n\t\t\tcreated additional VPC resources, you'll also need to use their corresponding delete\n\t\t\tcommand before you can delete the VPC.\nTo delete a VPC by using the AWS CLI\nDelete your security group by using the\ndelete-security-group\ncommand.\naws ec2 delete-security-group --group-id\nsg-id\nDelete each network ACL by using the\ndelete-network-acl\ncommand.\naws ec2 delete-network-acl --network-acl-id\nacl-id\nDelete each subnet by using the\ndelete-subnet\ncommand.\naws ec2 delete-subnet --subnet-id\nsubnet-id\nDelete each custom route table by using the\ndelete-route-table\ncommand.\naws ec2 delete-route-table --route-table-id\nrtb-id\nDetach your internet gateway from your VPC by using the\ndetach-internet-gateway\ncommand.\naws ec2 detach-internet-gateway --internet-gateway-id\nigw-id\n--vpc-id\nvpc-id\nDelete your internet gateway by using the\ndelete-internet-gateway\ncommand.\naws ec2 delete-internet-gateway --internet-gateway-id\nigw-id\n[Dual stack VPC] Delete your egress-only internet gateway by using the\ndelete-egress-only-internet-gateway\ncommand.\naws ec2 delete-egress-only-internet-gateway --egress-only-internet-gateway-id\neigw-id\nDelete your VPC by using the\ndelete-vpc\ncommand.\naws ec2 delete-vpc --vpc-id\nvpc-id\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExtend a VPC to other Zones\nSubnets\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/configure-subnets.html": "Subnets for your VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nSubnet basics\nSubnet security\nSubnets for your VPC\nA\nsubnet\nis a range of IP addresses in your VPC.\n        You can create AWS resources, such as EC2 instances, in specific subnets.\nContents\nSubnet basics\nSubnet security\nCreate a subnet\nConfigure your subnets\nSubnet CIDR reservations\nRoute tables\nDelete a subnet\nSubnet basics\nEach subnet must reside entirely within one Availability Zone and cannot span zones. By \n            launching AWS resources in separate Availability Zones, you can protect your applications \n            from the failure of a single Availability Zone.\nContents\nSubnet IP address range\nSubnet types\nSubnet diagram\nSubnet routing\nSubnet settings\nSubnet IP address range\nWhen you create a subnet, you specify its IP addresses, depending on the configuration of\n                the VPC:\nIPv4 only\n\u00e2\u0080\u0093 The subnet has an IPv4 CIDR block but does\n                        not have an IPv6 CIDR block. Resources in an IPv4-only subnet must communicate over IPv4.\nDual stack\n\u00e2\u0080\u0093 The subnet has both an IPv4 CIDR block and \n                        an IPv6 CIDR block. The VPC must have both an IPv4 CIDR block and an IPv6 CIDR\n                        block. Resources in a dual-stack subnet can communicate over IPv4 and IPv6.\nIPv6 only\n\u00e2\u0080\u0093 The subnet has an IPv6 CIDR block but does\n                        not have an IPv4 CIDR block. The VPC must have an IPv6 CIDR block. Resources in an IPv6-only \n                        subnet must communicate over IPv6.\nNote\nResources in IPv6-only subnets are assigned IPv4\nlink-local\naddresses from CIDR block\n169.254.0.0/16\n. These addresses are used to communicate with VPC services like\nInstance Metadata Service (IMDS)\n.\nFor more information, see\nIP addressing for your VPCs and subnets\n.\nSubnet types\nThe subnet type is determined by how you configure routing for your subnets. For\n                example:\nPublic subnet\n\u00e2\u0080\u0093 The subnet has a direct\n                        route to an\ninternet gateway\n.\n                        Resources in a public subnet can access the public internet.\nPrivate subnet\n\u00e2\u0080\u0093 The subnet does not have a\n                        direct route to an internet gateway. Resources in a private subnet require a\nNAT device\nto access the public\n                        internet.\nVPN-only subnet\n\u00e2\u0080\u0093 The subnet has a route to a\nSite-to-Site VPN connection\nthrough a virtual private \n                        gateway. The subnet does not have a route to an internet gateway.\nIsolated subnet\n\u00e2\u0080\u0093 The subnet has no\n                        routes to destinations outside its VPC. Resources in an isolated subnet can\n                        only access or be accessed by other resources in the same VPC.\nSubnet diagram\nThe following diagram shows two VPCs in a Region. Each VPC has public and private\n                subnets and an internet gateway. You can optionally add subnets in a Local Zone, \n                as shown in the diagram. A Local Zone is an AWS infrastructure deployment that places \n                compute, storage, and database services closer to your end users. When you use a \n                Local Zone, your end users can run applications that require single-digit millisecond \n                latencies. For more information, see\nAWS Local Zones\n.\nSubnet routing\nEach subnet must be associated with a route table, which specifies the allowed routes\n                for outbound traffic leaving the subnet. Every subnet that you create is automatically\n                associated with the main route table for the VPC. You can change the association, and you can\n                change the contents of the main route table. For more information, see\nConfigure route tables\n.\nSubnet settings\nAll subnets have a modifiable attribute that determines whether a network interface\n                created in that subnet is assigned a public IPv4 address and, if applicable, an IPv6 address.\n                This includes the primary network interface (eth0) that's created for an instance when you\n                launch an instance in that subnet. Regardless of the subnet attribute, you can still override \n                this setting for a specific instance during launch.\nAfter you create a subnet, you can modify the following settings for the subnet:\nAuto-assign IP settings\n: Enables you to configure the\n                    auto-assign IP settings to automatically request a public IPv4 or IPv6\n                    address for a new network interface in this subnet.\nResource-based Name (RBN) settings\n: Enables you to specify\n                    the hostname type for EC2 instances in this subnet and configure how DNS A\n                    and AAAA record queries are handled. For more information, see\nAmazon EC2 instance hostname types\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nSubnet security\nTo protect your AWS resources, we recommend that you use private subnets.\n            Use a bastion host or NAT device to provide internet access to resources,\n            such as EC2 instances, in a private subnet.\nAWS provides features that you can use to increase security for the resources in your VPC.\nSecurity groups\nallow inbound and outbound traffic for associated resources, such as EC2 instances.\nNetwork ACLs\nallow or deny inbound and outbound traffic at the subnet level. \n    In most cases, security groups can meet your needs. However, you can use network ACLs if you want an additional layer of security. \n    For more information, see\nCompare security groups and network ACLs\n.\nBy design, each subnet must be associated with a network ACL. Every subnet that you\n            create is automatically associated with the default network ACL for the VPC. The default\n            network ACL allows all inbound and outbound traffic. You can update the default network\n            ACL, or create custom network ACLs and associate them with your subnets. For more\n            information, see\nControl traffic to subnets using network ACLs\n.\nYou can create a flow log on your VPC or subnet to capture the traffic that flows to and\n            from the network interfaces in your VPC or subnet. You can also create a flow log on an\n            individual network interface. For more information, see\nLogging IP traffic using VPC Flow Logs\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDelete your VPC\nCreate a subnet\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/create-subnets.html": "Create a subnet - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nCreate a subnet\nUse the following procedure to create subnets for your virtual private cloud (VPC). \n\t\tDepending on the connectivity that you need, you might also need to add gateways and \n\t\troute tables.\nConsiderations\nYou must specify an IPv4 CIDR block for the subnet from the range of your VPC.\n\t\t\t\tYou can optionally specify an IPv6 CIDR block for a subnet if there is an \n\t\t\t\tIPv6 CIDR block associated with the VPC. For more information, see\nIP addressing for your VPCs and subnets\n.\nIf you create an IPv6-only subnet, be aware of the following. An EC2 instance \n\t\t\t\tlaunched in an IPv6-only subnet receives an IPv6 address but not an IPv4 address. \n\t\t\t\tAny instances that you launch into an IPv6-only subnet must be\ninstances built \n\t\t\t\t\ton the Nitro System\n.\nTo create the subnet in a Local Zone or a Wavelength Zone, you must enable the \n\t\t\t\tZone. For more information, see\nRegions and Zones\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nTo add a subnet to your VPC\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nChoose\nCreate subnet\n.\nUnder\nVPC ID\n, choose the VPC for the subnet.\n(Optional) For\nSubnet name\n, enter a name for\n\t\t\t\tyour subnet. Doing so creates a tag with a key of\nName\nand the value that you specify.\nFor\nAvailability Zone\n, you can choose a Zone \n\t\t\t\tfor your subnet, or leave the default\nNo Preference\nto let AWS choose one for you.\nIf the subnet should be an IPv6-only subnet, choose\nIPv6-only\n.\n\t\t\t\tThis option is only available if the VPC has an associated IPv6 CIDR block.\n\t\t\t\tIf you choose this option, you can't associate an IPv4 CIDR block \n\t\t\t\twith the subnet.\nFor\nIPv4 CIDR block\n, enter an IPv4 CIDR block for your\n\t\t\t\tsubnet. For example,\n10.0.1.0/24\n. If you chose\nIPv6-only\n, \n\t\t\t\tthis option is unavailable.\n(Optional) For\nIPv6 CIDR block\n, choose the VPC's IPv6 CIDR that you\n\t\t\t\twant to create a subnet in. This option is available only if the VPC has an\n\t\t\t\tassociated IPv6 CIDR block. Enter an\nIPv6 CIDR\nand choose a\n\t\t\t\tnetmask length for the subnet that's equal to or more specific than the netmask\n\t\t\t\tlength of the VPC CIDR. For example, if the VPC pool CIDR is /50, you can choose a\n\t\t\t\tnetmask length between\n/50\nto\n/64\nfor the\n\t\t\t\tsubnet. Possible IPv6 netmask lengths are between\n/44\nand\n/64\nin increments of /4.\nChoose\nCreate subnet\n.\nTo add a subnet to your VPC using the AWS CLI\nUse the\ncreate-subnet\ncommand.\nNext steps\nAfter you create a subnet, you can configure it as follows:\nConfigure routing. You can then create a custom route table and route \n\t\t\t\tthat send traffic to a gateway that's associated with the VPC, such as \n\t\t\t\tan internet gateway. For more information, see\nConfigure route tables\n.\nModify the subnet IP addresses. For more information, see\nConfigure your subnets\n.\nModify the IP addressing behavior. You can specify whether instances launched \n\t\t\t\tin the subnet receive a public IPv4 address, an IPv6 address, or both.\n\t\t\t\tFor more information, see\nSubnet settings\n.\nModify the resource-based name (RBN) settings. For more information, see\nAmazon EC2 instance hostname types\n.\nCreate or modify your network ACLs. For more information,\n\t\t\t\tsee\nControl traffic to subnets using network ACLs\n.\nShare the subnet with other accounts. For more information, see\nShare a subnet\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSubnets\nConfigure your subnets\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html": "Configure your subnets - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nView your subnets\nAdd an IPv6 CIDR block to your subnet\nRemove an IPv6 CIDR block from your subnet\nModify the public IPv4 addressing attribute for your subnet\nModify the IPv6 addressing attribute for your subnet\nConfigure your subnets\nUse the following procedures to configure subnets for your virtual private cloud (VPC).\nTasks\nView your subnets\nAdd an IPv6 CIDR block to your subnet\nRemove an IPv6 CIDR block from your subnet\nModify the public IPv4 addressing attribute for your subnet\nModify the IPv6 addressing attribute for your subnet\nView your subnets\nUse the following steps section to view the details about your subnet.\nTo view subnet details using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nSelect the checkbox for the subnet or choose the subnet ID to open the detail page.\nTo describe a subnet using the AWS CLI\nUse the\ndescribe-subnets\ncommand.\nTo view your subnets across all Regions\nOpen the Amazon EC2 Global View console at\nhttps://console.aws.amazon.com/ec2globalview/home\n. For more information, see\nList and filter resources \n  \t\t\t\t\tusing the Amazon EC2 Global View\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nAdd an IPv6 CIDR block to your subnet\nYou can associate an IPv6 CIDR block with an existing subnet in your VPC. The\n\t\t\t\tsubnet must not have an existing IPv6 CIDR block associated with it.\nTo add an IPv6 CIDR block to a subnet\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nSelect your subnet and choose\nActions\n,\nEdit IPv6 CIDRs\n.\nChoose\nAdd IPv6 CIDR\n.\nChoose a\nVPC CIDR block\n, enter a\nSubnet CIDR\n\t\t\t\t\t\tblock\n, and choose a netmask length that's equal to or more\n\t\t\t\t\tspecific than the netmask length of the VPC CIDR. For example, if the VPC pool\n\t\t\t\t\tCIDR is /50, you can choose a netmask length between\n/50\nto\n/64\nfor the subnet. Possible IPv6 netmask lengths are\n\t\t\t\t\tbetween\n/44\nand\n/64\nin increments of\n\t\t\t\t\t/4.\nChoose\nSave\n.\nTo associate an IPv6 CIDR block with a subnet using the AWS CLI\nUse the\nassociate-subnet-cidr-block\ncommand.\nRemove an IPv6 CIDR block from your subnet\nIf you no longer want IPv6 support in your subnet, but you want to continue\n\t\t\t\tto use your subnet to create and communicate with IPv4 resources, you can\n\t\t\t\tremove the IPv6 CIDR block.\nBefore you can remove an IPv6 CIDR block, you must first unassign any IPv6 addresses\n\t\t\t\tthat are assigned to any instances in your subnet.\nTo remove an IPv6 CIDR block from a subnet\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nSelect the subnet and choose\nActions\n,\nEdit IPv6\n                            CIDRs\n.\nFind the IPv6 CIDR block and choose\nRemove\n.\nChoose\nSave\n.\nTo disassociate an IPv6 CIDR block from a subnet using the AWS CLI\nUse the\ndisassociate-subnet-cidr-block\ncommand.\nModify the public IPv4 addressing attribute for your subnet\nBy default, nondefault subnets have the IPv4 public addressing attribute set to\nfalse\n, and default subnets have this attribute set to\ntrue\n. An\n\t\t\texception is a nondefault subnet created by the Amazon EC2 launch instance wizard \u00e2\u0080\u0094 the\n\t\t\twizard sets the attribute to\ntrue\n. You can modify this attribute using the\n\t\t\tAmazon VPC console.\nTo modify your subnet's public IPv4 addressing behavior\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nSelect your subnet and choose\nActions\n,\nEdit subnet settings\n.\nThe\nEnable auto-assign public IPv4 address\ncheck box, if\n\t\t\t\t\tselected, requests a public IPv4 address for all instances launched into the selected\n\t\t\t\t\tsubnet. Select or clear the check box as required, and then choose\nSave\n.\nTo modify a subnet attribute using the AWS CLI\nUse the\nmodify-subnet-attribute\ncommand.\nModify the IPv6 addressing attribute for your subnet\nBy default, all subnets have the IPv6 addressing attribute set to\nfalse\n.\n\t\t\tYou can modify this attribute using the Amazon VPC console. If you enable the IPv6 addressing\n\t\t\tattribute for your subnet, network interfaces created in the subnet receive an IPv6 address\n\t\t\tfrom the range of the subnet. Instances launched into the subnet receive an IPv6 address on\n\t\t\tthe primary network interface.\nYour subnet must have an associated IPv6 CIDR block.\nNote\nIf you enable the IPv6 addressing feature for your subnet, your network interface or instance\n\t\t\tonly receives an IPv6 address if it's created using version\n2016-11-15\nor\n\t\t\tlater of the Amazon EC2 API. The Amazon EC2 console uses the latest API version.\nTo modify your subnet's IPv6 addressing behavior\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nSelect your subnet and choose\nActions\n,\nEdit subnet settings\n.\nThe\nEnable auto-assign IPv6 address\ncheck box, if selected,\n\t\t\t\t\trequests an IPv6 address for all network interfaces created in the selected subnet.\n\t\t\t\t\tSelect or clear the check box as required, and then choose\nSave\n.\nTo modify a subnet attribute using the AWS CLI\nUse the\nmodify-subnet-attribute\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a subnet\nSubnet CIDR reservations\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/subnet-cidr-reservation.html": "Subnet CIDR reservations - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nWork with subnet CIDR reservations using the console\nWork with subnet CIDR reservations using the AWS CLI\nSubnet CIDR reservations\nA\nsubnet CIDR reservation\nis a range of IPv4 or IPv6 addresses that you\n\t\tset aside so that AWS can't assign them to your network interfaces. This enables you to\n\t\treserve IPv4 or IPv6 CIDR blocks (also called \"prefixes\") for use with your network\n\t\tinterfaces.\nWhen you create a subnet CIDR reservation, you specify how you will use the reserved IP\n\t\taddresses. The following options are available:\nPrefix\n\u00e2\u0080\u0094 AWS assigns addresses from the reserved\n\t\t\t\tIP address range to network interfaces. For more information, see\nAssign\n\t\t\t\t\tprefixes to Amazon EC2 network interfaces\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nExplicit\n\u00e2\u0080\u0094 You manually assign IP addresses to\n\t\t\t\tnetwork interfaces.\nThe following rules apply to subnet CIDR reservations:\nWhen you create a subnet CIDR reservation, the IP address range can include addresses\n\t\t\t    that are already in use. Creating a subnet reservation does not unassign any IP addresses \n\t\t\t    that are already in use.\nYou can reserve multiple CIDR ranges per subnet. When you reserve multiple CIDR ranges \n\t\t\t\twithin the same VPC, the CIDR ranges cannot overlap.\nWhen you reserve more than one range in a subnet for Prefix Delegation, and Prefix\n\t\t\t\tDelegation is configured for automatic assignment, we choose the IP addresses to assign\n\t\t\t\tto network interfaces at random.\nWhen you delete a subnet reservation, the unused IP addresses are available for AWS to\n\t\t\t\tassign to your network interfaces. Deleting a subnet reservation does not unassign\n\t\t\t\tany IP addresses that are in use.\nFor more information about Classless Inter-Domain Routing (CIDR) notation, see\nIP addressing for your VPCs and subnets\n.\nWork with subnet CIDR reservations using the console\nYou can create and manage subnet CIDR reservations as follows.\nTo edit subnet CIDR reservations\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nSelect the subnet.\nChoose the\nCIDR reservations\ntab to get information about\n    \t\t\t\tany existing subnet CIDR reservations.\nTo add or remove subnet CIDR reservations, choose\nActions\n,\nEdit CIDR reservations\nand then do the following:\nTo add an IPv4 CIDR reservation, choose\nIPv4\n,\nAdd IPv4 CIDR reservation\n.\n    \t\t\t\t\t\tChoose the reservation type, enter the CIDR range, and choose\nAdd\n.\nTo add an IPv6 CIDR reservation, choose\nIPv6\n,\nAdd IPv6 CIDR reservation\n.\n    \t\t\t\t\t\tChoose the reservation type, enter the CIDR range, and choose\nAdd\n.\nTo remove a CIDR reservation, choose\nRemove\nfor the subnet\n\t\t\t\t\t\t\tCIDR reservation.\nWork with subnet CIDR reservations using the AWS CLI\nYou can use the AWS CLI to create and manage subnet CIDR reservations.\nTasks\nCreate a subnet CIDR reservation\nView subnet CIDR reservations\nDelete a subnet CIDR reservation\nCreate a subnet CIDR reservation\nYou can use\ncreate-subnet-cidr-reservation\nto create a subnet CIDR reservation.\naws ec2 create-subnet-cidr-reservation --subnet-id\nsubnet-03c51e2eEXAMPLE\n--reservation-type prefix --cidr\n2600:1f13:925:d240:3a1b::/80\nThe following is example output.\n{\n\"SubnetCidrReservation\":\n{\n\"SubnetCidrReservationId\": \"scr-044f977c4eEXAMPLE\",\n        \"SubnetId\": \"subnet-03c51e2ef5EXAMPLE\",\n        \"Cidr\": \"2600:1f13:925:d240:3a1b::/80\",\n        \"ReservationType\": \"prefix\",\n        \"OwnerId\": \"123456789012\"\n    }\n}\nView subnet CIDR reservations\nYou can use\nget-subnet-cidr-reservations\nto view the details of a subnet CIDR reservation.\naws ec2 get-subnet-cidr-reservations --subnet-id\nsubnet-05eef9fb78EXAMPLE\nDelete a subnet CIDR reservation\nYou can use\ndelete-subnet-cidr-reservation\nto delete a subnet CIDR reservation.\naws ec2 delete-subnet-cidr-reservation --subnet-cidr-reservation-id\nscr-044f977c4eEXAMPLE\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConfigure your subnets\nRoute tables\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html": "Configure route tables - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nRoute table concepts\nSubnet route tables\nGateway route tables\nRoute priority\nRoute table quotas\nConfigure route tables\nA\nroute table\ncontains a set of rules, called\nroutes\n, that determine where network traffic from your\n        subnet or gateway is directed.\nContents\nRoute table concepts\nSubnet route tables\nGateway route tables\nRoute priority\nRoute table quotas\nExample routing options\nWork with route tables\nMiddlebox routing wizard\nRoute table concepts\nThe following are the key concepts for route tables.\nMain route table\n\u00e2\u0080\u0094The route table that\n                    automatically comes with your VPC. It controls the routing for all subnets that\n                    are not explicitly associated with any other route table.\nCustom route table\n\u00e2\u0080\u0094A route table that\n                    you create for your VPC.\nDestination\n\u00e2\u0080\u0094The range of IP addresses\n                    where you want traffic to go (destination CIDR). For example, an external\n                    corporate network with the CIDR\n172.16.0.0/12\n.\nTarget\n\u00e2\u0080\u0094The gateway, network interface,\n                    or connection through which to send the destination traffic; for example, an\n                    internet gateway.\nRoute table association\n\u00e2\u0080\u0094The\n                    association between a route table and a subnet, internet gateway, or virtual\n                    private gateway.\nSubnet route table\n\u00e2\u0080\u0094A route table\n                    that's associated with a subnet.\nLocal route\n\u00e2\u0080\u0094A default route for\n                    communication within the VPC.\nPropagation\n\u00e2\u0080\u0094If you've attached a\n                    virtual private gateway to your VPC and enable route propagation, we\n                    automatically add routes for your VPN connection to your subnet route tables.\n                    This means that you don't need to manually add or remove VPN routes. For more\n                    information, see\nSite-to-Site VPN routing\n                        options\nin the\nSite-to-Site VPN User Guide\n.\nGateway route table\n\u00e2\u0080\u0094A route table\n                    that's associated with an internet gateway or virtual private gateway.\nEdge association\n\u00e2\u0080\u0094A route table that\n                    you use to route inbound VPC traffic to an appliance. You associate a route\n                    table with the internet gateway or virtual private gateway, and specify the\n                    network interface of your appliance as the target for VPC traffic.\nTransit gateway route table\n\u00e2\u0080\u0094A route\n                    table that's associated with a transit gateway. For more information, see\nTransit gateway\n                    route tables\nin\nAmazon VPC Transit Gateways\n.\nLocal gateway route table\n\u00e2\u0080\u0094A route\n                    table that's associated with an Outposts local gateway. For more information,\n                    see\nLocal\n                        gateways\nin the\nAWS Outposts User Guide\n.\nSubnet route tables\nYour VPC has an implicit router, and you use route tables to control where network\n            traffic is directed. Each subnet in your VPC must be associated with a route table,\n            which controls the routing for the subnet (subnet route table). You can explicitly\n            associate a subnet with a particular route table. Otherwise, the subnet is implicitly\n            associated with the main route table. A subnet can only be associated with one route\n            table at a time, but you can associate multiple subnets with the same subnet route\n            table.\nContents\nRoutes\nMain route table\nCustom route tables\nSubnet route table association\nRoutes\nEach route in a table specifies a destination and a target. For example, to enable\n                your subnet to access the internet through an internet gateway, add the following\n                route to your subnet route table. The destination for the route is\n0.0.0.0/0\n, \n                which represents all IPv4 addresses. The target is the internet gateway that's attached \n                to your VPC.\nDestination\nTarget\n0.0.0.0/0\nigw-id\nCIDR blocks for IPv4 and IPv6 are treated separately. For example, a route with a\n                destination CIDR of\n0.0.0.0/0\ndoes not automatically include all IPv6\n                addresses. You must create a route with a destination CIDR of\n::/0\nfor\n                all IPv6 addresses.\nIf you frequently reference the same set of CIDR blocks across your AWS resources,\n                you can create a\ncustomer-managed prefix\n                    list\nto group them together. You can then specify the prefix list as the\n                destination in your route table entry.\nEvery route table contains a local route for communication within the VPC. This\n                route is added by default to all route tables. If your VPC has more than one IPv4\n                CIDR block, your route tables contain a local route for each IPv4 CIDR block. If\n                you've associated an IPv6 CIDR block with your VPC, your route tables contain a\n                local route for the IPv6 CIDR block. You can\nreplace or restore\nthe target of each local route as needed.\nRules and considerations\nYou can add a route to your route tables that is more specific than the local route. \n                        The destination must match the entire IPv4 or IPv6 CIDR block of a subnet in your VPC.\n                        The target must be a NAT gateway, network interface, or Gateway Load Balancer endpoint.\nIf your route table has multiple routes, we use the most specific route that\n                        matches the traffic (longest prefix match) to determine how to route the\n                        traffic.\nYou can't add routes to IPv4 addresses that are an exact match or a subset of the \n                        following range: 169.254.168.0/22. This range is within the link-local address space\n                        and is reserved for use by AWS services. For example, Amazon EC2 uses addresses in this \n                        range for services that are accessible only from EC2 instances, such as the Instance \n                        Metadata Service (IMDS) and the Amazon DNS server. You can use a CIDR block that is \n                        larger than but overlaps 169.254.168.0/22, but packets destined for addresses in  \n                        169.254.168.0/22 will not be forwarded.\nYou can't add routes to IPv6 addresses that are an exact match or a subset of the\n                        following range: fd00:ec2::/32. This range is within the unique local address (ULA)\n                        space and is reserved for use by AWS services. For example, Amazon EC2 uses addresses \n                        in this range for services that are accessible only from EC2 instances, such as the \n                        Instance Metadata Service (IMDS) and the Amazon DNS server. You can use a CIDR block \n                        that is  larger than but overlaps fd00:ec2::/32, but packets destined for addresses in  \n                        fd00:ec2::/32 will not be forwarded.\nYou can add middlebox appliances to the routing paths for your VPC. For more\n                        information, see\nRouting for a middlebox appliance\n.\nExample\nIn the following example, suppose that the VPC has both an IPv4 CIDR block and an \n                    IPv6 CIDR block. IPv4 and IPv6 traffic are treated separately, as shown in the \n                    following route table.\nDestination\nTarget\n10.0.0.0/16\nLocal\n2001:db8:1234:1a00::/56\nLocal\n172.31.0.0/16\npcx-11223344556677889\n0.0.0.0/0\nigw-12345678901234567\n::/0\neigw-aabbccddee1122334\nIPv4 traffic to be routed within the VPC (10.0.0.0/16) \n                        is covered by the Local route.\nIPv6 traffic to be routed within the VPC (2001:db8:1234:1a00::/56) \n                        is covered by the Local route.\nThe route for 172.31.0.0/16 sends traffic to a peering connection.\nThe route for all IPv4 traffic (0.0.0.0/0) sends traffic to an\n                        internet gateway. Therefore, all IPv4 traffic, except for traffic\n                        within the VPC and to the peering connection, is routed to the\n                        internet gateway.\nThe route for all IPv6 traffic (::/0) sends traffic to an \n                        egress-only internet gateway. Therefore, all IPv6 traffic, except\n                        for traffic within the VPC, is routed to the egress-only internet\n                        gateway.\nMain route table\nWhen you create a VPC, it automatically has a main route table. When a subnet does not have an explicit routing table associated with it, the main routing table is used by default. \n                On the\nRoute tables\npage in the Amazon VPC\n                console, you can view the main route table for a VPC by looking for\nYes\nin the\nMain\ncolumn.\nBy default, when you create a nondefault VPC, the main route table contains only a\n                local route. If you\nCreate a VPC\nand choose \n                a NAT gateway, Amazon VPC  automatically adds routes to the main route table for the gateways.\nThe following rules apply to the main route table:\nYou can add, remove, and modify routes in the main route table.\nYou can't delete the main route table.\nYou can't set a gateway route table as the main route table.\nYou can replace the main route table by associating a custom route\n                        table with a subnet.\nYou can explicitly associate a subnet with the main route table, even if\n                        it's already implicitly associated.\nYou might want to do that if you change which table is the main route\n                        table. When you change which table is the main route table, it also changes\n                        the default for additional new subnets, or for any subnets that are not\n                        explicitly associated with any other route table. For more information, see\nReplace the main route table\n.\nCustom route tables\nBy default, a route table contains a local route for communication within the\n                VPC. If you\nCreate a VPC\nand choose a\n                public subnet, Amazon VPC creates a custom route table and adds a route that points to\n                the internet gateway. One way to protect your VPC is to leave the main route table\n                in its original default state. Then, explicitly associate each new subnet that you\n                create with one of the custom route tables you've created. This ensures that you\n                explicitly control how each subnet routes traffic.\nYou can add, remove, and modify routes in a custom route table. You can delete a\n                custom route table only if it has no associations.\nSubnet route table association\nEach subnet in your VPC must be associated with a route table. A subnet can be\n                explicitly associated with custom route table, or implicitly or explicitly\n                associated with the main route table. For more information about viewing your subnet\n                and route table associations, see\nDetermine which subnets and or gateways are explicitly\n                    associated\n.\nSubnets that  are in VPCs associated with Outposts can have an additional target\n                type of a local gateway. This is the only routing difference from non-Outposts\n                subnets.\nExample 1: Implicit and explicit subnet association\nThe following diagram shows the routing for a VPC with an internet gateway, a\n                    virtual private gateway, a public subnet, and a VPN-only subnet.\nRoute table A is a custom route table that is explicitly associated with the\n                public subnet. It has a route that sends all traffic to the internet gateway, which\n                is what makes the subnet a public subnet.\nDestination\nTarget\nVPC CIDR\nLocal\n0.0.0.0/0\nigw-id\nRoute table B is the main route table. It is implicitly associated with the\n                private subnet. It has a route that sends all traffic to the virtual private\n                gateway, but no route to the internet gateway, which is what makes the subnet a\n                VPN-only subnet. If you create another subnet in this VPC and don't associate a\n                custom route table, the subnet will also be implicitly associated with this route\n                table because it is the main route table.\nDestination\nTarget\nVPC CIDR\nLocal\n0.0.0.0/0\nvgw-id\nExample 2: Replacing the main route table\nYou might want to make changes to the main route table. To avoid any disruption to\n                    your traffic, we recommend that you first test the route changes using a custom\n                    route table. After you're satisfied with the testing, you can replace the main route\n                    table with the new custom table.\nThe following diagram shows two subnets and two route tables. Subnet A is\n                implicitly associated with route table A, the main route table. Subnet B is\n                implicitly associated with route table A. Route table B, a custom route table, isn't\n                associated with either subnet.\nTo replace the main route table, start by creating an explicit association between\n                subnet B and route table B. Test route table B.\nAfter you've tested route table B, make it the main route table. Subnet B still\n                has an explicit association with route table B. However, subnet A now has an\n                implicit association with route table B, because route table B is the new main route\n                table. Route table A is no longer associated with either subnet.\n(Optional) If you disassociate subnet B from route table B, there is still an\n                implicit association between subnet B and route table B. If you no longer need route\n                table A, you can delete it.\nGateway route tables\nYou can associate a route table with an internet gateway or a virtual private\n            gateway. When a route table is associated with a gateway, it's referred to as a\ngateway route table\n. You can create a gateway\n            route table for fine-grain control over the routing path of traffic entering your\n            VPC. For example, you can intercept the traffic that enters your VPC through an\n            internet gateway by redirecting that traffic to a middlebox appliance (such as a\n            security appliance) in your VPC.\nContents\nGateway route table routes\nRules and considerations\nGateway route table routes\nA gateway route table associated with an internet gateway supports routes with\n                the following targets:\nThe default local route\nA\nGateway Load Balancer endpoint\nA network interface for a middlebox appliance\nA gateway route table associated with a virtual private gateway supports routes\n                with the following targets:\nThe default local route\nA\nGateway Load Balancer endpoint\nA network interface for a middlebox appliance\nWhen the target is a Gateway Load Balancer endpoint or a network interface, the following destinations \n                are allowed:\nThe entire IPv4 or IPv6 CIDR block of your VPC. In this case, you replace\n                        the target of the default local route.\nThe entire IPv4 or IPv6 CIDR block of a subnet in your VPC. This is a more\n                        specific route than the default local route.\nIf you change the target of the local route in a gateway route table to a network\n                interface in your VPC, you can later restore it to the default\nlocal\ntarget. For more information, see\nReplace or restore the target for a local route\n.\nExample\nIn the following gateway route table, traffic destined for a subnet with the\n172.31.0.0/20\nCIDR block is routed to a specific network interface.\n                Traffic destined for all other subnets in the VPC uses the local route.\nDestination\nTarget\n172.31.0.0/16\nLocal\n172.31.0.0/20\neni-id\nExample\nIn the following gateway route table, the target for the local route is replaced\n                with a network interface ID. Traffic destined for all subnets within the VPC is\n                routed to the network interface.\nDestination\nTarget\n172.31.0.0/16\neni-id\nRules and considerations\nYou cannot associate a route table with a gateway if any of the following\n                applies:\nThe route table contains existing routes with targets other than a network\n                        interface, Gateway Load Balancer endpoint, or the default local route.\nThe route table contains existing routes to CIDR blocks outside of the\n                        ranges in your VPC.\nRoute propagation is enabled for the route table.\nIn addition, the following rules and considerations apply:\nYou cannot add routes to any CIDR blocks outside of the ranges in your\n                        VPC, including ranges larger than the individual VPC CIDR blocks.\nYou can only specify\nlocal\n, a Gateway Load Balancer endpoint, or a network\n                        interface as a target. You cannot specify any other types of targets,\n                        including individual host IP addresses. For more information, see\nExample routing options\n.\nYou cannot specify a prefix list as a destination.\nYou cannot use a gateway route table to control or intercept traffic\n                        outside of your VPC, for example, traffic through an attached transit\n                        gateway. You can intercept traffic that enters your VPC and redirect it\n                        to another target in the same VPC only.\nTo ensure that traffic reaches your middlebox appliance, the target\n                        network interface must be attached to a running instance. For traffic\n                        that flows through an internet gateway, the target network interface\n                        must also have a public IP address.\nWhen configuring your middlebox appliance, take note of the\nappliance\n                        considerations\n.\nWhen you route traffic through a middlebox appliance, the return\n                        traffic from the destination subnet must be routed through the same\n                        appliance. Asymmetric routing is not supported.\nRoute table rules apply to all traffic that leaves a subnet. Traffic\n                        that leaves a subnet is defined as traffic destined to that subnet's\n                        gateway router's MAC address. Traffic that is destined for the MAC\n                        address of another network interface in the subnet makes use of data\n                        link (layer 2) routing instead of network (layer 3) so the rules do not\n                        apply to this traffic.\nRoute priority\nIn general, we direct traffic using the most specific route that matches the traffic.\n            This is known as the longest prefix match. If your route table has overlapping or\n            matching routes, additional rules apply.\nContents\nLongest prefix match\nRoute priority and propagated routes\nRoute priority and prefix\n                    lists\nLongest prefix match\nRoutes to IPv4 and IPv6 addresses or CIDR blocks are independent of each other. We use\n              the most specific route that matches either IPv4 traffic or IPv6 traffic to determine\n              how to route the traffic.\nThe following example subnet route table has a route for IPv4 internet traffic\n                    (\n0.0.0.0/0\n) that points to an internet gateway, and a route for\n172.31.0.0/16\nIPv4 traffic that points to a peering connection\n                    (\npcx-11223344556677889\n). Any traffic from the subnet that's\n                destined for the\n172.31.0.0/16\nIP address range uses the peering\n                connection, because this route is more specific than the route for internet gateway.\n                Any traffic destined for a target within the VPC (\n10.0.0.0/16\n) is\n                covered by the\nlocal\nroute, and therefore is routed within the VPC. All\n                other traffic from the subnet uses the internet gateway.\nDestination\nTarget\n10.0.0.0/16\nlocal\n172.31.0.0/16\npcx-11223344556677889\n0.0.0.0/0\nigw-12345678901234567\nRoute priority and propagated routes\nIf you've attached a virtual private gateway to your VPC and enabled route\n                propagation on your subnet route table, routes representing your Site-to-Site VPN connection\n                automatically appear as propagated routes in your route table.\nIf the destination of a propagated \n              route overlaps a static route, the static route takes priority.\nIf the destination of a propagated route is identical to the destination of a static\n                route, the static route takes priority if the target is one of the following:\ninternet gateway\nNAT gateway\nNetwork interface\nInstance ID\nGateway VPC endpoint\nTransit gateway\nVPC peering connection\nGateway Load Balancer endpoint\nFor more information, see\nRoute tables and VPN route priority\nin the\nAWS Site-to-Site VPN User Guide\n.\nThe following example route table has a static route to an internet gateway and a\n                propagated route to a virtual private gateway. Both routes have a destination of\n172.31.0.0/24\n. Because a static route to an internet gateway takes\n                priority, all traffic destined for\n172.31.0.0/24\nis routed to the\n                internet gateway.\nDestination\nTarget\nPropagated\n10.0.0.0/16\nlocal\nNo\n172.31.0.0/24\nvgw-11223344556677889\nYes\n172.31.0.0/24\nigw-12345678901234567\nNo\nRoute priority and prefix\n                    lists\nIf your route table references a prefix list, the following rules apply:\nIf your route table contains a static route with a destination CIDR block\n                        that overlaps a static route with a prefix list, the static route with the\n                        CIDR block takes priority.\nIf your route table contains a propagated route that matches a route that references a prefix list, the route that references the prefix list takes priority. Please note that for routes that overlap, more specific routes always take priority irrespective of whether they are propagated routes, static routes, or routes that reference prefix lists.\nIf your route table references multiple prefix lists that have overlapping\n                        CIDR blocks to different targets, we randomly choose which route takes\n                        priority. Thereafter, the same route always takes priority.\nRoute table quotas\nThere is a quota on the number of route tables that you can create per VPC. There is\n            also a quota on the number of routes that you can add per route table. For more\n            information, see\nAmazon VPC quotas\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSubnet CIDR reservations\nExample routing options\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/route-table-options.html": "Example routing options - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nRouting to an internet gateway\nRouting to a NAT device\nRouting to a virtual private gateway\nRouting to an AWS Outposts local gateway\nRouting to a VPC peering connection\nRouting to a gateway VPC endpoint\nRouting to an egress-only internet gateway\nRouting for a transit gateway\nRouting for a middlebox appliance\nRouting using a prefix list\nRouting to a Gateway Load Balancer endpoint\nExample routing options\nThe following topics describe routing for specific gateways or connections in your VPC.\nContents\nRouting to an internet gateway\nRouting to a NAT device\nRouting to a virtual private gateway\nRouting to an AWS Outposts local gateway\nRouting to a VPC peering connection\nRouting to a gateway VPC endpoint\nRouting to an egress-only internet gateway\nRouting for a transit gateway\nRouting for a middlebox appliance\nRouting using a prefix list\nRouting to a Gateway Load Balancer endpoint\nRouting to an internet gateway\nYou can make a subnet a public subnet by adding a route in your subnet route table to an\n                internet gateway. To do this, create and attach an internet gateway to your VPC, and\n                then add a route with a destination of\n0.0.0.0/0\nfor IPv4 traffic or\n::/0\nfor IPv6 traffic, and a target of the internet gateway ID\n                    (\nigw-xxxxxxxxxxxxxxxxx\n).\nDestination\nTarget\n0.0.0.0/0\nigw-id\n::/0\nigw-id\nFor more information, see\nConnect to the internet using an internet gateway\n.\nRouting to a NAT device\nTo enable instances in a private subnet to connect to the internet, you can create a NAT\n                gateway or launch a NAT instance in a public subnet. Then add a route for the\n                private subnet's route table that routes IPv4 internet traffic\n                    (\n0.0.0.0/0\n) to the NAT device.\nDestination\nTarget\n0.0.0.0/0\nnat-gateway-id\nYou can also create more specific routes to other targets to avoid unnecessary\n                data processing charges for using a NAT gateway, or to route certain traffic\n                privately. In the following example, Amazon S3 traffic (pl-xxxxxxxx, a prefix list that\n                contains the IP address ranges for Amazon S3 in a specific Region) is routed to a gateway\n                VPC endpoint, and 10.25.0.0/16 traffic is routed to a VPC peering connection. These\n                IP address ranges are more specific than 0.0.0.0/0. When instances send traffic to\n                Amazon S3 or the peer VPC, the traffic is sent to the gateway VPC endpoint or the VPC\n                peering connection. All other traffic is sent to the NAT gateway.\nDestination\nTarget\n0.0.0.0/0\nnat-gateway-id\npl-\nxxxxxxxx\nvpce-id\n10.25.0.0/16\npcx-id\nFor more information, see\nNAT devices\n.\nRouting to a virtual private gateway\nYou can use an AWS Site-to-Site VPN connection to enable instances in your VPC to communicate with\n                your own network. To do this, create and attach a virtual private gateway to your\n                VPC. Then add a route in your subnet route table with the destination of your\n                network and a target of the virtual private gateway\n                    (\nvgw-xxxxxxxxxxxxxxxxx\n).\nDestination\nTarget\n10.0.0.0/16\nvgw-id\nYou can then create and configure your Site-to-Site VPN connection. For more information, see\nWhat is\n                    AWS Site-to-Site VPN?\nand\nRoute tables and VPN route priority\nin the\nAWS Site-to-Site VPN User\n                    Guide\n.\nA Site-to-Site VPN connection on a virtual private gateway does not support IPv6 traffic. However,\n                we support IPv6 traffic routed through a virtual private gateway to an AWS Direct Connect\n                connection. For more information, see the\nAWS Direct Connect User Guide\n.\nRouting to an AWS Outposts local gateway\nThis section describes routing table configurations for routing to an AWS Outposts local gateway.\nContents\nEnable traffic between Outpost subnets and your on-premises network\nEnable traffic between subnets in the same VPC across Outposts\nEnable traffic between Outpost subnets and your on-premises network\nSubnets that are in VPCs associated with AWS Outposts can have an additional target\n                    type of a local gateway. Consider the case where you want to have the local gateway\n                    route traffic with a destination address of  192.168.10.0/24 to the customer\n                    network. To do this, add the following route with the destination network and a\n                    target of the local gateway (\nlgw-xxxx\n).\nDestination\nTarget\n192.168.10.0/24\nlgw-id\nEnable traffic between subnets in the same VPC across Outposts\nYou can establish communication between subnets that are in the same VPC across different Outposts using Outpost local gateways and your on-premise network.\nYou can use this feature to build  architectures similar to multi-Availability Zone (AZ) architectures for your on-premise applications running on Outposts racks by establishing connectivity between Outposts racks that are anchored to different AZs.\nTo enable this feature, add a route to your Outpost rack subnet route table that is more specific than the local route in that route table and has a target type of local gateway. The destination of the route must match the entire IPv4 block of the subnet in your VPC that is in another Outpost. Repeat this configuration for all the Outpost subnets that need to communicate.\nImportant\nTo use this feature, you must use\ndirect VPC routing\n. You cannot use your own\ncustomer-owned IP addresses\n.\nYour on-premise network that the Outposts local gateways are connected to must have the required routing so that subnets can access to each other.\nIf you want to use security groups for resources in the subnets, you must use rules that include IP address ranges as source or destination in the Outpost subnets. You cannot use security group IDs.\nExisting Outposts racks may require an update to enable support for intra-VPC communication\n                                across multiple Outposts. If this feature doesn't work for you,\ncontact AWS\n                                    Support\n.\nExample\nFor a VPC with a CIDR of 10.0.0.0/16, an Outpost 1 subnet with a CIDR of 10.0.1.0/24, and an Outpost 2 subnet with a CIDR of 10.0.2.0/24, the entry for Outpost 1 subnet\u00e2\u0080\u0099s route table would be as follows:\nDestination\nTarget\n10.0.0.0/16\nLocal\n10.0.2.0/24\nlgw-1-id\nThe entry for Outpost 2 subnet\u00e2\u0080\u0099s route table would be as follows:\nDestination\nTarget\n10.0.0.0/16\nLocal\n10.0.1.0/24\nlgw-2-id\nRouting to a VPC peering connection\nA VPC peering connection is a networking connection between two VPCs that allows you to\n        route traffic between them using private IPv4 addresses. Instances in either VPC can\n        communicate with each other as if they are part of the same network.\nTo enable the routing of traffic between VPCs in a VPC peering connection, you must add\n                a route to one or more of your subnet route tables that points to the VPC peering\n                connection. This allows you to access all or part of the CIDR block of the other VPC\n                in the peering connection. Similarly, the owner of the other VPC must add a route to\n                their subnet route table to route traffic back to your VPC.\nFor example, you have a VPC peering connection (\npcx-11223344556677889\n)\n                between two VPCs, with the following information:\nVPC A: CIDR block is 10.0.0.0/16\nVPC B: CIDR block is 172.31.0.0/16\nTo enable traffic between the VPCs and allow access to the entire IPv4 CIDR block of\n        either VPC, the VPC A route table is configured as follows.\nDestination\nTarget\n10.0.0.0/16\nLocal\n172.31.0.0/16\npcx-11223344556677889\nThe VPC B route table is configured as follows.\nDestination\nTarget\n172.31.0.0/16\nLocal\n10.0.0.0/16\npcx-11223344556677889\nYour VPC peering connection can also support IPv6 communication between instances in the\n                VPCs, if the VPCs and instances are enabled for IPv6 communication. To\n                enable the routing of IPv6 traffic between VPCs, you must add a route to your route\n                table that points to the VPC peering connection to access all or part of the IPv6\n                CIDR block of the peer VPC.\nFor example, using the same VPC peering connection (\npcx-11223344556677889\n)\n                above, assume the VPCs have the following information:\nVPC A: IPv6 CIDR block is\n2001:db8:1234:1a00::/56\nVPC B: IPv6 CIDR block is\n2001:db8:5678:2b00::/56\nTo enable IPv6 communication over the VPC peering connection, add the following route to\n                the subnet route table for VPC A.\nDestination\nTarget\n10.0.0.0/16\nLocal\n172.31.0.0/16\npcx-11223344556677889\n2001:db8:5678:2b00::/56\npcx-11223344556677889\nAdd the following route to the route table for VPC B.\nDestination\nTarget\n172.31.0.0/16\nLocal\n10.0.0.0/16\npcx-11223344556677889\n2001:db8:1234:1a00::/56\npcx-11223344556677889\nFor more information about VPC peering connections, see the\nAmazon VPC Peering Guide\n.\nRouting to a gateway VPC endpoint\nA gateway VPC endpoint enables you to create a private connection between your VPC and\n                another AWS service. When you create a gateway endpoint, you specify the subnet\n                route tables in your VPC that are used by the gateway endpoint. A route is\n                automatically added to each of the route tables with a destination that specifies\n                the prefix list ID of the service\n                    (\npl-\nxxxxxxxx\n), and a target with the\n                endpoint ID (\nvpce-\nxxxxxxxxxxxxxxxxx\n). You\n                cannot explicitly delete or modify the endpoint route, but you can change the route\n                tables that are used by the endpoint.\nFor more information about routing for endpoints, and the implications for routes to\n              AWS services, see\nRouting for \n                  gateway endpoints\n.\nRouting to an egress-only internet gateway\nYou can create an egress-only internet gateway for your VPC to enable instances in a\n                private subnet to initiate outbound communication to the internet, but prevent the\n                internet from initiating connections with the instances. An egress-only internet\n                gateway is used for IPv6 traffic only. To configure routing for an egress-only\n                internet gateway, add a route in the private subnet's route table that routes IPv6\n                internet traffic (\n::/0\n) to the egress-only internet gateway.\nDestination\nTarget\n::/0\neigw-id\nFor more information, see\nEnable outbound IPv6 traffic using an egress-only internet gateway\n.\nRouting for a transit gateway\nWhen you attach a VPC to a transit gateway, you need to add a route to your subnet route table for\n                traffic to route through the transit gateway.\nConsider the following scenario where you have three VPCs that are attached to a transit gateway.\n        In this scenario, all attachments are associated with the transit gateway route table and propagate to\n        the transit gateway route table. Therefore, all attachments can route packets to each other, with the\n        transit gateway serving as a simple layer 3 IP hub.\nFor example, you have two VPCs, with the following information:\nVPC A: 10.1.0.0/16, attachment ID tgw-attach-11111111111111111\nVPC B: 10.2.0.0/16, attachment ID tgw-attach-22222222222222222\nTo enable traffic between the VPCs and allow access to the transit gateway, the VPC A route table\n                is configured as follows.\nDestination\nTarget\n10.1.0.0/16\nlocal\n10.0.0.0/8\ntgw-id\nThe following is an example of the transit gateway route table entries for the VPC\n                attachments.\nDestination\nTarget\n10.1.0.0/16\ntgw-attach-11111111111111111\n10.2.0.0/16\ntgw-attach-22222222222222222\nFor more information about transit gateway route tables, see\nRouting\nin\nAmazon VPC Transit Gateways\n.\nRouting for a middlebox appliance\nYou can add middlebox appliances into the routing paths for your VPC. The following are \n            possible use cases:\nIntercept traffic that enters your VPC through an internet gateway or a\n                    virtual private gateway by directing it to a middlebox appliance in your VPC. \n                    You can use the middlebox routing wizard to have AWS automatically configure the \n                    appropriate route tables for your gateway, middlebox, and destination subnet. \n                    For more information, see\nMiddlebox routing wizard\n.\nDirect traffic between two subnets to a middlebox appliance. You can do so \n                    by creating a route for one subnet route table that matches the subnet CIDR \n                    of the other subnet and specifies a Gateway Load Balancer endpoint, NAT gateway, Network Firewall endpoint, or \n                    the network interface for an appliance as a target. Alternatively, to redirect \n                    all traffic from the subnet to any other subnet, replace the target of the \n                    local route with a Gateway Load Balancer endpoint, NAT gateway, or network interface.\nYou can configure the appliance to suit your needs. For example, you can configure\n            a security appliance that screens all traffic, or a WAN acceleration appliance. The\n            appliance is deployed as an Amazon EC2 instance in a subnet in your VPC, and is\n            represented by an elastic network interface (network interface) in your\n            subnet.\nIf you enable route propagation for the destination subnet route table, be aware \n            of route priority. We prioritize the most specific route, and if the routes match, \n            we prioritize static routes over propagated routes. Review your routes to ensure\n            that traffic is routed correctly and that there are no unintended consequences\n            if you enable or disable route propagation (for example, route propagation is\n            required for an AWS Direct Connect connection that supports jumbo frames).\nTo route inbound VPC traffic to an appliance, you associate a route table with the\n            internet gateway or virtual private gateway, and specify the network interface of\n            your appliance as the target for VPC traffic. For more information, see\nGateway route tables\n. You can\n            also route outbound traffic from your subnet to a middlebox appliance in another\n            subnet.\nFor middlebox routing examples, see\nMiddlebox scenarios\n.\nContents\nAppliance considerations\nRouting traffic between a gateway and an appliance\nRouting inter-subnet traffic to an appliance\nAppliance considerations\nYou can choose a third-party appliance from\nAWS Marketplace\n, or you can configure your\n                    own appliance. When you create or configure an appliance, take note of the\n                    following:\nThe appliance must be configured in a separate subnet to the source or\n                            destination traffic.\nYou must disable source/destination checking on the appliance. For more\n                            information, see\nChanging\n                                the Source or Destination Checking\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nYou cannot route traffic between hosts in the same subnet through an\n                            appliance.\nThe appliance does not have to perform network address translation\n                            (NAT).\nYou can add a route to your route tables that is more specific than the local route. \n                        You can use more specific routes to redirect traffic between subnets within a VPC \n                        (East-West traffic) to a middlebox appliance. The destination of the route must \n                        match the entire IPv4 or IPv6 CIDR block of a subnet in your VPC.\nTo intercept IPv6 traffic, ensure that your VPC, subnet, and appliance support IPv6.\n                        Virtual private gateways do not support IPv6 traffic.\nRouting traffic between a gateway and an appliance\nTo route inbound VPC traffic to an appliance, you associate a route table with the internet \n                gateway or virtual private gateway, and specify the network interface of your appliance as the \n                target for VPC traffic. In the following example, the VPC has an internet gateway, an appliance,\n                and a subnet with instances. Traffic from the internet is routed through an appliance.\nAssociate this route table with your internet gateway or virtual private gateway. The first \n                entry is the local route. The second entry sends IPv4 traffic destined for the subnet to the \n                network interface for the appliance. This route is more specific than the local route.\nDestination\nTarget\nVPC CIDR\nLocal\nSubnet CIDR\nAppliance network interface ID\nAlternatively, you can replace the target for the local route with the network\n                interface of the appliance. You can do this to ensure that all traffic is automatically \n                routed to the appliance, including traffic destined for subnets that you add to the VPC \n                in the future.\nDestination\nTarget\nVPC CIDR\nAppliance network interface ID\nTo route traffic from your subnet to an appliance in another subnet, add a\n                    route to your subnet route table that routes traffic to the appliance's network\n                    interface. The destination must be less specific than the destination for the\n                    local route. For example, for traffic destined for the internet, specify\n0.0.0.0/0\n(all IPv4 addresses) for the destination.\nDestination\nTarget\nVPC CIDR\nLocal\n0.0.0.0/0\nAppliance network interface ID\nThen, in the route table associated with the appliance's subnet, add a route\n                that sends the traffic back to the internet gateway or virtual private gateway.\nDestination\nTarget\nVPC CIDR\nLocal\n0.0.0.0/0\nigw-id\nRouting inter-subnet traffic to an appliance\nYou can route traffic destined for a specific subnet to the network interface of an appliance.\n                In the following example, the VPC contains two subnets and an appliance. Traffic between the\n                subnets is routed through an appliance.\nSecurity groups\nWhen you route traffic between instances in different subnets through a middlebox \n                    appliance, the security groups for both instances must allow traffic to flow between \n                    the instances. The security group for each instance must reference the private IP \n                    address of the other instance, or the CIDR range of the subnet that contains the \n                    other instance, as the source. If you reference the security group of the other instance \n                    as the source, this does not allow traffic to flow between the instances.\nRouting\nThe following is an example route table for subnet A. The first entry enables\n                    instances in the VPC to communicate with each other. The second entry routes all\n                    traffic from subnet A to subnet B to the network interface of the appliance.\nDestination\nTarget\nVPC CIDR\nLocal\nSubnet B CIDR\nAppliance network interface ID\nThe following is an example route table for subnet B. The first entry enables\n                instances in the VPC to communicate with each other. The second entry routes all\n                traffic from subnet B to subnet A to the network interface of the appliance.\nDestination\nTarget\nVPC CIDR\nLocal\nSubnet A CIDR\nAppliance network interface ID\nAlternatively, you can replace the target for the local route with the network interface\n                of the appliance. You can do this to ensure that all traffic is automatically routed to \n                the appliance, including traffic destined for subnets that you add to the VPC in the future.\nDestination\nTarget\nVPC CIDR\nAppliance network interface ID\nRouting using a prefix list\nIf you frequently reference the same set of CIDR blocks across your AWS resources,\n                you can create a\ncustomer-managed prefix\n                    list\nto group them together. You can then specify the prefix list as the\n                destination in your route table entry. You can later add or remove entries for the\n                prefix list without needing to update your route tables.\nFor example, you have a transit gateway with multiple VPC attachments. The VPCs\n                must be able to communicate with two specific VPC attachments that have the\n                following CIDR blocks:\n10.0.0.0/16\n10.2.0.0/16\nYou create a prefix list with both entries. In your subnet route tables, you\n                create a route and specify the prefix list as the destination, and the transit\n                gateway as the target.\nDestination\nTarget\n172.31.0.0/16\nLocal\npl-123abc123abc123ab\ntgw-id\nThe maximum number of entries for the prefix lists equals the same number of\n                entries in the route table.\nRouting to a Gateway Load Balancer endpoint\nA Gateway Load Balancer enables you to distribute traffic to a fleet of virtual appliances, such\n                as firewalls. You can configure the load balancer as a service by creating a\nVPC endpoint service configuration\n.\n                You then create a\nGateway Load Balancer endpoint\nin your VPC to connect your VPC to the service.\nTo route your traffic to the Gateway Load Balancer (for example, for security inspection),\n                specify the Gateway Load Balancer endpoint as a target in your route tables.\nFor an example of a security appliances behind a Gateway Load Balancer, see\nInspect traffic using appliances in a security VPC\n.\nTo specify the Gateway Load Balancer endpoint in the route table, use the ID of the VPC endpoint. For\n                example to route traffic for 10.0.1.0/24 to a Gateway Load Balancer endpoint, add the following\n                route.\nDestination\nTarget\n10.0.1.0/24\nvpc-endpoint-id\nFor more information, see\nGateway Load\n                    Balancers\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nRoute tables\nWork with route tables\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/WorkWithRouteTables.html": "Work with route tables - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nDetermine the route table for a subnet\nDetermine which subnets and or gateways are explicitly\n                    associated\nCreate a custom route table\nAdd and remove routes from a route table\nEnable or disable route propagation\nAssociate a subnet with a route table\nChange the route table for a subnet\nDisassociate a subnet from a route table\nReplace the main route table\nAssociate a gateway with a route table\nDisassociate a gateway from a route table\nReplace or restore the target for a local route\nDelete a route table\nWork with route tables\nThis section explains how to work with route tables.\nContents\nDetermine the route table for a subnet\nDetermine which subnets and or gateways are explicitly\n                    associated\nCreate a custom route table\nAdd and remove routes from a route table\nEnable or disable route propagation\nAssociate a subnet with a route table\nChange the route table for a subnet\nDisassociate a subnet from a route table\nReplace the main route table\nAssociate a gateway with a route table\nDisassociate a gateway from a route table\nReplace or restore the target for a local route\nDelete a route table\nDetermine the route table for a subnet\nYou can determine which route table a subnet is associated with by looking at the subnet\n                details in the Amazon VPC console.\nTo determine the route table for a subnet\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nSelect the subnet.\nChoose the\nRoute table\ntab to view information about the\n              route table and its routes. To determine whether the association is to the main\n              route table, and if that association is explicit, see\nDetermine which subnets and or gateways are explicitly\n                    associated\n.\nDetermine which subnets and or gateways are explicitly\n                    associated\nYou can determine how many and which subnets or gateways are explicitly associated with\n                a route table.\nThe main route table can have explicit and implicit subnet associations. Custom route\n                tables have only explicit associations.\nSubnets that aren't explicitly associated with any route table have an implicit\n                association with the main route table. You can explicitly associate a subnet with\n                the main route table. For an example of why you might do that, see\nReplace the main route table\n.\nTo determine which subnets are explicitly associated using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n.\nCheck the\nExplicit subnet association\ncolumn to determine the explicitly\n                        associated subnets and the\nMain\ncolumn to determine\n                        whether this is the main route table.\nSelect the route table and choose the\nSubnet associations\ntab.\nThe subnets under\nExplicit subnet associations\nare explicitly\n                        associated with the route table. The subnets under\nSubnets without\n                            explicit associations\nbelong to the same VPC as the route\n                        table, but are not associated with any route table, so they are implicitly\n                        associated with the main route table for the VPC.\nTo determine which gateways are explicitly associated using the\n                    console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n.\nSelect the route table and choose the\nEdge\n                            associations\ntab.\nTo describe one or more route tables and view its associations using the\n                    command line\ndescribe-route-tables\n(AWS CLI)\nGet-EC2RouteTable\n(AWS Tools for Windows PowerShell)\nCreate a custom route table\nYou can create a custom route table for your VPC using the Amazon VPC console.\nTo create a custom route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n.\nChoose\nCreate route table\n.\n(Optional) For\nName\n, enter a name for your route\n                        table.\nFor\nVPC\n, choose your VPC.\n(Optional) To add a tag, choose\nAdd new tag\nand enter\n                        the tag key and tag value.\nChoose\nCreate route table\n.\nTo create a custom route table using the command line\ncreate-route-table\n(AWS CLI)\nNew-EC2RouteTable\n(AWS Tools for Windows PowerShell)\nAdd and remove routes from a route table\nYou can add, delete, and modify routes in your route tables. You can only modify routes\n        that you've added.\nFor more information about working with static routes for a Site-to-Site VPN connection, see\nEditing Static Routes for a Site-to-Site VPN Connection\nin the\nAWS Site-to-Site VPN User Guide\n.\nTo update the routes for a route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and select the\n                        route table.\nChoose\nActions\n,\nEdit routes\n.\nTo add a route, choose\nAdd route\n. For\nDestination\nenter the destination CIDR block, a\n              single IP address, or the ID of a prefix list.\nTo modify a route, for\nDestination\n, replace the\n              destination CIDR block or single IP address. For\nTarget\n, \n              choose a target.\nTo delete a route, choose\nRemove\n.\nChoose\nSave changes\n.\nTo update the routes for a route table using the command line\ncreate-route\n(AWS CLI)\nreplace-route\n(AWS CLI)\ndelete-route\n(AWS CLI)\nNew-EC2Route\n(AWS Tools for Windows PowerShell)\nSet-EC2Route\n(AWS Tools for Windows PowerShell)\nRemove-EC2Route\n(AWS Tools for Windows PowerShell)\nNote\nIf you add a route using a command line tool or the API, the destination CIDR\n                    block is automatically modified to its canonical form. For example, if you\n                    specify\n100.68.0.18/18\nfor the CIDR block, we create a route with a\n                    destination CIDR block of\n100.68.0.0/18\n.\nEnable or disable route propagation\nRoute propagation allows a virtual private gateway to automatically propagate routes to\n                your route tables. This means that you don't need to manually add or remove VPN\n                routes.\nTo complete this process, you must have a virtual private gateway.\nFor more information, see\nSite-to-Site VPN routing\n                    options\nin the\nSite-to-Site VPN User Guide\n.\nTo enable route propagation using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and then select the route\n            table.\nChoose\nActions\n,\nEdit route\n            propagation\n.\nSelect the\nEnable\ncheck box next to the virtual private gateway, and\n            then choose\nSave\n.\nTo enable route propagation using the command line\nenable-vgw-route-propagation\n(AWS CLI)\nEnable-EC2VgwRoutePropagation\n(AWS Tools for Windows PowerShell)\nTo disable route propagation using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and then select the route\n            table.\nChoose\nActions\n,\nEdit route propagation\n.\nClear the\nEnable\ncheck box next to the virtual private gateway,\n                        and then choose\nSave\n.\nTo disable route propagation using the command line\ndisable-vgw-route-propagation\n(AWS CLI)\nDisable-EC2VgwRoutePropagation\n(AWS Tools for Windows PowerShell)\nAssociate a subnet with a route table\nTo apply route table routes to a particular subnet, you must associate the route table\n                with the subnet. A route table can be associated with multiple subnets. However, a\n                subnet can only be associated with one route table at a time. Any subnet not\n                explicitly associated with a table is implicitly associated with the main route\n                table by default.\nTo associate a route table with a subnet using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and then\n                        select the route table.\nOn the\nSubnet associations\ntab, choose\nEdit\n                            subnet associations\n.\nSelect the check box for the subnet to associate with the route table.\nChoose\nSave associations\n.\nTo associate a subnet with a route table using the command line\nassociate-route-table\n(AWS CLI)\nRegister-EC2RouteTable\n(AWS Tools for Windows PowerShell)\nChange the route table for a subnet\nYou can change the route table association for a subnet.\nWhen you change the route table, your existing connections in the subnet are\n        dropped unless the new route table contains a route for the same traffic to the same\n        target.\nTo change a subnet route table association using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n, and then select the\n            subnet.\nFrom the\nRoute table\ntab, choose\nEdit route table\n                            association\n.\nFor\nRoute table ID\n, select the new route table.\nChoose\nSave\n.\nTo change the route table associated with a subnet using the command\n                    line\nreplace-route-table-association\n(AWS CLI)\nSet-EC2RouteTableAssociation\n(AWS Tools for Windows PowerShell)\nDisassociate a subnet from a route table\nYou can disassociate a subnet from a route table. Until you associate the subnet with\n        another route table, it's implicitly associated with the main route table.\nTo disassociate a subnet from a route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and then select\n            the route table.\nFrom the\nSubnet associations\ntab, choose\nEdit subnet\n                            associations\n.\nClear the check box for the subnet.\nChoose\nSave associations\n.\nTo disassociate a subnet from a route table using the command line\ndisassociate-route-table\n(AWS CLI)\nUnregister-EC2RouteTable\n(AWS Tools for Windows PowerShell)\nReplace the main route table\nYou can change which route table is the main route table in your VPC.\nTo replace the main route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and then select\n                        the new main route table.\nChoose\nActions\n,\nSet main route\n                        table\n.\nWhen prompted for confirmation, enter\nset\n, and then choose\nOK\n.\nTo replace the main route table using the command line\nreplace-route-table-association\n(AWS CLI)\nSet-EC2RouteTableAssociation\n(AWS Tools for Windows PowerShell)\nThe following procedure describes how to remove an explicit association between a subnet and the\n        main route table. The result is an implicit association between the subnet and the main route table.\n        The process is the same as disassociating any subnet from any route table.\nTo remove an explicit association with the main route table\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and then select\n            the route table.\nFrom the\nSubnet associations\ntab, choose\nEdit subnet\n                            associations\n.\nClear the checkbox for the subnet.\nChoose\nSave associations\n.\nAssociate a gateway with a route table\nYou can associate an internet gateway or a virtual private gateway with a route\n                table. For more information, see\nGateway route tables\n.\nTo associate a gateway with a route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and then\n                        select the route table.\nFrom the\nEdge associations\ntab, choose\nEdit\n                            edge associations\n.\nSelect the checkbox for the gateway.\nChoose\nSave changes\n.\nTo associate a gateway with a route table using the AWS CLI\nUse the\nassociate-route-table\ncommand. The following example associates\n                    internet gateway\nigw-11aa22bb33cc44dd1\nwith route table\nrtb-01234567890123456\n.\naws ec2 associate-route-table --route-table-id rtb-01234567890123456 --gateway-id igw-11aa22bb33cc44dd1\nDisassociate a gateway from a route table\nYou can disassociate an internet gateway or a virtual private gateway from a route\n                table.\nTo associate a gateway with a route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and then\n                      select the route table.\nFrom the\nEdge associations\ntab, choose\nEdit\n                            edge associations\n.\nClear the checkbox for the gateway.\nChoose\nSave changes\n.\nTo disassociate a gateway from a route table using the command line\ndisassociate-route-table\n(AWS CLI)\nUnregister-EC2RouteTable\n(AWS Tools for Windows PowerShell)\nReplace or restore the target for a local route\nYou can change the target of the default local route. If you replace the\n                target of a local route, you can later restore it to the default\nlocal\ntarget. If your VPC has\nmultiple CIDR blocks\n, your\n                route tables have multiple local routes\u00e2\u0080\u0094one per CIDR block. You can replace\n                or restore the target of each of the local routes as needed.\nTo update the local route using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and then\n                        select the route table.\nFrom the\nRoutes\ntab, choose\nEdit\n                            routes\n.\nFor the local route, clear\nTarget\nand then choose a\n                        new target.\nChoose\nSave changes\n.\nTo restore the target for a local route using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and then\n                        select the route table.\nChoose\nActions\n,\nEdit\n                        routes\n.\nFor the route, clear\nTarget\n, and then choose\nlocal\n.\nChoose\nSave changes\n.\nTo replace the target for a local route using the AWS CLI\nUse the\nreplace-route\ncommand. The following example replaces the target of the local route with\neni-11223344556677889\n.\naws ec2 replace-route --route-table-id rtb-01234567890123456 --destination-cidr-block 10.0.0.0/16 --network-interface-id eni-11223344556677889\nTo restore the target for a local route using the AWS CLI\nThe following example restores the local target for route table\nrtb-01234567890123456\n.\naws ec2 replace-route --route-table-id rtb-01234567890123456 --destination-cidr-block 10.0.0.0/16 --local-target\nDelete a route table\nYou can delete a route table only if there are no subnets associated with it. You can't delete the\n        main route table.\nTo delete a route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n, and then select\n                        the route table.\nChoose\nActions\n,\nDelete route table\n.\nWhen prompted for confirmation, enter\ndelete\n, and then choose\nDelete\n.\nTo delete a route table using the command line\ndelete-route-table\n(AWS CLI)\nRemove-EC2RouteTable\n(AWS Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExample routing options\nMiddlebox routing wizard\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/middlebox-routing-console.html": "Middlebox routing wizard - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nMiddlebox routing wizard prerequisites\nMiddlebox routing wizard\n                considerations\nMiddlebox routing wizard\nIf you want to configure fine-grain control over the routing path of traffic entering or\n        leaving your VPC, for example, by redirecting traffic to a security appliance, you can use\n        the middlebox routing wizard in the VPC console. The middlebox routing wizard helps you by automatically\n        creating the necessary route tables and routes (hops) to redirect traffic as needed.\nThe middlebox routing wizard can help you configure routing for the following scenarios:\nRouting traffic to a middlebox appliance, for example, an Amazon EC2 instance that's\n                configured as a security appliance.\nRouting traffic to a Gateway Load Balancer. For more information, see the\nUser Guide for Gateway Load Balancers\n.\nFor more information, see\nMiddlebox scenarios\n.\nContents\nMiddlebox routing wizard prerequisites\nManage middlebox routes\nMiddlebox routing wizard\n                considerations\nMiddlebox scenarios\nMiddlebox routing wizard prerequisites\nReview\nMiddlebox routing wizard\n                considerations\n. Then, make sure that you\n            have the following information before you use the middlebox routing wizard.\nThe VPC.\nThe resource where traffic originates from or enters the VPC, for example, an\n                    internet gateway, virtual private gateway, or network interface.\nThe middlebox network interface or Gateway Load Balancer endpoint.\nThe destination subnet for the traffic.\nMiddlebox routing wizard\n                considerations\nTake the following into consideration when you use the middlebox routing wizard:\nIf you want to inspect traffic, you can use an internet gateway or a virtual\n                    private gateway for the source.\nIf you use the same middlebox in a multiple middlebox configuration within the\n                    same VPC, make sure that the middlebox is in the same hop position for both\n                    subnets.\nThe appliance must be configured in a separate subnet from the source or\n                    destination subnet.\nYou must disable source/destination checking on the appliance. For more\n                    information, see\nChanging the\n                        Source or Destination Checking\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nThe route tables and routes that the middlebox routing wizard creates count toward your\n                    quotas. For more information, see\nRoute tables\n.\nIf you delete a resource, for example a network interface, the route table\n                    associations with the resource are removed. If the resource is a target, the\n                    route destination is set to blackhole. The route tables are not deleted.\nThe middlebox subnet and the destination subnet must be associated with a\n                    non-default route table.\nNote\nWe recommend that you use the middlebox routing wizard to modify or delete any route\n                        tables that you created using the middlebox routing wizard.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWork with route tables\nManage middlebox routes\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/working-with-routing-console.html": "Manage middlebox routes - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nCreate routes using the\n                    middlebox routing wizard\nModify middlebox routes\nView the middlebox routing wizard route\n                    tables\nDelete the middlebox routing wizard\n                    configuration\nManage middlebox routes\nThe middlebox routing wizard is available in the Amazon Virtual Private Cloud Console.\nContents\nCreate routes using the\n                    middlebox routing wizard\nModify middlebox routes\nView the middlebox routing wizard route\n                    tables\nDelete the middlebox routing wizard\n                    configuration\nCreate routes using the\n                    middlebox routing wizard\nTo create routes using the middlebox routing wizard\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect your VPC, and then choose\nActions\n,\nManage middlebox routes\n.\nChoose\nCreate routes\n.\nOn the\nSpecify routes\npage, do the following:\nFor\nSource\n, choose the source for your traffic.\n                                If you choose a virtual private gateway, for\nDestination\n                                    IPv4 CIDR\n, enter the CIDR for the on-premises traffic\n                                entering the VPC from the virtual private gateway.\nFor\nMiddlebox\n, choose the network interface ID\n                                that is associated with your middlebox appliance, or when you use a\n                                Gateway Load Balancer endpoint, choose the VPC endpoint ID.\nFor\nDestination subnet\n, choose the destination\n                                subnet.\n(Optional) To add another destination subnet, choose\nAdd additional\n                            subnet\n, and then do the following:\nFor\nMiddlebox\n, choose the network interface ID\n                                that is associated with your middlebox appliance, or when you use a\n                                Gateway Load Balancer endpoint, choose the VPC endpoint ID.\nYou must use the same middlebox appliance for multiple subnets.\nFor\nDestination subnet\n, choose the destination\n                                subnet.\n(Optional) To add another source, choose\nAdd source\n, and\n                    then repeat the previous steps.\nChoose\nNext\n.\nOn the\nReview and create\npage, verify the routes and then\n                        choose\nCreate routes\n.\nModify middlebox routes\nYou can edit your route configuration by changing the gateway, the middlebox, or\n                the destination subnet.\nWhen you make any modifications, the middlebox routing wizard automatically perform the\n                following operations:\nCreates new route tables for the gateway, middlebox, and destination\n                        subnet.\nAdds the necessary routes to the new route tables.\nDisassociates the current route tables that the middlebox routing wizard associated\n                        with the resources.\nAssociates the new route tables that the middlebox routing wizard creates with the\n                        resources.\nTo modify middlebox routes using the middlebox routing wizard\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect your VPC, and then choose\nActions\n,\nManage middlebox routes\n.\nChoose\nEdit routes\n.\nTo change the gateway, for\nSource\n, choose the gateway\n                        through which traffic enters your VPC. If you choose a virtual private\n                        gateway, for\nDestination IPv4 CIDR\n, enter the\n                        destination subnet CIDR.\nTo add another destination subnet, choose\nAdd additional\n                            subnet\n, and then do the following:\nFor\nMiddlebox\n, choose the network interface\n                                ID that is associated with your middlebox appliance, or when you use\n                                a Gateway Load Balancer endpoint, choose the VPC endpoint ID.\nYou must use the same middlebox appliance for multiple\n                                subnets.\nFor\nDestination subnet\n, choose the\n                                destination subnet.\nChoose\nNext\n.\nOn the\nReview and update\npage, a list of route tables\n                        and their routes that will be created by the middlebox routing wizard is displayed.\n                        Verify the routes, and then in the confirmation dialog box, choose\nUpdate routes\n.\nView the middlebox routing wizard route\n                    tables\nTo view the middlebox routing wizard route tables\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect your VPC, and then choose\nActions\n,\nManage middlebox routes\n.\nUnder\nMiddlebox route tables\n, the number indicates\n                        how many routes the middlebox routing wizard created. Choose the number to view the\n                        routes.\nWe display the middlebox routing wizard routes on a separate route table page.\nDelete the middlebox routing wizard\n                    configuration\nIf you decide that you no longer want the middlebox routing wizard configuration, you must\n                manually delete the route tables.\nTo delete the middlebox routing wizard configuration\nView the middlebox routing wizard route tables. For more information, see\nView the middlebox routing wizard route\n                    tables\n.\nAfter you perform the operation, the route tables that the middlebox routing wizard\n                        created are displayed on a separate route table page.\nDelete each route table that is displayed. For more information, see\nDelete a route table\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMiddlebox routing wizard\nMiddlebox scenarios\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/middlebox-routing-examples.html": "Middlebox scenarios - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nMiddlebox scenarios\nThe following examples describe scenarios for the middlebox routing wizard.\nContents\nInspect traffic destined for a subnet\nInspect traffic using appliances in a security VPC\nInspect traffic between subnets\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nManage middlebox routes\nInspect traffic destined for a subnet\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/internet-gateway-subnet.html": "Inspect traffic destined for a subnet - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nInternet gateway route table\nDestination subnet route table\nMiddlebox subnet route table\nInspect traffic destined for a subnet\nConsider the scenario where you have traffic coming into the VPC through an internet\n            gateway and you want to inspect all traffic that is destined for a subnet, say subnet B,\n            using a firewall appliance installed on an EC2 instance. The firewall appliance should\n            be installed and configured on an EC2 instance in a separate subnet from subnet B in\n            your VPC, say subnet C. You can then use the middlebox routing wizard to configure routes for\n            traffic between subnet B and the internet gateway.\nThe middlebox routing wizard, automatically performs the following operations:\nCreates the following route tables:\nA route table for the internet gateway\nA route table for the destination subnet\nA route table for the middlebox subnet\nAdds the necessary routes to the new route tables as described in the\n                    following sections.\nDisassociates the current route tables associated with the internet gateway,\n                    subnet B, and subnet C.\nAssociates route table A with the internet gateway (the\nSource\nin the middlebox routing wizard), route table C with\n                    subnet C (the\nMiddlebox\nin the middlebox routing wizard), and route\n                    table B with subnet B (the\nDestination\nin the\n                    middlebox routing wizard).\nCreates a tag that indicates it was created by the middlebox routing wizard, and a tag that\n                    indicates the creation date.\nThe middlebox routing wizard does not modify your existing route tables. It creates new route tables,\n            and then associates them with your gateway and subnet resources. If your resources are already\n            explicitly associated with existing route tables, the existing route tables are first\n            disassociated, and then the new route tables are associated with your resources. Your\n            existing route tables are not deleted.\nIf you do not use the middlebox routing wizard, you must manually configure, and then assign the\n            route tables to the subnets and internet gateway.\nInternet gateway route table\nAdd the following routes to the route table for the internet gateway.\nDestination\nTarget\nPurpose\n10.0.0.0/16\nLocal\nLocal route for IPv4\n10.0.1.0/24\nappliance-eni\nRoute IPv4 traffic destined for subnet B to the middlebox\n2001:db8:1234:1a00::/56\nLocal\nLocal route for IPv6\n2001:db8:1234:1a00::/64\nappliance-eni\nRoute IPv6 traffic destined for subnet B to the middlebox\nThere is an edge association between the internet gateway and the VPC.\nWhen you use the middlebox routing wizard, it associates the following tags with the route table:\nThe key is \"Origin\" and the value is \"Middlebox wizard\"\nThe key is \"date_created\" and the value is the creation time (for example,\n                        \"2021-02-18T22:25:49.137Z\")\nDestination subnet route table\nAdd the following routes to the route table for the destination subnet (subnet B\n                in the example diagram).\nDestination\nTarget\nPurpose\n10.0.0.0/16\nLocal\nLocal route for IPv4\n0.0.0.0/0\nappliance-eni\nRoute IPv4 traffic destined for the internet to the middlebox\n2001:db8:1234:1a00::/56\nLocal\nLocal route for IPv6\n::/0\nappliance-eni\nRoute IPv6 traffic destined for the internet to the middlebox\nThere is a subnet association with the middlebox subnet.\nWhen you use the middlebox routing wizard, it associates the following tags with the route table:\nThe key is \"Origin\" and the value is \"Middlebox wizard\"\nThe key is \"date_created\" and the value is the creation time (for example,\n                        \"2021-02-18T22:25:49.137Z\")\nMiddlebox subnet route table\nAdd the following routes to the route table for the middlebox subnet (subnet C in the\n                example diagram).\nDestination\nTarget\nPurpose\n10.0.0.0/16\nLocal\nLocal route for IPv4\n0.0.0.0/0\nigw-id\nRoute IPv4 traffic to the internet gateway\n2001:db8:1234:1a00::/56\nLocal\nLocal route for IPv6\n::/0\neigw-id\nRoute IPv6 traffic to the egress-only internet gateway\nThere is a subnet association with the destination subnet.\nWhen you use the middlebox routing wizard, it associates the following tags with the route\n                table:\nThe key is \"Origin\" and the value is \"Middlebox wizard\"\nThe key is \"date_created\" and the value is the creation time (for example,\n                        \"2021-02-18T22:25:49.137Z\")\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMiddlebox scenarios\nInspect traffic using security appliances\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/gwlb-route.html": "Inspect traffic using appliances in a security VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nInternet gateway route table\nApplication subnet route table\nProvider subnet route table\nInspect traffic using appliances in a security VPC\nConsider the scenario where you need to inspect the traffic entering a VPC from the\n            internet gateway and destined for a subnet using a fleet of security appliances\n            configured behind a Gateway Load Balancer. The owner of the service consumer VPC creates a Gateway Load Balancer endpoint in a\n            subnet in their VPC (represented by an endpoint network interface). All traffic entering\n            the VPC through the internet gateway is first routed to the Gateway Load Balancer endpoint for inspection\n            before it's routed to the application subnet. Similarly, all traffic leaving the\n            application subnet is first routed to Gateway Load Balancer endpoint for inspection before it is routed to the\n            internet.\nThe middlebox routing wizard, automatically performs the following operations:\nCreates the route tables.\nAdds the necessary routes to the new route tables.\nDisassociates the current route tables associated with the subnets.\nAssociates the route tables that the middlebox routing wizard creates with the\n                    subnets.\nCreates a tag that indicates it was created by the middlebox routing wizard, and a tag\n                    that indicates the creation date.\nThe middlebox routing wizard does not modify your existing route tables. It creates new route\n            tables, and then associates them with your gateway and subnet resources. If your\n            resources are already explicitly associated with existing route tables, the existing\n            route tables are first disassociated, and then the new route tables are associated with\n            your resources. Your existing route tables are not deleted.\nIf you do not use the middlebox routing wizard, you must manually configure, and then assign the\n            route tables to the subnets and internet gateway.\nInternet gateway route table\nThe route table for the internet gateway has the following routes.\nDestination\nTarget\nPurpose\nConsumer VPC CIDR\nLocal\nLocal route\nApplication subnet CIDR\nendpoint-id\nRoutes traffic destined for the application subnet to the\n                                Gateway Load Balancer endpoint.\nThere is an edge association with the gateway.\nWhen you use the middlebox routing wizard, it associates the following tags with the route table:\nThe key is \"Origin\" and the value is \"Middlebox wizard\"\nThe key is \"date_created\" and the value is the creation time (for example, \n                        \"2021-02-18T22:25:49.137Z\")\nApplication subnet route table\nThe route table for the application subnet has the following routes.\nDestination\nTarget\nPurpose\nConsumer VPC CIDR\nLocal\nLocal route\n0.0.0.0/0\nendpoint-id\nRoute traffic from the application servers to the Gateway Load Balancer endpoint before\n                                it is routed to the internet.\nWhen you use the middlebox routing wizard, it associates the following tags with the route table:\nThe key is \"Origin\" and the value is \"Middlebox wizard\"\nThe key is \"date_created\" and the value is the creation time (for example, \n                        \"2021-02-18T22:25:49.137Z\")\nProvider subnet route table\nThe route table for the provider subnet has the following routes.\nDestination\nTarget\nPurpose\nProvider VPC CIDR\nLocal\nLocal route. Ensures that traffic originating from the internet\n                                is routed to the application servers.\n0.0.0.0/0\nigw-id\nRoutes all traffic to the internet gateway\nWhen you use the middlebox routing wizard, it associates the following tags with the route table:\nThe key is \"Origin\" and the value is \"Middlebox wizard\"\nThe key is \"date_created\" and the value is the creation time (for example, \n                        \"2021-02-18T22:25:49.137Z\")\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nInspect traffic destined for a subnet\nInspect traffic between subnets\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/intra-vpc-route.html": "Inspect traffic between subnets - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nCustom route table for subnet A\nCustom route table for subnet B\nMain route table\nInspect traffic between subnets\nConsider the scenario where you have multiple subnets in a VPC and you want to inspect\n            the traffic between them using a firewall appliance. Configure and install the firewall \n            appliance on an EC2 instance in a separate subnet in your VPC.\nThe following diagram shows a firewall appliance installed on an EC2 instance in subnet C. \n            The appliance inspects all traffic that travels from subnet A to subnet B (see 1) and from \n            subnet B to subnet A (see 2).\nYou use the main route table for the VPC and the middlebox subnet. Subnets A and B each have\n            a custom route table.\nThe middlebox routing wizard, automatically performs the following operations:\nCreates the route tables.\nAdds the necessary routes to the new route tables.\nDisassociates the current route tables associated with the subnets.\nAssociates the route tables that the middlebox routing wizard creates with the\n                    subnets.\nCreates a tag that indicates it was created by the middlebox routing wizard, and a tag\n                    that indicates the creation date.\nThe middlebox routing wizard does not modify your existing route tables. It creates new route\n            tables, and then associates them with your gateway and subnet resources. If your\n            resources are already explicitly associated with existing route tables, the existing\n            route tables are first disassociated, and then the new route tables are associated with\n            your resources. Your existing route tables are not deleted.\nIf you do not use the middlebox routing wizard, you must manually configure, and then assign the\n            route tables to the subnets and internet gateway.\nCustom route table for subnet A\nThe route table for subnet A has the following routes.\nDestination\nTarget\nPurpose\nVPC CIDR\nLocal\nLocal route\nSubnet B CIDR\nappliance-eni\nRoute traffic destined for subnet B to the middlebox\nWhen you use the middlebox routing wizard, it associates the following tags with the route table:\nThe key is \"Origin\" and the value is \"Middlebox wizard\"\nThe key is \"date_created\" and the value is the creation time (for example,\n                        \"2021-02-18T22:25:49.137Z\")\nCustom route table for subnet B\nThe route table for subnet B has the following routes.\nDestination\nTarget\nPurpose\nVPC CIDR\nLocal\nLocal route\nSubnet A CIDR\nappliance-eni\nRoute traffic destined for subnet A to the middlebox\nWhen you use the middlebox routing wizard, it associates the following tags with the route table:\nThe key is \"Origin\" and the value is \"Middlebox wizard\"\nThe key is \"date_created\" and the value is the creation time (for example,\n                        \"2021-02-18T22:25:49.137Z\")\nMain route table\nSubnet C uses the main route table. The main route table has the following route.\nDestination\nTarget\nPurpose\nVPC CIDR\nLocal\nLocal route\nWhen you use the middlebox routing wizard, it associates the following tags with the route table:\nThe key is \"Origin\" and the value is \"Middlebox wizard\"\nThe key is \"date_created\" and the value is the creation time (for example,\n                        \"2021-02-18T22:25:49.137Z\")\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nInspect traffic using security appliances\nDelete a subnet\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/subnet-deleting.html": "Delete a subnet - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nDelete a subnet\nIf you no longer need a subnet, you can delete it. You cannot delete a subnet\n\t\t\tif it contains any network interfaces. For example, you must terminate any\n\t\t\tinstances in a subnet before you can delete it.\nTo delete a subnet using the console\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\nTerminate all instances in the subnet. For more information, see\nTerminate your\n\t\t\t\t\tinstance\nin the\nAmazon EC2 User Guide\n.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n.\nSelect the subnet and choose\nActions\n,\nDelete\n\t\t\t\t\tsubnet\n.\nWhen prompted for confirmation, type\ndelete\nand then \n\t\t\t\t\tchoose\nDelete\n.\nTo delete a subnet using the AWS CLI\nUse the\ndelete-subnet\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nInspect traffic between subnets\nConnect your VPC\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/extend-intro.html": "Connect your VPC to other networks - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nConnect your VPC to other networks\nYou can connect your virtual private cloud (VPC) to other networks. For example, \n        other VPCs, the internet, or your on-premises network.\nThe following diagram demonstrates some of these connectivity options. VPC A is connected\n        to the internet through an internet gateway. The EC2 instance in the private subnet of VPC A\n        can connect to the internet using the NAT gateway in the public subnet of VPC A. VPC B is\n        connected to the internet through an internet gateway. The EC2 instance in the public subnet\n        of VPC B can connect to the internet using the internet gateway. VPC A and VPC B are\n        connected to each other through a VPC peering connection and a transit gateway. The transit\n        gateway has a VPN attachment to a data center. VPC B has a AWS Direct Connect connection to a data\n        center.\nFor more information, see\nAmazon Virtual Private Cloud Connectivity Options\n.\nContents\nConnect to the internet using an internet gateway\nEnable outbound IPv6 traffic using an egress-only internet gateway\nConnect to the internet or other networks using NAT devices\nAssociate Elastic IP addresses with resources in your VPC\nConnect your VPC to other VPCs and networks using a transit gateway\nConnect your VPC to remote networks using AWS Virtual Private Network\nConnect VPCs using VPC peering\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDelete a subnet\nInternet gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html": "Connect to the internet using an internet gateway - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nConfiguration for internet access\nWork with internet gateways\nAPI and command overview\nPricing\nConnect to the internet using an internet gateway\nAn internet gateway is a horizontally scaled, redundant, and highly available VPC component\n    that allows communication between your VPC and the internet. It supports IPv4 and IPv6 traffic.\n    It does not cause availability risks or bandwidth constraints on your network traffic.\nAn internet gateway enables resources in your public subnets (such as EC2 instances) to connect\n    to the internet if the resource has a public IPv4 address or an IPv6 address. Similarly,\n    resources on the internet can initiate a connection to resources in your subnet using the public\n    IPv4 address or IPv6 address. For example, an internet gateway enables you to connect to an EC2\n    instance in AWS using your local computer.\nAn internet gateway provides a target in your VPC route tables for internet-routable\n    traffic. For communication using IPv4, the internet gateway also performs network address\n    translation (NAT). For communication using IPv6, NAT is not needed because IPv6 addresses are\n    public. For more information, see\nIP addresses and NAT\n.\nConfiguration for internet access\nTo enable your instances to receive or send traffic from the internet, do the\n      following:\nCreate an internet gateway\nand\nattach it to your VPC\n.\nAdd a route\nto the route table \n          for the subnet that directs internet-bound traffic to the internet gateway.\nEnsure that instances in your subnet have a public IPv4 address or an IPv6 address.\n          For more information, see\nInstance \n            IP addressing\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nEnsure that your\nsecurity groups\nand\nnetwork access control lists\nallow the\n          desired internet traffic to flow to and from your instances.\nTo provide your instances with internet access without assigning them public IP\n      addresses, use a NAT device instead. A NAT device enables instances in a private\n      subnet to connect to the internet, but prevents hosts on the internet from initiating\n      connections with the instances. For more information, see\nNAT devices\n.\nPublic and private subnets\nIf a subnet is associated with a route table that has a route to an internet\n            gateway, it's known as a\npublic subnet\n. If a subnet is\n            associated with a route table that does not have a route to an internet gateway,\n            it's known as a\nprivate subnet\n.\nIn your public subnet's route table, you can specify a route for the internet gateway to\n            all destinations not explicitly known to the route table (\n0.0.0.0/0\nfor\n            IPv4 or\n::/0\nfor IPv6). Alternatively, you can scope the route to a\n            narrower range of IP addresses; for example, the public IPv4 addresses of your company\u00e2\u0080\u0099s\n            public endpoints outside of AWS, or the Elastic IP addresses of other Amazon EC2 instances\n            outside your VPC.\nIP addresses and NAT\nTo enable communication over the internet for IPv4, your instance must have a public\n        IPv4 address. You can either configure your VPC to automatically assign public IPv4\n        addresses to your instances, or you can assign Elastic IP addresses to your instances. Your\n        instance is only aware of the private (internal) IP address space defined within the VPC and\n        subnet. The internet gateway logically provides the one-to-one NAT on behalf of your\n        instance, so that when traffic leaves your VPC subnet and goes to the internet, the reply\n        address field is set to the public IPv4 address or Elastic IP address of your instance, and\n        not its private IP address. Conversely, traffic that's destined for the public IPv4 address\n        or Elastic IP address of your instance has its destination address translated into the\n        instance's private IPv4 address before the traffic is delivered to the VPC.\nTo enable communication over the internet for IPv6, your VPC and subnet must have an\n        associated IPv6 CIDR block, and your instance must be assigned an IPv6 address from the\n        range of the subnet. IPv6 addresses are globally unique, and therefore public by\n        default.\nIn the following diagram, the subnet in Availability Zone A is a public subnet. The route table\n        for this subnet has a route that sends all internet-bound IPv4 traffic to the internet gateway.\n        The instances in the public subnet must have public IP addresses or Elastic IP addresses\n        to enable communication with the internet over the internet gateway. For comparison, the \n        subnet in Availability Zone B is a private subnet because its route table does not have a\n        route to the internet gateway. Instances in the private subnet can't communicate with the \n        internet over the internet gateway, even if they have public IP addresses.\nInternet access for default and nondefault VPCs\nThe following table provides an overview of whether your VPC automatically comes with the\n          components required for internet access over IPv4 or IPv6.\nComponent\nDefault VPC\nNondefault VPC\nInternet gateway\nYes\nNo\nRoute table with route to internet gateway for IPv4 traffic (0.0.0.0/0)\nYes\nNo\nRoute table with route to internet gateway for IPv6 traffic (::/0)\nNo\nNo\nPublic IPv4 address automatically assigned to instance launched into\n                subnet\nYes (default subnet)\nNo (nondefault subnet)\nIPv6 address automatically assigned to instance launched into subnet\nNo (default subnet)\nNo (nondefault subnet)\nFor more information about default VPCs, see\nDefault VPCs\n. For more information about creating a VPC, see\nCreate a VPC\n.\nWork with internet gateways\nThe following describes how to support internet access from a subnet in your \n      VPC using an internet gateway. To remove internet access, you can detach the internet\n      gateway from your VPC and then delete it.\nTasks\nCreate an internet gateway\nAttach an internet gateway to a VPC\nDetach an internet gateway from your VPC\nDelete an internet gateway\nCreate an internet gateway\nUse the following procedure to create an internet gateway.\nTo create an internet gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nInternet gateways\n.\nChoose\nCreate internet gateway\n.\n(Optional) Enter a name for your internet gateway.\n(Optional) To add a tag, choose\nAdd new tag\nand enter the tag key and value.\nChoose\nCreate internet gateway\n.\n(Optional) To attach the internet gateway to a VPC now, choose\nAttach to a VPC\nfrom the banner at the top of the screen, select an\n            available VPC, and then choose\nAttach internet gateway\n. Otherwise,\n            you can attach your internet gateway to a VPC at another time.\nAttach an internet gateway to a VPC\nTo use an internet gateway, you must attach it to a VPC.\nTo attach an internet gateway to a VPC\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nInternet gateways\n.\nSelect the check box for the internet gateway.\nChoose\nActions\n,\nAttach to VPC\n.\nSelect an available VPC.\nChoose\nAttach internet gateway\n.\nDetach an internet gateway from your VPC\nIf you no longer need internet access for instances that you launch into a VPC, you can\n        detach an internet gateway from a VPC. You can't detach an internet gateway if the VPC has\n        resources with associated public IP addresses or Elastic IP addresses.\nTo detach an internet gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nInternet gateways\n.\nSelect the check box for the internet gateway.\nChoose\nActions, Detach from VPC\n.\nWhen prompted for confirmation, choose\nDetach internet gateway\n.\nDelete an internet gateway\nIf you no longer need an internet gateway, you can delete it. You can't delete an\n                internet gateway if it's still attached to a VPC.\nTo delete an internet gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nInternet gateways\n.\nSelect the check box for the internet gateway.\nChoose\nActions\n,\nDelete internet gateway\n.\nWhen prompted for confirmation, enter\ndelete\n, and then choose\nDelete internet gateway\n.\nAPI and command overview\nYou can perform the tasks described on this page using the command line or an API. For\n      more information about the command line interfaces and a list of available API actions,\n      see\nWorking with Amazon VPC\n.\nCreate an internet gateway\ncreate-internet-gateway\n(AWS CLI)\nNew-EC2InternetGateway\n(AWS Tools for Windows PowerShell)\nAttach an internet gateway to a VPC\nattach-internet-gateway\n(AWS CLI)\nAdd-EC2InternetGateway\n(AWS Tools for Windows PowerShell)\nDescribe an internet gateway\ndescribe-internet-gateways\n(AWS CLI)\nGet-EC2InternetGateway\n(AWS Tools for Windows PowerShell)\nDetach an internet gateway from a VPC\ndetach-internet-gateway\n(AWS CLI)\nDismount-EC2InternetGateway\n(AWS Tools for Windows PowerShell)\nDelete an internet gateway\ndelete-internet-gateway\n(AWS CLI)\nRemove-EC2InternetGateway\n(AWS Tools for Windows PowerShell)\nPricing\nThere is no charge for an internet gateway, but there are data transfer charges for EC2 instances that use internet gateways. \n      For more information, see\nAmazon EC2 On-Demand Pricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConnect your VPC\nEgress-only internet gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/egress-only-internet-gateway.html": "Enable outbound IPv6 traffic using an egress-only internet gateway - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nEgress-only internet gateway basics\nWork with egress-only internet\n                gateways\nAPI and CLI overview\nPricing\nEnable outbound IPv6 traffic using an egress-only internet gateway\nAn egress-only internet gateway is a horizontally scaled, redundant, and highly available\n        VPC component that allows outbound communication over IPv6 from instances in your VPC to the\n        internet, and prevents the internet from initiating an IPv6 connection with your\n        instances.\nNote\nAn egress-only internet gateway is for use with IPv6 traffic only. To enable outbound-only\n            internet communication over IPv4, use a NAT gateway instead. For more information, see\nNAT gateways\n.\nContents\nEgress-only internet gateway basics\nWork with egress-only internet\n                gateways\nAPI and CLI overview\nPricing\nEgress-only internet gateway basics\nIPv6 addresses are globally unique, and are therefore public by default. If you want\n            your instance to be able to access the internet, but you want to prevent resources on\n            the internet from initiating communication with your instance, you can use an\n            egress-only internet gateway. To do this, create an egress-only internet gateway in your\n            VPC, and then add a route to your route table that points all IPv6 traffic\n                (\n::/0\n) or a specific range of IPv6 address to the egress-only internet\n            gateway. IPv6 traffic in the subnet that's associated with the route table is routed to\n            the egress-only internet gateway.\nAn egress-only internet gateway is stateful: it forwards traffic from the instances in\n            the subnet to the internet or other AWS services, and then sends the response back to\n            the instances.\nAn egress-only internet gateway has the following characteristics:\nYou cannot associate a security group with an egress-only internet\n                    gateway. You can use security groups for your instances in the private subnet to\n                    control the traffic to and from those instances.\nYou can use a network ACL to control the traffic to and from the subnet\n                    for which the egress-only internet gateway routes traffic.\nIn the following diagram, the VPC has both IPv4 and IPv6 CIDR blocks, and the subnet\n            both IPv4 and IPv6 CIDR blocks. The VPC has an egress-only internet gateway.\nThe following is an example of the route table associated with the subnet. There is a\n            route that sends all internet-bound IPv6 traffic (::/0) to the egress-only internet gateway.\nDestination\nTarget\n10.0.0.0/16\nLocal\n2001:db8:1234:1a00:/64\nLocal\n::/0\neigw-id\nWork with egress-only internet\n                gateways\nThe following tasks describe how to create an egress-only (outbound) internet\n            gateway for your private subnet, and to configure routing for the subnet.\nTasks\nCreate an egress-only internet gateway\nView your egress-only internet gateway\nCreate a custom route table\nDelete an egress-only internet\n                    gateway\nCreate an egress-only internet gateway\nYou can create an egress-only internet gateway for your VPC using the Amazon VPC\n                console.\nTo create an egress-only internet gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEgress Only Internet Gateways\n.\nChoose\nCreate Egress Only Internet Gateway\n.\n(Optional) Add or remove a tag.\n[Add a tag] Choose\nAdd new tag\nand do the\n                        following:\nFor\nKey\n, enter the key name.\nFor\nValue\n, enter the key value.\n[Remove a tag] Choose\nRemove\nto the right of the\n                        tag\u00e2\u0080\u0099s Key and Value.\nSelect the VPC in which to create the egress-only internet gateway.\nChoose\nCreate\n.\nView your egress-only internet gateway\nYou can view information about your egress-only internet gateway in the Amazon VPC\n                console.\nTo view information about an egress-only internet gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEgress Only Internet\n                            Gateways\n.\nSelect the egress-only internet gateway to view its information in the\n                        details pane.\nCreate a custom route table\nTo send traffic destined outside the VPC to the egress-only internet gateway, you\n                must create a custom route table, add a route that sends traffic to the gateway, and\n                then associate it with your subnet.\nTo create a custom route table and add a route to the egress-only internet\n                    gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute Tables\n,\nCreate route table\n.\nIn the\nCreate route table\ndialog box, optionally name\n                        your route table, then select your VPC and choose\nCreate route\n                            table\n.\nSelect the custom route table that you just created. The details pane displays tabs\n                        for working with its routes, associations, and route propagation.\nOn the\nRoutes\ntab, choose\nEdit\n                            routes\n, specify\n::/0\nin the\nDestination\nbox, select the egress-only internet\n                        gateway ID in the\nTarget\nlist, and then choose\nSave changes\n.\nOn the\nSubnet associations\ntab, choose\nEdit\n                            subnet associations\n, and select the check box for the subnet.\n                        Choose\nSave\n.\nAlternatively, you can add a route to an existing route table that's associated\n                with your subnet. Select your existing route table, and follow steps 5 and 6 above\n                to add a route for the egress-only internet gateway.\nFor more information about route tables, see\nConfigure route tables\n.\nDelete an egress-only internet\n                    gateway\nIf you no longer need an egress-only internet gateway, you can delete it. Any\n                route in a route table that points to the deleted egress-only internet gateway\n                remains in a\nblackhole\nstatus until you manually delete or update the\n                route.\nTo delete an egress-only internet gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEgress Only Internet\n                            Gateways\n, and select the egress-only internet gateway.\nChoose\nDelete\n.\nChoose\nDelete Egress Only Internet Gateway\nin the\n                        confirmation dialog box.\nAPI and CLI overview\nYou can perform the tasks described on this page using the command line or an API. For\n            more information about the command line interfaces and a list of available API actions, see\nWorking with Amazon VPC\n.\nCreate an egress-only internet gateway\ncreate-egress-only-internet-gateway\n(AWS CLI)\nNew-EC2EgressOnlyInternetGateway\n(AWS Tools for Windows PowerShell)\nDescribe an egress-only internet gateway\ndescribe-egress-only-internet-gateways\n(AWS CLI)\nGet-EC2EgressOnlyInternetGatewayList\n(AWS Tools for Windows PowerShell)\nDelete an egress-only internet gateway\ndelete-egress-only-internet-gateway\n(AWS CLI)\nRemove-EC2EgressOnlyInternetGateway\n(AWS Tools for Windows PowerShell)\nPricing\nThere is no charge for an egress-only internet gateway, but there are data transfer charges for EC2 instances that use internet gateways. \n            For more information, see\nAmazon EC2 On-Demand Pricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nInternet gateways\nNAT devices\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat.html": "Connect to the internet or other networks using NAT devices - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nConnect to the internet or other networks using NAT devices\nYou can use a NAT device to allow resources in private subnets to connect to the internet, other \n    VPCs, or on-premises networks. These instances can communicate with services outside the VPC, but\n    they cannot receive unsolicited connection requests.\nThe NAT device replaces the source IPv4 address of the instances with the address of the NAT \n    device. When sending response traffic to the instances, the NAT device translates the addresses back \n    to the original source IPv4 addresses.\nYou can use a managed NAT device offered by AWS, called a\nNAT gateway\n, \n    or you can create your own NAT device on an EC2 instance, called a\nNAT instance\n. \n    We recommend that you use NAT gateways because they provide better availability and bandwidth and \n    require less effort on your part to administer.\nConsiderations\nNAT devices are not supported for IPv6 traffic\u00e2\u0080\u0094use an egress-only internet gateway\n        instead. For more information, see\nEnable outbound IPv6 traffic using an egress-only internet gateway\n.\nWe use the term\nNAT\nin this documentation to follow common IT practice, \n        though the actual role of a NAT device is both address translation and port address translation \n        (PAT).\nContents\nNAT gateways\nNAT instances\nCompare NAT gateways and NAT instances\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nEgress-only internet gateways\nNAT gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html": "NAT gateways - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nNAT gateway basics\nControl the use of NAT gateways\nWork with NAT gateways\nAPI and CLI overview\nPricing\nNAT gateways\nA NAT gateway is a Network Address Translation (NAT) service. You can use a NAT gateway\n    so that instances in a private subnet can connect to services outside your VPC but external\n    services cannot initiate a connection with those instances.\nWhen you create a NAT gateway, you specify one of the following connectivity types:\nPublic\n\u00e2\u0080\u0093 (Default) \n        Instances in private subnets can connect to the internet through a public NAT gateway, but \n        cannot receive unsolicited inbound connections from the internet. You create a public NAT \n        gateway in a public subnet and must associate an elastic IP address with the NAT gateway \n        at creation. You route traffic from the NAT gateway to the internet gateway for the VPC. \n        Alternatively, you can use a public NAT gateway to connect to other VPCs or your on-premises \n        network. In this case, you route traffic from the NAT gateway through a transit gateway or a \n        virtual private gateway.\nPrivate\n\u00e2\u0080\u0093 \n        Instances in private subnets can connect to other VPCs or your on-premises network through \n        a private NAT gateway. You can route traffic from the NAT gateway through a transit gateway \n        or a virtual private gateway. You cannot associate an elastic IP address with a private NAT \n        gateway. You can attach an internet gateway to a VPC with a private NAT gateway, but if you \n        route traffic from the private NAT gateway to the internet gateway, the internet gateway \n        drops the traffic.\nBoth private and public NAT gateways map the source private IPv4 address of the instances to the private IPv4 address of the NAT gateway, but in the case of a public NAT gateway, the internet gateway then maps the private IPv4 address of the public \n    NAT Gateway to the Elastic IP address associated with the NAT Gateway. When sending response traffic to the instances, whether it's a \n    public or private NAT gateway, the NAT gateway translates the address back to the original source IP address.\nImportant\nYou can use either a public or private NAT gateway to route traffic to transit gateways and virtual private gateways.\nIf you use a private NAT gateway to connect to a transit gateway or virtual private gateway, traffic to the destination will come from the private IP address of the private NAT gateway.\nIf you use a public NAT gateway to connect to a transit gateway or virtual private gateway,\n      traffic to the destination will come from the private IP address of the public NAT gateway\nunless you use an internet gateway\n. The public NAT\n      gateway will only use its EIP as the source IP address when used in conjunction with an\n      internet gateway.\nContents\nNAT gateway basics\nControl the use of NAT gateways\nWork with NAT gateways\nAPI and CLI overview\nUse cases\nDNS64 and NAT64\nCloudWatch metrics\nTroubleshooting\nPricing\nNAT gateway basics\nEach NAT gateway is created in a specific Availability Zone and implemented with\n      redundancy in that zone. There is a quota on the number of NAT gateways that you can \n      create in each Availability Zone. For more information, see\nAmazon VPC quotas\n.\nIf you have resources in multiple Availability Zones and they share one NAT gateway, and\n      if the NAT gateway\u00e2\u0080\u0099s Availability Zone is down, resources in the other Availability Zones lose\n      internet access. To improve resiliency, create a NAT gateway in each Availability Zone, and\n      configure your routing to ensure that resources use the NAT gateway in the same Availability\n      Zone.\nThe following characteristics and rules apply to NAT gateways:\nA NAT gateway supports the following protocols: TCP, UDP, and ICMP.\nNAT gateways are supported for IPv4 or IPv6 traffic. For IPv6 traffic, NAT gateway performs NAT64. \n          By using this in conjunction with DNS64 (available on Route 53 resolver), your IPv6 workloads in a subnet in Amazon VPC can \n          communicate with IPv4 resources. These IPv4 services may be present in the same VPC (in a separate subnet) or a different VPC, \n          on your on-premises environment or on the internet.\nA NAT gateway supports 5 Gbps of bandwidth and automatically scales up to\n          100 Gbps. If you require more bandwidth, you can split your resources into multiple \n          subnets and create a NAT gateway in each subnet.\nA NAT gateway can process one million packets per second and automatically scales up\n          to ten million packets per second. Beyond this limit, a NAT gateway will drop packets. To\n          prevent packet loss, split your resources into multiple subnets and create a separate NAT\n          gateway for each subnet.\nEach IPv4 address can support up to 55,000 simultaneous connections to each unique\n          destination. A unique destination is identified by a unique combination of destination IP\n          address, the destination port, and protocol (TCP/UDP/ICMP). You can increase this limit by\n          associating up to 8 IPv4 addresses to your NAT Gateways (1 primary IPv4 address and 7\n          secondary IPv4 addresses). You are limited to associating 2 Elastic IP addresses to your\n          public NAT gateway by default. You can increase this limit by requesting a quota\n          adjustment. For more information, see\nElastic IP addresses\n.\nYou can pick the private IPv4 address to assign to the NAT gateway or have it\n          automatically assigned from the IPv4 address range of the subnet. The assigned private\n          IPv4 address persists until you delete the private NAT gateway. You cannot detach the\n          private IPv4 address and you cannot attach additional private IPv4 addresses.\nYou cannot associate a security group with a NAT gateway. You can associate\n          security groups with your instances to control inbound and outbound traffic.\nYou can use a network ACL to control the traffic to and from the subnet for\n          your NAT gateway. NAT gateways use ports 1024\u00e2\u0080\u009365535. For more information, see\nControl traffic to subnets using network ACLs\n.\nA NAT gateway receives a network interface. You can pick the private IPv4 address to\n          assign to the interface or have it automatically assigned from the IPv4 address range of\n          the subnet. You can view the network interface for the NAT gateway using the Amazon EC2\n          console. For more information, see\nViewing details about a network\n            interface\n. You cannot modify the attributes of this network interface.\nYou can't route traffic to a NAT gateway through a VPC peering connection, a Site-to-Site VPN\n          connection, or AWS Direct Connect. A NAT gateway cannot be used by resources on the other side of\n          these connections.\nControl the use of NAT gateways\nBy default, users do not have permission to work with NAT gateways. You can create\n      an IAM role with a policy attached that grants users permissions to create, describe, and delete NAT gateways.\n      For more information, see\nIdentity and access management for Amazon VPC\n.\nWork with NAT gateways\nYou can use the Amazon VPC console to create and manage your NAT gateways.\nTasks\nCreate a NAT gateway\nEdit secondary IP address associations\nTag a NAT gateway\nDelete a NAT gateway\nCreate a NAT gateway\nUse the following procedure to create a NAT gateway.\nRelated quotas\nYou won't be able to create a public NAT gateway if you've exhausted the number of EIPs\n          allocated to your account. For more information on EIP quotas and how to adjust them, see\nElastic IP addresses\n.\nYou can assign up to 8 private IPv4 addresses to your private NAT Gateway. You are limited to\n          associating 2 Elastic IP addresses to your public NAT gateway by default. You can\n          increase this limit by requesting a quota adjustment. For more information, see\nElastic IP addresses\n.\nTo create a NAT gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNAT gateways\n.\nChoose\nCreate NAT gateway\n.\n(Optional) Specify a name for the NAT gateway. This creates a tag where the key\n                is\nName\nand the value is the name that you specify.\nSelect the subnet in which to create the NAT gateway.\nFor\nConnectivity type\n, leave the default\nPublic\nselection to create a public NAT gateway or choose\nPrivate\nto create a private NAT gateway. For more information about the difference between a public and private NAT gateway, see\nNAT gateways\n.\nIf you chose\nPublic\n, do the following; otherwise, skip to step\n            8:\nChoose an\nElastic IP allocation ID\nto assign an\n                EIP to the NAT gateway or choose\nAllocate Elastic IP\nto\n                automatically allocate an EIP for the public NAT gateway. You are limited to\n                associating 2 Elastic IP addresses to your public NAT gateway by default. You can\n                increase this limit by requesting a quota adjustment. For more information, see\nElastic IP addresses\n.\nImportant\nWhen you assign an EIP to a public NAT gateway, the network border group of the EIP must match the network border group of the Availability Zone (AZ) that you're launching the public NAT gateway into. If it's not the same, the NAT gateway will fail to launch. You can see the network border group for the subnet's AZ by viewing the details of the subnet. Similarly, you can view the network border group of an EIP by viewing the details of the EIP address. For more information about network border groups and EIPs, see\nAllocate an Elastic IP address\n.\n(Optional) Choose\nAdditional settings\nand, under\nPrivate IP address - optional\n, enter a private IPv4 address\n                for the NAT gateway. If you don't enter an address, AWS will automatically assign a private IPv4 address to your NAT gateway at random from the subnet that your NAT gateway is in.\nSkip to step 11.\nIf you chose\nPrivate\n, for\nAdditional settings\n,\nPrivate IPv4 address assigning\n              method\n, choose one of the following:\nAuto-assign\n: AWS chooses the primary private IPv4 address\n                for the NAT gateway. For\nNumber of auto-assigned private IPv4\n                  addresses\n, you can optionally specify the number of secondary private\n                IPv4 addresses for the NAT gateway. AWS chooses these IP addresses at random from\n                the subnet for your NAT gateway.\nCustom\n: For\nPrimary private IPv4\n                address\n, choose the primary private IPv4 address for the NAT gateway. For\nSecondary private IPv4 addresses\n, you can optionally specify\n                up to 7 secondary private IPv4 addresses for the NAT gateway.\nIf you chose\nCustom\nin Step 8, skip this step. If you\n            chose\nAuto-assign\n, under\nNumber\n              of auto-assigned private IP addresses\n, choose the number of secondary IPv4\n            addresses that you want AWS assign to this private NAT gateway. You can choose up to 7\n            IPv4 addresses.\nNote\nSecondary IPv4 addresses are optional and should be assigned or allocated when\n              your workloads that use a NAT Gateway exceed 55,000 concurrent connections to a single\n              destination (the same destination IP, destination port, and protocol). Secondary IPv4\n              addresses increase the number of available ports, and therefore they increase the\n              limit on the number of concurrent connections that your workloads can establish using\n              a NAT Gateway.\nIf you chose\nAuto-assign\nin Step 9, skip this step.\n            If you chose\nCustom\n, do the following:\nUnder\nPrimary private IPv4 address\n, enter a private IPv4\n                address.\nUnder\nSecondary private IPv4 address\n, enter up to 7 secondary\n                private IPv4 addresses.\n(Optional) To add a tag to the NAT gateway, choose\nAdd new\n              tag\nand enter the key name and value. You can add up to 50 tags.\nChoose\nCreate a NAT gateway\n.\nThe initial status of the NAT gateway is\nPending\n. After the status\n            changes to\nAvailable\n, the NAT gateway is ready for you to use. Be sure to\n          update your route tables as needed. For examples, see\nNAT gateway use cases\n.\nIf the status of the NAT gateway changes to\nFailed\n, there was an error \n      during creation. For more information, see\nNAT gateway creation fails\n.\nEdit secondary IP address associations\nEach IPv4 address can support up to 55,000 simultaneous connections to each unique\n        destination. A unique destination is identified by a unique combination of destination IP\n        address, the destination port, and protocol (TCP/UDP/ICMP). You can increase this limit by\n        associating up to 8 IPv4 addresses to your NAT Gateways (1 primary IPv4 address and 7\n        secondary IPv4 addresses). You are limited to associating 2 Elastic IP addresses to your\n        public NAT gateway by default. You can increase this limit by requesting a quota adjustment.\n        For more information, see\nElastic IP addresses\n.\nYou can use the\nNAT gateway CloudWatch\n          metrics\nErrorPortAllocation\nand\nPacketsDropCount\nto determine if your NAT gateway is generating port\n        allocation errors or dropping packets. To resolve this issue, add secondary IPv4 addresses\n        to your NAT gateway.\nConsiderations\nYou can add secondary private IPv4 addresses when you create a private NAT gateway or after\n          you create the NAT gateway using the procedure in this section. You can add secondary\n          EIP addresses to public NAT gateways only after you create the NAT gateway by using\n          the procedure in this section.\nYour NAT gateway can have up to 8 IPv4 addresses associated with it (1 primary IPv4 address\n          and 7 secondary IPv4 addresses). You can assign up to 8 private IPv4 addresses to your\n          private NAT Gateway. You are limited to associating 2 Elastic IP addresses to your\n          public NAT gateway by default. You can increase this limit by requesting a quota\n          adjustment. For more information, see\nElastic IP addresses\n.\nTo edit secondary IPv4 address associations\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNAT gateways\n.\nSelect the NAT gateway whose secondary IPv4 address associations you want to\n            edit.\nChoose\nActions\n, and then choose\nEdit secondary IP address associations\n.\nIf you are editing the secondary IPv4 address associations of a private NAT gateway,\n            under\nAction\n, choose\nAssign new\n              IPv4 addresses\nor\nUnassign existing IPv4\n              addresses\n. If you are editing the secondary IPv4 address associations of a\n            public NAT gateway, under\nAction\n, choose\nAssociate new IPv4 addresses\nor\nDisassociate existing IPv4 addresses\n.\nDo one of the following:\nIf you chose to assign or associate new IPv4 addresses, do the following:\nThis step is required. You must select a private IPv4 address. Choose the\nPrivate IPv4 address assigning method\n:\nAuto-assign\n: AWS automatically\n                        chooses a primary private IPv4 address and you choose if you want AWS to\n                        assign up to 7 secondary private IPv4 addresses to assign to the NAT\n                        gateway. AWS automatically chooses and assigns them for you at random from\n                        the subnet that your NAT gateway is in.\nCustom\n: Choose the primary private IPv4\n                        address and up to 7 secondary private IPv4 addresses to assign to the NAT\n                        gateway.\nUnder\nElastic IP allocation ID\n, choose an\n                    EIP to add as a secondary IPv4 address. This step is required. You must select\n                    an EIP along with a private IPv4 address. If you chose\nCustom\nfor the\nPrivate IP address assigning\n                      method\n, you also must enter a private IPv4 address for each EIP\n                    that you add.\nImportant\nWhen you assign a secondary EIP to a public NAT gateway, the network border group of the EIP must match the network border group of the Availability Zone (AZ) that the public NAT gateway is in. If it's not the same, the EIP will fail to assign. You can see the network border group for the subnet's AZ by viewing the details of the subnet. Similarly, you can view the network border group of an EIP by viewing the details of the EIP address. For more information about network border groups and EIPs, see\nAllocate an Elastic IP address\n.\nYour NAT gateway can have up to 8 IP addresses associated with it. If this is a\n                public NAT gateway, there is a default quota limit for EIPs per Region. For more\n                information, see\nElastic IP addresses\n.\nIf you chose to unassign or disassociate new IPv4 addresses, complete the following:\nUnder\nExisting secondary IP address to unassign\n, select the\n                    secondary IP addresses that you want to unassign.\n(optional) Under\nConnection drain duration\n, enter the maximum\n                    amount of time to wait (in seconds) before forcibly releasing the IP addresses\n                    if connections are still in progress. If you don't enter a value, the default\n                    value is 350 seconds.\nChoose\nSave changes\n.\nIf the status of the NAT gateway changes to\nFailed\n, there was an error \n        during creation. For more information, see\nNAT gateway creation fails\n.\nTag a NAT gateway\nYou can tag your NAT gateway to help you identify it or categorize it according to your\n        organization's needs. For information about working with tags, see\nTagging your Amazon EC2 resources\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nCost allocation tags are supported for NAT gateways. Therefore, you can also use tags to\n        organize your AWS bill and reflect your own cost structure. For more information, see\nUsing cost allocation tags\nin the\nAWS Billing User Guide\n. For more information about setting up a\n        cost allocation report with tags, see\nMonthly cost allocation\n          report\nin\nAbout AWS Account Billing\n.\nTo tag a NAT gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNAT Gateways\n.\nSelect the NAT gateway that you want to tag and choose\nActions\n. Then choose\nManage tags\n.\nChoose\nAdd new tag\n, and define a\nKey\nand\nValue\nfor the tag. You\n            can add up to 50 tags.\nChoose\nSave\n.\nDelete a NAT gateway\nIf you no longer need a NAT gateway, you can delete it. After you delete a NAT \n        gateway, its entry remains visible in the Amazon VPC console for about an hour, after \n        which it's automatically removed. You cannot remove this entry yourself.\nDeleting a NAT gateway disassociates its Elastic IP address, but does not release \n        the address from your account. If you delete a NAT gateway, the NAT gateway routes \n        remain in a\nblackhole\nstatus until you delete or update the routes.\nTo delete a NAT gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNAT Gateways\n.\nSelect the radio button for the NAT gateway, and then choose\nActions\n,\nDelete NAT gateway\n.\nWhen prompted for confirmation, enter\ndelete\nand then\n            choose\nDelete\n.\nIf you no longer need the Elastic IP address that was associated with a public\n            NAT gateway, we recommend that you release it. For more information, see\nRelease an Elastic IP address\n.\nAPI and CLI overview\nYou can perform the tasks described on this page using the command line or API. For more\n      information about the command line interfaces and a list of available API operations, see\nWorking with Amazon VPC\n.\nAssign a private IPv4 address to a private NAT gateway\nassign-private-nat-gateway-address\n(AWS CLI)\nRegister-EC2PrivateNatGatewayAddress\n(AWS Tools for Windows PowerShell)\nAssignPrivateNatGatewayAddress\n(Amazon EC2 Query API)\nAssociate Elastic IP addresses (EIPs) and private IPv4 addresses with a public NAT gateway\nassociate-nat-gateway-address\n(AWS CLI)\nRegister-EC2NatGatewayAddress\n(AWS Tools for Windows PowerShell)\nAssociateNatGatewayAddress\n(Amazon EC2 Query API)\nCreate a NAT gateway\ncreate-nat-gateway\n(AWS CLI)\nNew-EC2NatGateway\n(AWS Tools for Windows PowerShell)\nCreateNatGateway\n(Amazon EC2 Query API)\nDelete a NAT gateway\ndelete-nat-gateway\n(AWS CLI)\nRemove-EC2NatGateway\n(AWS Tools for Windows PowerShell)\nDeleteNatGateway\n(Amazon EC2 Query API)\nDescribe a NAT gateway\ndescribe-nat-gateways\n(AWS CLI)\nGet-EC2NatGateway\n(AWS Tools for Windows PowerShell)\nDescribeNatGateways\n(Amazon EC2 Query API)\nDisassociate secondary Elastic IP addresses (EIPs) from a public NAT gateway\ndisassociate-nat-gateway-address\n(AWS CLI)\nUnregister-EC2NatGatewayAddress\n(AWS Tools for Windows PowerShell)\nDisassociateNatGatewayAddress\n(Amazon EC2 Query API)\nTag a NAT gateway\ncreate-tags\n(AWS CLI)\nNew-EC2Tag\n(AWS Tools for Windows PowerShell)\nCreateTags\n(Amazon EC2 Query API)\nUnassign secondary IPv4 addresses from a private NAT gateway\nunassign-private-nat-gateway-address\n(AWS CLI)\nUnregister-EC2PrivateNatGatewayAddress\n(AWS Tools for Windows PowerShell)\nUnassignPrivateNatGatewayAddress\n(Amazon EC2 Query API)\nPricing\nWhen you provision a NAT gateway, you are charged for each hour that your NAT gateway is\n      available and each gigabyte of data that it processes. For more information, see\nAmazon VPC Pricing\n.\nThe following strategies can help you reduce the data transfer charges for your NAT gateway:\nIf your AWS resources send or receive a significant volume of traffic across\n          Availability Zones, ensure that the resources are in the same Availability Zone as the NAT\n          gateway. Alternatively, create a NAT gateway in each Availability Zone with resources.\nIf most traffic through your NAT gateway is to AWS services that support interface\n          endpoints or gateway endpoints, consider creating an interface endpoint or gateway endpoint\n          for these services. For more information about the potential cost savings, see\nAWS PrivateLink pricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nNAT devices\nUse cases\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-scenarios.html": "NAT gateway use cases - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nAccess the internet from a private subnet\nAccess your network using allow-listed IP addresses\nEnable communication between overlapping networks\nNAT gateway use cases\nThe following are example use cases for public and private NAT gateways.\nScenarios\nAccess the internet from a private subnet\nAccess your network using allow-listed IP addresses\nEnable communication between overlapping networks\nAccess the internet from a private subnet\nYou can use a public NAT gateway to enable instances in a private subnet to send outbound \n        traffic to the internet, while preventing the internet from establishing connections to the \n        instances.\nContents\nOverview\nRouting\nTest the public NAT gateway\nOverview\nThe following diagram illustrates this use case. There are two Availability Zones,\n          with two subnets in each Availability Zone. The route table for each subnet determines how\n          traffic is routed. In Availability Zone A, the instances in the public subnet can reach\n          the internet through a route to the internet gateway, while the instances in the private\n          subnet have no route to the internet. In Availability Zone B, the public subnet contains a\n          NAT gateway, and the instances in the private subnet can reach the internet through a\n          route to the NAT gateway in the public subnet. Both private and public NAT gateways map the source private IPv4 address of the\n          instances to the private IPv4 address of the private NAT gateway, but in the case of a\n          public NAT gateway, the internet gateway then maps the private IPv4 address of the public\n          NAT Gateway to the Elastic IP address associated with the NAT Gateway. When sending\n          response traffic to the instances, whether it's a public or private NAT gateway, the NAT\n          gateway translates the address back to the original source IP address.\nNote that if the instances in the private subnet in Availability Zone A also need to reach  \n          the internet, you can create a route from this subnet to the NAT gateway in Availability Zone B. \n          Alternatively, you can improve resiliency by creating a NAT gateway in each Availability Zone \n          that contains resources that require internet access. For an example diagram, see\nExample: VPC with servers in private subnets and NAT\n.\nRouting\nThe following is the route table associated with the public subnet in Availability\n          Zone A. The first entry is the local route; it enables the instances in the subnet to\n          communicate with other instances in the VPC using private IP addresses. The second entry\n          sends all other subnet traffic to the internet gateway, which enables the instances in the\n          subnet to access the internet.\nDestination\nTarget\nVPC CIDR\nlocal\n0.0.0.0/0\ninternet-gateway-id\nThe following is the route table associated with the private subnet in Availability\n          Zone A. The entry is the local route, which enables the instances in the subnet to\n          communicate with other instances in the VPC using private IP addresses. The instances \n          in this subnet have no access to the internet.\nDestination\nTarget\nVPC CIDR\nlocal\nThe following is the route table associated with the public subnet in Availability\n          Zone B. The first entry is the local route, which enables the instances in the subnet to\n          communicate with other instances in the VPC using private IP addresses. The second entry\n          sends all other subnet traffic to the internet gateway, which enables the NAT gateway in \n          the subnet to access the internet.\nDestination\nTarget\nVPC CIDR\nlocal\n0.0.0.0/0\ninternet-gateway-id\nThe following is the route table associated with the private subnet in Availability\n          Zone B. The first entry is the local route; it enables the instances in the subnet to\n          communicate with other instances in the VPC using private IP addresses. The second entry\n          sends all other subnet traffic to the NAT gateway.\nDestination\nTarget\nVPC CIDR\nlocal\n0.0.0.0/0\nnat-gateway-id\nFor more information, see\nWork with route tables\n.\nTest the public NAT gateway\nAfter you've created your NAT gateway and updated your route tables, you can ping\n          remote addresses on the internet from an instance in your private subnet to test whether\n          it can connect to the internet. For an example of how to do this, see\nTest the internet connection\n.\nIf you can connect to the internet, you can also test whether internet traffic is\n          routed through the NAT gateway:\nTrace the route of traffic from an instance in your private subnet. To do this,\n              run the\ntraceroute\ncommand from a Linux instance in your private subnet.\n              In the output, you should see the private IP address of the NAT gateway in one of the\n              hops (usually the first hop).\nUse a third-party website or tool that displays the source IP address when you\n              connect to it from an instance in your private subnet. The source IP address should be\n              the elastic IP address of the NAT gateway.\nIf these tests fail, see\nTroubleshoot NAT gateways\n.\nTest the internet connection\nThe following example demonstrates how to test whether an instance in a private\n            subnet can connect to the internet.\nLaunch an instance in your public subnet (use this as a bastion host). \n                In the launch wizard, ensure that you\n                select an Amazon Linux AMI, and assign a public IP address to your instance. Ensure that\n                your security group rules allow inbound SSH traffic from the range of IP addresses\n                for your local network, and outbound SSH traffic to the IP address range of your\n                private subnet (you can also use\n0.0.0.0/0\nfor both inbound and\n                outbound SSH traffic for this test).\nLaunch an instance in your private subnet. In the launch wizard, ensure that you\n                select an Amazon Linux AMI. Do not assign a public IP address to your instance.\n                Ensure that your security group rules allow inbound SSH traffic from the\n                private IP address of your instance that you launched in the public\n                subnet, and all outbound ICMP traffic. You must choose the same key pair\n                that you used to launch your instance in the public subnet.\nConfigure SSH agent forwarding on your local computer, and connect to your bastion\n                host in the public subnet. For more information, see\nTo configure SSH agent forwarding for Linux or macOS\nor\nTo configure SSH agent forwarding for Windows\n.\nFrom your bastion host, connect to your instance in the private subnet, and then\n                test the internet connection from your instance in the private subnet.\n                For more information, see\nTo test the internet connection\n.\nTo configure SSH agent forwarding for Linux or macOS\nFrom your local machine, add your private key to the authentication agent.\nFor Linux, use the following command.\nssh-add -c mykeypair.pem\nFor macOS, use the following command.\nssh-add -K mykeypair.pem\nConnect to your instance in the public subnet using the\n-A\noption to enable SSH\n              agent forwarding, and use the instance's public address, as shown in the following\n              example.\nssh -A ec2-user@\n54.0.0.123\nTo configure SSH agent forwarding for Windows\nYou can use the OpenSSH client available in Windows, or install your preferred \n              SSH client (for example, PuTTY).\nOpenSSH\nInstall OpenSSH for Windows as described in this article:\nGetting started with OpenSSH for Windows\n. Then add your key to the authentication\n                  agent. For more information, see\nKey-based authentication in OpenSSH for Windows\n.\nPuTTY\nDownload and install Pageant from the\nPuTTY download page\n, if not already installed.\nConvert your private key to .ppk format. For more information, see\nConverting your\n                      private key using PuTTYgen\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nStart Pageant, right-click the Pageant icon on the taskbar (it may be hidden), and\n                      choose\nAdd Key\n. Select the .ppk file that you created, enter the\n                      passphrase if necessary, and choose\nOpen\n.\nStart a PuTTY session and connect to your instance in the public subnet using its\n                      public IP address. For more information, see\nConnecting to your Linux instance\n. In the\nAuth\ncategory, ensure\n                      that you select the\nAllow agent forwarding\noption,\n                      and leave the\nPrivate key file for authentication\nbox blank.\nTo test the internet connection\nFrom your instance in the public subnet, connect to your instance in your private subnet by\n              using its private IP address as shown in the following example.\nssh ec2-user@\n10.0.1.123\nFrom your private instance, test that you can connect to the internet by running the\nping\ncommand for a website that has ICMP enabled.\nping ietf.org\nPING ietf.org (4.31.198.44) 56(84) bytes of data.\n64 bytes from mail.ietf.org (4.31.198.44): icmp_seq=1 ttl=47 time=86.0 ms\n64 bytes from mail.ietf.org (4.31.198.44): icmp_seq=2 ttl=47 time=75.6 ms\n...\nPress\nCtrl+C\non your keyboard to cancel the\nping\ncommand. If the\nping\ncommand fails, see\nInstances cannot access the\n                internet\n.\n(Optional) If you no longer require your instances, terminate them. For more information, see\nTerminate your\n                instance\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nAccess your network using allow-listed IP addresses\nYou can use a private NAT gateway to enable communication from your VPCs to your on-premises\n        network using a pool of allow-listed addresses. Instead of assigning each instance a separate \n        IP address from the allow-listed IP address range, you can route traffic from the subnet\n        that is destined for the on-premises network through a private NAT gateway with an IP address \n        from the allow-listed IP address range.\nContents\nOverview\nResources\nRouting\nOverview\nThe following diagram shows how instances can access on-premises resources\n          through AWS VPN. Traffic from the instances is routed to a virtual private gateway,\n          over the VPN connection, to the customer gateway, and then to the destination in\n          the on-premises network. However, suppose that the destination allows traffic \n          only from a specific IP address range, such as 100.64.1.0/28. This would prevent\n          traffic from these instances from reaching the on-premises network.\nThe following diagram shows the key components of the configuration for this \n          scenario. The VPC has its original IP address range plus the allowed IP address range. \n          The VPC has a subnet from the allowed IP address range with a private NAT gateway.\n          Traffic from the instances that is destined for the on-premises network is sent \n          to the NAT gateway before being routed to the VPN connection. The on-premises \n          network receives the traffic from the instances with the source IP address of the \n          NAT gateway, which is from the allowed IP address range.\nResources\nCreate or update resources as follows:\nAssociate the allowed IP address range with the VPC.\nCreate a subnet in the VPC from the allowed IP address range.\nCreate a private NAT gateway in the new subnet.\nUpdate the route table for the subnet with the instances to send traffic destined \n              for the on-premises network to the NAT gateway. Add a route to the route table for \n              the subnet with the private NAT gateway that sends traffic destined for the on-premises\n              network to the virtual private gateway.\nRouting\nThe following is the route table associated with the first subnet. There is a local\n          route for each VPC CIDR. Local routes enable resources in the subnet to communicate with\n          other resources in the VPC using private IP addresses. The third entry sends traffic\n          destined for the on-premises network to the private NAT gateway.\nDestination\nTarget\n10.0.0.0/16\nlocal\n100.64.1.0/24\nlocal\n192.168.0.0/16\nnat-gateway-id\nThe following is the route table associated with the second subnet. There is a local\n          route for each VPC CIDR. Local routes enable resources in the subnet to communicate with\n          other resources in the VPC using private IP addresses. The third entry sends traffic\n          destined for the on-premises network to the virtual private gateway.\nDestination\nTarget\n10.0.0.0/16\nlocal\n100.64.1.0/24\nlocal\n192.168.0.0/16\nvgw-id\nEnable communication between overlapping networks\nYou can use a private NAT gateway to enable communication between networks even if they\n        have overlapping CIDR ranges. For example, suppose that the instances in VPC A need to\n        access the services provided by the instances in VPC B.\nContents\nOverview\nResources\nRouting\nOverview\nThe following diagram shows the key components of the configuration for this scenario.\n          First, your IP management team determines which address ranges can overlap (non-routable\n          address ranges) and which cannot (routable address ranges). The IP management team\n          allocates address ranges from the pool of routable address ranges to projects on request.\nEach VPC has its original IP address range, which is non-routable, plus the routable\n          IP address range assigned to it by the IP management team. VPC A has a subnet from its\n          routable range with a private NAT gateway. The private NAT gateway gets its IP address\n          from its subnet. VPC B has a subnet from its routable range with an Application Load Balancer. The Application Load Balancer gets\n          its IP addresses from its subnets.\nTraffic from an instance in the non-routable subnet of VPC A that is destined for the\n          instances in the non-routable subnet of VPC B is sent through the private NAT gateway and\n          then routed to the transit gateway. The transit gateway sends the traffic to the Application Load Balancer,\n          which routes the traffic to one of the target instances in the non-routable subnet of VPC\n          B. The traffic from the transit gateway to the Application Load Balancer has the source IP address of the\n          private NAT gateway. Therefore, response traffic from the load balancer uses the address\n          of the private NAT gateway as its destination. The response traffic is sent to the transit\n          gateway and then routed to the private NAT gateway, which translates the destination to\n          the instance in the non-routable subnet of VPC A.\nResources\nCreate or update resources as follows:\nAssociate the assigned routable IP address ranges with their respective VPCs.\nCreate a subnet in VPC A from its routable IP address range, and create a private\n              NAT gateway in this new subnet.\nCreate a subnet in VPC B from its routable IP address range, and create an Application Load Balancer\n              in this new subnet. Register the instances in the non-routable subnet with the target\n              group for the load balancer.\nCreate a transit gateway to connect the VPCs. Be sure to disable route propagation.\n              When you attach each VPC to the transit gateway, use the routable address range of the\n              VPC.\nUpdate the route table of the non-routable subnet in VPC A to send all traffic\n              destined for the routable address range of VPC B to the private NAT gateway. Update\n              the route table of the routable subnet in VPC A to send all traffic destined for the\n              routable address range of VPC B to the transit gateway.\nUpdate the route table of the routable subnet in VPC B to send all traffic\n              destined for the routable address range of VPC A to the transit gateway.\nRouting\nThe following is the route table for the non-routable subnet in VPC A.\nDestination\nTarget\n10.0.0.0/16\nlocal\n100.64.1.0/24\nlocal\n100.64.2.0/24\nnat-gateway-id\nThe following is the route table for the routable subnet in VPC A.\nDestination\nTarget\n10.0.0.0/16\nlocal\n100.64.1.0/24\nlocal\n100.64.2.0/24\ntransit-gateway-id\nThe following is the route table for the non-routable subnet in VPC B.\nDestination\nTarget\n10.0.0.0/16\nlocal\n100.64.2.0/24\nlocal\nThe following is the route table for the routable subnet in VPC B.\nDestination\nTarget\n10.0.0.0/16\nlocal\n100.64.2.0/24\nlocal\n100.64.1.0/24\ntransit-gateway-id\nThe following is the transit gateway route table.\nCIDR\nAttachment\nRoute type\n100.64.1.0/24\nAttachment for VPC A\nStatic\n100.64.2.0/24\nAttachment for VPC B\nStatic\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nNAT gateways\nDNS64 and NAT64\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-nat64-dns64.html": "DNS64 and NAT64 - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nWhat is DNS64?\nWhat is NAT64?\nConfigure DNS64 and NAT64\nDNS64 and NAT64\nA NAT gateway supports network address translation from IPv6 to IPv4, popularly known as\n      NAT64. NAT64 helps your IPv6 AWS resources communicate with IPv4 resources in the\n        same VPC or a different VPC, in your on-premises network or over the internet. You can use NAT64\n        with DNS64 on Amazon Route 53 Resolver or use your own DNS64 server.\nContents\nWhat is DNS64?\nWhat is NAT64?\nConfigure DNS64 and NAT64\nWhat is DNS64?\nYour IPv6-only workloads running in VPCs can only send and receive IPv6 network packets.\n        Without DNS64, a DNS query for an IPv4-only service will yield an IPv4 destination address\n        in response and your IPv6-only service cannot communicate with it. To bridge this\n        communication gap, you can enable DNS64 for a subnet and it applies to all the AWS resources\n        within that subnet. With DNS64, the Amazon Route 53 Resolver looks up the DNS record for the\n        service you queried for and does one of the following:\nIf the record contains an IPv6 address, it returns the original record and the\n            connection is established without any translation over IPv6.\nIf there is no IPv6 address associated with the destination in the DNS record, the\n            Route 53 Resolver synthesizes one by prepending the well-known\n/96\nprefix,\n            defined in RFC6052 (\n64:ff9b::/96\n), to the IPv4 address in the record. Your\n            IPv6-only service sends network packets to the synthesized IPv6 address. You will then\n            need to route this traffic through the NAT gateway, which performs the necessary\n            translation on the traffic to allow IPv6 services in your subnet to access IPv4 services\n            outside that subnet.\nYou can enable or disable DNS64 on a subnet using the\nmodify-subnet-attribute\nusing\n        the AWS CLI or with the VPC console by selecting a subnet and choosing\nActions\n>\nEdit subnet settings\n.\nWhat is NAT64?\nNAT64 enables your IPv6-only services in Amazon VPCs to\n        communicate with IPv4-only services within the same VPC (in different subnets) or connected VPCs, in your on-premises networks, or over the internet.\nNAT64 is automatically available on your existing NAT gateways or on any new NAT gateways you create. It's not a feature\n        you enable or disable.\nAfter you enable DNS64, if your IPv6-only service sends network packets to a\n        synthesized IPv6 address through the NAT gateway, the following happens:\nFrom the\n64:ff9b::/96\nprefix, the NAT gateway recognizes that the original destination is IPv4 and translates the IPv6 packets to IPv4 by replacing:\nSource IPv6 with its own private IP which is translated to Elastic IP address by\n                the internet gateway.\nDestination IPv6 to IPv4 by truncating the\n64:ff9b::/96\nprefix.\nThe NAT gateway sends the translated IPv4 packets to the destination through the internet\n            gateway, virtual private gateway, or transit gateway and initiates a connection.\nThe IPv4-only host sends back IPv4 response packets. After a connection is established, NAT gateway accepts the response IPv4 packets \n          from the external hosts.\nThe response IPv4 packets are destined for NAT gateway, which receives the packets and de-NATs them by replacing its IP (destination IP) with \n          the host\u00e2\u0080\u0099s IPv6 address and prepending back\n64:ff9b::/96\nto the source IPv4 address. The packet then flows to the host following the local route.\nIn this way, the NAT gateway enables your IPv6-only workloads in a subnet to communicate with IPv4-only services outside the subnet.\nConfigure DNS64 and NAT64\nFollow the steps in this section to configure DNS64 and NAT64 to enable communication with IPv4-only services.\nContents\nEnable communication with IPv4-only services on the internet with the\n            AWS CLI\nEnable communication with IPv4-only services in your on-premises environment\nEnable communication with IPv4-only services on the internet with the\n            AWS CLI\nIf you have a subnet with IPv6-only workloads that needs to communicate with IPv4-only services outside the subnet,  \n        this example shows you how to enable these IPv6-only services to communicate with IPv4-only services on the internet.\nYou should first configure a NAT gateway in a public subnet (separate from the subnet containing the IPv6-only workloads). For example, \n        the subnet containing the NAT gateway should have a\n0.0/0\nroute pointing to the internet gateway.\nComplete these steps to enable these IPv6-only services to connect with IPv4-only services on the internet:\nAdd the following three routes to the route table of the subnet containing the IPv6-only\n            workloads:\nIPv4 route (if any) pointing to the NAT gateway.\n64:ff9b::/96\nroute pointing to the NAT gateway. This will allow\n                  traffic from your IPv6-only workloads destined for IPv4-only services to be\n                  routed through the NAT gateway.\nIPv6\n::/0\nroute pointing to the egress-only internet gateway (or the internet\n                gateway).\nNote that pointing\n::/0\nto the internet gateway will allow external IPv6 hosts (outside\n            the VPC) to initiate connection over IPv6.\naws ec2 create-route --route-table-id\nrtb-34056078\n--destination-cidr-block\n0.0.0.0/0\n--nat-gateway-id\nnat-05dba92075d71c408\naws ec2 create-route --route-table-id\nrtb-34056078\n--destination-ipv6-cidr-block\n64:ff9b::/96\n--nat-gateway-id\nnat-05dba92075d71c408\naws ec2 create-route --route-table-id\nrtb-34056078\n--destination-ipv6-cidr-block\n::/0\n--egress-only-internet-gateway-id\neigw-c0a643a9\nEnable DNS64 capability in the subnet containing the IPv6-only workloads.\naws ec2 modify-subnet-attribute --subnet-id\nsubnet-1a2b3c4d\n--enable-dns64\nNow, resources in your private subnet can establish stateful connections with both IPv4 and IPv6 services on the\n        internet. Configure your security group and NACLs appropriately to allow egress and ingress traffic to\n64:ff9b::/96\ntraffic.\nEnable communication with IPv4-only services in your on-premises environment\nAmazon Route 53 Resolver enables you to forward DNS queries from your VPC to an\n          on-premises network and vice versa. You can do this by doing the following:\nYou create a Route 53 Resolver outbound endpoint in a VPC and assign it the IPv4 addresses\n              that you want Route 53 Resolver to forward queries from. For your on-premises DNS\n              resolver, these are the IP addresses that the DNS queries originate from and,\n              therefore, should be IPv4 addresses.\nYou create one or more rules which specify the domain names of the DNS queries\n              that you want Route 53 Resolver to forward to your on-premises resolvers. You also\n              specify the IPv4 addresses of the on-premises resolvers.\nNow that you have set up a Route 53 Resolver outbound endpoint, you need to\n                enable DNS64 on the subnet containing your IPv6-only workloads and route any data\n                destined for your on-premises network through a NAT gateway.\nHow DNS64 works for IPv4-only destinations in on-premises networks:\nYou assign an IPv4 address to the Route 53 Resolver outbound endpoint in your VPC.\nThe DNS query from your IPv6 service goes to Route 53 Resolver over IPv6. Route 53 Resolver\n              matches the query against the forwarding rule and gets an IPv4 address for your\n              on-premises resolver.\nRoute 53 Resolver converts the query packet from IPv6 into IPv4 and forwards it to the\n              outbound endpoint. Each IP address of the endpoint represents one ENI that forwards\n              the request to the on-premises IPv4 address of your DNS resolver.\nThe on-premises resolver sends the response packet over IPv4 back through the outbound\n              endpoint to Route 53 Resolver.\nAssuming the query was made from a DNS64-enabled subnet, Route 53 Resolver does two\n              things:\nChecks the content of the response packet. If there\u00e2\u0080\u0099s an IPv6 address in the\n                record, it keeps the content as is, but if it contains only an IPv4 record. It\n                synthesizes an IPv6 record as well by prepending\n64:ff9b::/96\nto the IPv4\n                address.\nRepackages the content and sends it to the service in your VPC over IPv6.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nUse cases\nCloudWatch metrics\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway-cloudwatch.html": "Monitor NAT gateways with Amazon CloudWatch - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nNAT gateway metrics and dimensions\nView NAT gateway CloudWatch metrics\nCreate CloudWatch alarms to monitor a NAT gateway\nMonitor NAT gateways with Amazon CloudWatch\nYou can monitor your NAT gateway using CloudWatch, which collects information from your NAT\n          gateway and creates readable, near real-time metrics. You can use this information to\n          monitor and troubleshoot your NAT gateway. NAT gateway metric data is provided at 1-minute\n          intervals, and statistics are recorded for a period of 15 months.\nFor more information about Amazon CloudWatch, see the\nAmazon CloudWatch User Guide\n. For more information about\n          pricing, see\nAmazon CloudWatch Pricing\n.\nNAT gateway metrics and dimensions\nThe following metrics are available for your NAT gateways. The description column\n            includes a description of each metrics as well as the\nunits\nand\nstatistics\n.\nMetric\nDescription\nActiveConnectionCount\nThe total number of concurrent active TCP connections through the\n                                    NAT gateway.\nA value of zero indicates that there are no active connections through the NAT\n                                    gateway.\nUnits: Count\nStatistics: The most useful statistic is\nMax\n.\nBytesInFromDestination\nThe number of bytes received by the NAT gateway from the\n                                    destination.\nIf the value for\nBytesOutToSource\nis less than\n                                the value for\nBytesInFromDestination\n, there might be\n                                data loss during NAT gateway processing, or traffic being actively\n                                blocked by the NAT gateway.\nUnits: Bytes\nStatistics: The most useful statistic is\nSum\n.\nBytesInFromSource\nThe number of bytes received by the NAT gateway from clients in\n                                    your VPC.\nIf the value for\nBytesOutToDestination\nis less\n                                than the value for\nBytesInFromSource\n, there might be\n                                data loss during NAT gateway processing.\nUnits: Bytes\nStatistics: The most useful statistic is\nSum\n.\nBytesOutToDestination\nThe number of bytes sent out through the NAT gateway to the\n                                    destination.\nA value greater than zero indicates that there is traffic\n                                going to the internet from clients that are behind the NAT gateway.\n                                If the value for\nBytesOutToDestination\nis less than the\n                                value for\nBytesInFromSource\n, there might be data loss\n                                during NAT gateway processing.\nUnit: Bytes\nStatistics: The most useful statistic is\nSum\n.\nBytesOutToSource\nThe number of bytes sent through the NAT gateway to the clients in\n                                    your VPC.\nA value greater than zero indicates that there is traffic\n                                coming from the internet to clients that are behind the NAT gateway.\n                                If the value for\nBytesOutToSource\nis less than the\n                                value for\nBytesInFromDestination\n, there might be data\n                                loss during NAT gateway processing, or traffic being actively\n                                blocked by the NAT gateway.\nUnits: Bytes\nStatistics: The most useful statistic is\nSum\n.\nConnectionAttemptCount\nThe number of connection attempts made through the NAT\n                                    gateway.\nIf the value for\nConnectionEstablishedCount\nis less than the value for\nConnectionAttemptCount\n, this indicates that clients\n                                    behind the NAT gateway attempted to establish new connections for\n                                    which there was no response.\nUnit: Count\nStatistics: The most useful statistic is\nSum\n.\nConnectionEstablishedCount\nThe number of connections established through the NAT\n                                    gateway.\nIf the value for\nConnectionEstablishedCount\nis less than the value for\nConnectionAttemptCount\n, this indicates that clients\n                                    behind the NAT gateway attempted to establish new connections for\n                                    which there was no response.\nUnit: Count\nStatistics: The most useful statistic is\nSum\n.\nErrorPortAllocation\nThe number of times the NAT gateway could not allocate a source\n                                    port.\nA value greater than zero indicates that too many concurrent connections are open\n                                    through the NAT gateway.\nUnits: Count\nStatistics: The most useful statistic is\nSum\n.\nIdleTimeoutCount\nThe number of connections that transitioned from the active state to the idle state. An active connection transitions to idle if it was not closed gracefully and there was no activity for the last 350 seconds.\nA value greater than zero indicates that there are connections\n                                that have been moved to an idle state. If the value for\nIdleTimeoutCount\nincreases, it might indicate that\n                                clients behind the NAT gateway are re-using stale connections.\nUnit: Count\nStatistics: The most useful statistic is\nSum\n.\nPacketsDropCount\nThe number of packets dropped by the NAT gateway.\nA value greater than 0.01 percent might indicate an ongoing transient\n                                issue with the NAT gateway. If this value exceeds 0.01 percent of\n                                the total traffic on the NAT gateway, check the\nAWS service health\n                                dashboard\n.\nUnits: Count\nStatistics: The most useful statistic is\nSum\n.\nPacketsInFromDestination\nThe number of packets received by the NAT gateway from the\n                                    destination.\nIf the value for\nPacketsOutToSource\nis less than\n                                the value for\nPacketsInFromDestination\n, there might be\n                                data loss during NAT gateway processing, or traffic being actively\n                                blocked by the NAT gateway.\nUnit: Count\nStatistics: The most useful statistic is\nSum\n.\nPacketsInFromSource\nThe number of packets received by the NAT gateway from clients in\n                                    your VPC.\nIf the value for\nPacketsOutToDestination\nis less\n                                than the value for\nPacketsInFromSource\n, there might be\n                                data loss during NAT gateway processing.\nUnit: Count\nStatistics: The most useful statistic is\nSum\n.\nPacketsOutToDestination\nThe number of packets sent out through the NAT gateway to the\n                                    destination.\nA value greater than zero indicates that there is traffic\n                                going to the internet from clients that are behind the NAT gateway.\n                                If the value for\nPacketsOutToDestination\nis less than\n                                the value for\nPacketsInFromSource\n, there might be data\n                                loss during NAT gateway processing.\nUnit: Count\nStatistics: The most useful statistic is\nSum\n.\nPacketsOutToSource\nThe number of packets sent through the NAT gateway to the clients\n                                    in your VPC.\nA value greater than zero indicates that there is traffic\n                                coming from the internet to clients that are behind the NAT gateway.\n                                If the value for\nPacketsOutToSource\nis less than the\n                                value for\nPacketsInFromDestination\n, there might be data\n                                loss during NAT gateway processing, or traffic being actively\n                                blocked by the NAT gateway.\nUnit: Count\nStatistics: The most useful statistic is\nSum\n.\nPeakBytesPerSecond\nThis metric reports the highest 10-second bytes per second average in a given minute.\nUnits: Count\nStatistics: The most useful statistic is\nMaximum\n.\nPeakPacketsPerSecond\nThis metric calculates the average packet rate (packets processed per second) every 10 seconds for 60 seconds and then reports the maximum of the six rates (the highest average packet rate).\nUnits: Count\nStatistics: The most useful statistic is\nMaximum\n.\nTo filter the metric data, use the following dimension.\nDimension\nDescription\nNatGatewayId\nFilter the metric data by the NAT gateway ID.\nView NAT gateway CloudWatch metrics\nNAT gateway metrics are sent to CloudWatch at 1-minute intervals. Metrics are grouped first \n                by the service namespace, and then by the possible combinations of dimensions within \n                each namespace. You can view the metrics for your NAT gateways as follows.\nTo view metrics using the CloudWatch console\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nMetrics\n,\nAll\n                        metrics\n.\nChoose the\nNATGateway\nmetric namespace.\nChoose a metric dimension.\nTo view metrics using the AWS CLI\nAt a command prompt, use the following command to list the metrics that are\n                available for the NAT gateway service.\naws cloudwatch list-metrics --namespace \"AWS/NATGateway\"\nCreate CloudWatch alarms to monitor a NAT gateway\nYou can create a CloudWatch alarm that sends an Amazon SNS message when the alarm changes\n\t\t\tstate. An alarm watches a single metric over a time period that you specify. It sends a\n\t\t\tnotification to an Amazon SNS topic based on the value of the metric relative to a given\n\t\t\tthreshold over a number of time periods.\nFor example, you can create an alarm that monitors the amount of traffic coming in\n\t\t\tor leaving the NAT gateway. The following alarm monitors the amount of outbound traffic\n\t\t\tfrom clients in your VPC through the NAT gateway to the internet. It sends a\n\t\t\tnotification when the number of bytes reaches a threshold of 5,000,000 during a\n\t\t\t15-minute period.\nTo create an alarm for outbound traffic through the NAT gateway\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nAlarms\n,\nAll alarms\n.\nChoose\nCreate alarm\n.\nChoose\nSelect metric\n.\nChoose the\nNATGateway\nmetric namespace and then choose\n                        a metric dimension. When you get to the metrics, select the check box next to  \n                        the\nBytesOutToDestination\nmetric for the NAT gateway, and \n                        then choose\nSelect metric\n.\nConfigure the alarm as follows, and then choose\nNext\n:\nFor\nStatistic\n, choose\nSum\n.\nFor\nPeriod\n, choose\n15 minutes\n.\nFor\nWhenever\n, choose\nGreater/Equal\nand enter\n5000000\nfor the threshold.\nFor\nNotification\n, select an existing SNS topic or choose\nCreate new topic\nto create a new one. Choose\nNext\n.\nEnter a name and description for the alarm and choose\nNext\n.\nWhen you done configuring the alarm, choose\nCreate\n                        alarm\n.\nAs another example, you can create an alarm that monitors port allocation errors and \n    \t\t    sends a notification when the value is greater than zero (0) for three consecutive\n\t\t\t    5-minute periods.\nTo create an alarm to monitor port allocation errors\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nAlarms\n,\nAll alarms\n.\nChoose\nCreate alarm\n.\nChoose\nSelect metric\n.\nChoose the\nNATGateway\nmetric namespace and then choose\n    \t\t            a metric dimension. When you get to the metrics, select the check box next \n    \t\t            to the\nErrorPortAllocation\nmetric for the NAT gateway, \n    \t\t            and then choose\nSelect metric\n.\nConfigure the alarm as follows, and then choose\nNext\n:\nFor\nStatistic\n, choose\nMaximum\n.\nFor\nPeriod\n, choose\n5 minutes\n.\nFor\nWhenever\n, choose\nGreater\nand enter 0 for the threshold.\nFor\nAdditional configuration\n,\nDatapoints\n    \t\t                    to alarm\n, enter 3.\nFor\nNotification\n, select an existing SNS topic or choose\nCreate new topic\nto create a new one. Choose\nNext\n.\nEnter a name and description for the alarm and choose\nNext\n.\nWhen you are done configuring the alarm, choose\nCreate\n                        alarm\n.\nFor more information, see\nUsing Amazon CloudWatch alarms\nin\n                the\nAmazon CloudWatch User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDNS64 and NAT64\nTroubleshooting\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-troubleshooting.html": "Troubleshoot NAT gateways - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nNAT gateway creation fails\nNAT gateway quota\nElastic IP address quota\nAvailability Zone is\n                unsupported\nNAT gateway is no longer\n                visible\nNAT gateway doesn't respond to a ping\n                command\nInstances cannot access the\n                internet\nTCP connection to a destination\n                fails\nTraceroute output does not display NAT\n                gateway private IP address\nInternet connection drops after 350\n                seconds\nIPsec connection cannot be established\nCannot initiate more\n                connections\nTroubleshoot NAT gateways\nThe following topics help you to troubleshoot common issues that you might encounter when\n        creating or using a NAT gateway.\nIssues\nNAT gateway creation fails\nNAT gateway quota\nElastic IP address quota\nAvailability Zone is\n                unsupported\nNAT gateway is no longer\n                visible\nNAT gateway doesn't respond to a ping\n                command\nInstances cannot access the\n                internet\nTCP connection to a destination\n                fails\nTraceroute output does not display NAT\n                gateway private IP address\nInternet connection drops after 350\n                seconds\nIPsec connection cannot be established\nCannot initiate more\n                connections\nNAT gateway creation fails\nProblem\nYou create a NAT gateway and it goes to a state of\nFailed\n.\nNote\nA failed NAT gateway is automatically deleted, usually in about an hour.\nCause\nThere was an error when the NAT gateway was created. The returned state message\n             provides the reason for the error.\nSolution\nTo view the error message, open the Amazon VPC console, and then choose\nNAT\n           Gateways\n. Select the radio button for your NAT gateway, and then find\nState message\non the\nDetails\ntab.\nThe following table lists the possible causes of the failure as indicated in the Amazon VPC\n          console. After you've applied any of the remedial steps indicated, you can try to create a\n          NAT gateway again.\nDisplayed error\nCause\nSolution\nSubnet has insufficient free addresses to create this NAT gateway\nThe subnet that you specified does not have any free private IP addresses.\n                            The NAT gateway requires a network interface with a private IP address\n                            allocated from the subnet's range.\nCheck how many IP addresses are available in your subnet by going to the\nSubnets\npage in the Amazon VPC console. You can view\n                            the\nAvailable IPs\nin the details pane for your\n                            subnet. To create free IP addresses in your subnet, you can delete\n                            unused network interfaces, or terminate instances that you do not\n                            require.\nNetwork\nvpc-xxxxxxxx\nhas no internet gateway\n                            attached\nA NAT gateway must be created in a VPC with an internet gateway.\nCreate and attach an internet gateway to your VPC. For more information, see\nWork with internet gateways\n.\nElastic IP address\neipalloc-xxxxxxxx\nis already\n                  associated\nThe Elastic IP address that you specified is already associated with\n                    another resource, and cannot be associated with the NAT gateway.\nCheck which resource is associated with the Elastic IP address. Go to the\nElastic IPs\npage in the Amazon VPC console, and view\n                            the values specified for the instance ID or network interface ID. If you\n                            do not require the Elastic IP address for that resource, you can\n                            disassociate it. Alternatively, allocate a new Elastic IP address to\n                            your account. For more information, see\nWork with Elastic IP addresses\n.\nNAT gateway quota\nWhen you try to create a NAT gateway, you get the following error.\nPerforming this operation would exceed the limit of 5 NAT gateways\nCause\nYou've reached the quota for the number of NAT gateways for that Availability\n                Zone.\nSolution\nIf you've reached this NAT gateway quota for your account, you can do one of\n                the following:\nRequest an increase in the\nNAT gateways per\n                    Availability Zone quota\nusing the Service Quotas console.\nCheck the status of your NAT gateway. A status of\nPending\n,\nAvailable\n, or\nDeleting\ncounts against your quota.\n                        If you've recently deleted a NAT gateway, wait a few minutes for the status to\n                        go from\nDeleting\nto\nDeleted\n. Then try creating a new\n                        NAT gateway.\nIf you do not need your NAT gateway in a specific Availability Zone, try\n                        creating a NAT gateway in an Availability Zone where you haven't reached your\n                        quota.\nFor more information, see\nAmazon VPC quotas\n.\nElastic IP address quota\nProblem\nWhen you try to allocate an Elastic IP address for your public NAT gateway, you \n                get the following error.\nThe maximum number of addresses has been reached.\nCause\nYou've reached the quota for the number of Elastic IP addresses for your\n                account for that Region.\nSolution\nIf you've reached your Elastic IP address quota, you can disassociate an Elastic\n                IP address from another resource. Alternatively, you can request an increase in \n                the\nElastic IPs quota\nusing the Service Quotas console.\nAvailability Zone is\n                unsupported\nProblem\nWhen you try to create a NAT gateway, you get the following error:\nNotAvailableInZone\n.\nCause\nYou might be trying to create the NAT gateway in a constrained Availability Zone\n                    \u00e2\u0080\u0094 a zone in which our ability to expand is constrained.\nSolution\nWe cannot support NAT gateways in these Availability Zones. You can create a NAT\n                gateway in a different Availability Zone and use it for private subnets in the\n                constrained zone. You can also move your resources to an unconstrained Availability\n                Zone so that your resources and your NAT gateway are in the same zone.\nNAT gateway is no longer\n                visible\nProblem\nYou created a NAT gateway but it's no longer visible in the Amazon VPC console.\nCause\nThere might have been an error during the creation of your NAT gateway, and creation\n                failed. A NAT gateway with a status of\nFailed\nis visible in the Amazon VPC\n                console for about an hour). After an hour, it's automatically\n                deleted.\nSolution\nReview the information in\nNAT gateway creation fails\n, and try creating a new\n                    NAT gateway.\nNAT gateway doesn't respond to a ping\n                command\nProblem\nWhen you try to ping a NAT gateway's Elastic IP address or private IP address\n                    from the internet (for example, from your home computer) or from an instance in\n                    your VPC, you do not get a response.\nCause\nA NAT gateway only passes traffic from an instance in a private subnet to the\n                    internet.\nSolution\nTo test that your NAT gateway is working, see\nTest the public NAT gateway\n.\nInstances cannot access the\n                internet\nProblem\nYou created a public NAT gateway and followed the steps to test it, but the\nping\ncommand fails, or your instances in the private subnet\n                  cannot access the internet.\nCauses\nThe cause of this problem might be one of the following:\nThe NAT gateway is not ready to serve traffic.\nYour route tables are not configured correctly.\nYour security groups or network ACLs are blocking inbound or outbound\n                        traffic.\nYou're using an unsupported protocol.\nSolution\nCheck the following information:\nCheck that the NAT gateway is in the\nAvailable\nstate. In the Amazon VPC\n              console, go to the\nNAT Gateways\npage and view the status\n              information in the details pane. If the NAT gateway is in a failed state, there may\n              have been an error when it was created. For more information, see\nNAT gateway creation fails\n.\nCheck that you've configured your route tables correctly:\nThe NAT gateway must be in a public subnet with a route table that routes\n\t\t\t\t\tinternet traffic to an internet gateway.\nYour instance must be in a private subnet with a route table that routes\n\t\t\t\t\tinternet traffic to the NAT gateway.\nCheck that there are no other route table entries that route all or part of\n\t\t\t\t\t\t\t\tthe internet traffic to another device instead of the NAT\n\t\t\t\t\t\t\t\tgateway.\nEnsure that your security group rules for your private instance allow outbound\n\t\t\t\t\t\tinternet traffic. For the\nping\ncommand to work, the rules must\n\t\t\t\t\t\talso allow outbound ICMP traffic.\nThe NAT gateway itself allows all outbound traffic and traffic received in response to an\n              outbound request (it is therefore stateful).\nEnsure that the network ACLs that are associated with the private subnet and\n\t\t\t\t\t\tpublic subnets do not have rules that block inbound or outbound internet\n\t\t\t\t\t\ttraffic. For the\nping\ncommand to work, the rules must also\n\t\t\t\t\t\tallow inbound and outbound ICMP traffic.\nYou can enable flow logs to help you diagnose dropped connections because of network ACL or security group rules. For more information, see\nLogging IP traffic using VPC Flow Logs\n.\nIf you are using the\nping\ncommand, ensure that you are pinging a host\n                    that has ICMP enabled. If ICMP is not enabled, you will not receive reply\n                    packets. To test this, perform the same\nping\ncommand from the\n                    command line terminal on your own computer.\nCheck that your instance is able to ping other resources, for example, other\n            instances in the private subnet (assuming that security group rules allow this).\nEnsure that your connection is using a TCP, UDP, or ICMP protocol only.\nTCP connection to a destination\n                fails\nProblem\nSome of your TCP connections from instances in a private subnet to a specific\n                destination through a NAT gateway are successful, but some are failing or timing\n                out.\nCauses\nThe cause of this problem might be one of the following:\nThe destination endpoint is responding with fragmented TCP packets.\n                    NAT gateways do not support IP fragmentation for TCP or ICMP. For more\n                    information, see\nCompare NAT gateways and NAT instances\n.\nThe\ntcp_tw_recycle\noption is enabled on the remote server,\n                    which is known to cause issues when there are multiple connections from behind a\n                    NAT device.\nSolutions\nVerify whether the endpoint to which you're trying to connect is responding with\n                fragmented TCP packets by doing the following:\nUse an instance in a public subnet with a public IP address to trigger a response\n                        large enough to cause fragmentation from the specific endpoint.\nUse the\ntcpdump\nutility to verify that the endpoint is sending\n              fragmented packets.\nImportant\nYou must use an instance in a public subnet to perform these checks. You cannot use the\n                        instance from which the original connection was failing, or an instance in a\n                        private subnet behind a NAT gateway or a NAT instance.\nDiagnostic tools that send or receive large ICMP packets will report packet loss. For example,\n                  the command\nping -s 10000 example.com\ndoes not work behind a NAT\n                  gateway.\nIf the endpoint is sending fragmented TCP packets, you can use a NAT instance instead of\n                    a NAT gateway.\nIf you have access to the remote server, you can verify whether the\ntcp_tw_recycle\noption is enabled by doing the following:\nFrom the server, run the following command.\ncat /proc/sys/net/ipv4/tcp_tw_recycle\nIf the output is\n1\n, then the\ntcp_tw_recycle\noption is enabled.\nIf\ntcp_tw_recycle\nis enabled, we recommend disabling it. If\n                    you need to reuse connections,\ntcp_tw_reuse\nis a safer\n                    option.\nIf you don't have access to the remote server, you can test by temporarily disabling\n            the\ntcp_timestamps\noption on an instance in the private subnet. Then\n            connect to the remote server again. If the connection is successful, the cause of the\n            previous failure is likely because\ntcp_tw_recycle\nis enabled on the remote\n            server. If possible, contact the owner of the remote server to verify if this option is\n            enabled and request for it to be disabled.\nTraceroute output does not display NAT\n                gateway private IP address\nProblem\nYour instance can access the internet, but when you perform the\ntraceroute\ncommand, the output does not display the private IP\n                address of the NAT gateway.\nCause\nYour instance is accessing the internet using a different gateway, such as an\n                    internet gateway.\nSolution\nIn the route table of the subnet in which your instance is located, check the\n                    following information:\nEnsure that there is a route that sends internet traffic to the NAT gateway.\nEnsure that there isn't a more specific route that's sending internet traffic to\n\t\t\t\t\t\tother devices, such as a virtual private gateway or an internet gateway.\nInternet connection drops after 350\n                seconds\nProblem\nYour instances can access the internet, but the connection drops after 350\n                    seconds.\nCause\nIf a connection that's using a NAT gateway is idle for 350 seconds or more, the\n                connection times out.\nWhen a connection times out, a NAT gateway returns an RST packet to any resources\n                behind the NAT gateway that attempt to continue the connection (it does not send a\n                FIN packet).\nSolution\nTo prevent the connection from being dropped, you can initiate more traffic over\n                the connection. Alternatively, you can enable TCP keepalive on the instance with a\n                value less than 350 seconds.\nIPsec connection cannot be established\nProblem\nYou cannot establish an IPsec connection to a destination.\nCause\nNAT gateways currently do not support the IPsec protocol.\nSolution\nYou can use NAT-Traversal (NAT-T) to encapsulate IPsec traffic in UDP, which is a\n                supported protocol for NAT gateways. Ensure that you test your NAT-T and IPsec\n                configuration to verify that your IPsec traffic is not dropped.\nCannot initiate more\n                connections\nProblem\nYou have existing connections to a destination through a NAT gateway, but you\n                cannot establish more connections.\nCause\nYou might have reached the limit for simultaneous connections for a single NAT\n                    gateway. For more information, see\nNAT gateway basics\n. If your instances in the private\n                    subnet create a large number of connections, you might reach this limit.\nSolution\nDo one of the following:\nCreate a NAT gateway per Availability Zone and spread your clients across those\n              zones.\nCreate additional NAT gateways in the public subnet and split your clients into\n              multiple private subnets, each with a route to a different NAT gateway.\nLimit the number of connections your clients can create to the destination.\nUse the\nIdleTimeoutCount\nmetric in CloudWatch to monitor for\n                    increases in idle connections. Close idle connections to release\n                    capacity.\nCreate a NAT Gateway with multiple IP addresses or add secondary IP addresses\n                    to an existing NAT Gateway. Each new IPv4 address can support up to 55,000\n                    concurrent connections. For more information, see\nCreate a NAT gateway\nor\nEdit secondary IP address associations\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCloudWatch metrics\nNAT instances\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_NAT_Instance.html": "NAT instances - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nNAT instance basics\nCreate a VPC\nCreate a security group\nCreate a NAT AMI\nLaunch a NAT instance\nDisable source/destination checks\nUpdate the route table\nTest your NAT instance\nNAT instances\nA NAT instance provides network address translation (NAT). You can use a NAT instance to allow \n    resources in a private subnet to communicate with destinations outside the virtual private cloud (VPC), \n    such as the internet or an on-premises network. The resources in the private subnet can initiate \n    outbound IPv4 traffic to the internet, but they can't receive inbound traffic initiated on the internet.\nImportant\nNAT AMI is built on the last version of Amazon Linux, 2018.03, which reached the end of\n      standard support on December 31, 2020. For more information, see the following blog post:\nAmazon Linux\n        AMI end of life\n. This AMI will receive only critical security updates (there\n      will be no regular updates).\nIf you use an existing NAT AMI, AWS recommends that you\nmigrate to a NAT gateway\n. NAT gateways provide better availability, higher bandwidth, \n      and requires less administrative effort. For more information, see\nCompare NAT gateways and NAT instances\n.\nIf NAT instances are a better match for your use case than NAT gateways, you can create \n      your own NAT AMI.\nContents\nNAT instance basics\nCreate a VPC for the NAT instance\nCreate a security group for the NAT instance\nCreate a NAT AMI\nLaunch a NAT instance\nDisable source/destination checks\nUpdate the route table\nTest your NAT instance\nNAT instance basics\nThe following figure illustrates the NAT instance basics. The route table associated with\n      the private subnet sends internet traffic from the instances in the private subnet to the NAT\n      instance in the public subnet. The NAT instance then sends the traffic to the internet\n      gateway. The traffic is attributed to the public IP address of the NAT instance. The NAT\n      instance specifies a high port number for the response; if a response comes back, the NAT\n      instance sends it to an instance in the private subnet based on the port number for the\n      response.\nThe NAT instance must have internet access, so it must be in a public subnet (a subnet\n      that has a route table with a route to the internet gateway), and it must have a public IP\n      address or an Elastic IP address.\nTo get started with NAT instances, create a NAT AMI, create a security group for the\n        NAT instance, and launch the NAT instance into your VPC.\nYour NAT instance quota depends on your instance quota for the Region. For more information,\n      see\nAmazon EC2 service quotas\nin the\nAWS General Reference\n.\nCreate a VPC for the NAT instance\nUse the following procedure to create a VPC with a public subnet and a private subnet.\nTo create the VPC\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nChoose\nCreate VPC\n.\nFor\nResources to create\n, choose\nVPC and more\n.\nFor\nName tag auto-generation\n, enter a name for the VPC.\nTo configure the subnets, do the following:\nFor\nNumber of Availability Zones\n, choose\n1\nor\n2\n, depending on your needs.\nFor\nNumber of public subnets\n, ensure that you have one public\n              subnet per Availability Zone.\nFor\nNumber of private subnets\n, ensure that you have one\n              private subnet per Availability Zone.\nChoose\nCreate VPC\n.\nCreate a security group for the NAT instance\nCreate a security group with the rules described in the following table. These rules\n      enable your NAT instance to receive internet-bound traffic from instances in the private\n      subnet, as well as SSH traffic from your network. The NAT instance can also send traffic to\n      the internet, which enables the instances in the private subnet to get software updates.\nThe following are the recommended rules.\nInbound\nSource\nProtocol\nPort range\nComments\nPrivate subnet CIDR\nTCP\n80\nAllow inbound HTTP traffic from servers in the private subnet\nPrivate subnet CIDR\nTCP\n443\nAllow inbound HTTPS traffic from servers in the private subnet\nPublic IP address range of your network\nTCP\n22\nAllow inbound SSH access to the NAT instance from your network (over the internet gateway)\nOutbound\nDestination\nProtocol\nPort range\nComments\n0.0.0.0/0\nTCP\n80\nAllow outbound HTTP access to the internet\n0.0.0.0/0\nTCP\n443\nAllow outbound HTTPS access to the internet\nTo create the security group\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSecurity groups\n.\nChoose\nCreate security group\n.\nEnter a name and description for the security group.\nFor\nVPC\n, select the ID of the VPC for your NAT instance.\nAdd rules for inbound traffic under\nInbound rules\nas follows:\nChoose\nAdd rule\n. Choose\nHTTP\nfor\nType\nand enter the IP address range of your private subnet \n              for\nSource\n.\nChoose\nAdd rule\n. Choose\nHTTPS\nfor\nType\nand enter the IP address range of your private subnet\n              for\nSource\n.\nChoose\nAdd rule\n. Choose\nSSH\nfor\nType\nand enter the IP address range of your network for\nSource\n.\nAdd rules for outbound traffic under\nOutbound rules\nas follows:\nChoose\nAdd rule\n. Choose\nHTTP\nfor\nType\nand enter 0.0.0.0/0 for\nDestination\n.\nChoose\nAdd rule\n. Choose\nHTTPS\nfor\nType\nand enter 0.0.0.0/0 for\nDestination\n.\nChoose\nCreate security group\n.\nFor more information, see\nSecurity groups\n.\nCreate a NAT AMI\nA NAT AMI is configured to run NAT on an EC2 instance. You must create a NAT AMI\n      and then launch your NAT instance using your NAT AMI.\nIf you plan to use an operating system other than Amazon Linux for your NAT AMI, refer to the \n      documentation for this operating system to learn how to configure NAT. Be sure to save \n      these settings so that they persist even after an instance reboot.\nTo create a NAT AMI for Amazon Linux\nLaunch an EC2 instance running AL2023 or Amazon Linux 2. Be sure to specify the security\n          group that you created for the NAT instance.\nConnect to your instance and run the following commands on the instance to \n          enable iptables.\nsudo yum install iptables-services -y\nsudo systemctl enable iptables\nsudo systemctl start iptables\nDo the following on the instance to enable IP forwarding such that it persists \n          after reboot:\nUsing a text editor, such as\nnano\nor\nvim\n, create the\n              following configuration file:\n/etc/sysctl.d/custom-ip-forwarding.conf\n.\nAdd the following line to the configuration file.\nnet.ipv4.ip_forward=1\nSave the configuration file and exit the text editor.\nRun the following command to apply the configuration file.\nsudo sysctl -p /etc/sysctl.d/custom-ip-forwarding.conf\nRun the following command on the instance, and note the name of the primary network \n          interface. You'll need this information for the next step.\nnetstat -i\nIn the following example output,\ndocker0\nis a network interface created\n          by docker,\neth0\nis the primary network interface, and\nlo\nis the\n          loopback interface.\nIface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg\ndocker0   1500        0      0      0 0             0      0      0      0 BMU\neth0      9001  7276052      0      0 0       5364991      0      0      0 BMRU\nlo       65536   538857      0      0 0        538857      0      0      0 LRU\nIn the following example output, the primary network interface is\nenX0\n.\nIface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg\nenX0      9001     1076      0      0 0          1247      0      0      0 BMRU\nlo       65536       24      0      0 0            24      0      0      0 LRU\nIn the following example output, the primary network interface is\nens5\n.\nIface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg\nens5      9001    14036      0      0 0          2116      0      0      0 BMRU\nlo       65536       12      0      0 0            12      0      0      0 LRU\nRun the following commands on the instance to configure NAT. If the primary network\n          interface is not\neth0\n, replace\neth0\nwith the\n          primary network interface that you noted in the previous step.\nsudo /sbin/iptables -t nat -A POSTROUTING -o\neth0\n-j MASQUERADE\nsudo /sbin/iptables -F FORWARD\nsudo service iptables save\nCreate a NAT AMI from the EC2 instance. For more information, see\nCreate a Linux AMI from an instance\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nLaunch a NAT instance\nUse the following procedure to launch a NAT instance using the VPC, security group, \n      and NAT AMI that you created.\nTo launch a NAT instance\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\nOn the dashboard, choose\nLaunch instance\n.\nFor\nName\n, enter a name for your NAT instance.\nFor\nApplication and OS Images\n, select your NAT AMI (choose\nBrowse more AMIs\n,\nMy AMIs\n).\nFor\nInstance type\n, choose an instance type that provides the compute,\n          memory, and storage resources that your NAT instance needs.\nFor\nKey pair\n, select an existing key pair or choose\nCreate new key pair\n.\nFor\nNetwork settings\n, do the following:\nChoose\nEdit\n.\nFor\nVPC\n, choose the VPC that you created.\nFor\nSubnet\n, choose the public subnet that you created.\nFor\nAuto-assign public IP\n, choose\nEnable\n.\n               Alternatively, after you launch the NAT instance, allocate an Elastic IP address and \n               assign it to the NAT instance.\nFor\nFirewall\n, choose\nSelect existing security group\nand then choose the security group that you created.\nChoose\nLaunch instance\n. Choose the instance ID to open the instance details\n          page. Wait for the instance state to change to\nRunning\nand for the status \n          checks to succeed.\nDisable source/destination checks for the NAT instance (see\nDisable source/destination checks\n).\nUpdate the route table to send traffic to the NAT instance (see\nUpdate the route table\n).\nDisable source/destination checks\nEach EC2 instance performs source/destination checks by default. This means that\n      the instance must be the source or destination of any traffic it sends or receives. \n      However, a NAT instance must be able to send and receive\n      traffic when the source or destination is not itself. Therefore,\n      you must disable source/destination checks on the NAT instance.\nTo disable source/destination checking\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\nIn the navigation pane, choose\nInstances\n.\nSelect the NAT instance.\nChoose\nActions\n,\nNetworking\n,\nChange source/destination check\n.\nFor\nSource/destination checking\n, select\nStop\n.\nChoose\nSave\n.\nIf the NAT instance has a secondary network interface, choose it from\nNetwork interfaces\non the\nNetworking\ntab.\n          Choose the interface ID to go to the network interfaces page. Choose\nActions\n,\nChange source/dest. check\n, clear\nEnable\n, and choose\nSave\n.\nUpdate the route table\nThe route table for the private subnet must have a route that sends internet traffic to\n      the NAT instance.\nTo update the route table\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n.\nSelect the route table for the private subnet.\nOn the\nRoutes\ntab, choose\nEdit routes\nand then \n          choose\nAdd route\n.\nEnter 0.0.0.0/0 for\nDestination\nand the instance ID of the NAT instance\n              for\nTarget\n.\nChoose\nSave changes\n.\nFor more information, see\nConfigure route tables\n.\nTest your NAT instance\nAfter you have launched a NAT instance and completed the configuration steps above, you can\n      test whether an instance in your private subnet can access the internet through the NAT\n      instance by using the NAT instance as a bastion server.\nTasks\nStep 1: Update the NAT instance security group\nStep 2: Launch a test instance in the private\n          subnet\nStep 3: Ping an ICMP-enabled website\nStep 4: Clean up\nStep 1: Update the NAT instance security group\nTo allow instances in your private subnet to send ping traffic to the NAT instance, add\n        a rule to allow inbound and outbound ICMP traffic. To allow the NAT instance to serve as a\n        bastion server, add a rule to allow outbound SSH traffic to the private subnet.\nTo update your NAT instance security group\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSecurity groups\n.\nSelect the check box for the security group associated with your NAT instance.\nOn the\nInbound rules\ntab, choose\nEdit inbound\n          rules\n.\nChoose\nAdd rule\n. Choose\nAll ICMP - IPv4\nfor\nType\n. Choose\nCustom\nfor\nSource\nand enter the IP address range of your private subnet.\n          Choose\nSave rules\n.\nOn the\nOutbound rules\ntab, choose\nEdit outbound\n            rules\n.\nChoose\nAdd rule\n. Choose\nSSH\nfor\nType\n. Choose\nCustom\nfor\nDestination\nand enter the IP address range of your private\n            subnet.\nChoose\nAdd rule\n. Choose\nAll ICMP - IPv4\nfor\nType\n. Choose\nAnywhere - IPv4\nfor\nDestination\n. Choose\nSave rules\n.\nStep 2: Launch a test instance in the private\n          subnet\nLaunch an instance into your private subnet. You must allow SSH access from the NAT instance,\n        and you must use the same key pair that you used for the NAT instance.\nTo launch a test instance in the private subnet\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\nOn the dashboard, choose\nLaunch instance\n.\nSelect your private subnet.\nDo not assign a public IP address to this instance.\nEnsure that the security group for this instance allows inbound SSH access from your \n            NAT instance, or from the IP address range of your public subnet, and outbound ICMP traffic.\nSelect the same key pair that you used for the NAT instance.\nStep 3: Ping an ICMP-enabled website\nTo verify that the test instance in your private subnet can use your NAT instance to\n        communicate with the internet, run the\nping\ncommand.\nTo test the internet connection from your private instance\nFrom your local computer, configure SSH agent forwarding, so that you can use the\n            NAT instance as a bastion server.\nLinux and macOS\nssh-add\nkey\n.pem\nWindows\nDownload and install Pageant\n, \n                  if it is not already installed.\nConvert your private key to \n                  .ppk format\nusing PuTTYgen.\nStart Pageant, right-click the\nPageant\nicon on the taskbar (it \n                  might be hidden), and choose\nAdd Key\n. Select the .ppk file that \n                  you created, enter the passphrase if required, and choose\nOpen\n.\nFrom your local computer, connect to your NAT instance.\nLinux and macOS\nssh -A ec2-user@\nnat-instance-public-ip-address\nWindows\nConnect to your NAT instance using PuTTY. For\nAuth\n, \n                  you must select\nAllow agent forwarding\nand leave\nPrivate key file for authentication\nblank.\nFrom the NAT instance, run the\nping\ncommand, specifying a website that is \n            enabled for ICMP.\n[ec2-user@ip-10-0-4-184]$\nping\nietf.org\nTo confirm that your NAT instance has internet access, verify that you received output \n            such as the following, and then press\nCtrl+C\nto cancel the\nping\ncommand. Otherwise, verify that the NAT instance is in a\n            public subnet (its route table has a route to an internet gateway).\nPING ietf.org (104.16.45.99) 56(84) bytes of data.\n64 bytes from 104.16.45.99 (104.16.45.99): icmp_seq=1 ttl=33 time=7.88 ms\n64 bytes from 104.16.45.99 (104.16.45.99): icmp_seq=2 ttl=33 time=8.09 ms\n64 bytes from 104.16.45.99 (104.16.45.99): icmp_seq=3 ttl=33 time=7.97 ms\n...\nFrom your NAT instance, connect to your instance in your private subnet by using its private\n            IP address.\n[ec2-user@ip-10-0-4-184]$\nssh ec2-user@\nprivate-server-private-ip-address\nFrom your private instance, test that you can connect to the internet by running the\nping\ncommand.\n[ec2-user@ip-10-0-135-25]$\nping\nietf.org\nTo confirm that your private instance has internet access through the NAT instance\n            verify that you received output such as the following, and then press\nCtrl+C\nto cancel the\nping\ncommand.\nPING ietf.org (104.16.45.99) 56(84) bytes of data.\n64 bytes from 104.16.45.99 (104.16.45.99): icmp_seq=1 ttl=33 time=8.76 ms\n64 bytes from 104.16.45.99 (104.16.45.99): icmp_seq=2 ttl=33 time=8.26 ms\n64 bytes from 104.16.45.99 (104.16.45.99): icmp_seq=3 ttl=33 time=8.27 ms\n...\nTroubleshooting\nIf the\nping\ncommand fails from the server in the private subnet, \n          use the following steps to troubleshoot the issue:\nVerify that you pinged a website that has ICMP enabled. Otherwise, your server can't\n            receive reply packets. To test this, run the same\nping\ncommand from a\n            command line terminal on your own computer.\nVerify that the security group for your NAT instance allows inbound ICMP traffic from\n            your private subnet. Otherwise, your NAT instance can't receive the\nping\ncommand from your private instance.\nVerify that you disabled source/destination checking for your NAT instance. For more\n            information, see\nDisable source/destination checks\n.\nVerify that you configured your route tables correctly. For more information, see\nUpdate the route table\n.\nStep 4: Clean up\nIf you no longer require the test server in the private subnet, terminate the instance \n        so that you are no longer billed for it. For more information, see\nTerminate your instance\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nIf you no longer require the NAT instance, you can stop or terminate it, so that you\n        are no longer billed for it. If you created a NAT AMI, you can create a new NAT instance \n        whenever you need one.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTroubleshooting\nCompare NAT devices\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-eips.html": "Associate Elastic IP addresses with resources in your VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nElastic IP address concepts and rules\nWork with Elastic IP addresses\nPricing\nAssociate Elastic IP addresses with resources in your VPC\nAn\nElastic IP address\nis a static, public IPv4 address designed for\n        dynamic cloud computing. You can associate an Elastic IP address with any instance or\n        network interface in any VPC in your account. With an Elastic IP address, you can mask the\n        failure of an instance by rapidly remapping the address to another instance in your VPC.\nElastic IP address concepts and rules\nTo use an Elastic IP address, you first allocate it for use in your account. Then, you\n            can associate it with an instance or network interface in your VPC. Your Elastic IP\n            address remains allocated to your AWS account until you explicitly release it.\nAn Elastic IP address is a property of a network interface. You can associate an\n            Elastic IP address with an instance by updating the network interface attached to the\n            instance. The advantage of associating the Elastic IP address with the network interface\n            instead of directly with the instance is that you can move all the attributes of the\n            network interface from one instance to another in a single step. For more information,\n            see\nElastic network interfaces\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nThe following rules apply:\nAn Elastic IP address can be associated with a single instance or network\n                    interface at a time.\nYou can move an Elastic IP address from one instance or network interface to\n                    another.\nIf you associate an Elastic IP address with the eth0 network interface of your\n                    instance, its current public IPv4 address (if it had one) is released to the\n                    EC2-VPC public IP address pool. If you disassociate the Elastic IP address, the\n                    eth0 network interface is automatically assigned a new public IPv4 address\n                    within a few minutes. This doesn't apply if you've attached a second network\n                    interface to your instance.\nYou're limited to five Elastic IP addresses. To help conserve them, you can\n                    use a NAT device. For more information, see\nConnect to the internet or other networks using NAT devices\n.\nElastic IP addresses for IPv6 are not supported.\nYou can tag an Elastic IP address that's allocated for use in a VPC, however,\n                    cost allocation tags are not supported. If you recover an Elastic IP address,\n                    tags are not recovered.\nYou can access an Elastic IP address from the internet when the security group\n                    and network ACL allow traffic from the source IP address. The reply traffic from\n                    within the VPC back to the internet requires an internet gateway. For more\n                    information, see\nSecurity groups\nand\nNetwork ACLs\n.\nYou can use any of the following options for the Elastic IP addresses:\nHave Amazon provide the Elastic IP addresses. When you select this\n                            option, you can associate the Elastic IP addresses with a network border\n                            group. This is the location from which we advertise the CIDR block.\n                            Setting the network border group limits the CIDR block to this group.\nUse your own IP addresses. For information about bringing your own IP\n                            addresses, see\nBring your own\n                                IP addresses (BYOIP)\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nElastic IP addresses are regional. For more information about using Global Accelerator to provision\n            global IP addresses, see\nUsing\n                global static IP addresses instead of regional static IP addresses\nin the\nAWS Global Accelerator Developer Guide\n.\nWork with Elastic IP addresses\nThe following sections describe how you can work with Elastic IP addresses.\nTasks\nAllocate an Elastic IP address\nAssociate an Elastic IP address\nView your Elastic IP addresses\nTag an Elastic IP address\nDisassociate an Elastic IP address\nTransfer Elastic IP addresses\nRelease an Elastic IP address\nRecover an Elastic IP address\nAPI and command overview\nAllocate an Elastic IP address\nBefore you use an Elastic IP, you must allocate one for use in your VPC.\nTo allocate an Elastic IP address\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nElastic IPs\n.\nChoose\nAllocate Elastic IP\n                        address\n.\n(Optional) When you allocate an Elastic IP address (EIP), you choose the\nNetwork border group\nin which to allocate the EIP.\n                        A network border group is a collection of Availability Zones (AZs), Local\n                        Zones, or Wavelength Zones from which AWS advertises a public IP address.\n                        Local Zones and Wavelength Zones may have different network border groups\n                        than the AZs in a Region to ensure minimum latency or physical distance\n                        between the AWS network and the customers accessing the resources in these\n                        Zones.\nImportant\nYou must allocate an EIP in the same network border group as the AWS resource that will be associated with the EIP. An EIP in one network border group can only be advertised in zones in that network border group and not in any other zones represented by other network border groups.\nIf you have Local Zones or Wavelength Zones enabled (for more information,\n                        see\nEnable a Local Zone\nor\nEnable Wavelength Zones\n), you can choose a network border group\n                        for AZs, Local Zones, or Wavelength Zones. Choose the network border group\n                        carefully as the EIP and the AWS resource it is associated with must reside\n                        in the same network border group. You can use the EC2 console to view the\n                        network border group that your Availability Zones, Local Zones, or\n                        Wavelength Zones are in (see\nLocal Zones\n). Typically, all Availability Zones in a Region\n                        belong to the same network border group, whereas Local Zones or Wavelength\n                        Zones belong to their own separate network border groups.\nIf you don't have Local Zones or Wavelength Zones enabled, when you allocate an EIP, the network border group that represents all of the AZs for the Region (such as\nus-west-2\n) is predefined for you and you cannot change it. This means that the EIP that you allocate to this network border group will be advertised in all AZs in the Region you're in.\nFor\nPublic IPv4 address pool\nchoose one of the\n                        following:\nAmazon's pool of IP addresses\n\u00e2\u0080\u0094If you want\n                                an IPv4 address to be allocated from Amazon's pool of IP\n                                addresses.\nMy pool of public IPv4\n                                addresses\n\u00e2\u0080\u0094If you want to allocate an\n                                IPv4 address from an IP address pool that you have\n                                brought to your AWS account. This option is disabled\n                                if you do not have any IP address pools.\nCustomer owned pool of IPv4\n                                addresses\n\u00e2\u0080\u0094If you want to allocate\n                                an IPv4 address from a pool created from your\n                                on-premises network for use with an Outpost. This option\n                                is only available if you have an Outpost.\n(Optional) Add or remove a tag.\n[Add a tag] Choose\nAdd new tag\nand do the\n                        following:\nFor\nKey\n, enter the key\n                                name.\nFor\nValue\n, enter the key\n                                value.\n[Remove a tag] Choose\nRemove\nto the right\n                        of the tag\u00e2\u0080\u0099s Key and Value.\nChoose\nAllocate\n.\nAssociate an Elastic IP address\nYou can associate an Elastic IP with a running instance or network interface in\n                your VPC.\nAfter you associate the Elastic IP address with your instance,\n                the instance receives a public DNS hostname if DNS hostnames are enabled. For more\n                information, see\nDNS attributes for your VPC\n.\nTo associate an Elastic IP address with an instance or network interface\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nElastic\n                        IPs\n.\nSelect an Elastic IP address that's allocated for use with a\n                        VPC (the\nScope\ncolumn has a value of\nvpc\n), and then choose\nActions\n,\nAssociate Elastic IP\n                            address\n.\nChoose\nInstance\nor\nNetwork\n                        interface\n, and then select either the instance or\n                        network interface ID. Select the private IP address with which\n                        to associate the Elastic IP address. Choose\nAssociate\n.\nView your Elastic IP addresses\nYou can view the Elastic IP addresses that are allocated to your account.\nTo view your Elastic IP addresses\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nElastic\n                        IPs\n.\nTo filter the displayed list, start typing part of the Elastic\n                        IP address or one of its attributes in the search box.\nTag an Elastic IP address\nYou can apply tags to your Elastic IP address to help you identify it or categorize it\n                according to your organization's needs.\nTo tag an Elastic IP address\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nElastic IPs\n.\nSelect the Elastic IP address and choose\nTags\n.\nChoose\nManage tags\n, enter the tag keys\n                        and values as required, and choose\nSave\n.\nDisassociate an Elastic IP address\nTo change the resource that the Elastic IP address is associated with, you must\n                first disassociate it from the currently associated resource.\nTo disassociate an Elastic IP address\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nElastic\n                        IPs\n.\nSelect the Elastic IP address, and then choose\nActions\n,\nDisassociate Elastic\n                            IP address\n.\nWhen prompted, choose\nDisassociate\n.\nTransfer Elastic IP addresses\nThis section describes how to transfer Elastic IP addresses from one AWS account\n                to another. Transferring Elastic IP addresses can be helpful in the following\n                situations:\nOrganizational restructuring\n\u00e2\u0080\u0093 Use Elastic IP address\n                        transfers to quickly move workloads from one AWS account to another. You\n                        don't have to wait for new Elastic IP addresses to be allowlisted in your\n                        security groups and NACLs.\nCentralized security administration\n\u00e2\u0080\u0093 Use a centralized AWS security\n                    account to track and transfer Elastic IP addresses that have been vetted for\n                    security compliance.\nDisaster recovery\n\u00e2\u0080\u0093 Use Elastic IP address transfers to quickly remap IPs\n                    for public-facing internet workloads during emergency events.\nThere is no charge for transferring Elastic IP addresses.\nTasks\nEnable Elastic IP address transfer\nDisable Elastic IP address transfer\nAccept a transferred Elastic IP address\nEnable Elastic IP address transfer\nThis section describes how to accept a transferred Elastic IP address. Note\n                    the following limitations related to enabling Elastic IP addresses for\n                    transfer:\nYou can transfer Elastic IP addresses from any AWS account (source\n                            account) to any other AWS account in the same AWS Region (transfer\n                            account).\nWhen you transfer an Elastic IP address, there is a two-step handshake\n                            between the AWS accounts. When the source account starts the transfer,\n                            the transfer accounts have seven days to accept the Elastic IP address\n                            transfer. During those seven days, the source account can view the\n                            pending transfer (for example in the AWS console or by using the\ndescribe-address-transfers\nAWS CLI command). After seven days, the\n                            transfer expires and ownership of the Elastic IP\n                            address returns to the source\n                            account.\nAccepted transfers are visible to the source account (for example in\n                            the AWS console or by using the\ndescribe-address-transfers\nAWS CLI command) for three days\n                            after the transfers have been accepted.\nAWS does not notify transfer accounts about pending Elastic IP\n                            address transfer requests. The owner of the source account must notify \n                            the owner of the transfer account that there is an Elastic IP address  \n                            transfer request that they must accept.\nAny tags that are associated with an Elastic IP address being\n                            transferred are reset when the transfer is complete.\nYou cannot transfer Elastic IP addresses allocated from public IPv4\n                            address pools that you bring to your AWS account \u00e2\u0080\u0093 commonly\n                            referred to as Bring Your Own IP (BYOIP) address pools.\nIf you attempt to transfer an Elastic IP address that has a reverse\n                            DNS record associated with it, you can begin the transfer process, but\n                            the transfer account will not be able to accept the transfer until the\n                            associated DNS record is removed.\nIf you have enabled and configured AWS Outposts, you might have allocated\n                            Elastic IP addresses from a customer-owned IP address pool \n                            (CoIP). You cannot transfer Elastic IP addresses allocated from a CoIP.\n                            However, you can use AWS RAM to share a CoIP with another account.\n                            For more information, see\nCustomer-owned IP addresses\nin the\nAWS Outposts User Guide\n.\nYou can use Amazon VPC IPAM to track the transfer of Elastic IP\n                            addresses to accounts in an organization from AWS Organizations. For more \n                            information, see\nView IP address\n                                history\n. If an Elastic IP address is transferred to an AWS account\n                            outside of the organization, the IPAM audit history of the Elastic IP \n                            address is lost.\nThese steps must be completed by the source account.\nTo enable Elastic IP address transfer\nEnsure that you're using the source AWS account.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nElastic IPs\n.\nSelect one or more Elastic IP address to enable for transfer and choose\nActions\n,\nEnable transfer\n.\nIf you are transferring multiple Elastic IP addresses, you\u00e2\u0080\u0099ll see the\nTransfer\n                                type\noption. Choose one of the following options:\nChoose\nSingle account\nif you are transferring the Elastic IP addresses to\n                                    a single AWS account.\nChoose\nMultiple accounts\nif you are transferring the Elastic IP addresses\n                                    to multiple AWS accounts.\nUnder\nTransfer account ID\n, enter the IDs of the\n                            AWS accounts that you want to transfer the Elastic IP addresses\n                            to.\nConfirm the transfer by entering\nenable\nin the\n                            text box.\nChoose\nSubmit\n.\nTo accept the transfer, see\nAccept a transferred Elastic IP address\n. To\n                            disable the transfer, see\nDisable Elastic IP address transfer\n.\nDisable Elastic IP address transfer\nThis section describes how to disable an Elastic IP transfer after the\n                    transfer has been enabled.\nThese steps must be completed by the source account that enabled the\n                    transfer.\nTo disable an Elastic IP address transfer\nEnsure that you're using the source AWS account.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nElastic IPs\n.\nIn the resource list of Elastic IPs, ensure that you have the property enabled that shows the column\nTransfer status\n.\nSelect one or more Elastic IP address that have a\nTransfer\n                                status\nof\nPending\n, and choose\nActions\n,\nDisable\n                            transfer\n.\nConfirm by entering\ndisable\nin the text\n                            box.\nChoose\nSubmit\n.\nAccept a transferred Elastic IP address\nThis section describes how to accept a transferred Elastic IP address.\nWhen you transfer an Elastic IP address, there is a two-step handshake\n                    between the AWS accounts. When the source account starts the transfer,\n                    the transfer accounts have seven days to accept the Elastic IP address\n                    transfer. During those seven days, the source account can view the\n                    pending transfer (for example in the AWS console or by using the\ndescribe-address-transfers\nAWS CLI command). After seven days, the\n                    transfer expires and ownership of the Elastic IP\n                    address returns to the source\n                    account.\nWhen accepting transfers, note the following exceptions that might occur and\n                    how to resolve them:\nAddressLimitExceeded\n: If your\n                            transfer account has exceeded the Elastic IP address quota, the source\n                            account can enable Elastic IP address transfer, but this exception\n                            occurs when the transfer account tries to accept the transfer. By\n                            default, all AWS accounts are limited to 5 Elastic IP addresses per\n                            Region. See\nElastic IP address limit\nin the\nAmazon EC2 User Guide for Linux Instances\nfor instructions on increasing\n                            the limit.\nInvalidTransfer.AddressCustomPtrSet\n:\n                            If you or someone in your organization has configured the Elastic IP\n                            address that you are attempting to transfer to use reverse DNS lookup,\n                            the source account can enable transfer for the Elastic IP address, but\n                            this exception occurs when the transfer account tries to accept the\n                            transfer. To resolve this issue, the source account must remove the DNS\n                            record for the Elastic IP address. For more information, see\nRemove a reverse DNS record\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nInvalidTransfer.AddressAssociated\n: If\n                            an Elastic IP address is associated with an ENI or EC2 instance, the\n                            source account can enable transfer for the Elastic IP address, but this\n                            exception occurs when the transfer account tries to accept the transfer.\n                            To resolve this issue, the source account must disassociate the Elastic\n                            IP address. For more information, see\nDisassociate an Elastic IP address\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nFor any other exceptions,\ncontact\n                    AWS Support\n.\nThese steps must be completed by the transfer account.\nTo accept an Elastic IP address transfer\nEnsure that you're using the transfer account.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nElastic IPs\n.\nChoose\nActions\n,\nAccept transfer\n.\nNo tags that are associated with the Elastic IP address being\n                            transferred are transferred with the Elastic IP address when you accept\n                            the transfer. If you want to define a\nName\ntag for\n                            the Elastic IP address that you are accepting, select\nCreate a\n                                tag with a key of 'Name' and a value that you\n                            specify\n.\nEnter the Elastic IP address that you want to transfer.\nIf you are accepting multiple transferred Elastic IP addresses, choose\nAdd address\nto enter an additional Elastic IP\n                            address.\nChoose\nSubmit\n.\nRelease an Elastic IP address\nIf you no longer need an Elastic IP address, we recommend that you release it. You\n                incur charges for any Elastic IP address that's allocated for use with a VPC but\n                that's not associated with an instance. The Elastic IP address must not be\n                associated with an instance or network interface.\nTo release an Elastic IP address\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nElastic\n                        IPs\n.\nSelect the Elastic IP address, and then choose\nActions\n,\nRelease Elastic IP\n                            addresses\n.\nWhen prompted, choose\nRelease\n.\nRecover an Elastic IP address\nIf you release an Elastic IP address but change your mind, you might be able to\n                recover it. You cannot recover the Elastic IP address if it has been allocated to\n                another AWS account, or if recovering it results in you exceeding your Elastic IP\n                address quota.\nYou can recover an Elastic IP address by using the Amazon EC2 API or a command line\n                tool.\nTo recover an Elastic IP address using the AWS CLI\nUse the\nallocate-address\ncommand\n                    and specify the IP address using the\n--address\nparameter.\naws ec2 allocate-address --domain vpc --address\n203.0.113.3\nAPI and command overview\nYou can perform the tasks described in this section using the command line or an\n                API. For more information about the command line interfaces and a list of available\n                API actions, see\nWorking with Amazon VPC\n.\nAccept Elastic IP address transfer\naccept-address-transfer\n(AWS CLI)\nApprove-EC2AddressTransfer\n(AWS Tools for Windows PowerShell)\nAllocate an Elastic IP address\nallocate-address\n(AWS CLI)\nNew-EC2Address\n(AWS Tools for Windows PowerShell)\nAssociate an Elastic IP address with an instance or network interface\nassociate-address\n(AWS CLI)\nRegister-EC2Address\n(AWS Tools for Windows PowerShell)\nDescribe Elastic IP address transfers\ndescribe-address-transfers\n(AWS CLI)\nGet-EC2AddressTransfer\n(AWS Tools for Windows PowerShell)\nDisable Elastic IP address transfer\ndisable-address-transfer\n(AWS CLI)\nDisable-EC2AddressTransfer\n(AWS Tools for Windows PowerShell)\nDisassociate an Elastic IP address\ndisassociate-address\n(AWS CLI)\nUnregister-EC2Address\n(AWS Tools for Windows PowerShell)\nEnable Elastic IP address transfer\nenable-address-transfer\n(AWS CLI)\nEnable-EC2AddressTransfer\n(AWS Tools for Windows PowerShell)\nRelease an Elastic IP address\nrelease-address\n(AWS CLI)\nRemove-EC2Address\n(AWS Tools for Windows PowerShell)\nTag an Elastic IP address\ncreate-tags\n(AWS CLI)\nNew-EC2Tag\n(AWS Tools for Windows PowerShell)\nView your Elastic IP addresses\ndescribe-addresses\n(AWS CLI)\nGet-EC2Address\n(AWS Tools for Windows PowerShell)\nPricing\nTo ensure efficient use of Elastic IP addresses, we impose a small hourly\n            charge. For more information, see\nPublic IPv4 address\nin\nAmazon VPC Pricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCompare NAT devices\nAWS Transit Gateway\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/extend-tgw.html": "Connect your VPC to other VPCs and networks using a transit gateway - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nConnect your VPC to other VPCs and networks using a transit gateway\nYou can connect your virtual private clouds (VPC) and on-premises networks using \n        a transit gateway, which acts as a central hub, routing traffic between VPCs, VPN connections, \n        and AWS Direct Connect connections. For more information, see\nAWS Transit Gateway\n.\nThe following table describes some common use case for transit gateways and provides links to\n        more information in the\nAmazon VPC Transit Gateways\n.\nExample\nUsage\nCentralized router\nConfigure your transit gateway as a centralized router that connects all of your VPCs,\n                    AWS Direct Connect, and AWS Site-to-Site VPN connections. For more information, see\nExample:\n                        Centralized router\n.\nIsolated VPCs\nConfigure your transit gateway as multiple isolated routers. This is similar to using multiple\n                    transit gateways, but provides more flexibility in cases where the routes and\n                    attachments might change. For more information, see\nExample: Isolated\n                        VPCs\n.\nIsolated VPCs with shared services\nConfigure your transit gateway as multiple isolated routers that use a shared service. This is\n                    similar to using multiple transit gateways, but provides more flexibility in cases\n                    where the routes and attachments might change. For more information, see\nExample:\n                        Isolated VPCs with shared services\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nElastic IP addresses\nAWS Virtual Private Network\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpn-connections.html": "Connect your VPC to remote networks using AWS Virtual Private Network - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nConnect your VPC to remote networks using AWS Virtual Private Network\nYou can connect your VPC to remote networks and users using the following VPN connectivity options.\nVPN connectivity option\nDescription\nAWS Site-to-Site VPN\nYou can create an IPsec VPN connection between your VPC and your remote network. On the\n                        AWS side of the Site-to-Site VPN connection, a virtual private gateway or transit\n                        gateway provides two VPN endpoints (tunnels) for automatic failover. You\n                        configure your\ncustomer gateway device\non the remote\n                        side of the Site-to-Site VPN connection.\nFor more\n                            information, see the\nAWS Site-to-Site VPN User\n                                Guide\n.\nAWS Client VPN\nAWS Client VPN is a managed client-based VPN service that enables you to securely access\n                        your AWS resources or your on-premises network. With AWS Client VPN, you\n                        configure an endpoint to which your users can connect to establish a secure\n                        TLS VPN session. This enables clients to access resources in AWS or \n                        on-premises from any location using an OpenVPN-based VPN client.\nFor more information, see the\nAWS Client VPN Administrator Guide\n.\nAWS VPN CloudHub\nIf you have more than one remote network (for example, multiple branch offices), you can\n                        create multiple AWS Site-to-Site VPN connections via your virtual private gateway to\n                        enable communication between these networks.\nFor more information, see\nProviding\n                                secure communication between sites using VPN CloudHub\nin the\nAWS Site-to-Site VPN User Guide\n.\nThird party software VPN appliance\nYou can create a VPN connection to your remote network by using an Amazon EC2 instance\n\t\t\t\t\t\tin your VPC that's running a third party software VPN appliance. AWS does\n\t\t\t\t\t\tnot provide or maintain third party software VPN appliances; however, you\n\t\t\t\t\t\tcan choose from a range of products provided by partners and open source\n\t\t\t\t\t\tcommunities. Find third party software VPN appliances on the\nAWS Marketplace\n.\nYou can also use AWS Direct Connect to create a dedicated private connection from a remote network to\n\t\tyour VPC. You can combine this connection with an AWS Site-to-Site VPN to create an\n\t\tIPsec-encrypted connection. For more information, see\nWhat is AWS Direct Connect?\nin the\nAWS Direct Connect User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS Transit Gateway\nVPC peering connections\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-peering.html": "Connect VPCs using VPC peering - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nConnect VPCs using VPC peering\nA VPC peering connection is a networking connection between two VPCs that enables you \n    to route traffic between them privately. Resources in peered VPCs can communicate with \n    each other as if they are within the same network. You can create a VPC peering connection\n    between your own VPCs, with a VPC in another AWS account, or with a VPC in a different \n    AWS Region. Traffic between peered VPCs never traverses the public internet.\nAWS uses the existing infrastructure of a VPC to create a VPC peering connection. A \n        VPC peering connection is not a gateway or an AWS Site-to-Site VPN connection, and it does not rely \n        on a separate piece of physical hardware. There is no single point of failure for \n        communication or a bandwidth bottleneck.\nFor more information, see the\nAmazon VPC Peering Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS Virtual Private Network\nMonitoring\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/monitoring.html": "Monitoring your VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nMonitoring your VPC\nYou can use the following tools to monitor traffic or network access in your virtual private cloud (VPC).\nVPC Flow Logs\nYou can use VPC Flow Logs to capture detailed information about the traffic going to and from \n                    network interfaces in your VPCs.\nAmazon VPC IP Address Manager (IPAM)\nYou can use IPAM to plan, track, and monitor IP addresses for your workloads. For more \n                    information, see\nIP Address Manager\n.\nTraffic Mirroring\nYou can use this feature to copy network traffic from a network interface of an Amazon EC2 instance\n                    and send it to out-of-band security and monitoring appliances for deep packet inspection. You can \n                    detect network and security anomalies, gain operational insights, implement compliance and security\n                    controls, and troubleshoot issues. For more information, see\nTraffic Mirroring\n.\nReachability Analyzer\nYou can use this tool to analyze and debug network reachability between two resources in your VPC.\n                    After you specify the source and destination resources, Reachability Analyzer produces hop-by-hop details of the \n                    virtual path between them when they are reachable, and identifies the blocking component when they \n                    are unreachable. For more information, see\nReachability Analyzer\n.\nNetwork Access Analyzer\nYou can use Network Access Analyzer to understand network access to your resources. This helps \n                    you identify improvements to your network security posture and demonstrate that your network meets\n                    specific compliance requirements. For more information, see\nNetwork Access Analyzer\n.\nCloudTrail logs\nYou can use AWS CloudTrail to capture detailed information about the calls made to the Amazon VPC API. You can\n                    use the generated CloudTrail logs to determine which calls were made, the source IP address where \n                    the call came from, who made the call, when the call was made, and so on. For more information, \n                    see\nLogging Amazon EC2 Amazon EBS, and Amazon VPC API calls using AWS CloudTrail\nin the\nAmazon EC2 API Reference\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVPC peering connections\nVPC Flow Logs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html": "Logging IP traffic using VPC Flow Logs - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nFlow logs basics\nFlow log records\nFlow log limitations\nPricing\nLogging IP traffic using VPC Flow Logs\nVPC Flow Logs is a feature that enables you to capture information about the IP traffic\n        going to and from network interfaces in your VPC. Flow log data can be published to the\n        following locations: Amazon CloudWatch Logs, Amazon S3, or Amazon Kinesis Data Firehose. After you create a flow log, you can \n        retrieve and view the flow log records in the log group, bucket, or delivery stream that \n        you configured.\nFlow logs can help you with a number of tasks, such as:\nDiagnosing overly restrictive security group rules\nMonitoring the traffic that is reaching your instance\nDetermining the direction of the traffic to and from the network interfaces\nFlow log data is collected outside of the path of your network traffic, and therefore does\n        not affect network throughput or latency. You can create or delete flow logs without any\n        risk of impact to network performance.\nContents\nFlow logs basics\nFlow log records\nFlow log record examples\nFlow log limitations\nPricing\nWork with flow logs\nPublish flow logs to CloudWatch Logs\nPublish flow logs to Amazon S3\nPublish flow logs to Kinesis Data Firehose\nQuery flow logs using Amazon Athena\nTroubleshoot VPC Flow Logs\nFlow logs basics\nYou can create a flow log for a VPC, a subnet, or a network interface. If you create a\n            flow log for a subnet or VPC, each network interface in that subnet or VPC is monitored.\nFlow log data for a monitored network interface is recorded as\nflow log\n                records\n, which are log events consisting of fields that describe the\n            traffic flow. For more information, see\nFlow log records\n.\nTo create a flow log, you specify:\nThe resource for which to create the flow log\nThe type of traffic to capture (accepted traffic, rejected traffic, or all\n                    traffic)\nThe destinations to which you want to publish the flow log data\nIn the following example, you create a flow log that captures\n            accepted traffic for the network interface for one of the EC2 instances in a private subnet and publishes the flow log\n            records to an Amazon S3 bucket.\nIn the following example, a flow log captures all traffic for\n            a subnet and publishes the flow log records to Amazon CloudWatch Logs. The flow log captures traffic for all network interfaces in the subnet.\nAfter you create a flow log, it can take several minutes to begin collecting and\n            publishing data to the chosen destinations. Flow logs do not capture real-time log\n            streams for your network interfaces. For more information, see\nCreate a flow log\n.\nIf you launch an instance into your subnet after you create a flow log for your\n            subnet or VPC, we create a log stream (for CloudWatch Logs) or log file object (for Amazon S3) \n            for the new network interface as soon as there is network traffic for the network \n            interface.\nYou can create flow logs for network interfaces that are created by other AWS\n            services, such as:\nElastic Load Balancing\nAmazon RDS\nAmazon ElastiCache\nAmazon Redshift\nAmazon WorkSpaces\nNAT gateways\nTransit gateways\nRegardless of the type of network interface, you must use the Amazon EC2 console or the\n            Amazon EC2 API to create a flow log for a network interface.\nYou can apply tags to your flow logs. Each tag consists of a key and an optional value,\n            both of which you define. Tags can help you organize your flow logs, for example by\n            purpose or owner.\nIf you no longer require a flow log, you can delete it. Deleting a flow log disables\n            the flow log service for the resource, so that no new flow log records are created or\n            published. Deleting a flow log does not delete any existing flow log data. After you\n            delete a flow log, you can delete the flow log data directly from the destination when\n            you are finished with it. For more information, see\nDelete a flow log\n.\nFlow log records\nA flow log record represents a network flow in your VPC. By default, each record\n            captures a network internet protocol (IP) traffic flow (characterized by a 5-tuple on a\n            per network interface basis) that occurs within an\naggregation interval\n, \n            also referred to as a\ncapture window\n.\nEach record is a string with fields separated by spaces. A record includes values for the \n            different components of the IP flow, for example, the source, destination, and protocol.\nWhen you create a flow log, you can use the default format for the flow log record, or\n            you can specify a custom format.\nContents\nAggregation interval\nDefault format\nCustom format\nAvailable fields\nAggregation interval\nThe aggregation interval is the period of time during which a particular flow is\n                captured and aggregated into a flow log record. By default, the maximum aggregation\n                interval is 10 minutes. When you create a flow log, you can optionally specify a\n                maximum aggregation interval of 1 minute. Flow logs with a maximum aggregation\n                interval of 1 minute produce a higher volume of flow log records than flow logs with\n                a maximum aggregation interval of 10 minutes.\nWhen a network interface is attached to a\nNitro-based\n                    instance\n, the aggregation interval is always 1 minute or less,\n                regardless of the specified maximum aggregation interval.\nAfter data is captured within an aggregation interval, it takes additional time to\n                process and publish the data to CloudWatch Logs or Amazon S3. The flow log service typically\n                delivers logs to CloudWatch Logs in about 5 minutes and to Amazon S3 in about 10 minutes. However,\n                log delivery is on a best effort basis, and your logs might be delayed beyond the\n                typical delivery time.\nDefault format\nWith the default format, the flow log records include the version 2 fields, in the\n                order shown in the\navailable fields\ntable.\n                You cannot customize or change the default format. To capture additional fields or a\n                different subset of fields, specify a custom format instead.\nCustom format\nWith a custom format, you specify which fields are included in the flow log\n                records and in which order. This enables you to create flow logs that are specific\n                to your needs and to omit fields that are not relevant. Using a custom format can\n                reduce the need for separate processes to extract specific information from the\n                published flow logs. You can specify any number of the available flow log fields,\n                but you must specify at least one.\nAvailable fields\nThe following table describes all of the available fields for a flow log record.\n                The\nVersion\ncolumn indicates the VPC Flow Logs\n                version in which the field was introduced. The default format includes all version 2\n                fields, in the same order that they appear in the table.\nWhen publishing flow log data to Amazon S3, the data type for the fields depends on the\n                flow log format. If the format is plain text, all fields are of type\n                    STRING. If the format is Parquet, see the table for the field\n                data types.\nIf a field is not applicable or could not be computed for a specific record, the \n                record displays a '-' symbol for that entry. Metadata fields that do not come directly\n                from the packet header are best effort approximations, and their values might be \n                missing or inaccurate.\nField\nDescription\nVersion\nversion\nThe VPC Flow Logs version. If you use the default format, the\n                                    version is 2. If you use a custom format, the version is the \n                                    highest version among the specified fields. For example, if you \n                                    specify only fields from version 2, the version is 2. If you \n                                    specify a mixture of fields from versions 2, 3, and 4, the \n                                    version is 4.\nParquet data type:\nINT_32\n2\naccount-id\nThe AWS account ID of the owner of the source network\n                                    interface for which traffic is recorded. If the network\n                                    interface is created by an AWS service, for example when\n                                    creating a VPC endpoint or Network Load Balancer, the record might display\n                                        unknown for this field.\nParquet data type:\nSTRING\n2\ninterface-id\nThe ID of the network interface for which the traffic is\n                                    recorded.\nParquet data type:\nSTRING\n2\nsrcaddr\nThe source address for incoming traffic, or the IPv4 or IPv6\n                                    address of the network interface for outgoing traffic on the\n                                    network interface. The IPv4 address of the network interface is\n                                    always its private IPv4 address. See also\n                                        pkt-srcaddr.\nParquet data type:\nSTRING\n2\ndstaddr\nThe destination address for outgoing traffic, or the IPv4 or\n                                    IPv6 address of the network interface for incoming traffic on\n                                    the network interface. The IPv4 address of the network interface\n                                    is always its private IPv4 address. See also\n                                        pkt-dstaddr.\nParquet data type:\nSTRING\n2\nsrcport\nThe source port of the traffic.\nParquet data type:\nINT_32\n2\ndstport\nThe destination port of the traffic.\nParquet data type:\nINT_32\n2\nprotocol\nThe IANA protocol number of the traffic. For more information,\n                                    see\nAssigned Internet Protocol Numbers\n.\nParquet data type:\nINT_32\n2\npackets\nThe number of packets transferred during the flow.\nParquet data type:\nINT_64\n2\nbytes\nThe number of bytes transferred during the flow.\nParquet data type:\nINT_64\n2\nstart\nThe time, in Unix seconds, when the first packet of the flow\n                                    was received within the aggregation interval. This might be up\n                                    to 60 seconds after the packet was transmitted or received on\n                                    the network interface.\nParquet data type:\nINT_64\n2\nend\nThe time, in Unix seconds, when the last packet of the flow\n                                    was received within the aggregation interval. This might be up\n                                    to 60 seconds after the packet was transmitted or received on\n                                    the network interface.\nParquet data type:\nINT_64\n2\naction\nThe action that is associated with the traffic:\nACCEPT \u00e2\u0080\u0094 The traffic was accepted.\nREJECT \u00e2\u0080\u0094 The traffic was rejected.\n                                            For example, the traffic was not allowed by the security groups  \n                                            or network ACLs, or packets arrived after the connection was\n                                            closed.\nParquet data type:\nSTRING\n2\nlog-status\nThe logging status of the flow log:\nOK \u00e2\u0080\u0094 Data is logging normally to the\n                                            chosen destinations.\nNODATA \u00e2\u0080\u0094 There was no network traffic to\n                                            or from the network interface during the aggregation\n                                            interval.\nSKIPDATA \u00e2\u0080\u0094 Some flow log records were\n                                            skipped during the aggregation interval. This might be\n                                            because of an internal capacity constraint, or an\n                                            internal error.\nParquet data type:\nSTRING\n2\nvpc-id\nThe ID of the VPC that contains the network interface for\n                                    which the traffic is recorded.\nParquet data type:\nSTRING\n3\nsubnet-id\nThe ID of the subnet that contains the network interface for\n                                    which the traffic is recorded.\nParquet data type:\nSTRING\n3\ninstance-id\nThe ID of the instance that's associated with network\n                                    interface for which the traffic is recorded, if the instance is\n                                    owned by you. Returns a '-' symbol for a\nrequester-managed network interface\n; for example,\n                                    the network interface for a NAT gateway.\nParquet data type:\nSTRING\n3\ntcp-flags\nThe bitmask value for the following TCP flags:\nFIN \u00e2\u0080\u0094 1\nSYN \u00e2\u0080\u0094 2\nRST \u00e2\u0080\u0094 4\nSYN-ACK \u00e2\u0080\u0094 18\nIf no supported flags are recorded, the TCP flag\n                                value is 0.\nTCP flags can be OR-ed during the aggregation\n                                    interval. For short connections, the flags might be set on the\n                                    same line in the flow log record, for example, 19 for SYN-ACK\n                                    and FIN, and 3 for SYN and FIN. For an example, see\nTCP flag sequence\n.\nFor\n                                    general information about TCP flags (such as the meaning of\n                                    flags like FIN, SYN, and ACK), see\nTCP segment structure\non\n                                        Wikipedia.\nParquet data\n                                        type:\nINT_32\n3\ntype\nThe type of traffic. The possible values are: IPv4 |\n                                    IPv6 | EFA. For more information, see\nElastic Fabric Adapter\n.\nParquet data type:\nSTRING\n3\npkt-srcaddr\nThe packet-level (original) source IP address of the traffic.\n                                    Use this field with the srcaddr field to\n                                    distinguish between the IP address of an intermediate layer\n                                    through which traffic flows, and the original source IP address\n                                    of the traffic. For example, when traffic flows through\na network interface for a NAT\n                                        gateway\n, or where the IP address of a pod in Amazon EKS is\n                                    different from the IP address of the network interface of the\n                                    instance node on which the pod is running (for communication\n                                    within a VPC).\nParquet data type:\nSTRING\n3\npkt-dstaddr\nThe packet-level (original) destination IP address for the\n                                    traffic. Use this field with the dstaddr field to\n                                    distinguish between the IP address of an intermediate layer\n                                    through which traffic flows, and the final destination IP\n                                    address of the traffic. For example, when traffic flows through\na network interface for\n                                        a NAT gateway\n, or where the IP address of a pod in\n                                    Amazon EKS is different from the IP address of the network interface\n                                    of the instance node on which the pod is running (for\n                                    communication within a VPC).\nParquet data type:\nSTRING\n3\nregion\nThe Region that contains the network interface for which\n                                    traffic is recorded.\nParquet data type:\nSTRING\n4\naz-id\nThe ID of the Availability Zone that contains the network\n                                    interface for which traffic is recorded. If the traffic is from\n                                    a sublocation, the record displays a '-' symbol for this\n                                    field.\nParquet data type:\nSTRING\n4\nsublocation-type\nThe type of sublocation that's returned in the\n                                    sublocation-id field. The possible values are:\nwavelength\n|\noutpost\n|\nlocalzone\n.\n                                If the traffic is not from a sublocation, the record displays\n                                    a '-' symbol for this field.\nParquet data type:\nSTRING\n4\nsublocation-id\nThe ID of the sublocation that contains the network interface\n                                    for which traffic is recorded. If the traffic is not from a\n                                    sublocation, the record displays a '-' symbol for this\n                                    field.\nParquet data type:\nSTRING\n4\npkt-src-aws-service\nThe name of the subset of\nIP address\n                                        ranges\nfor the pkt-srcaddr field, if\n                                    the source IP address is for an AWS service. The possible values \n                                    are: AMAZON | AMAZON_APPFLOW |\n                                    AMAZON_CONNECT | API_GATEWAY |\n                                    CHIME_MEETINGS | CHIME_VOICECONNECTOR | \n                                    CLOUD9 | CLOUDFRONT | CODEBUILD |\n                                    DYNAMODB | EBS | EC2 |\n                                    EC2_INSTANCE_CONNECT | GLOBALACCELERATOR |\n                                    KINESIS_VIDEO_STREAMS | ROUTE53 | \n                                    ROUTE53_HEALTHCHECKS | ROUTE53_HEALTHCHECKS_PUBLISHING |\n                                    ROUTE53_RESOLVER | S3 | WORKSPACES_GATEWAYS.\nParquet data type:\nSTRING\n5\npkt-dst-aws-service\nThe name of the subset of IP address ranges for the\n                                    pkt-dstaddr field, if the destination IP address\n                                    is for an AWS service. For a list of possible values, see the \n                                    pkt-src-aws-service field.\nParquet data type:\nSTRING\n5\nflow-direction\nThe direction of the flow with respect to the interface where\n                                    traffic is captured. The possible values are:\n                                    ingress | egress.\nParquet data type:\nSTRING\n5\ntraffic-path\nThe path that egress traffic takes to the destination. To\n                                    determine whether the traffic is egress traffic, check the\n                                        flow-direction field. The possible values are\n                                    as follows. If none of the values apply, the field is set to -.\n1 \u00e2\u0080\u0094 Through another resource in the same VPC, including resources\n                                            that create a network interface in the VPC\n2 \u00e2\u0080\u0094 Through an internet gateway or a gateway VPC endpoint\n3 \u00e2\u0080\u0094 Through a virtual private gateway\n4 \u00e2\u0080\u0094 Through an intra-region VPC peering connection\n5 \u00e2\u0080\u0094 Through an inter-region VPC peering connection\n6 \u00e2\u0080\u0094 Through a local gateway\n7 \u00e2\u0080\u0094 Through a gateway VPC endpoint (Nitro-based\n                                            instances only)\n8 \u00e2\u0080\u0094 Through an internet gateway (Nitro-based\n                                            instances only)\nParquet data type:\nINT_32\n5\nFlow log limitations\nTo use flow logs, you need to be aware of the following limitations:\nYou can't enable flow logs for VPCs that are peered with your VPC unless the\n                    peer VPC is in your account.\nAfter you create a flow log, you cannot change its configuration or the\n                    flow log record format. For example, you can't associate a different IAM role\n                    with the flow log, or add or remove fields in the flow log record. Instead, you\n                    can delete the flow log and create a new one with the required configuration.\nIf your network interface has multiple IPv4 addresses and traffic is sent to a\n                    secondary private IPv4 address, the flow log displays the primary private IPv4\n                    address in the\ndstaddr\nfield. To capture the original destination\n                    IP address, create a flow log with the\npkt-dstaddr\nfield.\nIf traffic is sent to a network interface and the destination is not any of\n                    the network interface's IP addresses, the flow log displays the primary private\n                    IPv4 address in the\ndstaddr\nfield. To capture the original\n                    destination IP address, create a flow log with the\npkt-dstaddr\nfield.\nIf traffic is sent from a network interface and the source is not any of the\n                    network interface's IP addresses, the flow log displays the primary private IPv4\n                    address in the\nsrcaddr\nfield. To capture the original source IP\n                    address, create a flow log with the\npkt-srcaddr\nfield.\nIf traffic is sent to or sent from a network interface, the\nsrcaddr\nand\ndstaddr\nfields in the flow log always display the primary\n                    private IPv4 address, regardless of the packet source or destination. To capture\n                    the packet source or destination, create a flow log with the\npkt-srcaddr\nand\npkt-dstaddr\nfields.\nWhen your network interface is attached to a\nNitro-based\n                        instance\n, the aggregation interval is always 1 minute or less,\n                    regardless of the specified maximum aggregation interval.\nFlow logs do not capture all IP traffic. The following types of traffic are not\n            logged:\nTraffic generated by instances when they contact the Amazon DNS server. If you\n                    use your own DNS server, then all traffic to that DNS server is logged.\nTraffic generated by a Windows instance for Amazon Windows license\n                    activation.\nTraffic to and from\n169.254.169.254\nfor instance metadata.\nTraffic to and from\n169.254.169.123\nfor the Amazon Time Sync\n                    Service.\nDHCP traffic.\nMirrored traffic.\nTraffic to the reserved IP address for the default VPC router.\nTraffic between an endpoint network interface and a Network Load Balancer network interface.\nPricing\nData ingestion and archival charges for vended logs apply when you publish flow logs.\n            For more information about pricing when publishing vended logs, open\nAmazon CloudWatch Pricing\n, select\nLogs\nand find\nVended Logs\n.\nTo track charges from publishing flow logs, you can apply cost allocation tags \n            to your destination resource. Thereafter, your AWS cost allocation report includes \n            usage and costs aggregated by these tags. You can apply tags that represent business \n            categories (such as cost centers, application names, or owners) to organize your costs. \n            For more information, see the following:\nUsing Cost Allocation Tags\nin the\nAWS Billing User Guide\nTag log groups in Amazon CloudWatch Logs\nin the\nAmazon CloudWatch Logs User Guide\nUsing cost allocation S3 bucket tags\nin the\nAmazon Simple Storage Service User Guide\nTagging Your Delivery Streams\nin the\nAmazon Kinesis Data Firehose Developer Guide\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMonitoring\nFlow log record examples\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs-records-examples.html": "Flow log record examples - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nAccepted and rejected traffic\nNo data and skipped records\nSecurity group and network ACL\n                    rules\nIPv6 traffic\nTCP flag sequence\nTraffic through a NAT gateway\nTraffic through a transit gateway\nService name, traffic path, and flow\n                    direction\nFlow log record examples\nThe following are examples of flow log records that capture specific traffic\n            flows.\nFor information about flow log record format, see\nFlow log records\n. For information about how to create flow logs, see\nWork with flow logs\n.\nContents\nAccepted and rejected traffic\nNo data and skipped records\nSecurity group and network ACL\n                    rules\nIPv6 traffic\nTCP flag sequence\nTraffic through a NAT gateway\nTraffic through a transit gateway\nService name, traffic path, and flow\n                    direction\nAccepted and rejected traffic\nThe following are examples of default flow log records.\nIn this example, SSH traffic (destination port 22, TCP protocol) to network\n                interface eni-1235b8ca123456789 in account 123456789010 was allowed.\n2 123456789010 eni-1235b8ca123456789 172.31.16.139 172.31.16.21 20641 22 6 20 4249 1418530010 1418530070 ACCEPT OK\nIn this example, RDP traffic (destination port 3389, TCP protocol) to network\n                interface eni-1235b8ca123456789 in account 123456789010 was rejected.\n2 123456789010 eni-1235b8ca123456789 172.31.9.69 172.31.9.12 49761 3389 6 20 4249 1418530010 1418530070 REJECT OK\nNo data and skipped records\nThe following are examples of default flow log records.\nIn this example, no data was recorded during the aggregation interval.\n2 123456789010 eni-1235b8ca123456789 - - - - - - - 1431280876 1431280934 - NODATA\nIn this example, records were skipped during the aggregation interval. VPC Flow\n                Logs skips records when it can't capture flow log data during an aggregation\n                interval because it exceeds internal capacity. A single skipped record can represent\n                multiple flows that were not captured for the network interface during the\n                aggregation interval.\n2 123456789010 eni-11111111aaaaaaaaa - - - - - - - 1431280876 1431280934 - SKIPDATA\nSecurity group and network ACL\n                    rules\nIf you're using flow logs to diagnose overly restrictive or permissive security\n                group rules or network ACL rules, be aware of the statefulness of these resources.\n                Security groups are stateful \u00e2\u0080\u0094 this means that responses to allowed traffic\n                are also allowed, even if the rules in your security group do not permit it.\n                Conversely, network ACLs are stateless, therefore responses to allowed traffic are\n                subject to network ACL rules.\nFor example, you use the\nping\ncommand from your home computer \n                (IP address is 203.0.113.12) to your instance (the network interface's\n                private IP address is 172.31.16.139). Your security group's inbound\n                rules allow ICMP traffic but the outbound rules do not allow ICMP traffic. Because\n                security groups are stateful, the response ping from your instance is allowed. Your\n                network ACL permits inbound ICMP traffic but does not permit outbound ICMP traffic.\n                Because network ACLs are stateless, the response ping is dropped and does not reach\n                your home computer. In a default flow log, this is displayed as two flow log\n                records:\nAn ACCEPT record for the originating ping that was allowed by\n                        both the network ACL and the security group, and therefore was allowed to\n                        reach your instance.\nA REJECT record for the response ping that the network ACL\n                        denied.\n2 123456789010 eni-1235b8ca123456789 203.0.113.12 172.31.16.139 0 0 1 4 336 1432917027 1432917142 ACCEPT OK\n2 123456789010 eni-1235b8ca123456789 172.31.16.139 203.0.113.12 0 0 1 4 336 1432917094 1432917142 REJECT OK\nIf your network ACL permits outbound ICMP traffic, the flow log displays two\n                ACCEPT records (one for the originating ping and one for the\n                response ping). If your security group denies inbound ICMP traffic, the flow log\n                displays a single REJECT record, because the traffic was not permitted\n                to reach your instance.\nIPv6 traffic\nThe following is an example of a default flow log record. In the example, SSH\n                traffic (port 22) from IPv6 address\n                2001:db8:1234:a100:8d6e:3477:df66:f105 to network interface\n                eni-1235b8ca123456789 in account 123456789010 was allowed.\n2 123456789010 eni-1235b8ca123456789 2001:db8:1234:a100:8d6e:3477:df66:f105 2001:db8:1234:a102:3304:8879:34cf:4071 34892 22 6 54 8855 1477913708 1477913820 ACCEPT OK\nTCP flag sequence\nThis section contains examples of custom flow logs that capture the following\n                fields in the following order.\nversion vpc-id subnet-id instance-id interface-id account-id type srcaddr dstaddr srcport dstport pkt-srcaddr pkt-dstaddr protocol bytes packets start end action tcp-flags log-status\nThe tcp-flags field in the examples in this section are represented by the second-to-last value in the flow log. TCP flags can help you identify the direction of the\n                traffic, for example, which server initiated the connection.\nNote\nFor more information about the tcp-flags option and an explanation of each of the TCP flags, see\nAvailable fields\n.\nIn the following\n                records (starting at 7:47:55 PM and ending at 7:48:53 PM), two connections were\n                started by a client to a server running on port 5001. Two SYN flags (2)\n                were received by server from the client from different source ports on the client\n                    (43416 and 43418). For each SYN, a SYN-ACK was sent\n                from the server to the client (18) on the corresponding port.\n3 vpc-abcdefab012345678 subnet-aaaaaaaa012345678 i-01234567890123456 eni-1235b8ca123456789 123456789010 IPv4 52.213.180.42 10.0.0.62 43416 5001 52.213.180.42 10.0.0.62 6 568 8 1566848875 1566848933 ACCEPT 2 OK\n3 vpc-abcdefab012345678 subnet-aaaaaaaa012345678 i-01234567890123456 eni-1235b8ca123456789 123456789010 IPv4 10.0.0.62 52.213.180.42 5001 43416 10.0.0.62 52.213.180.42 6 376 7 1566848875 1566848933 ACCEPT 18 OK\n3 vpc-abcdefab012345678 subnet-aaaaaaaa012345678 i-01234567890123456 eni-1235b8ca123456789 123456789010 IPv4 52.213.180.42 10.0.0.62 43418 5001 52.213.180.42 10.0.0.62 6 100701 70 1566848875 1566848933 ACCEPT 2 OK\n3 vpc-abcdefab012345678 subnet-aaaaaaaa012345678 i-01234567890123456 eni-1235b8ca123456789 123456789010 IPv4 10.0.0.62 52.213.180.42 5001 43418 10.0.0.62 52.213.180.42 6 632 12 1566848875 1566848933 ACCEPT 18 OK\nIn the second aggregation interval, one of the connections that was established\n                during the previous flow is now closed. The client sent a FIN flag (1)\n                to the server for the connection on port 43418. The server sent a FIN\n                to the client on port 43418.\n3 vpc-abcdefab012345678 subnet-aaaaaaaa012345678 i-01234567890123456 eni-1235b8ca123456789 123456789010 IPv4 10.0.0.62 52.213.180.42 5001 43418 10.0.0.62 52.213.180.42 6 63388 1219 1566848933 1566849113 ACCEPT 1 OK\n3 vpc-abcdefab012345678 subnet-aaaaaaaa012345678 i-01234567890123456 eni-1235b8ca123456789 123456789010 IPv4 52.213.180.42 10.0.0.62 43418 5001 52.213.180.42 10.0.0.62 6 23294588 15774 1566848933 1566849113 ACCEPT 1 OK\nFor short connections (for example, a few seconds) that are opened and closed\n                within a single aggregation interval, the flags might be set on the same line in the\n                flow log record for traffic flow in the same direction. In the following example,\n                the connection is established and finished within the same aggregation interval. In\n                the first line, the TCP flag value is 3, which indicates that there was\n                a SYN and a FIN message sent from the client to the server. In the second line, the\n                TCP flag value is 19, which indicates that there was SYN-ACK and a FIN\n                message sent from the server to the client.\n3 vpc-abcdefab012345678 subnet-aaaaaaaa012345678 i-01234567890123456 eni-1235b8ca123456789 123456789010 IPv4 52.213.180.42 10.0.0.62 43638 5001 52.213.180.42 10.0.0.62 6 1260 17 1566933133 1566933193 ACCEPT 3 OK\n3 vpc-abcdefab012345678 subnet-aaaaaaaa012345678 i-01234567890123456 eni-1235b8ca123456789 123456789010 IPv4 10.0.0.62 52.213.180.42 5001 43638  10.0.0.62 52.213.180.42 6 967 14 1566933133 1566933193 ACCEPT 19 OK\nTraffic through a NAT gateway\nIn this example, an instance in a private subnet accesses the internet through a\n                NAT gateway that's in a public subnet.\nThe following custom flow log for the NAT gateway network interface captures the\n                following fields in the following order.\ninstance-id interface-id srcaddr dstaddr pkt-srcaddr pkt-dstaddr\nThe flow log shows the flow of traffic from the instance IP address (10.0.1.5)\n                through the NAT gateway network interface to a host on the internet (203.0.113.5).\n                The NAT gateway network interface is a requester-managed network interface,\n                therefore the flow log record displays a '-' symbol for the instance-id\n                field. The following line shows traffic from the source instance to the NAT gateway\n                network interface. The values for the dstaddr and\n                pkt-dstaddr fields are different. The dstaddr field\n                displays the private IP address of the NAT gateway network interface, and the\n                pkt-dstaddr field displays the final destination IP address of the\n                host on the internet.\n- eni-1235b8ca123456789 10.0.1.5 10.0.0.220 10.0.1.5 203.0.113.5\nThe next two lines show the traffic from the NAT gateway network interface to the\n                target host on the internet, and the response traffic from the host to the NAT\n                gateway network interface.\n- eni-1235b8ca123456789 10.0.0.220 203.0.113.5 10.0.0.220 203.0.113.5\n- eni-1235b8ca123456789 203.0.113.5 10.0.0.220 203.0.113.5 10.0.0.220\nThe following line shows the response traffic from the NAT gateway network\n                interface to the source instance. The values for the srcaddr and\n                pkt-srcaddr fields are different. The srcaddr field\n                displays the private IP address of the NAT gateway network interface, and the\n                pkt-srcaddr field displays the IP address of the host on the\n                internet.\n- eni-1235b8ca123456789 10.0.0.220 10.0.1.5 203.0.113.5 10.0.1.5\nYou create another custom flow log using the same set of fields as above. You\n                create the flow log for the network interface for the instance in the private\n                subnet. In this case, the instance-id field returns the ID of the\n                instance that's associated with the network interface, and there is no difference\n                between the dstaddr and pkt-dstaddr fields and the\n                srcaddr and pkt-srcaddr fields. Unlike the network\n                interface for the NAT gateway, this network interface is not an intermediate network\n                interface for traffic.\ni-01234567890123456 eni-1111aaaa2222bbbb3 10.0.1.5 203.0.113.5 10.0.1.5 203.0.113.5 #Traffic from the source instance to host on the internet\ni-01234567890123456 eni-1111aaaa2222bbbb3 203.0.113.5 10.0.1.5 203.0.113.5 10.0.1.5 #Response traffic from host on the internet to the source instance\nTraffic through a transit gateway\nIn this example, a client in VPC A connects to a web server in VPC B through a\n                transit gateway. The client and server are in different Availability Zones. Traffic\n                arrives at the server in VPC B using one elastic network interface ID (in this example, let's say the ID is eni-11111111111111111) and leaves VPC B using another (for example eni-22222222222222222).\nYou create a custom flow log for VPC B with the following format.\nversion interface-id account-id vpc-id subnet-id instance-id srcaddr dstaddr srcport dstport protocol tcp-flags type pkt-srcaddr pkt-dstaddr action log-status\nThe following lines from the flow log records demonstrate the flow of traffic on\n                the network interface for the web server. The first line is the request traffic from\n                the client, and the last line is the response traffic from the web server.\n3 eni-33333333333333333 123456789010 vpc-abcdefab012345678 subnet-22222222bbbbbbbbb i-01234567890123456 10.20.33.164 10.40.2.236 39812 80 6 3 IPv4 10.20.33.164 10.40.2.236 ACCEPT OK\n...\n3 eni-33333333333333333 123456789010 vpc-abcdefab012345678 subnet-22222222bbbbbbbbb i-01234567890123456 10.40.2.236 10.20.33.164 80 39812 6 19 IPv4 10.40.2.236 10.20.33.164 ACCEPT OK\nThe following line is the request traffic on eni-11111111111111111, a\n                requester-managed network interface for the transit gateway in subnet\n                subnet-11111111aaaaaaaaa. The flow log record therefore displays a\n                '-' symbol for the instance-id field. The srcaddr field\n                displays the private IP address of the transit gateway network interface, and the\n                pkt-srcaddr field displays the source IP address of the client in\n                VPC A.\n3 eni-11111111111111111 123456789010 vpc-abcdefab012345678 subnet-11111111aaaaaaaaa - 10.40.1.175 10.40.2.236 39812 80 6 3 IPv4 10.20.33.164 10.40.2.236 ACCEPT OK\nThe following line is the response traffic on eni-22222222222222222,\n                a requester-managed network interface for the transit gateway in subnet\n                subnet-22222222bbbbbbbbb. The dstaddr field displays\n                the private IP address of the transit gateway network interface, and the\n                pkt-dstaddr field displays the IP address of the client in VPC\n                A.\n3 eni-22222222222222222 123456789010 vpc-abcdefab012345678 subnet-22222222bbbbbbbbb - 10.40.2.236 10.40.2.31 80 39812 6 19 IPv4 10.40.2.236 10.20.33.164 ACCEPT OK\nService name, traffic path, and flow\n                    direction\nThe following is an example of the fields for a custom flow log record.\nversion srcaddr dstaddr srcport dstport protocol start end type packets bytes account-id vpc-id subnet-id instance-id interface-id region az-id sublocation-type sublocation-id action tcp-flags pkt-srcaddr pkt-dstaddr pkt-src-aws-service pkt-dst-aws-service traffic-path flow-direction log-status\nIn the following example, the version is 5 because the records include version 5\n                fields. An EC2 instance calls the Amazon S3 service. Flow logs are captured on the\n                network interface for the instance. The first record has a flow direction of\n                    ingress and the second record has a flow direction of\n                    egress. For the egress record,\n                    traffic-path is 8, indicating that the traffic goes through an\n                internet gateway. The traffic-path field is not supported for\n                    ingress traffic. When pkt-srcaddr or\n                    pkt-dstaddr is a public IP address, the service name is\n                shown.\n5 52.95.128.179 10.0.0.71 80 34210 6 1616729292 1616729349 IPv4 14 15044 123456789012 vpc-abcdefab012345678 subnet-aaaaaaaa012345678 i-0c50d5961bcb2d47b eni-1235b8ca123456789 ap-southeast-2 apse2-az3 - - ACCEPT 19 52.95.128.179 10.0.0.71 S3 - - ingress OK\n5 10.0.0.71 52.95.128.179 34210 80 6 1616729292 1616729349 IPv4 7 471 123456789012 vpc-abcdefab012345678 subnet-aaaaaaaa012345678 i-0c50d5961bcb2d47b eni-1235b8ca123456789 ap-southeast-2 apse2-az3 - - ACCEPT 3 10.0.0.71 52.95.128.179 - S3 8 egress OK\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVPC Flow Logs\nWork with flow logs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/working-with-flow-logs.html": "Work with flow logs - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nControl the use of flow logs\nCreate a flow log\nView a flow log\nTag a flow log\nDelete a flow log\nAPI and CLI overview\nWork with flow logs\nYou can work with flow logs using consoles for Amazon EC2 and Amazon VPC.\nTasks\nControl the use of flow logs\nCreate a flow log\nView a flow log\nTag a flow log\nDelete a flow log\nAPI and CLI overview\nControl the use of flow logs\nBy default, users do not have permission to work with flow logs. You can\n                create an IAM role with a policy attached that grants users the permissions to create, describe,\n                and delete flow logs.\nThe following is an example policy that grants users full permissions to create,\n                describe, and delete flow logs.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteFlowLogs\",\n        \"ec2:CreateFlowLogs\",\n        \"ec2:DescribeFlowLogs\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\nFor more information, see\nHow Amazon VPC works with IAM\n.\nCreate a flow log\nYou can create flow logs for your VPCs, subnets, or network interfaces. When\n                you create a flow log, you must specify a destination for the flow log. For more \n                information, see the following:\nCreate a flow log that publishes\n                    to CloudWatch Logs\nCreate a flow log that publishes to\n                    Amazon S3\nCreate a flow log that publishes to Kinesis Data Firehose\nView a flow log\nYou can view information about the flow logs for a resource, such as a network\n                interface. The information displayed includes the ID of the flow log, the flow \n                log configuration, and information about the status of the flow log.\nTo view information about flow logs\nDo one of the following:\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\n                                In the navigation pane, choose\nNetwork Interfaces\n. \n                                Select the checkbox for the network interface.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nYour VPCs\n.\n                                Select the checkbox for the VPC.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nSubnets\n.\n                                Select the checkbox for the subnet.\nChoose\nFlow Logs\n.\n(Optional) To view the flow log data, open the log destination.\nTag a flow log\nYou can add or remove tags for a flow log at any time.\nTo manage tags for a flow log\nDo one of the following:\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\n                                In the navigation pane, choose\nNetwork Interfaces\n. \n                                Select the checkbox for the network interface.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nYour VPCs\n.\n                                Select the checkbox for the VPC.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nSubnets\n.\n                                Select the checkbox for the subnet.\nChoose\nFlow Logs\n.\nChoose\nActions\n,\nManage tags\n.\nTo add a new tag, choose\nAdd new tag\nand enter the key\n                        and value. To remove a tag, choose\nRemove\n.\nWhen you are finished adding or removing tags, choose\nSave\n.\nDelete a flow log\nYou can delete a flow log at any time. After you delete a flow log, it can take \n                several minutes to stop collecting data.\nDeleting a flow log does not delete the log data from the destination or modify\n                the destination resource. You must delete the existing flow log data directly from\n                the destination, and clean up the destination resource, using the console for the\n                destination service.\nTo delete a flow log\nDo one of the following:\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\n                                In the navigation pane, choose\nNetwork Interfaces\n. \n                                Select the checkbox for the network interface.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nYour VPCs\n.\n                                Select the checkbox for the VPC.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nSubnets\n.\n                                Select the checkbox for the subnet.\nChoose\nFlow Logs\n.\nChoose\nActions\n,\nDelete flow logs\n.\nWhen prompted for confirmation, type\ndelete\nand then\n                        choose\nDelete\n.\nAPI and CLI overview\nYou can perform the tasks described on this page using the command line or API.\n                For more information about the command line interfaces and a list of available API\n                actions, see\nWorking with Amazon VPC\n.\nCreate a flow log\ncreate-flow-logs\n(AWS CLI)\nNew-EC2FlowLog\n(AWS Tools for Windows PowerShell)\nCreateFlowLogs\n(Amazon EC2 Query API)\nDescribe a flow log\ndescribe-flow-logs\n(AWS CLI)\nGet-EC2FlowLog\n(AWS Tools for Windows PowerShell)\nDescribeFlowLogs\n(Amazon EC2 Query API)\nTag a flow log\ncreate-tags\nand\ndelete-tags\n(AWS CLI)\nNew-EC2Tag\nand\nRemove-EC2Tag\n(AWS Tools for Windows PowerShell)\nCreateTags\nand\nDeleteTags\n(Amazon EC2 Query API)\nDelete a flow log\ndelete-flow-logs\n(AWS CLI)\nRemove-EC2FlowLog\n(AWS Tools for Windows PowerShell)\nDeleteFlowLogs\n(Amazon EC2 Query API)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nFlow log record examples\nPublish to CloudWatch Logs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs-cwl.html": "Publish flow logs to CloudWatch Logs - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nIAM role for publishing flow logs to CloudWatch Logs\nPermissions for IAM principals that publish flow logs to CloudWatch Logs\nCreate a flow log that publishes\n                    to CloudWatch Logs\nView flow log records\nSearch flow log records\nProcess flow log records in CloudWatch Logs\nPublish flow logs to CloudWatch Logs\nFlow logs can publish flow log data directly to Amazon CloudWatch.\nWhen publishing to CloudWatch Logs, \n            flow log data is published to a log group, and each network interface has a unique \n            log stream in the log group. Log streams contain flow log records. You can create \n            multiple flow logs that publish data to the same log group. If the same network \n            interface is present in one or more flow logs in the same log group, it has one \n            combined log stream. If you've specified that one flow log should capture rejected \n            traffic, and the other flow log should capture accepted traffic, then the combined \n            log stream captures all traffic.\nIn CloudWatch Logs, the\ntimestamp\nfield corresponds to the start time\n            that's captured in the flow log record. The\ningestionTime\nfield\n            indicates the date and time when the flow log record was received by CloudWatch Logs. This\n            timestamp is later than the end time that's captured in the flow log record.\nFor more information about CloudWatch Logs, see\nLogs sent to CloudWatch Logs\nin the\nAmazon CloudWatch Logs User Guide\n.\nPricing\nData ingestion and archival charges for vended logs apply when you publish flow \n                logs to CloudWatch Logs. For more information, open\nAmazon CloudWatch Pricing\n, select\nLogs\nand find\nVended Logs\n.\nContents\nIAM role for publishing flow logs to CloudWatch Logs\nPermissions for IAM principals that publish flow logs to CloudWatch Logs\nCreate a flow log that publishes\n                    to CloudWatch Logs\nView flow log records\nSearch flow log records\nProcess flow log records in CloudWatch Logs\nIAM role for publishing flow logs to CloudWatch Logs\nThe IAM role that's associated with your flow log must have sufficient\n                permissions to publish flow logs to the specified log group in CloudWatch Logs. The IAM role\n                must belong to your AWS account.\nThe IAM policy that's attached to your IAM role must include at least the\n                following permissions.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogGroups\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\nEnsure that your role has the following trust policy, which allows the flow logs\n                service to assume the role.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Principal\":\n{\n\"Service\": \"vpc-flow-logs.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nWe recommend that you use the\naws:SourceAccount\nand\naws:SourceArn\ncondition keys to protect yourself against\nthe confused deputy problem\n.\n                For example, you could add the following condition block to the previous trust \n                policy. The source account is the owner of the flow log and the source ARN \n                is the flow log ARN. If you don't know the flow log ID, you can replace that \n                portion of the ARN with a wildcard (*) and then update the policy after you \n                create the flow log.\n\"Condition\":\n{\n\"StringEquals\":\n{\n\"aws:SourceAccount\": \"\naccount_id\n\"\n    },\n    \"ArnLike\":\n{\n\"aws:SourceArn\": \"arn:aws:ec2:\nregion\n:\naccount_id\n:vpc-flow-log/\nflow-log-id\n\"\n    }\n}\nCreate an IAM role for flow logs\nYou can update an existing role as described above. Alternatively, you can use \n                    the following procedure to create a new role for use with flow logs. You'll specify \n                    this role when you create the flow log.\nTo create an IAM role for flow logs\nOpen the IAM console at\nhttps://console.aws.amazon.com/iam/\n.\nIn the navigation pane, choose\nPolicies\n.\nChoose\nCreate policy\n.\nOn the\nCreate policy\npage, do the following:\nChoose\nJSON\n.\nReplace the contents of this window with the permissions policy \n                                    at the start of this section.\nChoose\nNext: Tags\nand\nNext: Review\n.\nEnter a name for your policy and an optional description, and then choose\nCreate policy\n.\nIn the navigation pane, choose\nRoles\n.\nChoose\nCreate role\n.\nFor\nTrusted entity type\n, choose\nCustom\n                                trust policy\n. For\nCustom trust policy\n,\n                            replace\n\"Principal\":\n{\n},\nwith the following, then and choose\nNext\n.\n\"Principal\":\n{\n\"Service\": \"vpc-flow-logs.amazonaws.com\"\n},\nOn the\nAdd permissions\npage, select the checkbox\n                            for the policy that you created earlier in this procedure, and then\n                            choose\nNext\n.\nEnter a name for your role and optionally provide a description.\nChoose\nCreate role\n.\nPermissions for IAM principals that publish flow logs to CloudWatch Logs\nUsers must have permissions to use the\niam:PassRole\naction for\n                the IAM role that's associated with the flow log.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\"iam:PassRole\"],\n      \"Resource\": \"arn:aws:iam::\naccount-id\n:role/\nflow-log-role-name\n\"\n    }\n  ]\n}\nCreate a flow log that publishes\n                    to CloudWatch Logs\nYou can create flow logs for your VPCs, subnets, or network interfaces. If you\n                perform these steps as a user using a particular IAM role, ensure that the role has permissions to use the\niam:PassRole\naction. For more information, see\nPermissions for IAM principals that publish flow logs to CloudWatch Logs\n.\nPrerequisite\nCreate an IAM role, as described in\nIAM role for publishing flow logs to CloudWatch Logs\n.\nTo create a flow log using the console\nDo one of the following:\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\n                                In the navigation pane, choose\nNetwork Interfaces\n. \n                                Select the checkbox for the network interface.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nYour VPCs\n.\n                                Select the checkbox for the VPC.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nSubnets\n.\n                                Select the checkbox for the subnet.\nChoose\nActions\n,\nCreate flow log\n.\nFor\nFilter\n, specify the type of traffic to log.\n                        Choose\nAll\nto log accepted and rejected traffic,\nReject\nto log only rejected traffic, or\nAccept\nto log only accepted traffic.\nFor\nMaximum aggregation interval\n, choose the maximum\n                        period of time during which a flow is captured and aggregated into one flow\n                        log record.\nFor\nDestination\n, choose\nSend to CloudWatch\n                            Logs\n.\nFor\nDestination log group\n, choose the name of an\n                        existing log group or enter the name of a new log group that will be created\n                        when you create this flow log.\nFor\nIAM role\n, specify the name of the role that has\n                        permissions to publish logs to CloudWatch Logs.\nFor\nLog record format\n, select the format for the\n                        flow log record.\nTo use the default format, choose\nAWS\n                                    default format\n.\nTo use a custom format, choose\nCustom format\nand then select fields from\nLog format\n.\n(Optional) Choose\nAdd new tag\nto apply tags to the flow\n                        log.\nChoose\nCreate flow log\n.\nTo create a flow log using the command line\nUse one of the following commands.\ncreate-flow-logs\n(AWS CLI)\nNew-EC2FlowLogs\n(AWS Tools for Windows PowerShell)\nThe following AWS CLI example creates a flow log that captures all accepted traffic for\n                the specified subnet. The flow logs are delivered to the specified log group. The\n--deliver-logs-permission-arn\nparameter specifies the IAM role\n                required to publish to CloudWatch Logs.\naws ec2 create-flow-logs --resource-type\nSubnet\n--resource-ids\nsubnet-1a2b3c4d\n--traffic-type ACCEPT --log-group-name\nmy-flow-logs\n--deliver-logs-permission-arn arn:aws:iam::\n123456789101\n:role/\npublishFlowLogs\nView flow log records\nYou can view your flow log records using the CloudWatch Logs console. After you create your\n                flow log, it might take a few minutes for it to be visible in the console.\nTo view flow log records published to CloudWatch Logs using the console\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nLogs\n,\nLog\n                        groups\n.\nSelect the name of the log group that contains your flow logs to open\n                        its details page.\nSelect the name of the log stream that contains the flow log records. \n                        For more information, see\nFlow log records\n.\nTo view flow log records published to CloudWatch Logs using the command line\nget-log-events\n(AWS CLI)\nGet-CWLLogEvent\n(AWS Tools for Windows PowerShell)\nSearch flow log records\nYou can search your flow log records that are published to CloudWatch Logs using the\n                CloudWatch Logs console. You can use\nmetric filters\nto filter flow log records. Flow log records are space\n                delimited.\nTo search flow log records using the CloudWatch Logs console\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nLogs\n,\nLog \n                        groups\n.\nSelect the log group that contains your flow log, and then select the \n                        log stream, if you know the network interface that you are searching for. \n                        Alternatively, choose\nSearch log group\n. This might take some\n                        time if there are many network interfaces in your log group, or depending on\n                        the time range that you select.\nFor\nFilter events\n, enter the following string. This\n                        assumes that the flow log record uses the\ndefault format\n.\n[version, accountid, interfaceid, srcaddr, dstaddr, srcport, dstport, protocol, packets, bytes, start, end, action, logstatus]\nModify the filter as needed by specifying values for the fields. The\n                        following examples filter by specific source IP addresses.\n[version, accountid, interfaceid, srcaddr = 10.0.0.1, dstaddr, srcport, dstport, protocol, packets, bytes, start, end, action, logstatus]\n[version, accountid, interfaceid, srcaddr = 10.0.2.*, dstaddr, srcport, dstport, protocol, packets, bytes, start, end, action, logstatus]\nThe following examples filter by destination port, the number of bytes,\n                        and whether the traffic was rejected.\n[version, accountid, interfaceid, srcaddr, dstaddr, srcport, dstport = 80 || dstport = 8080, protocol, packets, bytes, start, end, action, logstatus]\n[version, accountid, interfaceid, srcaddr, dstaddr, srcport, dstport = 80 || dstport = 8080, protocol, packets, bytes >= 400, start, end, action = REJECT, logstatus]\nProcess flow log records in CloudWatch Logs\nYou can work with flow log records as you would with any other log events\n                collected by CloudWatch Logs. For more information about monitoring log data and metric\n                filters, see\nSearching and Filtering\n                    Log Data\nin the\nAmazon CloudWatch User Guide\n.\nExample: Create a CloudWatch metric\n                        filter and alarm for a flow log\nIn this example, you have a flow log for\neni-1a2b3c4d\n. You want\n                    to create an alarm that alerts you if there have been 10 or more rejected\n                    attempts to connect to your instance over TCP port 22 (SSH) within a 1-hour time\n                    period. First, you must create a metric filter that matches the pattern of the\n                    traffic for which to create the alarm. Then, you can create an alarm for the\n                    metric filter.\nTo create a metric filter for rejected SSH traffic and create an alarm\n                        for the filter\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nLogs\n,\nLog groups\n.\nSelect the check box for the log group, and then choose\nActions\n,\nCreate metric\n                                filter\n.\nFor\nFilter pattern\n, enter the following string.\n[version, account, eni, source, destination, srcport, destport=\"22\", protocol=\"6\", packets, bytes, windowstart, windowend, action=\"REJECT\", flowlogstatus]\nFor\nSelect log data to test\n, select the log\n                            stream for your network interface. (Optional) To view the lines of log\n                            data that match the filter pattern, choose\nTest\n                                pattern\n.\nWhen you're ready, choose\nNext\n.\nEnter a filter name, metric namespace, and metric name. Set the metric\n                            value to 1. When you're done, choose\nNext\nand then\n                            choose\nCreate metric filter\n.\nIn the navigation pane, choose\nAlarms\n,\nAll alarms\n.\nChoose\nCreate alarm\n.\nChoose the namespace for the metric filter that you created.\nIt can take a few minutes for a new metric to display in the\n                            console.\nSelect the metric name that you created, and then choose\nSelect metric\n.\nConfigure the alarm as follows, and then choose\nNext\n:\nFor\nStatistic\n, choose\nSum\n. This\n                                    ensure that you capture the total number of data points for the specified\n                                    time period.\nFor\nPeriod\n, choose\n1 hour\n.\nFor\nWhenever\n, choose\nGreater/Equal\nand enter 10 for the threshold.\nFor\nAdditional configuration\n,\nDatapoints\n                                    to alarm\n, leave the default of 1.\nFor\nNotification\n, select an existing SNS topic or choose\nCreate new topic\nto create a new one. Choose\nNext\n.\nEnter a name and description for the alarm and choose\nNext\n.\nWhen you are done configuring the alarm, choose\nCreate\n                                alarm\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWork with flow logs\nPublish to Amazon S3\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs-s3.html": "Publish flow logs to Amazon S3 - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nFlow log files\nPermissions for IAM principals that publish flow logs to Amazon S3\nAmazon S3 bucket permissions for flow\n                    logs\nRequired key policy for use with SSE-KMS\nAmazon S3 log file permissions\nCreate a flow log that publishes to\n                    Amazon S3\nView flow log records\nProcess flow log records in Amazon S3\nPublish flow logs to Amazon S3\nFlow logs can publish flow log data to Amazon S3.\nWhen publishing to Amazon S3, flow log data is \n            published to an existing Amazon S3 bucket that you specify. Flow log records for all of the \n            monitored network interfaces are published to a series of log file objects that are stored \n            in the bucket. If the flow log captures data for a VPC, the flow log publishes flow log \n            records for all of the network interfaces in the selected VPC.\nTo create an Amazon S3 bucket for use with flow logs, see\nCreate a bucket\nin the\nAmazon Simple Storage Service User Guide\n.\nFor more information about multiple account logging, see\nCentral Logging\nin the\n            AWS Solutions Library.\nFor more information about CloudWatch Logs, see\nLogs sent to Amazon S3\nin the\nAmazon CloudWatch Logs User Guide\n.\nPricing\nData ingestion and archival charges for vended logs apply when you publish flow logs \n                to Amazon S3. For more information, open\nAmazon CloudWatch Pricing\n, select\nLogs\nand find\nVended Logs\n.\nContents\nFlow log files\nPermissions for IAM principals that publish flow logs to Amazon S3\nAmazon S3 bucket permissions for flow\n                    logs\nRequired key policy for use with SSE-KMS\nAmazon S3 log file permissions\nCreate a flow log that publishes to\n                    Amazon S3\nView flow log records\nProcess flow log records in Amazon S3\nFlow log files\nVPC Flow Logs collects flow log records, consolidates them into log files, and \n                then publishes the log files to the Amazon S3 bucket at 5-minute intervals. Each log \n                file contains flow log records for the IP traffic recorded in the previous five\n                minutes.\nThe maximum file size for a log file is 75 MB. If the log file reaches the file\n                size limit within the 5-minute period, the flow log stops adding flow log records to\n                it. Then it publishes the flow log to the Amazon S3 bucket, and creates a new log\n                file.\nIn Amazon S3, the\nLast modified\nfield for the flow log file\n                indicates the date and time at which the file was uploaded to the Amazon S3 bucket. This\n                is later than the timestamp in the file name, and differs by the amount of time\n                taken to upload the file to the Amazon S3 bucket.\nLog file format\nYou can specify one of the following formats for the log files. Each file is\n                    compressed into a single Gzip file.\nText\n\u00e2\u0080\u0093 Plain text. This is \n                        the default format.\nParquet\n\u00e2\u0080\u0093 Apache Parquet is a \n                        columnar data format. Queries on data in Parquet format are 10 to 100 \n                        times faster compared to queries on data in plain text. Data in Parquet \n                        format with Gzip compression takes 20 percent less storage space than \n                        plain text with Gzip compression.\nNote\nIf data in Parquet format with Gzip compression is less than 100 KB per aggregation period, storing data in Parquet format may take up more space than plain text with Gzip compression due to Parquet file memory requirements.\nLog file options\nYou can optionally specify the following options.\nHive-compatible S3 prefixes\n\u00e2\u0080\u0093\n                        Enable Hive-compatible prefixes instead of importing partitions into your\n                        Hive-compatible tools. Before you run queries, use the\nMSCK REPAIR TABLE\ncommand.\nHourly partitions\n\u00e2\u0080\u0093 If you have a \n                        large volume of logs and typically target queries to a specific hour, you \n                        can get faster results and save on query costs by partitioning logs on an\n                        hourly basis.\nLog file S3 bucket structure\nLog files are saved to the specified Amazon S3 bucket using a folder structure that is\n                    based on the flow log's ID, Region, creation date, and destination options.\nBy default, the files are delivered to the following location.\nbucket-and-optional-prefix\n/AWSLogs/\naccount_id\n/vpcflowlogs/\nregion\n/\nyear\n/\nmonth\n/\nday\n/\nIf you enable Hive-compatible S3 prefixes, the files are delivered to the following location.\nbucket-and-optional-prefix\n/AWSLogs/aws-account-id=\naccount_id\n/aws-service=vpcflowlogs/aws-region=\nregion\n/year=\nyear\n/month=\nmonth\n/day=\nday\n/\nIf you enable hourly partitions, the files are delivered to the following location.\nbucket-and-optional-prefix\n/AWSLogs/\naccount_id\n/vpcflowlogs/\nregion\n/\nyear\n/\nmonth\n/\nday\n/\nhour\n/\nIf you enable Hive-compatible partitions and partition the flow log per hour, \n                the files are delivered to the following location.\nbucket-and-optional-prefix\n/AWSLogs/aws-account-id=\naccount_id\n/aws-service=vpcflowlogs/aws-region=\nregion\n/year=\nyear\n/month=\nmonth\n/day=\nday\n/hour=\nhour\n/\nLog file names\nThe file name of a log file is based on the flow log ID, Region, and creation\n                    date and time. File names use the following format.\naws_account_id\n_vpcflowlogs_\nregion\n_\nflow_log_id\n_\nYYYYMMDD\nT\nHHmm\nZ_\nhash\n.log.gz\nThe following is an example of a log file for a flow log created by AWS\n                account 123456789012, for a resource in the us-east-1\n                Region, on June 20, 2018 at 16:20 UTC. The file\n                contains the flow log records with an end time between 16:20:00 \n                and 16:24:59.\n123456789012_vpcflowlogs_us-east-1_fl-1234abcd_20180620T1620Z_fe123456.log.gz\nPermissions for IAM principals that publish flow logs to Amazon S3\nThe IAM principal that creates the flow log must be using an IAM role that has\n                the following permissions, which are required to publish flow logs to the\n                destination Amazon S3 bucket.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogDelivery\",\n        \"logs:DeleteLogDelivery\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\nAmazon S3 bucket permissions for flow\n                    logs\nBy default, Amazon S3 buckets and the objects they contain are private. Only the bucket\n                owner can access the bucket and the objects stored in it. However, the bucket owner\n                can grant access to other resources and users by writing an access policy.\nIf the user creating the flow log owns the bucket and has\nPutBucketPolicy\nand\nGetBucketPolicy\npermissions for the bucket, we automatically attach \n                the following policy to the bucket. This policy overwrites any existing policy attached \n                to the bucket.\nOtherwise, the bucket owner must add this policy to the bucket, specifying the AWS \n                account ID of the flow log creator, or flow log creation fails. For more information, \n                see\nUsing bucket policies\nin the\nAmazon Simple Storage Service User Guide\n.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Sid\": \"AWSLogDeliveryWrite\",\n            \"Effect\": \"Allow\",\n            \"Principal\":\n{\n\"Service\": \"delivery.logs.amazonaws.com\"\n            },\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": \"\nmy-s3-arn\n/*\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"aws:SourceAccount\":\naccount_id\n,\n                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n                },\n                \"ArnLike\":\n{\n\"aws:SourceArn\": \"arn:aws:logs:\nregion\n:\naccount_id\n:*\"\n                }\n            }\n        },\n{\n\"Sid\": \"AWSLogDeliveryAclCheck\",\n            \"Effect\": \"Allow\",\n            \"Principal\":\n{\n\"Service\": \"delivery.logs.amazonaws.com\"\n            },\n            \"Action\": [\n                \"s3:GetBucketAcl\",\n                \"s3:ListBucket\"\n            ],\n            \"Resource\": \"arn:aws:s3:::\nbucket_name\n\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"aws:SourceAccount\":\naccount_id\n},\n                \"ArnLike\":\n{\n\"aws:SourceArn\": \"arn:aws:logs:\nregion\n:\naccount_id\n:*\"\n                }\n            }\n        }\n    ]\n}\nThe ARN that you specify for\nmy-s3-arn\ndepends on\n                whether you use Hive-compatible S3 prefixes.\nDefault prefixes\narn:aws:s3:::\nbucket_name\n/\noptional_folder\n/AWSLogs/\naccount_id\n/*\nHive-compatible S3 prefixes\narn:aws:s3:::\nbucket_name\n/\noptional_folder\n/AWSLogs/aws-account-id=\naccount_id\n/*\nIt is a best practice to grant these permissions to the log delivery service \n                principal instead of individual AWS account ARNs. It is also a best practice \n                to use the\naws:SourceAccount\nand\naws:SourceArn\ncondition \n                keys to protect against\nthe confused \n                    deputy problem\n. The source account is the owner of the flow log and the \n                source ARN is the wildcard (*) ARN of the logs service.\nRequired key policy for use with SSE-KMS\nYou can protect the data in your Amazon S3 bucket by enabling either Server-Side\n                Encryption with Amazon S3-Managed Keys (SSE-S3) or Server-Side Encryption with KMS Keys\n                (SSE-KMS) on your S3 bucket. For more information, see\nProtecting data using\n                    server-side encryption\nin the\nAmazon S3 User\n                Guide\n.\nIf you choose SSE-S3, no additional configuration is required. Amazon S3 handles the encryption key.\nIf you choose SSE-KMS, you must use a customer managed key ARN. If you use a key ID, you can run into a\nLogDestination undeliverable\nerror when creating a flow log. Also, you must update the key policy for your customer managed key so that the log delivery account can write to your S3 bucket. \n                For more information about the required key policy for use with SSE-KMS, see\nAmazon S3 bucket server-side encryption\nin the\nAmazon CloudWatch Logs User Guide\n.\nAmazon S3 log file permissions\nIn addition to the required bucket policies, Amazon S3 uses access control lists (ACLs)\n                to manage access to the log files created by a flow log. By default, the bucket\n                owner has\nFULL_CONTROL\npermissions on each log file. The log delivery\n                owner, if different from the bucket owner, has no permissions. The log delivery\n                account has\nREAD\nand\nWRITE\npermissions. For more\n                information, see\nAccess Control List\n                    (ACL) Overview\nin the\nAmazon Simple Storage Service User Guide\n.\nCreate a flow log that publishes to\n                    Amazon S3\nAfter you have created and configured your Amazon S3 bucket, you can create flow logs\n                for your network interfaces, subnets, and VPCs.\nTo create a flow log using the console\nDo one of the following:\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\n                                In the navigation pane, choose\nNetwork Interfaces\n. \n                                Select the checkbox for the network interface.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nYour VPCs\n.\n                                Select the checkbox for the VPC.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nSubnets\n.\n                                Select the checkbox for the subnet.\nChoose\nActions\n,\nCreate flow log\n.\nFor\nFilter\n, specify the type of IP traffic data to\n                        log.\nAccepted\n\u00e2\u0080\u0093 Log only accepted traffic.\nRejected\n\u00e2\u0080\u0093 Log only rejected traffic.\nAll\n\u00e2\u0080\u0093 Log accepted and rejected traffic.\nFor\nMaximum aggregation interval\n, choose the maximum\n                        period of time during which a flow is captured and aggregated into one flow\n                        log record.\nFor\nDestination\n, choose\nSend to an S3\n                        bucket\n.\nFor\nS3 bucket ARN\n, specify the Amazon Resource Name\n                        (ARN) of an existing Amazon S3 bucket. You can optionally include a subfolder. \n                        For example, to specify a subfolder named\nmy-logs\nin\n                        a bucket named\nmy-bucket\n, use the following ARN:\narn:aws:s3:::my-bucket/my-logs/\nThe bucket cannot use\nAWSLogs\nas a subfolder name, as this\n                        is a reserved term.\nIf you own the bucket, we automatically create a resource policy and\n                        attach it to the bucket. For more information, see\nAmazon S3 bucket permissions for flow\n                    logs\n.\nFor\nLog record format\n, specify the format for the\n                        flow log record.\nTo use the default flow log record format, choose\nAWS\n                                    default format\n.\nTo create a custom format, choose\nCustom format\n. \n                                For\nLog format\n, choose the fields to include in \n                                the flow log record.\nFor\nLog file format\n, specify the format for the \n                        log file.\nText\n\u00e2\u0080\u0093 Plain text. This is the default\n                                format.\nParquet\n\u00e2\u0080\u0093 Apache Parquet is a columnar \n                                data format. Queries on data in Parquet format are 10 to 100 times \n                                faster compared to queries on data in plain text. Data in Parquet \n                                format with Gzip compression takes 20 percent less storage space than \n                                plain text with Gzip compression.\n(Optional) To use Hive-compatible S3 prefixes, choose\nHive-compatible\n                        S3 prefix\n,\nEnable\n.\n(Optional) To partition your flow logs per hour, choose\nEvery 1 hour \n                        (60 mins)\n.\n(Optional) To add a tag to the flow log, choose\nAdd new tag\nand specify the tag key and value.\nChoose\nCreate flow log\n.\nTo create a flow log that publishes to Amazon S3 using a command line tool\nUse one of the following commands:\ncreate-flow-logs\n(AWS CLI)\nNew-EC2FlowLogs\n(AWS Tools for Windows PowerShell)\nThe following AWS CLI example creates a flow log that captures all traffic for the\n                specified VPC and delivers the flow logs to the specified Amazon S3 bucket. The\n--log-format\nparameter specifies a custom format for the flow log records.\naws ec2 create-flow-logs --resource-type\nVPC\n--resource-ids\nvpc-00112233344556677\n--traffic-type ALL --log-destination-type\ns3\n--log-destination arn:aws:s3:::\nflow-log-bucket\n/\ncustom-flow-logs\n/ --log-format '$\n{\nversion} $\n{\nvpc-id} $\n{\nsubnet-id} $\n{\ninstance-id} $\n{\nsrcaddr} $\n{\ndstaddr} $\n{\nsrcport} $\n{\ndstport} $\n{\nprotocol} $\n{\ntcp-flags} $\n{\ntype} $\n{\npkt-srcaddr} $\n{\npkt-dstaddr}'\nView flow log records\nYou can view your flow log records using the Amazon S3 console. After you create your\n                flow log, it might take a few minutes for it to be visible in the console.\nTo view flow log records published to Amazon S3\nOpen the Amazon S3 console at\nhttps://console.aws.amazon.com/s3/\n.\nSelect the name of the bucket to open its details page.\nNavigate to the folder with the log files. For example,\nprefix\n/AWSLogs/\naccount_id\n/vpcflowlogs/\nregion\n/\nyear\n/\nmonth\n/\nday\n/.\nSelect the checkbox next to the file name, and then choose\nDownload\n.\nProcess flow log records in Amazon S3\nThe log files are compressed. If you open the log files using the Amazon S3 console,\n                they are decompressed and the flow log records are displayed. If you download the\n                files, you must decompress them to view the flow log records.\nYou can also query the flow log records in the log files using Amazon Athena. Amazon Athena\n                is an interactive query service that makes it easier to analyze data in Amazon S3 using\n                standard SQL. For more information, see\nQuerying Amazon VPC Flow Logs\nin the\nAmazon Athena User\n                    Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPublish to CloudWatch Logs\nPublish to Kinesis Data Firehose\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs-firehose.html": "Publish flow logs to Kinesis Data Firehose - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nIAM roles for cross account delivery\nCreate a flow log that publishes to Kinesis Data Firehose\nProcess flow log records in Kinesis Data Firehose\nPublish flow logs to Kinesis Data Firehose\nFlow logs can publish flow log data directly to Kinesis Data Firehose.\nWhen publishing to Kinesis Data Firehose, flow log data is published to a Kinesis Data Firehose delivery stream,\n            in plain text format.\nPricing\nStandard ingestion and delivery charges apply. For more information, open\nAmazon CloudWatch Pricing\n, select\nLogs\nand find\nVended Logs\n.\nContents\nIAM roles for cross account delivery\nCreate a flow log that publishes to Kinesis Data Firehose\nProcess flow log records in Kinesis Data Firehose\nIAM roles for cross account delivery\nWhen you publish to Kinesis Data Firehose, you can choose a delivery stream that's in the same\n                account as the resource to monitor (the source account), or in a different account\n                (the destination account). To enable cross account delivery of flow logs to Kinesis Data Firehose,\n                you must create an IAM role in the source account and an IAM role in the\n                destination account.\nRoles\nSource account role\nDestination account role\nSource account role\nIn the source account, create a role that grants the following permissions. In\n                    this example, the name of the role is\nmySourceRole\n, but you can choose\n                    a different name for this role. The last statement allows the role in the destination\n                    account to assume this role. The condition statements ensure that this role is passed \n                    only to the log delivery service, and only when monitoring the specified resource. \n                    When you create your policy, specify the VPCs, network interfaces, or subnets that \n                    you're monitoring with the condition key\niam:AssociatedResourceARN\n.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"iam:PassRole\",\n      \"Resource\": \"arn:aws:iam::\nsource-account\n:role/\nmySourceRole\n\",\n      \"Condition\":\n{\n\"StringEquals\":\n{\n\"iam:PassedToService\": \"delivery.logs.amazonaws.com\"\n          },\n          \"StringLike\":\n{\n\"iam:AssociatedResourceARN\": [\n                  \"arn:aws:ec2:\nregion\n:\nsource-account\n:vpc/\nvpc-00112233344556677\n\"\n              ]\n          }\n      }\n    },\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n          \"logs:CreateLogDelivery\",\n          \"logs:DeleteLogDelivery\",\n          \"logs:ListLogDeliveries\",\n          \"logs:GetLogDelivery\"\n      ],\n      \"Resource\": \"*\"\n    },\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Resource\": \"arn:aws:iam::\ndestination-account\n:role/AWSLogDeliveryFirehoseCrossAccountRole\"      \n    }\n  ]\n}\nEnsure that this role has the following trust policy, which allows the log\n                    delivery service to assume the role.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Principal\":\n{\n\"Service\": \"delivery.logs.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nFrom the source account, use the following procedure to create the role.\nTo create the source account role\nOpen the IAM console at\nhttps://console.aws.amazon.com/iam/\n.\nIn the navigation pane, choose\nPolicies\n.\nChoose\nCreate policy\n.\nOn the\nCreate policy\npage, do the following:\nChoose\nJSON\n.\nReplace the contents of this window with the permissions policy \n                                    at the start of this section.\nChoose\nNext: Tags\nand\nNext: Review\n.\nEnter a name for your policy and an optional description, and then choose\nCreate policy\n.\nIn the navigation pane, choose\nRoles\n.\nChoose\nCreate role\n.\nFor\nTrusted entity type\n, choose\nCustom\n                            trust policy\n. For\nCustom trust\n                                policy\n, replace\n\"Principal\":\n{\n},\nwith the\n                            following, which specifies the log delivery service. Choose\nNext\n.\n\"Principal\":\n{\n\"Service\": \"delivery.logs.amazonaws.com\"\n},\nOn the\nAdd permissions\npage, select the checkbox\n                            for the policy that you created earlier in this procedure, and then\n                            choose\nNext\n.\nEnter a name for your role and optionally provide a description.\nChoose\nCreate role\n.\nDestination account role\nIn the destination account, create a role with a name that starts with\nAWSLogDeliveryFirehoseCrossAccountRole\n. This role must\n                    grant the following permissions.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n          \"iam:CreateServiceLinkedRole\",\n          \"firehose:TagDeliveryStream\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\nEnsure that this role has the following trust policy, which allows the \n                    role that you created in the source account to assume this role.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Principal\":\n{\n\"AWS\": \"arn:aws:iam::\nsource-account\n:role/\nmySourceRole\n\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nFrom the destination account, use the following procedure to create the role.\nTo create the destination account role\nOpen the IAM console at\nhttps://console.aws.amazon.com/iam/\n.\nIn the navigation pane, choose\nPolicies\n.\nChoose\nCreate policy\n.\nOn the\nCreate policy\npage, do the following:\nChoose\nJSON\n.\nReplace the contents of this window with the permissions policy \n                                    at the start of this section.\nChoose\nNext: Tags\nand\nNext: Review\n.\nEnter a name for your policy that starts with\nAWSLogDeliveryFirehoseCrossAccountRole\n,\n                                    and then choose\nCreate policy\n.\nIn the navigation pane, choose\nRoles\n.\nChoose\nCreate role\n.\nFor\nTrusted entity type\n, choose\nCustom\n                                trust policy\n. For\nCustom trust\n                                policy\n, replace\n\"Principal\":\n{\n},\nwith the\n                            following, which specifies the source account role. Choose\nNext\n.\n\"Principal\":\n{\n\"AWS\": \"arn:aws:iam::\nsource-account\n:role/\nmySourceRole\n\"\n},\nOn the\nAdd permissions\npage, select the checkbox\n                            for the policy that you created earlier in this procedure, and then\n                            choose\nNext\n.\nEnter a name for your role and optionally provide a description.\nChoose\nCreate role\n.\nCreate a flow log that publishes to Kinesis Data Firehose\nYou can create flow logs for your VPCs, subnets, or network interfaces.\nPrerequisites\nCreate the destination Kinesis Data Firehose delivery stream. Use\nDirect Put\nas the source. For more information, see\nCreating an Kinesis Data Firehose delivery stream\n.\nIf you're publishing flow logs to a different account, create the required IAM roles,\n                        as described in\nIAM roles for cross account delivery\n.\nTo create a flow log that publishes to Kinesis Data Firehose\nDo one of the following:\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\n                                In the navigation pane, choose\nNetwork Interfaces\n. \n                                Select the checkbox for the network interface.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nYour VPCs\n.\n                                Select the checkbox for the VPC.\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\n                                In the navigation pane, choose\nSubnets\n.\n                                Select the checkbox for the subnet.\nChoose\nActions\n,\nCreate flow log\n.\nFor\nFilter\n, specify the type of traffic to log.\nAccept\n\u00e2\u0080\u0093 Log only accepted traffic\nReject\n\u00e2\u0080\u0093 Log only rejected traffic\nAll\n\u00e2\u0080\u0093 Log accepted and rejected traffic\nFor\nMaximum aggregation interval\n, choose the maximum\n                        period of time during which a flow is captured and aggregated into one flow\n                        log record.\nFor\nDestination\n, choose either of the following options:\nSend to Kinesis Data Firehose in the same account\n\u00e2\u0080\u0093 The\n                                delivery stream and the resource to monitor are in the same\n                                account.\nSend to Kinesis Data Firehose in a different account\n\u00e2\u0080\u0093\n                                The delivery stream and the resource to monitor are in different\n                                accounts.\nFor\nKinesis Data Firehose delivery stream\n, choose the delivery stream that \n                        you created.\n[Cross account delivery only] For\nIAM roles\n, specify the  \n                        required roles (see\nIAM roles for cross account delivery\n).\n(Optional) Choose\nAdd new tag\nto apply tags to the flow\n                        log.\nChoose\nCreate flow log\n.\nTo create a flow log that publishes to Kinesis Data Firehose using a command line tool\nUse one of the following commands:\ncreate-flow-logs\n(AWS CLI)\nNew-EC2FlowLogs\n(AWS Tools for Windows PowerShell)\nThe following AWS CLI example creates a flow log that captures all traffic for the\n                specified VPC and delivers the flow logs to the specified Kinesis Data Firehose delivery stream\n                in the same account.\naws ec2 create-flow-logs --traffic-type ALL \\\n  --resource-type\nVPC\n\\\n  --resource-ids\nvpc-00112233344556677\n\\\n  --log-destination-type\nkinesis-data-firehose\n\\\n  --log-destination arn:aws:firehose:\nus-east-1\n:\n123456789012\n:deliverystream:\nflowlogs_stream\nThe following AWS CLI example creates a flow log that captures all traffic for the\n                specified VPC and delivers the flow logs to the specified Kinesis Data Firehose delivery stream\n                in a different account.\naws ec2 create-flow-logs --traffic-type ALL \\\n  --resource-type\nVPC\n\\\n  --resource-ids\nvpc-00112233344556677\n\\\n  --log-destination-type\nkinesis-data-firehose\n\\\n  --log-destination arn:aws:firehose:\nus-east-1\n:\n123456789012\n:deliverystream:\nflowlogs_stream\n\\\n  --deliver-logs-permission-arn arn:aws:iam::\nsource-account\n:role/\nmySourceRole\n\\ \n  --deliver-cross-account-role arn:aws:iam::\ndestination-account\n:role/AWSLogDeliveryFirehoseCrossAccountRole\nProcess flow log records in Kinesis Data Firehose\nYou can get the flow log data from the destination that you configured for the \n                delivery stream.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPublish to Amazon S3\nQuery using Athena\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs-athena.html": "Query flow logs using Amazon Athena - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nGenerate the CloudFormation template using the console\nGenerate the CloudFormation template using the AWS CLI\nRun a predefined query\nQuery flow logs using Amazon Athena\nAmazon Athena is an interactive query service that enables you to analyze data in Amazon S3,\n            such as your flow logs, using standard SQL. You can use Athena with VPC Flow Logs to\n            quickly get actionable insights about the traffic flowing through your VPC. For example,\n            you can identify which resources in your virtual private clouds (VPCs) are the top\n            talkers or identify the IP addresses with the most rejected TCP connections.\nOptions\nYou can streamline and automate the integration of your VPC flow logs with Athena by\n                    generating a CloudFormation template that creates the required AWS resources and\n                    predefined queries that you can run to obtain insights about the traffic flowing through\n                    your VPC.\nYou can create your own queries using Athena. For more information, see\nQuery flow logs using Amazon Athena\nin the\nAmazon Athena User Guide\n.\nPricing\nYou incur standard\nAmazon Athena charges\nfor running queries. You incur standard\nAWS Lambda charges\nfor the Lambda function that loads new partitions on a recurring\n                schedule (when you specify a partition load frequency but do not specify a start and \n                end date.)\nTo use the predefined queries\nGenerate the CloudFormation template using the console\nGenerate the CloudFormation template using the AWS CLI\nRun a predefined query\nGenerate the CloudFormation template using the console\nAfter the first flow logs are delivered to your S3 bucket, you can integrate with Athena\n                by generating a CloudFormation template and using the template to create a stack.\nRequirements\nThe selected Region must support AWS Lambda and Amazon Athena.\nThe Amazon S3 buckets must be in the selected Region.\nThe log record format for the flow log must include the fields used by the\n                        specific predefined queries that you'd like to run.\nTo generate the template using the console\nDo one of the following:\nOpen the Amazon VPC console. In the navigation pane, choose\nYour VPCs\nand then select your VPC.\nOpen the Amazon VPC console. In the navigation pane, choose\nSubnets\nand then select your subnet.\nOpen the Amazon EC2 console. In the navigation pane, choose\nNetwork Interfaces\nand then select your network interface.\nOn the\nFlow logs\ntab, select a flow log that\n                        publishes to Amazon S3 and then choose\nActions\n,\nGenerate Athena integration\n.\nSpecify the partition load frequency. If you choose\nNone\n, you must specify the partition start and end\n                        date, using dates that are in the past. If you choose\nDaily\n,\nWeekly\n, or\nMonthly\n, the partition start and end dates are\n                        optional. If you do not specify start and end dates, the CloudFormation\n                        template creates a Lambda function that loads new partitions on a recurring\n                        schedule.\nSelect or create an S3 bucket for the generated template, and an S3 bucket\n                        for the query results.\nChoose\nGenerate Athena integration\n.\n(Optional) In the success message, choose the link to navigate to the bucket that you specified \n                        for the CloudFormation template, and customize the template.\nIn the success message, choose\nCreate CloudFormation\n                            stack\nto open the\nCreate Stack\nwizard in\n                        the AWS CloudFormation console. The URL for the generated CloudFormation template is\n                        specified in the\nTemplate\nsection. Complete the wizard\n                        to create the resources that are specified in the template.\nResources created by the CloudFormation template\nAn Athena database. The database name is\n                        vpcflowlogsathenadatabase<\nflow-logs-subscription-id\n>.\nAn Athena workgroup. The workgroup name is\n                        <\nflow-log-subscription-id\n><\npartition-load-frequency\n><\nstart-date\n><\nend-date\n>workgroup\nA partitioned Athena table that corresponds to your flow log records. The table\n                        name is\n                        <\nflow-log-subscription-id\n><\npartition-load-frequency\n><\nstart-date\n><\nend-date\n>.\nA set of Athena named queries. For more information, see\nPredefined queries\n.\nA Lambda function that loads new partitions to the table on the specified\n                        schedule (daily, weekly, or monthly).\nAn IAM role that grants permission to run the Lambda functions.\nGenerate the CloudFormation template using the AWS CLI\nAfter the first flow logs are delivered to your S3 bucket, you can generate and\n                use a CloudFormation template to integrate with Athena.\nUse the following\nget-flow-logs-integration-template\ncommand to generate the CloudFormation template.\naws ec2 get-flow-logs-integration-template --cli-input-json file://config.json\nThe following is an example of the\nconfig.json\nfile.\n{\n\"FlowLogId\": \"fl-12345678901234567\",\n    \"ConfigDeliveryS3DestinationArn\": \"arn:aws:s3:::my-flow-logs-athena-integration/templates/\",\n    \"IntegrateServices\":\n{\n\"AthenaIntegrations\": [\n{\n\"IntegrationResultS3DestinationArn\": \"arn:aws:s3:::my-flow-logs-analysis/athena-query-results/\",\n                \"PartitionLoadFrequency\": \"monthly\",\n                \"PartitionStartDate\": \"2021-01-01T00:00:00\",\n                \"PartitionEndDate\": \"2021-12-31T00:00:00\"\n            }\n        ]\n    }\n}\nUse the following\ncreate-stack\ncommand to create a stack using the generated CloudFormation template.\naws cloudformation create-stack --stack-name my-vpc-flow-logs --template-body file://my-cloudformation-template.json\nRun a predefined query\nThe generated CloudFormation template provides a set of predefined queries that\n                you can run to quickly get meaningful insights about the traffic in your AWS\n                network. After you create the stack and verify that all resources were created\n                correctly, you can run one of the predefined queries.\nTo run a predefined query using the console\nOpen the Athena console.\nIn the left nav, choose\nQuery editor\n. Under\nWorkgroup\n, select\n                        the workgroup created by the CloudFormation template.\nSelect\nSaved queries\n, select a query, modify the\n                        parameters as needed, and run the query. For a list of available predefined\n                        queries, see\nPredefined\n                        queries\n.\nUnder\nQuery results\n, view the query results.\nPredefined queries\nThe following is the complete list of Athena named queries. The predefined queries that \n                    are provided when you generate the template depend on the fields that are part of the \n                    log record format for the flow log. Therefore, the template might not contain all of\n                    these predefined queries.\nVpcFlowLogsAcceptedTraffic\n\u00e2\u0080\u0093 The TCP connections that were allowed\n                            based on your security groups and network ACLs.\nVpcFlowLogsAdminPortTraffic\n\u00e2\u0080\u0093 The top 10 IP addresses with the\n                            most traffic, as recorded by applications serving requests on\n                            administrative ports.\nVpcFlowLogsIPv4Traffic\n\u00e2\u0080\u0093 The total bytes of IPv4 traffic\n                            recorded.\nVpcFlowLogsIPv6Traffic\n\u00e2\u0080\u0093 The total bytes of IPv6 traffic\n                            recorded.\nVpcFlowLogsRejectedTCPTraffic\n\u00e2\u0080\u0093 The TCP connections that were\n                            rejected based on your security groups or network ACLs.\nVpcFlowLogsRejectedTraffic\n\u00e2\u0080\u0093 The traffic that was rejected based\n                            on your security groups or network ACLs.\nVpcFlowLogsSshRdpTraffic\n\u00e2\u0080\u0093 \n                        The SSH and RDP traffic.\nVpcFlowLogsTopTalkers\n\u00e2\u0080\u0093 The 50 IP addresses with the most traffic\n                            recorded.\nVpcFlowLogsTopTalkersPacketLevel\n\u00e2\u0080\u0093 The 50 packet-level IP\n                            addresses with the most traffic recorded.\nVpcFlowLogsTopTalkingInstances\n\u00e2\u0080\u0093 The IDs of the 50 instances with\n                            the most traffic recorded.\nVpcFlowLogsTopTalkingSubnets\n\u00e2\u0080\u0093 The IDs of the 50 subnets with the\n                            most traffic recorded.\nVpcFlowLogsTopTCPTraffic\n\u00e2\u0080\u0093 All TCP traffic recorded for a source\n                            IP address.\nVpcFlowLogsTotalBytesTransferred\n\u00e2\u0080\u0093 The 50 pairs of source and\n                            destination IP addresses with the most bytes recorded.\nVpcFlowLogsTotalBytesTransferredPacketLevel\n\u00e2\u0080\u0093 The 50 pairs of\n                            packet-level source and destination IP addresses with the most bytes\n                            recorded.\nVpcFlowLogsTrafficFrmSrcAddr\n\u00e2\u0080\u0093 The traffic recorded for a specific\n                            source IP address.\nVpcFlowLogsTrafficToDstAddr\n\u00e2\u0080\u0093 The traffic recorded for a specific\n                            destination IP address.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPublish to Kinesis Data Firehose\nTroubleshoot\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs-troubleshooting.html": "Troubleshoot VPC Flow Logs - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nIncomplete flow log records\nFlow log is active, but no\n                    flow log records or log group\n'LogDestinationNotFoundException' \n                    or 'Access Denied for LogDestination' error\nExceeding the Amazon S3 bucket policy limit\nLogDestination undeliverable\nTroubleshoot VPC Flow Logs\nThe following are possible issues you might have when working with flow logs.\nIssues\nIncomplete flow log records\nFlow log is active, but no\n                    flow log records or log group\n'LogDestinationNotFoundException' \n                    or 'Access Denied for LogDestination' error\nExceeding the Amazon S3 bucket policy limit\nLogDestination undeliverable\nIncomplete flow log records\nProblem\nYour flow log records are incomplete, or are no longer being published.\nCause\nThere might be a problem delivering the flow logs to the CloudWatch Logs log group.\nSolution\nIn either the Amazon EC2 console or the Amazon VPC console, choose the\nFlow\n                        Logs\ntab for the relevant resource. For more information, see\nView a flow log\n. The flow\n                    logs table displays any errors in the\nStatus\ncolumn.\n                    Alternatively, use the\ndescribe-flow-logs\ncommand, and check the value that's returned in\n                    the\nDeliverLogsErrorMessage\nfield. One of the following errors\n                    might be displayed:\nRate limited\n: This error can occur if CloudWatch Logs throttling has\n                        been applied \u00e2\u0080\u0094 when the number of flow log records for a network\n                        interface is higher than the maximum number of records that can be published\n                        within a specific timeframe. This error can also occur if you've reached the\n                        quota for the number of CloudWatch Logs log groups that you can create. For more\n                        information, see\nCloudWatch\n                            Service Quotas\nin the\nAmazon CloudWatch User Guide\n.\nAccess error\n: This error can occur for one of the following\n                        reasons:\nThe IAM role for your flow log does not have sufficient\n                                permissions to publish flow log records to the CloudWatch log group\nThe IAM role does not have a trust relationship with the flow\n                                logs service\nThe trust relationship does not specify the flow logs service as\n                                the principal\nFor more information, see\nIAM role for publishing flow logs to CloudWatch Logs\n.\nUnknown error\n: An internal error has occurred in the flow\n                        logs service.\nFlow log is active, but no\n                    flow log records or log group\nProblem\nYou created a flow log, and the Amazon VPC or Amazon EC2 console displays the flow\n                    log as\nActive\n. However, you cannot see any log streams in CloudWatch Logs or\n                    log files in your Amazon S3 bucket.\nPossible causes\nThe flow log is still being created. In some cases, it can take ten \n                        minutes or more after you create the flow log for the log group to be \n                        created, and for data to be displayed.\nThere has been no traffic recorded for your network interfaces yet. The\n                        log group in CloudWatch Logs is only created when traffic is recorded.\nSolution\nWait a few minutes for the log group to be created, or for traffic to be\n                    recorded.\n'LogDestinationNotFoundException' \n                    or 'Access Denied for LogDestination' error\nProblem\nYou get a\nAccess Denied for LogDestination\nor a\nLogDestinationNotFoundException\nerror when you create a\n                    flow log.\nPossible causes\nWhen creating a flow log that publishes data to an Amazon S3 bucket, this error\n                        indicates that the specified S3 bucket could not be found or that the bucket \n                        policy does not allow logs to be delivered to the bucket.\nWhen creating a flow log that publishes data to Amazon CloudWatch Logs, this error indicates\n                        that the IAM role does not allow logs to be delivered to the log group.\nSolution\nWhen publishing to Amazon S3, ensure that you have specified the ARN for an existing \n                        S3 bucket, and that the ARN is in the correct format. If you do not own the S3 bucket, \n                        verify that the\nbucket policy\nhas \n                        the required permissions and uses the correct account ID and bucket name in the ARN.\nWhen publishing to CloudWatch Logs, verify that the\nIAM role\nhas the required permissions.\nExceeding the Amazon S3 bucket policy limit\nProblem\nYou get the following error when you try to create a flow log:\nLogDestinationPermissionIssueException\n.\nPossible causes\nAmazon S3 bucket policies are limited to 20 KB in size.\nEach time that you create a flow log that publishes to an Amazon S3 bucket, we\n                automatically add the specified bucket ARN, which includes the folder path, to the\nResource\nelement in the bucket's policy.\nCreating multiple flow logs that publish to the same bucket could cause you to\n                exceed the bucket policy limit.\nSolution\nClean up the bucket policy by removing the flow log entries that are no\n                        longer needed.\nGrant permissions to the entire bucket by replacing the individual flow\n                        log entries with the following.\narn:aws:s3:::\nbucket_name/*\nIf you grant permissions to the entire bucket, new flow log subscriptions\n                        do not add new permissions to the bucket policy.\nLogDestination undeliverable\nProblem\nYou get the following error when you try to create a flow log:\nLogDestination <bucket name> is undeliverable\n.\nPossible causes\nThe target Amazon S3 bucket is encrypted using server-side encryption with AWS KMS\n                    (SSE-KMS) and the default encryption of the bucket is a KMS key ID.\nSolution\nThe value must be a KMS key ARN. Change the default S3 encryption type from\n                    KMS key ID to KMS key ARN. For more information, see\nConfiguring\n                        default encryption\nin the\nAmazon Simple Storage Service User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nQuery using Athena\nCloudWatch metrics\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-cloudwatch.html": "CloudWatch metrics for your VPCs - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nNAU metrics and dimensions\nEnable or disable NAU monitoring\nNAU CloudWatch alarm example\nCloudWatch metrics for your VPCs\nAmazon VPC publishes data about your VPCs to Amazon CloudWatch. You can retrieve statistics about your VPCs \n        as an ordered set of time-series data, known as\nmetrics\n. Think of a metric \n        as a variable to monitor and the data as the value of that variable over time. For more \n        information, see the\nAmazon CloudWatch User Guide\n.\nContents\nNAU metrics and dimensions\nEnable or disable NAU monitoring\nNAU CloudWatch alarm example\nNAU metrics and dimensions\nNetwork Address Usage\n(NAU) is a metric applied to resources in your virtual network to help you plan for and\n            monitor the size of your VPC. There is no cost to monitor NAU. Monitoring NAU is helpful\n            because if you exhaust the NAU or peered NAU quotas for your VPC, you can't launch new\n            EC2 instances or provision new resources, such as Network Load Balancers, VPC endpoints, Lambda\n            functions, transit gateway attachments, and NAT gateways.\nIf you've enabled Network Address Usage monitoring for a VPC, Amazon VPC sends metrics\n            related to NAU to Amazon CloudWatch. The size of a VPC is measured by the number of Network Address\n            Usage (NAU) units that the VPC contains.\nYou can use these metrics to understand the rate of your VPC growth, forecast when\n            your VPC will reach its size limit, or create alarms when size thresholds are crossed.\nThe\nAWS/EC2\nnamespace includes the following metrics for monitoring NAU.\nMetric\nDescription\nNetworkAddressUsage\nThe NAU count per VPC.\nReporting criteria\nEvery 24 hours.\nDimensions\nName:\nPer-VPC Metrics\n, Value: The VPC\n                                        ID.\nNetworkAddressUsagePeered\nThe NAU count for the VPC and all VPCs that it's peered\n                                    with.\nReporting\n                                criteria\nEvery 24 hours.\nDimensions\nName:\nPer-VPC Metrics\n, Value: The VPC\n                                        ID.\nThe\nAWS/Usage\nnamespace includes the following metrics for monitoring NAU.\nMetric\nDescription\nResourceCount\nThe NAU count per VPC.\nReporting criteria\nEvery 24 hours.\nDimensions\nName:\nService\n, Value:\nEC2\nName:\nType\n, Value:\nResource\nName:\nResource\n, Value: The VPC ID.\nName:\nClass\n, Value:\nNetworkAddressUsage\nResourceCount\nThe NAU count for the VPC and all VPCs that it's peered with.\nReporting criteria\nEvery 24 hours.\nDimensions\nName:\nService\n, Value:\nEC2\nName:\nType\n, Value:\nResource\nName:\nResource\n, Value: The VPC ID.\nName:\nClass\n, Value:\nNetworkAddressUsagePeered\nResourceCount\nA combined view of NAU usage across VPCs.\nReporting criteria\nEvery 24 hours.\nDimensions\nName:\nService\n, Value:\nEC2\nName:\nType\n, Value:\nResource\nName:\nResource\n, Value:\nVPC\nName:\nClass\n, Value:\nNetworkAddressUsage\nResourceCount\nA combined view of NAU usage across peered VPCs.\nReporting criteria\nEvery 24 hours.\nDimensions\nName:\nService\n, Value:\nEC2\nName:\nType\n, Value:\nResource\nName:\nResource\n, Value:\nVPC\nName:\nClass\n, Value:\nNetworkAddressUsagePeered\nEnable or disable NAU monitoring\nTo view NAU metrics in CloudWatch, you must first enable monitoring on each VPC to monitor.\nTo enable or disable monitoring NAU\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nYour VPCs\n.\nSelect the check box for the VPC.\nSelect\nActions\n,\nEdit VPC settings\n.\nDo one of the following:\nTo enable monitoring, select\nNetwork mapping units metrics settings\n,\nEnable network address usage metrics\n.\nTo disable monitoring, clear\nNetwork mapping units metrics settings\n,\nEnable network address usage metrics\n.\nTo enable or disable monitoring using the command line\nmodify-vpc-attribute\n(AWS CLI)\nEdit-EC2VpcAttribute\n(AWS Tools for Windows PowerShell)\nNAU CloudWatch alarm example\nYou can use the following AWS CLI command and example\n.json\nto create an\n            Amazon CloudWatch alarm and SNS notification that tracks NAU utilization of the VPC with 50,000\n            NAUs as the threshold. This sample requires you to first create an Amazon SNS topic. For more\n            information, see\nGetting started with Amazon SNS\nin\n            the\nAmazon Simple Notification Service Developer Guide\n.\naws cloudwatch put-metric-alarm --cli-input-json file://\nnau-alarm.json\nThe following is an example of\nnau-alarm.json\n.\n{\n\"Namespace\": \"AWS/EC2\",\n    \"MetricName\": \"NetworkAddressUsage\",\n    \"Dimensions\": [\n{\n\"Name\": \"Per-VPC Metrics\",\n        \"Value\": \"\nvpc-0123456798\n\"\n    }],\n    \"AlarmActions\": [\"arn:aws:sns:\nus-west-1\n:\n123456789012\n:\nmy_sns_topic\n\"],\n    \"ComparisonOperator\": \"GreaterThanThreshold\",\n    \"Period\": 86400,\n    \"EvaluationPeriods\": 1,\n    \"Threshold\": 50000,\n    \"AlarmDescription\": \"Tracks NAU utilization of the VPC with 50k NAUs as the threshold\",\n    \"AlarmName\": \"VPC NAU Utilization\",\n    \"Statistic\": \"Maximum\"\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTroubleshoot\nSecurity\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/security.html": "Security in Amazon Virtual Private Cloud - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nSecurity in Amazon Virtual Private Cloud\nCloud security at AWS is the highest priority. As an AWS customer, you benefit from a data \n  center and network architecture that is built to meet the requirements of the most security-sensitive \n  organizations.\nSecurity is a shared responsibility between AWS and you. The\nshared responsibility model\ndescribes this as security\nof\nthe cloud and security\nin\nthe cloud:\nSecurity of the cloud\n\u00e2\u0080\u0093 AWS is responsible for protecting the\n      infrastructure that runs AWS services in the AWS Cloud. AWS also provides you with services that you can use\n      securely. Third-party auditors regularly test and verify the effectiveness of our security as part of the\nAWS Compliance Programs\n.\nTo learn about the compliance programs that apply to Amazon Virtual Private Cloud, see\nAWS Services in Scope by Compliance\n                Program\n.\nSecurity in the cloud\n\u00e2\u0080\u0093 Your responsibility is\n      determined by the AWS service that you use. You are also responsible for other factors\n      including the sensitivity of your data, your company\u00e2\u0080\u0099s requirements, and applicable laws and\n      regulations.\nThis documentation helps you understand how to apply the shared responsibility model when\n    using Amazon VPC. The following topics show you how to configure Amazon VPC to meet your security and\n    compliance objectives. You also learn how to use other AWS services that help you to monitor and\n    secure your Amazon VPC resources.\nContents\nData protection in Amazon Virtual Private Cloud\nIdentity and access management for Amazon VPC\nInfrastructure security in Amazon VPC\nControl traffic to your AWS resources using security groups\nControl traffic to subnets using network ACLs\nResilience in Amazon Virtual Private Cloud\nCompliance validation for Amazon Virtual Private Cloud\nSecurity best practices for your VPC\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCloudWatch metrics\nData protection\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/data-protection.html": "Data protection in Amazon Virtual Private Cloud - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nData protection in Amazon Virtual Private Cloud\nThe AWS\nshared responsibility model\napplies to data protection in Amazon Virtual Private Cloud. As described in this model, AWS is\n   responsible for protecting the global infrastructure that runs all of the AWS Cloud. You are\n   responsible for maintaining control over your content that is hosted on this infrastructure.\n   This content includes the security configuration and management tasks for the AWS services\n   that you use. For more information about data privacy, see the\nData Privacy FAQ\n.\nFor information about data protection in Europe, see the\nAWS Shared\n            Responsibility Model and GDPR\nblog post on the\nAWS Security\n               Blog\n.\nFor data protection purposes, we recommend that you protect AWS account\n     credentials and set up individual users with AWS IAM Identity Center or AWS Identity and Access Management (IAM). That way, each user is given only the permissions necessary to fulfill their job duties. We also recommend that you secure your data in the following ways:\nUse multi-factor authentication (MFA) with each account.\nUse SSL/TLS to communicate with AWS resources. We require TLS 1.2 and recommend TLS 1.3.\nSet up API and user activity logging with AWS CloudTrail.\nUse AWS encryption solutions, along with all default security controls within AWS services.\nUse advanced managed security services such as Amazon Macie, which assists in discovering\n            and securing sensitive data that is stored in Amazon S3.\nIf you require FIPS 140-2 validated cryptographic modules when accessing AWS through\n            a command line interface or an API, use a FIPS endpoint. For more information about the\n            available FIPS endpoints, see\nFederal\n                Information Processing Standard (FIPS) 140-2\n.\nWe strongly recommend that you never put confidential or sensitive information, such as your\n        customers' email addresses, into tags or free-form text fields such as a\nName\nfield. This includes when you work with Amazon VPC or other AWS services \n        using the console, API, AWS CLI, or AWS SDKs. Any data that you enter into\n        tags or free-form text fields used for names may be used for billing or diagnostic logs. If you \n        provide a URL to an external server, we strongly recommend that you do not include credentials \n        information in the URL to validate your request to that server.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSecurity\nInternetwork traffic privacy\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Security.html": "Internetwork traffic privacy in Amazon VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nInternetwork traffic privacy in Amazon VPC\nAmazon Virtual Private Cloud provides features that you can use to increase and monitor the security for your\n    virtual private cloud (VPC):\nSecurity groups\n: Security groups allow specific\n        inbound and outbound traffic at the resource level (such as an EC2 instance). When you\n        launch an instance, you can associate it with one or more security groups. Each instance in\n        your VPC could belong to a different set of security groups. If you don't specify a security\n        group when you launch an instance, the instance is automatically associated with the default\n        security group for its VPC. For more information, see\nSecurity groups\n.\nNetwork access control lists (ACL)\n: Network ACLs allow\n        or deny specific inbound and outbound traffic at the subnet level. For more information, see\nControl traffic to subnets using network ACLs\n.\nFlow logs\n: Flow logs capture information about the IP\n        traffic going to and from network interfaces in your VPC. You can create a flow log for a\n        VPC, subnet, or individual network interface. Flow log data is published to CloudWatch Logs or Amazon S3,\n        and it can help you diagnose overly restrictive or overly permissive security group and\n        network ACL rules. For more information, see\nLogging IP traffic using VPC Flow Logs\n.\nTraffic mirroring\n: You can copy network traffic from an\n        elastic network interface of an Amazon EC2 instance. You can then send the traffic to\n        out-of-band security and monitoring appliances. For more information, see the\nTraffic Mirroring Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nData protection\nIdentity and access management\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/security-iam.html": "Identity and access management for Amazon VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nAudience\nAuthenticate with identities\nManage access using policies\nIdentity and access management for Amazon VPC\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely control access\n      to AWS resources. IAM administrators control who can be\nauthenticated\n(signed in) and\nauthorized\n(have permissions) to use Amazon VPC resources. IAM is an AWS service that you can\n      use with no additional charge.\nContents\nAudience\nAuthenticate with identities\nManage access using policies\nHow Amazon VPC works with IAM\nAmazon VPC policy examples\nTroubleshoot Amazon VPC identity and access\nAWS managed policies for Amazon Virtual Private Cloud\nAudience\nHow you use AWS Identity and Access Management (IAM) differs, depending on the work you do in\n            Amazon VPC.\nService user\n\u00e2\u0080\u0093 If you use the Amazon VPC\n            service to do your job, your administrator provides you with the credentials and\n            permissions that you need. As you use more Amazon VPC features to do your work,\n            you might need additional permissions. Understanding how access is managed can help you\n            request the right permissions from your administrator. If you cannot access a feature in\n            Amazon VPC, see\nTroubleshoot Amazon VPC identity and access\n.\nService administrator\n\u00e2\u0080\u0093 If you're in\n            charge of Amazon VPC resources at your company, you probably have full access to\n            Amazon VPC. It's your job to determine which Amazon VPC features and\n            resources your employees should access. You submit requests to your IAM administrator\n            to change the permissions of your service users. Review the information on this page to\n            understand the basic concepts of IAM. To learn more about how your company can use\n            IAM with Amazon VPC, see\nHow Amazon VPC works with IAM\n.\nIAM administrator\n\u00e2\u0080\u0093 If you're an IAM\n            administrator, you might want to learn details about how you can write policies to\n            manage access to Amazon VPC. To view example policies, see\nAmazon VPC policy examples\n.\nAuthenticate with identities\nAuthentication is how you sign in to AWS using your identity credentials. You must be\nauthenticated\n(signed in to AWS) as the AWS account root user, as an\nIAM user, or by assuming an IAM role.\nYou can sign in to AWS as a federated identity by using credentials provided through an identity source.\nAWS IAM Identity Center (IAM Identity Center) users, your company's single sign-on authentication, and your Google or Facebook\ncredentials are examples of federated identities. When you sign in as a federated identity, your administrator previously set up identity federation using IAM roles. When you access AWS by using federation, you are indirectly assuming a role.\nDepending on the type of user you are, you can sign in to the AWS Management Console or the AWS access\nportal. For more information about signing in to AWS, see\nHow to sign in to your AWS account\nin the\nAWS Sign-In User Guide\n.\nIf you access AWS programmatically, AWS provides a software development kit (SDK) and a command line \ninterface (CLI) to cryptographically sign your requests by using your credentials. If you don't use AWS tools, \nyou must sign requests yourself. For more information about using the recommended method to sign requests yourself, see\nSigning AWS API requests\nin the\nIAM User Guide\n.\nRegardless of the authentication method that you use, you might be required to provide\nadditional security information. For example, AWS recommends that you use multi-factor\nauthentication (MFA) to increase the security of your account. To learn more, see\nMulti-factor authentication\nin the\nAWS IAM Identity Center User Guide\nand\nUsing multi-factor authentication (MFA) in AWS\nin the\nIAM User Guide\n.\nAWS account root user\nWhen you create an AWS account, you begin with one sign-in identity that has complete access to all AWS services\n and resources in the account. This identity is called the AWS account\nroot user\nand is accessed by\n signing in with the email address and password that you used to create the account. We \n strongly recommend that you don't use the root user for your everyday tasks. Safeguard your root user credentials and use them to\n perform the tasks that only the root user can perform. For the complete list of tasks that require you to sign in as the root user, see\nTasks that require root user credentials\nin the\nIAM User Guide\n.\nIAM users and groups\nAn\nIAM user\nis an identity within your AWS account that has specific permissions for a single person or application. Where possible, we recommend relying on temporary credentials instead of creating IAM users who have long-term credentials such as passwords and access keys. However, if you have specific use cases that require long-term credentials with IAM users, we recommend that you rotate access keys. For more information, see\nRotate access keys regularly for use cases that require long-term credentials\nin the\nIAM User Guide\n.\nAn\nIAM group\nis an identity that specifies a collection of IAM users.\n            You can't sign in as a group. You can use groups to specify permissions for multiple users at a time. Groups make permissions easier to manage for\n            large sets of users. For example, you could have a group named\nIAMAdmins\nand give that group permissions to administer IAM\n            resources.\nUsers are different from roles. A user is uniquely associated with one person or application, but a role is intended to be assumable by anyone\n            who needs it. Users have permanent long-term credentials, but roles provide temporary credentials. To learn more, see\nWhen to create an IAM user (instead of a role)\nin the\nIAM User Guide\n.\nIAM roles\nAn\nIAM role\nis an identity within your AWS account that\n            has specific permissions. It is similar to an IAM user, but is not associated with a specific person. You can temporarily assume an IAM role in\n            the AWS Management Console by\nswitching roles\n. You can assume a role by calling an AWS CLI\n            or AWS API operation or by using a custom URL. For more information about methods for using roles, see\nUsing IAM roles\nin the\nIAM User Guide\n.\nIAM roles with temporary credentials are useful in the following situations:\nFederated user access\n\u00e2\u0080\u0093 \n\nTo assign permissions to a federated identity, you create a role and define permissions for the role. When a federated identity authenticates, the identity is associated with the role and is granted the permissions that are defined by the role. For information about roles for federation, see\nCreating a role for a third-party Identity Provider\nin the\nIAM User Guide\n.\nIf you use IAM Identity Center, you configure a permission set. To control what your identities can access after they authenticate, IAM Identity Center correlates the permission set to a role in IAM. \nFor information about permissions sets, see\nPermission sets\nin the\nAWS IAM Identity Center User Guide\n.\nTemporary IAM user permissions\n\u00e2\u0080\u0093 An IAM user or role can assume an IAM role to temporarily take on\n            different permissions for a specific task.\nCross-account access\n\u00e2\u0080\u0093 You can use an\n                  IAM role to allow someone (a trusted principal) in a different account to access\n                  resources in your account. Roles are the primary way to grant cross-account\n                  access. However, with some AWS services, you can attach a policy directly to a\n                  resource (instead of using a role as a proxy). To learn the difference between\n                  roles and resource-based policies for cross-account access, see\nHow IAM roles\n                     differ from resource-based policies\nin the\nIAM User Guide\n.\nCross-service access\n\u00e2\u0080\u0093\n\n      Some AWS services use features in other AWS services. For example, when you make a call in a service, \n      it's common for that service to run applications in Amazon EC2 or store objects in Amazon S3. A service might do this \n      using the calling principal's permissions, using a service role, or using a service-linked role.\nPrincipal permissions\n\u00e2\u0080\u0093\n\n      When you use an IAM user or role to perform actions in AWS, you are considered a principal. Policies \n      grant permissions to a principal. When you use some services, you might perform an action that then triggers \n      another action in a different service. In this case, you must have permissions to perform both actions. To \n      see whether an action requires additional dependent actions in a policy, see\nActions, Resources, and Condition Keys for Amazon EC2\nin the\nService Authorization Reference\n.\nService role\n\u00e2\u0080\u0093\n\n      A service role is an\nIAM role\nthat a service assumes to perform \n      actions on your behalf. An IAM administrator can create, modify, and delete a service role from within IAM. For \n      more information, see\nCreating a role to delegate permissions \n      to an AWS service\nin the\nIAM User Guide\n.\nService-linked role\n\u00e2\u0080\u0093\n\n      A service-linked role is a type of service role that is linked to an AWS service. The service can assume the role to perform an action on your behalf. \n      Service-linked roles appear in your AWS account and are owned by the service. An IAM administrator can view, \n      but not edit the permissions for service-linked roles.\nApplications running on Amazon EC2\n\u00e2\u0080\u0093\n\n      You can use an IAM role to manage temporary credentials for applications that are running on an EC2 instance and making AWS CLI or AWS API requests. \n      This is preferable to storing access keys within the EC2 instance. To assign an AWS role to an EC2 instance and make it \n      available to all of its applications, you create an instance profile that is attached to the \n      instance. An instance profile contains the role and enables programs that are running on the EC2 instance to\n      get temporary credentials. For more information, see\nUsing an IAM role to grant permissions to applications running on Amazon EC2 instances\nin the\nIAM User Guide\n.\nTo learn whether to use IAM roles or IAM users, see\nWhen to create an IAM role (instead of a\n               user)\nin the\nIAM User Guide\n.\nManage access using policies\nYou control access in AWS by creating policies and attaching them to AWS identities or resources. A policy is an object in AWS that,\n when associated with an identity or resource, defines their permissions. AWS evaluates these policies when a principal (user, root user, or role session) makes a request. \n Permissions in the policies determine whether the request is allowed or denied. \n Most policies are stored in AWS as JSON documents. For more information about the structure and contents \n of JSON policy documents, see\nOverview of JSON policies\nin the\nIAM User Guide\n.\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nBy default, users and roles have no permissions. To grant users permission to perform actions on the resources that they need, an \nIAM administrator can create IAM policies. The administrator can then add the IAM policies to roles, and users can assume the roles.\nIAM policies define permissions for an action regardless of the method that you use to perform the operation. For example, suppose that you have a\n policy that allows the\niam:GetRole\naction. A user with that policy can get role information from the AWS Management Console, the AWS CLI, or the AWS\n API.\nIdentity-based\n                    policies\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity, such as an IAM user, group of users, or role. These\n            policies control what actions users and roles can perform, on which resources, and under what conditions. To learn how to create an identity-based\n            policy, see\nCreating IAM policies\nin the\nIAM User Guide\n.\nIdentity-based policies can be further categorized as\ninline policies\nor\nmanaged\n               policies\n. Inline policies are embedded directly into a single user, group, or role. Managed policies are standalone policies that you\n            can attach to multiple users, groups, and roles in your AWS account. Managed policies include AWS managed policies and customer managed\n            policies. To learn how to choose between a managed policy or an inline policy, see\nChoosing between managed policies and inline\n               policies\nin the\nIAM User Guide\n.\nResource-based\n                    policies\nResource-based policies are JSON policy documents that you attach to a resource. Examples of resource-based policies are \n         IAM\nrole trust policies\nand Amazon S3\nbucket policies\n. In services that support resource-based policies, service \n         administrators can use them to control access to a specific resource. For the resource where the policy is attached, the policy defines what actions\n            a specified principal can perform on that resource and under what conditions. You must\nspecify a principal\nin a resource-based policy. Principals \n            can include accounts, users, roles, federated users, or AWS services.\nResource-based policies are inline policies that are located in that service. You can't use AWS managed policies from IAM in a \n   resource-based policy.\nAccess control lists (ACLs)\nAccess control lists (ACLs) control which principals (account members, users, or roles) have permissions to access a resource. ACLs are\n            similar to resource-based policies, although they do not use the JSON policy document format.\nAmazon S3, AWS WAF, and Amazon VPC\n            are examples of services that support ACLs. To learn more about ACLs, see\nAccess control list (ACL)\n               overview\nin the\nAmazon Simple Storage Service Developer Guide\n.\nOther policy\n                    types\nAWS supports additional, less-common policy types. These policy types can set the maximum permissions granted to you by the more common policy\n            types.\nPermissions boundaries\n\u00e2\u0080\u0093 A permissions\n                  boundary is an advanced feature in which you set the maximum permissions that an\n                  identity-based policy can grant to an IAM entity (IAM user or role). You can\n                  set a permissions boundary for an entity. The resulting permissions are the\n                  intersection of an entity's identity-based policies and its permissions boundaries.\n                  Resource-based policies that specify the user or role in the\nPrincipal\nfield are not limited by the permissions boundary. An\n                  explicit deny in any of these policies overrides the allow. For more information\n                  about permissions boundaries, see\nPermissions boundaries for\n                     IAM entities\nin the\nIAM User Guide\n.\nService control policies (SCPs)\n\u00e2\u0080\u0093 SCPs are JSON policies that specify the maximum permissions for\n                  an organization or organizational unit (OU) in AWS Organizations. AWS Organizations is a service for grouping and centrally managing multiple AWS accounts that your business owns. If you enable all features in an organization, then you can apply service control policies (SCPs) to any or all of\n                  your accounts. The SCP limits permissions for entities in member accounts, including each AWS account root user. For more information about Organizations and\n                  SCPs, see\nHow SCPs work\nin the\nAWS Organizations User Guide\n.\nSession policies\n\u00e2\u0080\u0093 Session policies are\n                  advanced policies that you pass as a parameter when you programmatically create a\n                  temporary session for a role or federated user. The resulting session's\n                  permissions are the intersection of the user or role's identity-based policies and\n                  the session policies. Permissions can also come from a resource-based policy. An\n                  explicit deny in any of these policies overrides the allow. For more information,\n                  see\nSession\n                     policies\nin the\nIAM User Guide\n.\nMultiple policy\n                    types\nWhen multiple types of policies apply to a request, the resulting permissions are more complicated to understand. To learn how AWS determines\n            whether to allow a request when multiple policy types are involved, see\nPolicy\n               evaluation logic\nin the\nIAM User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nInternetwork traffic privacy\nHow Amazon VPC works with IAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/security_iam_service-with-iam.html": "How Amazon VPC works with IAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nActions\nResources\nCondition keys\nAmazon VPC\n                    resource-based policies\nAuthorization based on\n                    tags\nIAM roles\nHow Amazon VPC works with IAM\nBefore you use IAM to manage access to Amazon VPC, you should understand what IAM\n            features are available to use with Amazon VPC. To get a high-level view of how Amazon VPC and\n            other AWS services work with IAM, see\nAWS services\n                that work with IAM\nin the\nIAM User Guide\n.\nContents\nActions\nResources\nCondition keys\nAmazon VPC\n                    resource-based policies\nAuthorization based on\n                    tags\nIAM roles\nWith IAM identity-based policies, you can specify allowed or denied actions. For\n            some actions, you can specify the resources and conditions under which actions are\n            allowed or denied. Amazon VPC supports specific actions, resources, and condition keys. To\n            learn about all of the elements that you use in a JSON policy, see\nIAM JSON policy elements\n                reference\nin the\nIAM User Guide\n.\nActions\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nAction\nelement of a JSON policy describes the\n               actions that you can use to allow or deny access in a policy. Policy\n               actions usually have the same name as the associated AWS API operation. There are some exceptions, such as\npermission-only \n               actions\nthat don't have a matching API operation. There are also some operations that require multiple actions in a policy. \n               These additional actions are called\ndependent actions\n.\nInclude actions in a policy to grant permissions to perform the associated operation.\nAmazon VPC shares its API namespace with Amazon EC2. Policy actions in Amazon VPC use the\n                following prefix before the action:\nec2:\n. For example, to grant a user\n                permission to create a VPC using the\nCreateVpc\nAPI operation, you grant\n                access to the\nec2:CreateVpc\naction. Policy statements must include\n                either an\nAction\nor\nNotAction\nelement.\nTo specify multiple actions in a single statement, separate them with commas\n                as shown in the following example.\n\"Action\": [\n      \"ec2:\naction1\n\",\n      \"ec2:\naction2\n\"\n]\nYou can specify multiple actions using wildcards (*). For example, to specify\n                all actions that begin with the word\nDescribe\n, include the following\n                action.\n\"Action\": \"ec2:Describe*\"\nTo see a list of Amazon VPC actions, see\nActions defined by Amazon EC2\nin the\nService Authorization Reference\n.\nResources\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nResource\nJSON policy element specifies the object or objects to which the action applies. Statements must include either a\nResource\nor a\nNotResource\nelement. As a best practice, specify a resource using its\nAmazon Resource Name (ARN)\n. You can do this for actions that support a \n                  specific resource type, known as\nresource-level permissions\n.\nFor actions that don't support resource-level permissions, such as listing operations,\n                  use a wildcard (*) to indicate that the statement applies to all resources.\n\"Resource\": \"*\"\nThe VPC resource has the ARN shown in the following example.\narn:$\n{\nPartition}:ec2:$\n{\nRegion}:$\n{\nAccount}:vpc/$\n{\nVpcId}\nFor example, to specify the\nvpc-1234567890abcdef0\nVPC in your\n                statement, use the ARN shown in the following example.\n\"Resource\": \"arn:aws:ec2:us-east-1:123456789012:vpc/vpc-1234567890abcdef0\"\nTo specify all VPCs in a specific Region that belong to a specific account,\n                use the wildcard (*).\n\"Resource\": \"arn:aws:ec2:us-east-1:123456789012:vpc/*\"\nSome Amazon VPC actions, such as those for creating resources, cannot be\n                    performed on a specific resource. In those cases, you must use the wildcard\n                    (*).\n\"Resource\": \"*\"\nMany Amazon EC2 API actions involve multiple resources. To specify multiple\n                    resources in a single statement, separate the ARNs with commas.\n\"Resource\": [\n      \"\nresource1\n\",\n      \"\nresource2\n\"\n]\nTo see a list of Amazon VPC resource types and their ARNs, see\nResource types defined by Amazon EC2\nin the\nService Authorization Reference\n.\nCondition keys\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nCondition\nelement (or\nCondition\nblock\n) lets you specify conditions in which a\n               statement is in effect. The\nCondition\nelement is optional. You can create\n               conditional expressions that use\ncondition\n                  operators\n, such as equals or less than, to match the condition in the\n               policy with values in the request.\nIf you specify multiple\nCondition\nelements in a statement, or\n               multiple keys in a single\nCondition\nelement, AWS evaluates them using\n               a logical\nAND\noperation. If you specify multiple values for a single\n               condition key, AWS evaluates the condition using a logical\nOR\noperation. All of the conditions must be met before the statement's permissions are\n               granted.\nYou can also use placeholder variables when you specify conditions. For example,\n               you can grant an IAM user permission to access a resource only if it is tagged with\n               their IAM user name. For more information, see\nIAM policy elements:\n                  variables and tags\nin the\nIAM User Guide\n.\nAWS supports global condition keys and service-specific condition keys. To see all AWS global\n               condition keys, see\nAWS global condition context keys\nin the\nIAM User Guide\n.\nAll Amazon EC2 actions support the\naws:RequestedRegion\nand\nec2:Region\ncondition keys. For more information, see\nExample:\n                    Restrict access to a specific Region\n.\nAmazon VPC defines its own set of condition keys and also supports using some global\n                    condition keys. To see a list of Amazon VPC condition keys, see\nCondition keys for\n                    Amazon EC2\nin the\nService Authorization Reference\n. To learn with\n                which actions and resources you can use a condition key, see\nActions\n                    defined by Amazon EC2\n.\nAmazon VPC\n                    resource-based policies\nResource-based policies are JSON policy documents that specify what actions a\n                specified principal can perform on the Amazon VPC resource and under what\n                conditions.\nTo enable cross-account access, you can specify an entire account or IAM\n                entities in another account as the\nprincipal in a\n                    resource-based policy\n. Adding a cross-account principal to a\n                resource-based policy is only half of establishing the trust relationship. When the\n                principal and the resource are in different AWS accounts, you must also grant the\n                principal entity permission to access the resource. Grant permission by attaching an\n                identity-based policy to the entity. However, if a resource-based policy grants\n                access to a principal in the same account, no additional identity-based policy is\n                required. For more information, see\nHow IAM roles\n                    differ from resource-based policies\nin the\nIAM User Guide\n.\nAuthorization based on\n                    tags\nYou can attach tags to Amazon VPC resources or pass tags in a request. To\n                control access based on tags, you provide tag information in the\ncondition\n                    element\nof a policy using condition keys. For more information, \n                see\nTag resources during creation\nand\nControl access to EC2 resources using resource tags\nin the\nAmazon EC2 User Guide\n.\nTo view an example identity-based policy for limiting access to a resource based\n                on the tags on that resource, see\nLaunch instances into a specific VPC\n.\nIAM roles\nAn\nIAM role\nis an entity within\n                your AWS account that has specific permissions.\nUse temporary\n                        credentials\nYou can use temporary credentials to sign in with federation, assume an IAM\n                    role, or to assume a cross-account role. You obtain temporary security\n                    credentials by calling AWS STS API operations such as\nAssumeRole\nor\nGetFederationToken\n.\nAmazon VPC supports using temporary credentials.\nService-linked roles\nService-linked roles\nallow AWS services to access resources in\n                    other services to complete an action on your behalf. Service-linked roles appear\n                    in your IAM account and are owned by the service. An IAM administrator can\n                    view but not edit the permissions for service-linked roles.\nTransit\n                        gateways\nsupport service-linked roles.\nService\n                        roles\nThis feature allows a service to assume a\nservice role\non your behalf. This role allows the service to access\n                    resources in other services to complete an action on your behalf. Service roles\n                    appear in your IAM account and are owned by the account. This means that an\n                    IAM administrator can change the permissions for this role. However, doing so\n                    might break the functionality of the service.\nAmazon VPC supports service roles for flow logs. When you create a flow log, you\n                    must choose a role that allows the flow logs service to access CloudWatch Logs. For more \n                    information, see\nIAM role for publishing flow logs to CloudWatch Logs\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIdentity and access management\nPolicy examples\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-policy-examples.html": "Amazon VPC policy examples - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nPolicy best\n                    practices\nUse the Amazon VPC console\nCreate a VPC with a public\n                    subnet\nModify and delete VPC resources\nManage security groups\nManage security group rules\nLaunch instances into a specific subnet\nLaunch instances into a specific VPC\nAdditional Amazon VPC policy examples\nAmazon VPC policy examples\nBy default, IAM roles don't have permission to create or modify VPC resources. They\n            also can't perform tasks using the AWS Management Console, AWS CLI, or AWS API. An IAM\n            administrator must create IAM policies that grant roles permission to perform specific\n            API operations on the specified resources they need. The administrator must then attach\n            those policies to the IAM roles that require those permissions.\nTo learn how to create an IAM identity-based policy using these example JSON policy\n            documents, see\nCreating IAM policies\nin the\nIAM User Guide\n.\nContents\nPolicy best\n                    practices\nUse the Amazon VPC console\nCreate a VPC with a public\n                    subnet\nModify and delete VPC resources\nManage security groups\nManage security group rules\nLaunch instances into a specific subnet\nLaunch instances into a specific VPC\nAdditional Amazon VPC policy examples\nPolicy best\n                    practices\nIdentity-based policies determine whether someone can create, access, or delete Amazon VPC resources in your\n      account. These actions can incur costs for your AWS account. When you create or edit identity-based policies, follow these guidelines and\n      recommendations:\nGet started with AWS managed policies and move toward least-privilege permissions\n\u00e2\u0080\u0093 To get started granting permissions to your users and workloads, use the\nAWS\n            managed policies\nthat grant permissions for many common use cases. They are\n            available in your AWS account. We recommend that you reduce permissions further by\n            defining AWS customer managed policies that are specific to your use cases. For more information, see\nAWS managed policies\nor\nAWS managed policies for job functions\nin the\nIAM User Guide\n.\nApply least-privilege permissions\n\u00e2\u0080\u0093 \n            When you set permissions with IAM policies, grant only the permissions required to\n            perform a task. You do this by defining the actions that can be taken on specific resources\n            under specific conditions, also known as\nleast-privilege permissions\n.\n            For more information about using IAM to apply permissions, see\nPolicies and permissions in IAM\nin the\nIAM User Guide\n.\nUse conditions in IAM policies to further restrict access\n\u00e2\u0080\u0093 You can add a condition to your policies to limit access to actions and resources. For example, you can write a policy condition to specify that all requests must\n            be sent using SSL. You can also use conditions to grant access to service actions\n            if they are used through a specific AWS service, such as AWS CloudFormation. For more information, see\nIAM JSON policy elements: Condition\nin the\nIAM User Guide\n.\nUse IAM Access Analyzer to validate your IAM policies to ensure secure and functional permissions\n\u00e2\u0080\u0093 IAM Access Analyzer validates new and existing policies so that the policies adhere to the IAM policy language (JSON) and IAM best practices.\n            IAM Access Analyzer provides more than 100 policy checks and actionable recommendations to help\n            you author secure and functional policies. For more information, see\nIAM Access Analyzer policy validation\nin the\nIAM User Guide\n.\nRequire multi-factor authentication (MFA)\n\u00e2\u0080\u0093\n            If you have a scenario that requires IAM users or a root user in your AWS account, turn on MFA for additional security. To require\n            MFA when API operations are called, add MFA conditions to your policies. For\n            more information, see\nConfiguring MFA-protected API access\nin the\nIAM User Guide\n.\nFor more information about best practices in IAM, see\nSecurity best practices in IAM\nin the\nIAM User Guide\n.\nUse the Amazon VPC console\nTo access the Amazon VPC console, you must have a minimum set of permissions. These\n                permissions must allow you to list and view details about the Amazon VPC resources in\n                your AWS account. If you create an identity-based policy that is more restrictive\n                than the minimum required permissions, the console won't function as intended for\n                entities (IAM roles) with that policy.\nThe following policy grants a role permission to list resources in the VPC\n                console, but not to create, update, or delete them.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeAccountAttributes\",\n                \"ec2:DescribeAddresses\",\n                \"ec2:DescribeAvailabilityZones\",\n                \"ec2:DescribeClassicLinkInstances\",\n                \"ec2:DescribeClientVpnEndpoints\",\n                \"ec2:DescribeCustomerGateways\",\n                \"ec2:DescribeDhcpOptions\",\n                \"ec2:DescribeEgressOnlyInternetGateways\",\n                \"ec2:DescribeFlowLogs\",\n                \"ec2:DescribeInternetGateways\",\n                \"ec2:DescribeManagedPrefixLists\",\n                \"ec2:DescribeMovingAddresses\",\n                \"ec2:DescribeNatGateways\",\n                \"ec2:DescribeNetworkAcls\",\n                \"ec2:DescribeNetworkInterfaceAttribute\",\n                \"ec2:DescribeNetworkInterfacePermissions\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribePrefixLists\",\n                \"ec2:DescribeRouteTables\",\n                \"ec2:DescribeSecurityGroupReferences\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeSecurityGroupRules\",\n                \"ec2:DescribeStaleSecurityGroups\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeTags\",\n                \"ec2:DescribeTrafficMirrorFilters\",\n                \"ec2:DescribeTrafficMirrorSessions\",\n                \"ec2:DescribeTrafficMirrorTargets\",\n                \"ec2:DescribeTransitGateways\",\n                \"ec2:DescribeTransitGatewayVpcAttachments\",\n                \"ec2:DescribeTransitGatewayRouteTables\",\n                \"ec2:DescribeVpcAttribute\",\n                \"ec2:DescribeVpcClassicLink\",\n                \"ec2:DescribeVpcClassicLinkDnsSupport\",\n                \"ec2:DescribeVpcEndpoints\",\n                \"ec2:DescribeVpcEndpointConnectionNotifications\",\n                \"ec2:DescribeVpcEndpointConnections\",\n                \"ec2:DescribeVpcEndpointServiceConfigurations\",\n                \"ec2:DescribeVpcEndpointServicePermissions\",\n                \"ec2:DescribeVpcEndpointServices\",\n                \"ec2:DescribeVpcPeeringConnections\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:DescribeVpnConnections\",\n                \"ec2:DescribeVpnGateways\",\n                \"ec2:GetManagedPrefixListAssociations\",\n                \"ec2:GetManagedPrefixListEntries\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nYou don't need to allow minimum console permissions for roles that are making\n                calls only to the AWS CLI or the AWS API. Instead, allow access only to actions that\n                match the API operation that the role needs to perform.\nCreate a VPC with a public\n                    subnet\nThe following example enables roles to create VPCs, subnets, route tables, and\n                internet gateways. Roles can also attach an internet gateway to a VPC and create\n                routes in route tables. The\nec2:ModifyVpcAttribute\naction enables roles\n                to enable DNS hostnames for the VPC, so that each instance launched into a VPC\n                receives a DNS hostname.\n{\n\"Version\": \"2012-10-17\",\n   \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateVpc\", \n        \"ec2:CreateSubnet\", \n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:CreateRouteTable\", \n        \"ec2:CreateRoute\", \n        \"ec2:CreateInternetGateway\", \n        \"ec2:AttachInternetGateway\", \n        \"ec2:AssociateRouteTable\", \n        \"ec2:ModifyVpcAttribute\"\n      ],\n      \"Resource\": \"*\"\n    }\n   ]\n}\nThe preceding policy also enables roles to create a VPC in the Amazon VPC\n                console.\nModify and delete VPC resources\nYou might want to control the VPC resources that roles can modify or delete. For\n                example, the following policy allows roles to work with and delete route tables that\n                have the tag\nPurpose=Test\n. The policy also specifies that roles can\n                only delete internet gateways that have the tag\nPurpose=Test\n. Roles\n                cannot work with route tables or internet gateways that do not have this tag.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"ec2:DeleteInternetGateway\",\n            \"Resource\": \"arn:aws:ec2:*:*:internet-gateway/*\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:ResourceTag/\nPurpose\n\": \"\nTest\n\"\n                }\n            }\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DeleteRouteTable\",\n                \"ec2:CreateRoute\",\n                \"ec2:ReplaceRoute\",\n                \"ec2:DeleteRoute\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:route-table/*\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:ResourceTag/\nPurpose\n\": \"\nTest\n\"\n                }\n            }\n        }\n    ]\n}\nManage security groups\nThe following policy allows roles to manage security groups. The first statement\n                allows roles to delete any security group with the tag\nStack=test\nand\n                to manage the inbound and outbound rules for any security group with the tag\nStack=test\n. The second statement requires roles to tag any security\n                groups that they create with the tag\nStack=Test\n. The third statement\n                allows roles to create tags when creating a security group. The fourth statement\n                allows roles to view any security group and security group rule. The fifth statement\n                allows roles to create a security group in a VPC.\nNote\nThis policy cannot be used by the AWS CloudFormation service to create a security group with required tags. If you remove the condition on the\nec2:CreateSecurityGroup\naction that requires the tag, the policy will work.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RevokeSecurityGroupIngress\",\n                \"ec2:AuthorizeSecurityGroupEgress\",\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:UpdateSecurityGroupRuleDescriptionsEgress\",\n                \"ec2:RevokeSecurityGroupEgress\",\n                \"ec2:DeleteSecurityGroup\",\n                \"ec2:ModifySecurityGroupRules\",\n                \"ec2:UpdateSecurityGroupRuleDescriptionsIngress\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:ResourceTag/Stack\": \"test\"\n                }\n            }\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateSecurityGroup\",\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"aws:RequestTag/Stack\": \"test\"\n                },\n                \"ForAllValues:StringEquals\":\n{\n\"aws:TagKeys\": \"Stack\"\n                }\n            }\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateTags\",\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:CreateAction\": \"CreateSecurityGroup\"\n                }\n            }\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeSecurityGroupRules\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:DescribeSecurityGroups\"\n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateSecurityGroup\",\n            \"Resource\": \"arn:aws:ec2:*:*:vpc/*\"\n        }\n    ]\n}\nTo allow roles to change the security group that's associated with an instance,\n                add the\nec2:ModifyInstanceAttribute\naction to your policy.\nTo allow roles to change security groups for a network interface, add the\nec2:ModifyNetworkInterfaceAttribute\naction to your policy.\nManage security group rules\nThe following policy grants roles permission to view all security groups and\n                security group rules, add and remove inbound and outbound rules for the security\n                groups for a specific VPC, and modify rule descriptions for the specified VPC. The\n                first statement uses the\nec2:Vpc\ncondition key to scope permissions to\n                a specific VPC.\nThe second statement grants roles permission to describe all security groups,\n                security group rules, and tags. This enables roles to view security group rules in\n                order to modify them.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\":[\n{\n\"Effect\":\"Allow\",\n    \"Action\": [\n       \"ec2:AuthorizeSecurityGroupIngress\",\n       \"ec2:RevokeSecurityGroupIngress\",\n       \"ec2:UpdateSecurityGroupRuleDescriptionsIngress\",\n       \"ec2:AuthorizeSecurityGroupEgress\",\n       \"ec2:RevokeSecurityGroupEgress\",\n       \"ec2:UpdateSecurityGroupRuleDescriptionsEgress\",\n       \"ec2:ModifySecurityGroupRules\"\n    ],\n     \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:security-group/*\",\n      \"Condition\":\n{\n\"ArnEquals\":\n{\n\"ec2:Vpc\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc/\nvpc-id\n\"\n        }\n      }\n    },\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n          \"ec2:DescribeSecurityGroups\",\n          \"ec2:DescribeSecurityGroupRules\",\n          \"ec2:DescribeTags\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\nLaunch instances into a specific subnet\nThe following policy grants roles permission to launch instances into a specific\n                subnet and to use a specific security group in the request. The policy does this by\n                specifying the ARN for the subnet and the ARN for the security group. If roles\n                attempt to launch an instance into a different subnet or using a different security\n                group, the request will fail (unless another policy or statement grants roles\n                permission to do so).\nThe policy also grants permission to use the network interface resource. When\n                launching into a subnet, the\nRunInstances\nrequest creates a primary\n                network interface by default, so the role needs permission to create this resource\n                when launching the instance.\n{\n\"Version\": \"2012-10-17\",\n   \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [\n        \"arn:aws:ec2:\nregion\n::image/ami-*\",\n        \"arn:aws:ec2:\nregion\n:\naccount\n:instance/*\",\n        \"arn:aws:ec2:\nregion\n:\naccount\n:subnet/\nsubnet-id\n\",\n        \"arn:aws:ec2:\nregion\n:\naccount\n:network-interface/*\",\n        \"arn:aws:ec2:\nregion\n:\naccount\n:volume/*\",\n        \"arn:aws:ec2:\nregion\n:\naccount\n:key-pair/*\",\n        \"arn:aws:ec2:\nregion\n:\naccount\n:security-group/\nsg-id\n\"\n      ]\n    }\n   ]\n}\nLaunch instances into a specific VPC\nThe following policy grants roles permission to launch instances into any subnet\n                within a specific VPC. The policy does this by applying a condition key\n                    (\nec2:Vpc\n) to the subnet resource.\nThe policy also grants roles permission to launch instances using only AMIs that\n                have the tag \"\ndepartment=dev\n\".\n{\n\"Version\": \"2012-10-17\",\n   \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:subnet/*\",\n        \"Condition\":\n{\n\"ArnEquals\":\n{\n\"ec2:Vpc\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc/\nvpc-id\n\"\n         }\n      }\n   },\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": \"arn:aws:ec2:\nregion\n::image/ami-*\",\n      \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:ResourceTag/\ndepartment\n\": \"\ndev\n\"\n            }\n      }\n   },\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [ \n         \"arn:aws:ec2:\nregion\n:\naccount\n:instance/*\",\n         \"arn:aws:ec2:\nregion\n:\naccount\n:volume/*\",\n         \"arn:aws:ec2:\nregion\n:\naccount\n:network-interface/*\",\n         \"arn:aws:ec2:\nregion\n:\naccount\n:key-pair/*\",\n         \"arn:aws:ec2:\nregion\n:\naccount\n:security-group/*\"\n         ]\n      }\n   ]\n}\nAdditional Amazon VPC policy examples\nYou can find additional example IAM policies related to Amazon VPC in the following documentation:\nManaged prefix lists\nTraffic mirroring\nTransit gateways\nVPC endpoints and VPC endpoint services\nVPC endpoint policies\nVPC peering\nAWS Wavelength\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow Amazon VPC works with IAM\nTroubleshoot\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/security_iam_troubleshoot.html": "Troubleshoot Amazon VPC identity and access - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nI am not authorized to \n                    perform an action in Amazon VPC\nI am not authorized to perform\n                    iam:PassRole\nI want to allow\n                    people outside of my AWS account to access my Amazon VPC resources\nTroubleshoot Amazon VPC identity and access\nUse the following information to help you diagnose and fix common issues that you\n            might encounter when working with Amazon VPC and IAM.\nIssues\nI am not authorized to \n                    perform an action in Amazon VPC\nI am not authorized to perform\n                    iam:PassRole\nI want to allow\n                    people outside of my AWS account to access my Amazon VPC resources\nI am not authorized to \n                    perform an action in Amazon VPC\nIf the AWS Management Console tells you that you're not authorized to perform an action, then\n                you must contact your administrator for assistance. Your administrator is the person\n                that provided you with your sign-in credentials.\nThe following example error occurs when the\nmateojackson\nIAM user\n                tries to use the console to view details about a subnet but belongs to an IAM role\n                that does not have\nec2:DescribeSubnets\npermissions.\nUser: arn:aws:iam::123456789012:user/mateojackson is not authorized to perform: ec2:DescribeSubnets on resource:\nsubnet-id\nIn this case, Mateo asks his administrator to update the policy to allow him to\n                access the subnet.\nI am not authorized to perform\n                    iam:PassRole\nIf you receive an error that you're not authorized to perform the\niam:PassRole\naction, your policies must be updated to allow you to pass a role to Amazon VPC.\nSome AWS services allow you to pass an existing role to that service instead of creating a new service role or service-linked role. To do\n this, you must have permissions to pass the role to the service.\nThe following example error occurs when an IAM user named\nmarymajor\ntries to use the console to perform an action in\n Amazon VPC. However, the action requires the service to have permissions that are granted by a service role. Mary does not have permissions to pass the\n role to the service.\nUser: arn:aws:iam::123456789012:user/\nmarymajor\nis not authorized to perform: iam:PassRole\nIn this case, Mary's policies must be updated to allow her to perform the\niam:PassRole\naction.\nIf you need help, contact your AWS administrator. Your administrator is the person who provided you with your sign-in credentials.\nI want to allow\n                    people outside of my AWS account to access my Amazon VPC resources\nYou can create a role that users in other accounts or people outside of your organization can use to access your resources. You can specify who\n            is trusted to assume the role. For services that support resource-based policies or access control lists (ACLs), you can use those policies to grant\n            people access to your resources.\nTo learn more, consult the following:\nTo learn whether Amazon VPC supports these features, see\nHow Amazon VPC works with IAM\n.\nTo learn how to provide access to your resources across AWS accounts that you own, see\nProviding access to an IAM user in another AWS account that you\n                     own\nin the\nIAM User Guide\n.\nTo learn how to provide access to your resources to third-party AWS accounts, see\nProviding access to AWS accounts owned by third parties\nin the\nIAM User Guide\n.\nTo learn how to provide access through identity federation, see\nProviding access to externally authenticated users (identity federation)\nin the\nIAM User Guide\n.\nTo learn the difference between using roles and resource-based policies for cross-account access, see\nHow IAM roles differ from resource-based policies\nin the\nIAM User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPolicy examples\nAWS managed policies\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/security-iam-awsmanpol.html": "AWS managed policies for Amazon Virtual Private Cloud - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nAmazonVPCFullAccess\nAmazonVPCReadOnlyAccess\nAmazonVPCCrossAccountNetworkInterfaceOperations\nPolicy updates\nAWS managed policies for Amazon Virtual Private Cloud\nAn AWS managed policy is a standalone policy that is created and administered by AWS. AWS managed policies are designed \n  to provide permissions for many common use cases so that you can start assigning permissions to users, groups, and roles.\nKeep in mind that AWS managed policies might not grant least-privilege permissions for your specific use cases because \n  they're available for all AWS customers to use. We recommend that you reduce permissions further by defining\ncustomer managed policies\nthat are specific to your use cases.\nYou cannot change the permissions defined in AWS managed policies. If AWS updates the permissions defined in an AWS \n  managed policy, the update affects all principal identities (users, groups, and roles) that the policy is attached to. AWS is \n  most likely to update an AWS managed policy when a new AWS service is launched or new API operations become available for\n  existing services.\nFor more information, see\nAWS managed policies\nin the\nIAM User Guide\n.\nAWS managed policy: AmazonVPCFullAccess\nYou can attach the\nAmazonVPCFullAccess\npolicy to your IAM identities.\n          This policy grants permissions that allow full access to Amazon VPC.\nTo view the permissions for this policy, see\nAmazonVPCFullAccess\nin the\nAWS Managed Policy Reference\n.\nAWS managed policy: AmazonVPCReadOnlyAccess\nYou can attach the\nAmazonVPCReadOnlyAccess\npolicy to your IAM identities.\n         This policy grants permissions that allow read-only access to Amazon VPC.\nTo view the permissions for this policy, see\nAmazonVPCReadOnlyAccess\nin the\nAWS Managed Policy Reference\n.\nAWS managed policy: AmazonVPCCrossAccountNetworkInterfaceOperations\nYou can attach the\nAmazonVPCCrossAccountNetworkInterfaceOperations\npolicy to your IAM identities.\n         This policy grants permissions that allow the identity to create network interfaces and attach them\n         to cross-account resources.\nTo view the permissions for this policy, see\nAmazonVPCCrossAccountNetworkInterfaceOperations\nin the\nAWS Managed Policy Reference\n.\nAmazon VPC updates to AWS managed policies\nView details about updates to AWS managed policies for Amazon VPC since this service\n         began tracking these changes in March 2021.\nChange\nDescription\nDate\nAWS managed policy: AmazonVPCCrossAccountNetworkInterfaceOperations\n\u00e2\u0080\u0093\n                     Update to an existing policy\nAdded the AssignIpv6Addresses and UnassignIpv6Addresses \n                     actions, which allow you to manage the IPv6 addresses associated with network interfaces.\nSeptember 25, 2023\nAWS managed policy: AmazonVPCReadOnlyAccess\n\u00e2\u0080\u0093 \n                     Update to an existing policy\nAdded the DescribeSecurityGroupRules action, which allows you \n                     to view\nsecurity group rules\n.\nAugust 2, 2021\nAWS managed policy: AmazonVPCFullAccess\n\u00e2\u0080\u0093 \n                     Update to an existing policy\nAdded the DescribeSecurityGroupRules and ModifySecurityGroupRules\n                     actions, which allow you to view and modify\nsecurity group rules\n.\nAugust 2, 2021\nAWS managed policy: AmazonVPCFullAccess\n\u00e2\u0080\u0093 \n                     Update to an existing policy\nAdded actions for carrier gateways, IPv6 pools, local gateways, and local\n                     gateway route tables.\nJune 23, 2021\nAWS managed policy: AmazonVPCReadOnlyAccess\n\u00e2\u0080\u0093 \n                     Update to an existing policy\nAdded actions for carrier gateways, IPv6 pools, local gateways, and local\n                     gateway route tables.\nJune 23, 2021\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTroubleshoot\nInfrastructure security\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/infrastructure-security.html": "Infrastructure security in Amazon VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nNetwork isolation\nControl network traffic\nCompare security groups and network ACLs\nInfrastructure security in Amazon VPC\nAs a managed service, Amazon Virtual Private Cloud is protected by AWS global network security. For information about AWS security services and how AWS protects infrastructure, see\nAWS Cloud Security\n. To design your AWS environment using the best practices for infrastructure security, see\nInfrastructure Protection\nin\nSecurity Pillar AWS Well\u00e2\u0080\u0090Architected Framework\n.\nYou use AWS published API calls to access Amazon VPC through the network. \n Clients must support the following:\nTransport Layer Security (TLS). We require TLS 1.2 and recommend TLS 1.3.\nCipher suites with perfect forward secrecy (PFS) such as DHE (Ephemeral\n        Diffie-Hellman) or ECDHE (Elliptic Curve Ephemeral Diffie-Hellman). Most modern systems\n        such as Java 7 and later support these modes.\nAdditionally, requests must be signed by using\n   an access key ID and a secret access key that is associated with an IAM principal. Or you\n   can use the\nAWS Security Token Service\n(AWS STS) to generate temporary security credentials to sign requests.\nNetwork isolation\nA virtual private cloud (VPC) is a virtual network in your own logically isolated area\n            in the AWS Cloud. Use separate VPCs to isolate infrastructure by workload or organizational \n            entity.\nA subnet is a range of IP addresses in a VPC. When you launch an instance, you launch it \n            into a subnet in your VPC. Use subnets to isolate the tiers of your application (for example, \n            web, application, and database) within a single VPC. Use private subnets for your instances \n            if they should not be accessed directly from the internet.\nYou can use\nAWS PrivateLink\nto enable resources\n            in your VPC to connect to AWS services using private IP addresses, as if those services\n            were hosted directly in your VPC. Therefore, you do not need to use an internet gateway or \n            NAT device to access AWS services.\nControl network traffic\nConsider the following options for controlling network traffic to the resources in\n            your VPC, such as EC2 instances:\nUse\nsecurity groups\nas the \n                primary mechanism for controlling network access to your VPCs. When necessary, use\nnetwork ACLs\nto provide stateless, \n                coarse-grain network control. Security groups are more versatile than network ACLs, \n                due to their ability to perform stateful  packet filtering and create rules that \n                reference other security groups. Network ACLs can be effective as a secondary control \n                (for example, to deny a specific subset of traffic) or as high-level subnet guard rails. \n                Also, because network ACLs apply to an entire subnet, they can be used as defense-in-depth \n                in case an instance is ever launched without the correct security group.\nUse private subnets for your instances if they should not be accessed \n                directly from the internet. Use a bastion host or NAT gateway for internet access \n                from instances in private subnets.\nConfigure subnet\nroute tables\nwith the minimum network routes to support your connectivity requirements.\nConsider using additional security groups or network interfaces to control \n                and audit Amazon EC2 instance management traffic separately from regular application traffic. \n                Therefore, you can implement special IAM policies for change control, making it easier \n                to audit changes to security group rules or automated rule-verification scripts. Multiple \n                network interfaces also provide additional options for controlling network traffic, \n                including the ability to create host-based routing policies or leverage different VPC \n                subnet routing rules based on an network interfaces assigned to a subnet.\nUse AWS Virtual Private Network or AWS Direct Connect to establish private connections from your remote\n                        networks to your VPCs. For more information, see\nNetwork-to-Amazon VPC connectivity options\n.\nUse\nVPC Flow Logs\nto monitor the traffic \n                        that reaches your instances.\nUse\nAWS Security Hub\nto check for unintended \n                        network accessibility from your instances.\nUse\nAWS Network Firewall\nto protect the subnets in \n                        your VPC from common network threats.\nCompare security groups and network ACLs\nThe following table summarizes the basic differences between security groups and network\n            ACLs.\nSecurity group\nNetwork ACL\nOperates at the instance level\nOperates at the subnet level\nApplies to an instance only if it is associated with the instance\nApplies to all instances deployed in the associated subnet (providing an \n                            additional layer of defense if security group rules are too permissive)\nSupports allow rules only\nSupports allow rules and deny rules\nEvaluates all rules before deciding whether to allow traffic\nEvaluates rules in order, starting with the lowest numbered rule, when deciding\n                            whether to allow traffic\nStateful: Return traffic is allowed, regardless of the rules\nStateless: Return traffic must be explicitly allowed by the rules\nThe following diagram illustrates the layers of security provided by security groups and\n            network ACLs. For example, traffic from an internet gateway is routed to the appropriate\n            subnet using the routes in the routing table. The rules of the network ACL that is associated\n            with the subnet control which traffic is allowed to the subnet. The rules of the security\n            group that is associated with an instance control which traffic is allowed to the\n            instance.\nYou can secure your instances using only security groups. However, you can add network\n            ACLs as an additional layer of defense. For more information, see\nExample: Control access to instances in a subnet\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS managed policies\nSecurity groups\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-groups.html": "Control traffic to your AWS resources using security groups - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nSecurity group basics\nSecurity group example\nControl traffic to your AWS resources using security groups\nA\nsecurity group\ncontrols the traffic that is allowed to reach and leave\n\t\tthe resources that it is associated with. For example, after you associate a security group\n\t\twith an EC2 instance, it controls the inbound and outbound traffic for the instance.\nWhen you create a VPC, it comes with a default security group. You can create additional\n\t\tsecurity groups for a VPC, each with their own inbound and outbound rules. You can specify \n\t\tthe source, port range, and protocol for each inbound rule. You can specify the destination, \n\t\tport range, and protocol for each outbound rule.\nThe following diagram shows a VPC with a subnet, an internet gateway, and a security group.\n\t    The subnet contains an EC2 instance. The security group is assigned to the instance.\n\t    The security group acts as a virtual firewall. The only traffic that reaches the instance\n\t    is the traffic allowed by the security group rules. For example, if the security group\n\t    contains a rule that allows ICMP traffic to the instance from your network, then you\n\t    could ping the instance from your computer. If the security group does not contain a\n\t    rule that allows SSH traffic, then you could not connect to your instance using SSH.\nContents\nSecurity group basics\nSecurity group example\nSecurity group rules\nDefault security groups\nWork with security groups\nPricing\nThere is no additional charge for using security groups.\nSecurity group basics\nYou can assign a security group only to resources created in the same VPC as the \n    \t\t\t\t\tsecurity group. You can assign multiple security groups to a resource.\nWhen you create a security group, you must provide it with a name and a\n    \t\t\t\t\tdescription. The following rules apply:\nA security group name must be unique within the VPC.\nNames and descriptions can be up to 255 characters in length.\nNames and descriptions are limited to the following characters: a-z,\n    \t\t\t\t\t\t\tA-Z, 0-9, spaces, and ._-:/()#,@[]+=&;\n{\n}!$*.\nWhen the name contains trailing spaces, we trim the space at the end of the name. For\n    \t\t\t\t\t\t\texample, if you enter \"Test Security Group \" for the name, we store it\n    \t\t\t\t\t\t\tas \"Test Security Group\".\nA security group name cannot start with\nsg-\n.\nSecurity groups are stateful. For example, if you send a request from an\n    \t\t\t\t\tinstance, the response traffic for that request is allowed to reach the \n    \t\t\t\t\tinstance regardless of the inbound security group rules. Responses to \n    \t\t\t\t\tallowed inbound traffic are allowed to leave the instance, regardless of \n    \t\t\t\t\tthe outbound rules.\nSecurity groups do not filter traffic destined to and from the\n    \t\t\t\t\tfollowing:\nAmazon Domain Name Services (DNS)\nAmazon Dynamic Host Configuration Protocol (DHCP)\nAmazon EC2 instance metadata\nAmazon ECS task metadata endpoints\nLicense activation for Windows instances\nAmazon Time Sync Service\nReserved IP addresses used by the default VPC router\nThere are quotas on the number of security groups that you can create per VPC,\n    \t\t\t\t\tthe number of rules that you can add to each security group, and the number of\n    \t\t\t\t\tsecurity groups that you can associate with a network interface. For more\n    \t\t\t\t\tinformation, see\nAmazon VPC quotas\n.\nBest practices\nAuthorize only specific IAM principals to create and modify security groups.\nCreate the minimum number of security groups that you need, to decrease the \n    \t\t\t\t\trisk of error. Use each security group to manage access to resources that have \n    \t\t\t\t\tsimilar functions and security requirements.\nWhen you add inbound rules for ports 22 (SSH) or 3389 (RDP) so that you can access \n    \t\t\t\t\tyour EC2 instances, authorize only specific IP address ranges. If you specify \n    \t\t\t\t\t0.0.0.0/0 (IPv4) and ::/ (IPv6), this enables anyone to access your instances \n    \t\t\t\t\tfrom any IP address using the specified protocol.\nDo not open large port ranges. Ensure that access through each port is restricted\n    \t\t\t\t\tto the sources or destinations that require it.\nConsider creating network ACLs with rules similar to your security groups, to add\n    \t\t\t\t\tan additional layer of security to your VPC. For more information about the differences\n    \t\t\t\t\tbetween security groups and network ACLs, see\nCompare security groups and network ACLs\n.\nSecurity group example\nThe following diagram shows a VPC with two security groups and two subnets. The\n\t\t\t\tinstances in subnet A have the same connectivity requirements, so they are\n\t\t\t\tassociated with security group 1. The instances in subnet B have the same\n\t\t\t\tconnectivity requirements, so they are associated with security group 2. The\n\t\t\t\tsecurity group rules allow traffic as follows:\nThe first inbound rule in security group 1 allows SSH traffic to the instances in subnet A\n    \t\t\t\tfrom the specified address range (for example, a range in your own network).\nThe second inbound rule in security group 1 allows the instances in subnet A to communicate \n    \t\t\t\twith each other using any protocol and port.\nThe first inbound rule in security group 2 allows the instances in subnet B to communicate \n    \t\t\t\twith each other using any protocol and port.\nThe second inbound rule in security group 2 allows the instances in subnet A to communicate\n    \t\t\t\twith the instances in subnet B using SSH.\nBoth security groups use the default outbound rule, which allows all traffic.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nInfrastructure security\nSecurity group rules\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/security-groups.html": "", "https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html": "Security group rules - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nSecurity group rule basics\nComponents of a security group rule\nSecurity group referencing\nSecurity group size\nStale security group rules\nExample rules\nSecurity group rules\nThe rules of a security group control the inbound traffic that's allowed to reach the\n\t\t\tresources that are associated with the security group. The rules also control the\n\t\t\toutbound traffic that's allowed to leave them.\nYou can add or remove rules for a security group (also referred to as\nauthorizing\nor\nrevoking\ninbound or\n\t\t\toutbound access). A rule applies either to inbound traffic (ingress) or outbound traffic\n\t\t\t(egress). You can grant access to a specific source or destination.\nContents\nSecurity group rule basics\nComponents of a security group rule\nSecurity group referencing\nSecurity group size\nStale security group rules\nExample rules\nSecurity group rule basics\nYou can specify allow rules, but not deny rules.\nWhen you first create a security group, it has no inbound rules. Therefore, no \n        \t\t\t\tinbound traffic is allowed until you add inbound rules to the security group.\nWhen you first create a security group, it has an outbound rule that allows \n        \t\t\t\tall outbound traffic from the resource. You can remove the rule and add outbound \n        \t\t\t\trules that allow specific outbound traffic only. If your security group has no \n        \t\t\t\toutbound rules, no outbound traffic is allowed.\nWhen you associate multiple security groups with a resource, the rules from\n        \t\t\t\teach security group are aggregated to form a single set of rules that are used\n        \t\t\t\tto determine whether to allow access.\nWhen you add, update, or remove rules, your changes are automatically applied to all\n        \t\t\t\tresources associated with the security group. The effect of some rule changes\n        \t\t\t\tcan depend on how the traffic is tracked. For more information, see\nConnection tracking\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nWhen you create a security group rule, AWS assigns a unique ID to the rule. You can use\n        \t\t\t\tthe ID of a rule when you use the API or CLI to modify or delete the rule.\nLimitation\nSecurity groups cannot block DNS requests to or from the Route\u00c2\u00a053 Resolver, sometimes referred to\n        \t\t\tas the 'VPC+2 IP address' (see\nAmazon Route\u00c2\u00a053 Resolver\nin the\nAmazon Route\u00c2\u00a053 Developer Guide\n, or as\nAmazonProvidedDNS\n.\n        \t\t\tTo filter DNS requests through the Route\u00c2\u00a053 Resolver, use\nRoute\u00c2\u00a053 Resolver DNS Firewall\n.\nComponents of a security group rule\nProtocol\n: The protocol to allow. The most\n\t\t\t\t\tcommon protocols are 6 (TCP), 17 (UDP), and 1 (ICMP).\nPort range\n: For TCP, UDP, or a custom\n\t\t\t\t\tprotocol, the range of ports to allow. You can specify a single port number (for\n\t\t\t\t\texample,\n22\n), or range of port numbers (for example,\n7000-8000\n).\nICMP type and code\n: For ICMP, the ICMP type and code. For\n\t\t\t\t\texample, use type 8 for ICMP Echo Request or type 128 for ICMPv6 Echo\n\t\t\t\t\tRequest.\nSource or destination\n: The source (inbound rules) or\n\t\t\t\t\tdestination (outbound rules) for the traffic to allow. Specify one of the\n\t\t\t\t\tfollowing:\nA single IPv4 address. You must use the\n/32\nprefix length. For example,\n203.0.113.1/32\n.\nA single IPv6 address. You must use the\n/128\nprefix length. For example,\n2001:db8:1234:1a00::123/128\n.\nA range of IPv4 addresses, in CIDR block notation. For example,\n203.0.113.0/24\n.\nA range of IPv6 addresses, in CIDR block notation. For example,\n2001:db8:1234:1a00::/64\n.\nThe ID of a prefix list. For example,\npl-1234abc1234abc123\n. For more\n\t\t\t\t\t\t\tinformation, see\nGroup CIDR blocks using managed prefix lists\n.\nThe ID of a security group. For example,\nsg-1234567890abcdef0\n. For more\n\t\t\t\t\t\t\t\tinformation, see\nSecurity group referencing\n.\n(Optional) Description\n: You can add a\n\t\t\t\t\tdescription for the rule, which can help you identify it later. A description\n\t\t\t\t\tcan be up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9,\n\t\t\t\t\tspaces, and ._-:/()#,@[]+=;\n{\n}!$*.\nSecurity group referencing\nWhen you specify a security group as the source or destination for a rule, the rule\n\t\t\t\taffects all instances that are associated with the security groups. The instances\n\t\t\t\tcan communicate in the specified direction, using the private IP addresses of the\n\t\t\t\tinstances, over the specified protocol and port.\nFor example, the following represents an inbound rule for a security group that\n\t\t\t\treferences security group sg-0abcdef1234567890. This rule allows inbound SSH traffic\n\t\t\t\tfrom the instances associated with sg-0abcdef1234567890.\nSource\nProtocol\nPort range\nsg-0abcdef1234567890\nTCP\n22\nWhen referencing a security group in a security group rule, note the\n\t\t\t\t\tfollowing:\nBoth security groups must belong to the same VPC or to peered VPCs.\nNo rules from the referenced security group are added to the security group that\n\t\t\t\t\t\treferences it.\nFor inbound rules, the EC2 instances associated with a security group can receive\n\t\t\t\t\t\tinbound traffic from the private IP addresses of the EC2 instances\n\t\t\t\t\t\tassociated with the referenced security group.\nFor outbound rules, the EC2 instances associated with a security group can send\n\t\t\t\t\t\toutbound traffic to the private IP addresses of the EC2 instances associated\n\t\t\t\t\t\twith the referenced security group.\nLimitation\nIf you configure routes to forward the traffic between two instances in \n        \t\t\tdifferent subnets through a middlebox appliance, you must ensure that the \n        \t\t\tsecurity groups for both instances allow traffic to flow between the instances. \n        \t\t\tThe security group for each instance must reference the private IP address of \n        \t\t\tthe other instance or the CIDR range of the subnet that contains the other \n        \t\t\tinstance as the source. If you reference the security group of the other \n        \t\t\tinstance as the source, this does not allow traffic to flow between the \n        \t\t\tinstances.\nExample\nThe following diagram shows a VPC with subnets in two Availability Zones, an internet\n        \t\t\tgateway, and an Application Load Balancer. Each Availability Zone has a public subnet for web servers and a\n        \t\t\tprivate subnet for database servers. There are separate security groups for the load\n        \t\t\tbalancer, the web servers, and the database servers. Create the following security \n        \t\t\tgroup rules to allow traffic.\nAdd rules to the load balancer security group to allow HTTP and HTTPS traffic \n        \t\t\t\tfrom the internet. The source is 0.0.0.0/0.\nAdd rules to the security group for the web servers to allow HTTP and HTTPS \n        \t\t\t\ttraffic only from the load balancer. The source is the security group for the\n        \t\t\t\tload balancer.\nAdd rules to the security group for the database servers to allow database \n        \t\t\t\trequests from the web servers. The source is the security group for the web \n        \t\t\t\tservers.\nSecurity group size\nThe type of source or destination determines how each rule counts toward the\n        \t   maximum number of rules that you can have per security group.\nA rule that references a CIDR block counts as one rule.\nA rule that references another security group counts as one rule, no matter \n        \t\t\t\tthe size of the referenced security group.\nA rule that references a customer-managed prefix list counts as the maximum size\n        \t\t\t\tof the prefix list. For example, if the maximum size of your prefix list is 20,\n        \t\t\t    a rule that references this prefix list counts as 20 rules.\nA rule that references an AWS-managed prefix list counts as the weight of the\n\t\t\t\t\t\tprefix list. For example, if the weight of the prefix list is 10, a rule\n\t\t\t\t\t\tthat references this prefix list counts as 10 rules. For more information,\n\t\t\t\t\t\tsee\nAvailable AWS-managed prefix lists\n.\nStale security group rules\nIf your VPC has a VPC peering connection with another VPC, or if it uses a VPC shared by \n\t\t\t\tanother account, a security group rule in your VPC can reference a security group in that \n\t\t\t\tpeer VPC or shared VPC. This allows resources that are associated with the referenced security \n\t\t\t\tgroup and those that are associated with the referencing security group to communicate with \n\t\t\t\teach other.\nIf the security group in the shared VPC is deleted, or if the VPC peering connection is deleted, \n\t\t\t\tthe security group rule is marked as stale. You can delete stale security group rules as you \n\t\t\t\twould any other security group rule. For more information, see\nWork with stale security group rules\nin the\nAmazon VPC Peering Guide\n.\nExample rules\nWeb servers\nThe following are example rules for a security group for your web servers. \n\t\t\t\t\tThe web servers can receive HTTP and HTTPS traffic from all IPv4 and IPv6 addresses and \n\t\t\t\t\tsend SQL or MySQL traffic to your database servers.\nWarning\nWhen you add rules for ports 22 (SSH) or 3389 (RDP) so that you can access your\n\t\t\t\t\tEC2 instances, we recommend that you authorize only specific IP address ranges.\n\t\t\t\t\tIf you specify 0.0.0.0/0 (IPv4) and ::/ (IPv6), this enables anyone to access\n\t\t\t\t\tyour instances from any IP address using the specified protocol.\nInbound\nSource\nProtocol\nPort range\nDescription\n0.0.0.0/0\nTCP\n80\nAllows inbound HTTP access from all IPv4 addresses\n::/0\nTCP\n80\nAllows inbound HTTP access from all IPv6 addresses\n0.0.0.0/0\nTCP\n443\nAllows inbound HTTPS access from all IPv4 addresses\n::/0\nTCP\n443\nAllows inbound HTTPS access from all IPv6 addresses\nPublic IPv4 address range of your network\nTCP\n22\n(Optional) Allows inbound SSH access from IPv4 IP addresses in your network\nIPv6 address range of your network\nTCP\n22\n(Optional) Allows inbound SSH access from IPv6 IP addresses in your network\nPublic IPv4 address range of your network\nTCP\n3389\n(Optional) Allows inbound RDP access from IPv4 IP addresses in your network\nIPv6 address range of your network\nTCP\n3389\n(Optional) Allows inbound RDP access from IPv6 IP addresses in your network\nID of this security group\nAll\nAll\n(Optional) Allows inbound traffic from other servers associated with\n\t\t\t\t\t\t\t\tthis security group\nOutbound\nDestination\nProtocol\nPort range\nDescription\nID of the security group for instances running Microsoft SQL Server\nTCP\n1433\nAllows outbound Microsoft SQL Server access\nID of the security group for instances running MySQL\nTCP\n3306\nAllows outbound MySQL access\nDatabase servers\nDatabase servers require rules that allow inbound specific protocols, such as MySQL \n\t\t\t\t\tor Microsoft SQL Server. For examples, see\nDatabase server rules\nin the\nAmazon EC2 User Guide\n. \n\t\t\t\t\tFor more information about security groups for Amazon RDS DB instances, see\nControlling access with\n\t\t\t\t\t\tsecurity groups\nin the\nAmazon RDS User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSecurity groups\nDefault security groups\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/default-security-group.html": "Default security groups for your VPCs - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nDefault security group basics\nDefault rules\nExample\nDefault security groups for your VPCs\nYour default VPCs and any VPCs that you create come with a default security group.\n\t\t    The name of the default security group is \"default\".\nWe recommend that you create security groups for specific resources or groups of\n\t\t\tresources instead of using the default security group. However, if you don't\n\t\t\tassociate a security group with some resources at creation time, we associate them \n\t\t\twith the default security group. For example, if you don't specify a security group  \n\t\t\twhen you launch an EC2 instance, we associate the instance with the default security \n\t\t\tgroup for its VPC.\nDefault security group basics\nYou can change the rules for a default security group.\nYou can't delete a default security group. If you try to delete a default \n\t\t\t\t\t\tsecurity group, we return the following error code:\nClient.CannotDelete\n.\nDefault rules\nThe following tables describe the default rules for a default security group.\nInbound\nSource\nProtocol\nPort range\nDescription\nsg-1234567890abcdef0\nAll\nAll\nAllows inbound traffic from all resources that are\n\t\t\t\t\t\t\t\tassigned to this security group. The source is the \n\t\t\t\t\t\t\t\tID of this security group.\nOutbound\nDestination\nProtocol\nPort range\nDescription\n0.0.0.0/0\nAll\nAll\nAllows all outbound IPv4 traffic.\n::/0\nAll\nAll\nAllows all outbound IPv6 traffic. This rule is added only if your\n\t\t\t\t\t\t\t\tVPC has an associated IPv6 CIDR block.\nExample\nThe following diagram shows a VPC with a default security group, an internet gateway, and a\n\t\t\t\tNAT gateway. The default security contains only its default rules, and it is\n\t\t\t\tassociated with two EC2 instances running in the VPC. In this scenario, each\n\t\t\t\tinstance can receive inbound traffic from the other instance on all ports and\n\t\t\t\tprotocols. The default rules do not allow the instances to receive traffic from the\n\t\t\t\tinternet gateway or the NAT gateway. If your instances must receive additional\n\t\t\t\ttraffic, we recommend that you create a security group with the required rules and\n\t\t\t\tassociate the new security group with the instances instead of the default security\n\t\t\t\tgroup.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSecurity group rules\nWork with security groups\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html": "Control traffic to subnets using network ACLs - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nNetwork ACL basics\nNetwork ACL rules\nDefault network ACL\nCustom network ACL\nCustom network ACLs and other AWS services\nEphemeral ports\nPath MTU Discovery\nWork with network ACLs\nExample: Control access to instances in a subnet\nControl traffic to subnets using network ACLs\nA\nnetwork access control list (ACL)\nallows or denies specific inbound\n    or outbound traffic at the subnet level. You can use the default network ACL for your VPC, or\n    you can create a custom network ACL for your VPC with rules that are similar to the rules for\n    your security groups in order to add an additional layer of security to your VPC.\nThere is no additional charge for using network ACLs.\nThe following diagram shows a VPC with two subnets. Each subnet has a network ACL. When\n    traffic enters the VPC (for example, from a peered VPC, VPN connection, or the internet), the\n    router sends the traffic to its destination. Network ACL A determines which traffic destined for\n    subnet 1 is allowed to enter subnet 1, and which traffic destined for a location outside subnet\n    1 is allowed to leave subnet 1. Similarly, network ACL B determines which traffic is allowed to\n    enter and leave subnet 2.\nFor information about the differences between security groups and network ACLs, see\nCompare security groups and network ACLs\n.\nContents\nNetwork ACL basics\nNetwork ACL rules\nDefault network ACL\nCustom network ACL\nCustom network ACLs and other AWS services\nEphemeral ports\nPath MTU Discovery\nWork with network ACLs\nExample: Control access to instances in a subnet\nNetwork ACL basics\nThe following are the basic things that you need to know about network ACLs:\nYour VPC automatically comes with a modifiable default network ACL. By default, it\n          allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic.\nYou can create a custom network ACL and associate it with a subnet to allow or deny\n          specific inbound or outbound traffic at the subnet level.\nEach subnet in your VPC must be associated with a network ACL. If you don't explicitly\n          associate a subnet with a network ACL, the subnet is automatically associated with the\n          default network ACL.\nYou can associate a network ACL with multiple subnets. However, a subnet can be\n          associated with only one network ACL at a time. When you associate a network ACL with a\n          subnet, the previous association is removed.\nA network ACL has inbound rules and outbound rules. Each rule can either allow or deny\n          traffic. Each rule has a number from 1 to 32766. We evaluate the rules in order, starting\n          with the lowest numbered rule, when deciding whether allow or deny traffic. If the traffic\n          matches a rule, the rule is applied and we do not evaluate any additional rules. We\n          recommend that you start by creating rules in increments (for example, increments of 10 or\n          100) so that you can insert new rules later on, if needed.\nWe evaluate the network ACL rules when traffic enters and leaves the subnet, not as it\n          is routed within a subnet.\nNACLs are\nstateless\n, which means that information\n          about previously sent or received traffic is not saved. If, for example, you create a NACL\n          rule to allow specific inbound traffic to a subnet, responses to that traffic are not\n          automatically allowed. This is in contrast to how security groups work. Security groups\n          are\nstateful\n, which means that information about\n          previously sent or received traffic is saved. If, for example, a security group allows\n          inbound traffic to an EC2 instance, responses are automatically allowed regardless of\n          outbound security group rules.\nNetwork ACLs can't block DNS requests to or from the Route\u00c2\u00a053 Resolver (also known as the VPC+2 \n          IP address or AmazonProvidedDNS). To filter DNS requests through the Route\u00c2\u00a053 Resolver, you can \n          enable\nRoute\u00c2\u00a053 Resolver DNS Firewall\nin the\nAmazon Route\u00c2\u00a053 Developer Guide\n.\nNetwork ACLs can't block traffic to the Instance Metadata Service (IMDS). To manage\n          access to IMDS, see\nConfigure the instance metadata options\nin the\nAmazon EC2 User Guide\n.\nNetwork ACLs do not filter traffic destined to and from the following:\nAmazon Domain Name Services (DNS)\nAmazon Dynamic Host Configuration Protocol (DHCP)\nAmazon EC2 instance metadata\nAmazon ECS task metadata endpoints\nLicense activation for Windows instances\nAmazon Time Sync Service\nReserved IP addresses used by the default VPC router\nThere are quotas (also known as limits) for the number of network ACLs per VPC and the \n          number of rules per network ACL. For more information, see\nAmazon VPC quotas\n.\nNetwork ACL rules\nYou can add or remove rules from the default network ACL, or create additional network\n      ACLs for your VPC. When you add or remove rules from a network ACL, the changes are\n      automatically applied to the subnets that it's associated with.\nThe following are the parts of a network ACL rule:\nRule number\n. Rules are evaluated starting with the\n          lowest numbered rule. As soon as a rule matches traffic, it's applied regardless of any\n          higher-numbered rule that might contradict it.\nType\n. The type of traffic; for example, SSH.\n                    You can also specify all traffic or a custom range.\nProtocol\n. You can specify any protocol that\n                    has a standard protocol number. For more information, see\nProtocol Numbers\n. If you specify ICMP as the protocol, you can\n                    specify any or all of the ICMP types and codes.\nPort range\n. The listening port or port range\n                    for the traffic. For example, 80 for HTTP traffic.\nSource\n. [Inbound rules only] The source of the\n                    traffic (CIDR range).\nDestination\n. [Outbound rules only]  The destination\n                    for the traffic (CIDR range).\nAllow/Deny\n. Whether to\nallow\nor\ndeny\nthe specified\n          traffic.\nIf you add a rule using a command line tool or the Amazon EC2 API, the CIDR range is\n            automatically modified to its canonical form. For example, if you specify\n100.68.0.18/18\nfor the CIDR range, we create a rule with a\n100.68.0.0/18\nCIDR range.\nDefault network ACL\nThe default network ACL is configured to allow all traffic to flow in and out of the\n      subnets with which it is associated. Each network ACL also includes a rule whose rule number\n      is an asterisk (*). This rule ensures that if a packet doesn't match any of the other numbered\n      rules, it's denied. You can't modify or remove this rule.\nThe following is an example default network ACL for a VPC that supports IPv4 only.\nInbound\nRule #\nType\nProtocol\nPort range\nSource\nAllow/Deny\n100\nAll IPv4 traffic\nAll\nAll\n0.0.0.0/0\nALLOW\n*\nAll IPv4 traffic\nAll\nAll\n0.0.0.0/0\nDENY\nOutbound\nRule #\nType\nProtocol\nPort range\nDestination\nAllow/Deny\n100\nAll IPv4 traffic\nAll\nAll\n0.0.0.0/0\nALLOW\n*\nAll IPv4 traffic\nAll\nAll\n0.0.0.0/0\nDENY\nIf you create a VPC with an IPv6 CIDR block or if you associate an IPv6 CIDR block with\n      your existing VPC, we automatically add rules that allow all IPv6 traffic to flow in and out\n      of your subnet. We also add rules whose rule numbers are an asterisk that ensures that a\n      packet is denied if it doesn't match any of the other numbered rules. You can't modify or\n      remove these rules. The following is an example default network ACL for a VPC that supports\n      IPv4 and IPv6.\nNote\nIf you've modified the inbound rules of your default network ACL, we do not\n        automatically add an\nALLOW\nrule for inbound IPv6 traffic\n        when you associate an IPv6 block with your VPC. Similarly, if you've modified the outbound\n        rules, we do not automatically add an\nALLOW\nrule for\n        outbound IPv6 traffic.\nInbound\nRule #\nType\nProtocol\nPort range\nSource\nAllow/Deny\n100\nAll IPv4 traffic\nAll\nAll\n0.0.0.0/0\nALLOW\n101\nAll IPv6 traffic\nAll\nAll\n::/0\nALLOW\n*\nAll traffic\nAll\nAll\n0.0.0.0/0\nDENY\n*\nAll IPv6 traffic\nAll\nAll\n::/0\nDENY\nOutbound\nRule #\nType\nProtocol\nPort range\nDestination\nAllow/Deny\n100\nAll traffic\nAll\nAll\n0.0.0.0/0\nALLOW\n101\nAll IPv6 traffic\nAll\nAll\n::/0\nALLOW\n*\nAll traffic\nAll\nAll\n0.0.0.0/0\nDENY\n*\nAll IPv6 traffic\nAll\nAll\n::/0\nDENY\nCustom network ACL\nThe following example shows a custom network ACL for a VPC that supports IPv4 only. It\n      includes inbound rules that allow HTTP and HTTPS traffic (100 and 110). There's a\n      corresponding outbound rule that enables responses to that inbound traffic (140), which covers\n      ephemeral ports 32768-65535. For more information about how to select the appropriate\n      ephemeral port range, see\nEphemeral ports\n.\nThe network ACL also includes inbound rules that allow SSH and RDP traffic into the\n      subnet. Outbound rule 120 enables responses to leave the subnet.\nThe network ACL has outbound rules (100 and 110) that allow outbound HTTP and HTTPS\n      traffic out of the subnet. There's a corresponding inbound rule that enables responses to that\n      outbound traffic (140), which covers ephemeral ports 32768-65535.\nEach network ACL includes a default rule whose rule number is an asterisk. This rule\n      ensures that if a packet doesn't match any of the other rules, it's denied. You can't modify\n      or remove this rule.\nInbound\nRule #\nType\nProtocol\nPort range\nSource\nAllow/Deny\nComments\n100\nHTTP\nTCP\n80\n0.0.0.0/0\nALLOW\nAllows inbound HTTP traffic from any IPv4 address.\n110\nHTTPS\nTCP\n443\n0.0.0.0/0\nALLOW\nAllows inbound HTTPS traffic from any IPv4 address.\n120\nSSH\nTCP\n22\n192.0.2.0/24\nALLOW\nAllows inbound SSH traffic from your home network's public IPv4 address range\n                (over the internet gateway).\n130\nRDP\nTCP\n3389\n192.0.2.0/24\nALLOW\nAllows inbound RDP traffic to the web servers from your home network's public\n                IPv4 address range (over the internet gateway).\n140\nCustom TCP\nTCP\n32768-65535\n0.0.0.0/0\nALLOW\nAllows inbound return IPv4 traffic from the internet (that is, for requests that\n                originate in the subnet).\nThis range is an example only.\n*\nAll traffic\nAll\nAll\n0.0.0.0/0\nDENY\nDenies all inbound IPv4 traffic not already handled by a preceding rule (not\n                modifiable).\nOutbound\nRule #\nType\nProtocol\nPort range\nDestination\nAllow/Deny\nComments\n100\nHTTP\nTCP\n80\n0.0.0.0/0\nALLOW\nAllows outbound IPv4 HTTP traffic from the subnet to the internet.\n110\nHTTPS\nTCP\n443\n0.0.0.0/0\nALLOW\nAllows outbound IPv4 HTTPS traffic from the subnet to the internet.\n120\nSSH\nTCP\n1024-65535\n192.0.2.0/24\nALLOW\nAllows outbound SSH traffic from your home network's public IPv4 address range\n                (over the internet gateway).\n140\nCustom TCP\nTCP\n32768-65535\n0.0.0.0/0\nALLOW\nAllows outbound IPv4 responses to clients on the internet (for example, serving\n                webpages to people visiting the web servers in the subnet).\nThis range is an example only.\n*\nAll traffic\nAll\nAll\n0.0.0.0/0\nDENY\nDenies all outbound IPv4 traffic not already handled by a preceding rule (not\n                modifiable).\nAs a packet comes to the subnet, we evaluate it against the inbound rules of the ACL that\n            the subnet is associated with (starting at the top of the list of rules, and moving to\n            the bottom). Here's how the evaluation goes if the packet is destined for the HTTPS port\n            (443). The packet doesn't match the first rule evaluated (rule 100). It does match the\n            second rule (110), which allows the packet into the subnet. If the packet had been\n            destined for port 139 (NetBIOS), it doesn't match any of the rules, and the * rule\n            ultimately denies the packet.\nYou might want to add a\ndeny\nrule in a situation where\n      you legitimately need to open a wide range of ports, but there are certain ports within the\n      range that you want to deny. Just make sure to place the\ndeny\nrule earlier in the table than the rule that allows the wide range of port\n      traffic.\nYou add\nallow\nrules depending on your use case. For\n      example, you can add a rule that allows outbound TCP and UDP access on port 53 for DNS\n      resolution. For every rule that you add, ensure that there is a corresponding inbound or\n      outbound rule that allows response traffic.\nThe following example shows a custom network ACL for a VPC that has an associated IPv6\n      CIDR block. This network ACL includes rules for all IPv6 HTTP and HTTPS traffic. In this case,\n      new rules were inserted between the existing rules for IPv4 traffic. You can also add the\n      rules as higher number rules after the IPv4 rules. IPv4 and IPv6 traffic are separate, and\n      therefore none of the rules for the IPv4 traffic apply to the IPv6 traffic.\nInbound\nRule #\nType\nProtocol\nPort range\nSource\nAllow/Deny\nComments\n100\nHTTP\nTCP\n80\n0.0.0.0/0\nALLOW\nAllows inbound HTTP traffic from any IPv4 address.\n105\nHTTP\nTCP\n80\n::/0\nALLOW\nAllows inbound HTTP traffic from any IPv6 address.\n110\nHTTPS\nTCP\n443\n0.0.0.0/0\nALLOW\nAllows inbound HTTPS traffic from any IPv4 address.\n115\nHTTPS\nTCP\n443\n::/0\nALLOW\nAllows inbound HTTPS traffic from any IPv6 address.\n120\nSSH\nTCP\n22\n192.0.2.0/24\nALLOW\nAllows inbound SSH traffic from your home network's public IPv4 address range\n                (over the internet gateway).\n130\nRDP\nTCP\n3389\n192.0.2.0/24\nALLOW\nAllows inbound RDP traffic to the web servers from your home network's public\n                IPv4 address range (over the internet gateway).\n140\nCustom TCP\nTCP\n32768-65535\n0.0.0.0/0\nALLOW\nAllows inbound return IPv4 traffic from the internet (that is, for requests that\n                originate in the subnet).\nThis range is an example only.\n145\nCustom TCP\nTCP\n32768-65535\n::/0\nALLOW\nAllows inbound return IPv6 traffic from the internet (that is, for requests that\n                originate in the subnet).\nThis range is an example only.\n*\nAll traffic\nAll\nAll\n0.0.0.0/0\nDENY\nDenies all inbound IPv4 traffic not already handled by a preceding rule (not\n                modifiable).\n*\nAll traffic\nAll\nAll\n::/0\nDENY\nDenies all inbound IPv6 traffic not already handled by a preceding rule (not\n                modifiable).\nOutbound\nRule #\nType\nProtocol\nPort range\nDestination\nAllow/Deny\nComments\n100\nHTTP\nTCP\n80\n0.0.0.0/0\nALLOW\nAllows outbound IPv4 HTTP traffic from the subnet to the internet.\n105\nHTTP\nTCP\n80\n::/0\nALLOW\nAllows outbound IPv6 HTTP traffic from the subnet to the internet.\n110\nHTTPS\nTCP\n443\n0.0.0.0/0\nALLOW\nAllows outbound IPv4 HTTPS traffic from the subnet to the internet.\n115\nHTTPS\nTCP\n443\n::/0\nALLOW\nAllows outbound IPv6 HTTPS traffic from the subnet to the internet.\n140\nCustom TCP\nTCP\n32768-65535\n0.0.0.0/0\nALLOW\nAllows outbound IPv4 responses to clients on the internet (for example, serving\n                webpages to people visiting the web servers in the subnet).\nThis range is an example only.\n145\nCustom TCP\nTCP\n32768-65535\n::/0\nALLOW\nAllows outbound IPv6 responses to clients on the internet (for example, serving\n                webpages to people visiting the web servers in the subnet).\nThis range is an example only.\n*\nAll traffic\nAll\nAll\n0.0.0.0/0\nDENY\nDenies all outbound IPv4 traffic not already handled by a preceding rule (not\n                modifiable).\n*\nAll traffic\nAll\nAll\n::/0\nDENY\nDenies all outbound IPv6 traffic not already handled by a preceding rule (not\n                modifiable).\nCustom network ACLs and other AWS services\nIf you create a custom network ACL, be aware of how it might affect resources that you create using other AWS services.\nWith Elastic Load Balancing, if the subnet for your backend instances has a network ACL in which you've\n      added a\ndeny\nrule for all traffic with a source of either\n0.0.0.0/0\nor the subnet's CIDR, your load balancer can't carry out health\n      checks on the instances. For more information about the recommended network ACL rules for your\n      load balancers and backend instances, see\nNetwork ACLs for Load Balancers in a\n        VPC\nin the\nUser Guide for Classic Load Balancers\n.\nEphemeral ports\nThe example network ACL in the preceding section uses an ephemeral port range of\n\t\t\t32768-65535. However, you might want to use a different range for your network ACLs\n\t\t\tdepending on the type of client that you're using or with which you're\n\t\t\tcommunicating.\nThe client that initiates the request chooses the ephemeral port range. The range varies\n      depending on the client's operating system.\nMany Linux kernels (including the Amazon Linux kernel) use ports 32768-61000.\nRequests originating from Elastic Load Balancing use ports 1024-65535.\nWindows operating systems through Windows Server 2003 use ports 1025-5000.\nWindows Server 2008 and later versions use ports 49152-65535.\nA NAT gateway uses ports 1024-65535.\nAWS Lambda functions use ports 1024-65535.\nFor example, if a request comes into a web server in your VPC from a Windows 10 client on\n      the internet, your network ACL must have an outbound rule to enable traffic destined for ports\n      49152-65535.\nIf an instance in your VPC is the client initiating a request, your network ACL must have\n      an inbound rule to enable traffic destined for the ephemeral ports specific to the type of\n      instance (Amazon Linux, Windows Server 2008, and so on).\nIn practice, to cover the different types of clients that might initiate traffic to\n      public-facing instances in your VPC, you can open ephemeral ports 1024-65535. However, you can\n      also add rules to the ACL to deny traffic on any malicious ports within that range. Ensure\n      that you place the\ndeny\nrules earlier in the table than the\nallow\nrules that open the wide range of ephemeral\n      ports.\nPath MTU Discovery\nPath MTU Discovery is used to determine the path MTU between two devices. The path MTU is\n      the maximum packet size that's supported on the path between the originating host and the\n      receiving host.\nFor IPv4, when a host sends a packet that's larger than the MTU of the receiving host or\n      that's larger than the MTU of a device along the path, the receiving host or device drops the\n      packet, and then returns the following ICMP message:\nDestination Unreachable:\n        Fragmentation Needed and Don't Fragment was Set\n(Type 3, Code 4). This instructs the\n      transmitting host to split the payload into multiple smaller packets, and then retransmit\n      them.\nThe IPv6 protocol does not support fragmentation in the network. When a host sends a\n      packet that's larger than the MTU of the receiving host or that's larger than the MTU of a\n      device along the path, the receiving host or device drops the packet, and then returns the\n      following ICMP message:\nICMPv6 Packet Too Big (PTB)\n(Type 2). This instructs the\n      transmitting host to split the payload into multiple smaller packets, and then retransmit\n      them.\nIf the maximum transmission unit (MTU) between hosts in your subnets is different, or your\n      instances communicate with peers over the internet, you must add the following network ACL\n      rule, both inbound and outbound. This ensures that Path MTU Discovery can function correctly\n      and prevent packet loss. Select\nCustom ICMP Rule\nfor the type and\nDestination Unreachable\n,\nfragmentation required, and DF flag\n        set\nfor the port range (type 3, code 4). If you use traceroute, also add the\n      following rule: select\nCustom ICMP Rule\nfor the type and\nTime\n        Exceeded\n,\nTTL expired transit\nfor the port range (type 11,\n      code 0). For more information, see\nNetwork maximum\n        transmission unit (MTU) for your EC2 instance\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nWork with network ACLs\nThe following tasks show you how to work with network ACLs using the Amazon VPC console.\nTasks\nDetermine network ACL associations\nCreate a network ACL\nAdd and delete rules\nAssociate a subnet with a network ACL\nDisassociate a network ACL from a subnet\nChange a subnet's network ACL\nDelete a network ACL\nAPI and command overview\nDetermine network ACL associations\nYou can use the Amazon VPC console to determine the network ACL that's associated with a\n        subnet. Network ACLs can be associated with more than one subnet, so you can also determine\n        which subnets are associated with a network ACL.\nTo determine which network ACL is associated with a subnet\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n, and then select the\n            subnet.\nThe network ACL associated with the subnet is included in the\nNetwork\n              ACL\ntab, along with the network ACL's rules.\nTo determine which subnets are associated with a network ACL\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNetwork ACLs\n. The\nAssociated With\ncolumn indicates the number of associated subnets\n            for each network ACL.\nSelect a network ACL.\nIn the details pane, choose\nSubnet Associations\nto display the\n            subnets that are associated with the network ACL.\nCreate a network ACL\nYou can create a custom network ACL for your VPC. By default, a network ACL that you\n        create blocks all inbound and outbound traffic until you add rules, and is not associated\n        with a subnet until you explicitly associate it with one.\nTo create a network ACL\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNetwork ACLs\n.\nChoose\nCreate Network ACL\n.\nIn the\nCreate Network ACL\ndialog box, optionally name your\n            network ACL, and select the ID of your VPC from the\nVPC\nlist. Then\n            choose\nYes, Create\n.\nAdd and delete rules\nWhen you add or delete a rule from an ACL, any subnets that are associated with the ACL\n        are subject to the change. You don't have to terminate and relaunch the instances in the\n        subnet. The changes take effect after a short period.\nImportant\nBe very careful if you are adding and deleting rules at the same time. Network ACL rules define which\n          types of network traffic can enter or exit your VPCs. If you delete inbound or outbound\n          rules and then add more new entries than are allowed in\nAmazon VPC quotas\n, the entries selected for deletion will be removed\n          and new entries\nwill not\nbe added. This could cause unexpected connectivity issues and\n          unintentionally prevent access to and from your VPCs.\nIf you're using the Amazon EC2 API or a command line tool, you can't modify rules. You can\n        only add and delete rules. If you're using the Amazon VPC console, you can modify the entries for\n        existing rules. The console removes the existing rule and adds a new rule for you. If you\n        need to change the order of a rule in the ACL, you must add a new rule with the new rule\n        number, and then delete the original rule.\nTo add rules to a network ACL\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNetwork ACLs\n.\nIn the details pane, choose either the\nInbound Rules\nor\nOutbound Rules\ntab, depending on the type of rule that you need\n            to add, and then choose\nEdit\n.\nIn\nRule #\n, enter a rule number (for example, 100). The rule\n            number must not already be in use in the network ACL. We process the rules in order,\n            starting with the lowest number.\nWe recommend that you leave gaps between the rule numbers (such as 100, 200, 300),\n            rather than using sequential numbers (101, 102, 103). This makes it easier add a new\n            rule without having to renumber the existing rules.\nSelect a rule from the\nType\nlist. For example, to add a rule\n            for HTTP, choose\nHTTP\n. To add a rule to allow all TCP traffic,\n            choose\nAll TCP\n. For some of these options (for example, HTTP), we\n            fill in the port for you. To use a protocol that's not listed, choose\nCustom\n              Protocol Rule\n.\n(Optional) If you're creating a custom protocol rule, select the protocol's\n            number and name from the\nProtocol\nlist. For more\n            information, see\nIANA\n            List of Protocol Numbers\n.\n(Optional) If the protocol you selected requires a port number, enter the port\n            number or port range separated by a hyphen (for example, 49152-65535).\nIn the\nSource\nor\nDestination\nfield\n            (depending on whether this is an inbound or outbound rule), enter the CIDR range that\n            the rule applies to.\nFrom the\nAllow/Deny\nlist, select\nALLOW\nto\n            allow the specified traffic or\nDENY\nto deny the specified\n            traffic.\n(Optional) To add another rule, choose\nAdd another rule\n, and\n            repeat steps 4 to 9 as required.\nWhen you are done, choose\nSave\n.\nTo delete a rule from a network ACL\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNetwork ACLs\n, and then select\n            the network ACL.\nIn the details pane, select either the\nInbound Rules\nor\nOutbound Rules\ntab, and then choose\nEdit\n.\n            Choose\nRemove\nfor the rule you want to delete, and then choose\nSave\n.\nAssociate a subnet with a network ACL\nTo apply the rules of a network ACL to a particular subnet, you must associate the\n        subnet with the network ACL. You can associate a network ACL with multiple subnets. However,\n        a subnet can be associated with only one network ACL. Any subnet that is not associated with\n        a particular ACL is associated with the default network ACL by default.\nTo associate a subnet with a network ACL\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNetwork ACLs\n, and then select\n            the network ACL.\nIn the details pane, on the\nSubnet Associations\ntab, choose\nEdit\n. Select the\nAssociate\ncheck box for the\n            subnet to associate with the network ACL, and then choose\nSave\n.\nDisassociate a network ACL from a subnet\nYou can disassociate a custom network ACL from a subnet.  When the subnet has been\n        disassociated from the custom network ACL, it is then automatically associated with the\n        default network ACL.\nTo disassociate a subnet from a network ACL\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNetwork ACLs\n, and then select\n            the network ACL.\nIn the details pane, choose the\nSubnet Associations\ntab.\nChoose\nEdit\n, and then deselect the\nAssociate\ncheck box for the subnet. Choose\nSave\n.\nChange a subnet's network ACL\nYou can change the network ACL that's associated with a subnet. For example, when you\n        create a subnet, it is initially associated with the default network ACL. You might want to\n        instead associate it with a custom network ACL that you've created.\nAfter changing a subnet's network ACL, you don't have to terminate and relaunch the\n        instances in the subnet. The changes take effect after a short period.\nTo change a subnet's network ACL association\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSubnets\n, and then select the\n            subnet.\nChoose the\nNetwork ACL\ntab, and then choose\nEdit\n.\nFrom the\nChange to\nlist, select the network ACL to associate\n            the subnet with, and then choose\nSave\n.\nDelete a network ACL\nYou can delete a network ACL only if there are no subnets associated with it. You can't\n        delete the default network ACL.\nTo delete a network ACL\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNetwork ACLs\n.\nSelect the network ACL, and then choose\nDelete\n.\nIn the confirmation dialog box, choose\nYes, Delete\n.\nAPI and command overview\nYou can perform the tasks described on this page using the command line or an API. \n        For more information about the command line interfaces and a list of available APIs,\n        see\nWorking with Amazon VPC\n.\nCreate a network ACL for your VPC\ncreate-network-acl\n(AWS CLI)\nNew-EC2NetworkAcl\n(AWS Tools for Windows PowerShell)\nDescribe one or more of your network ACLs\ndescribe-network-acls\n(AWS CLI)\nGet-EC2NetworkAcl\n(AWS Tools for Windows PowerShell)\nAdd a rule to a network ACL\ncreate-network-acl-entry\n(AWS CLI)\nNew-EC2NetworkAclEntry\n(AWS Tools for Windows PowerShell)\nDelete a rule from a network ACL\ndelete-network-acl-entry\n(AWS CLI)\nRemove-EC2NetworkAclEntry\n(AWS Tools for Windows PowerShell)\nReplace an existing rule in a network ACL\nreplace-network-acl-entry\n(AWS CLI)\nSet-EC2NetworkAclEntry\n(AWS Tools for Windows PowerShell)\nReplace a network ACL association\nreplace-network-acl-association\n(AWS CLI)\nSet-EC2NetworkAclAssociation\n(AWS Tools for Windows PowerShell)\nDelete a network ACL\ndelete-network-acl\n(AWS CLI)\nRemove-EC2NetworkAcl\n(AWS Tools for Windows PowerShell)\nExample: Control access to instances in a subnet\nIn this example, instances in your subnet can communicate with each other, and are\n      accessible from a trusted remote computer. The remote computer might be a computer in your\n      local network or an instance in a different subnet or VPC. You use it to connect to your\n      instances to perform administrative tasks. Your security group rules and network ACL rules\n      allow access from the IP address of your remote computer (172.31.1.2/32). All other traffic\n      from the internet or other networks is denied. This scenario gives you the flexibility to \n      change the security groups or security group rules for your instances, and have the network \n      ACL as the backup layer of defense.\nThe following is an example security group to associate with the instances. Security groups are stateful. \n      Therefore you don't need a rule that allows responses to inbound traffic.\nInbound\nProtocol type\nProtocol\nPort range\nSource\nComments\nAll traffic\nAll\nAll\nsg-1234567890abcdef0\nAll instances associated with this security group can communicate with each other.\nSSH\nTCP\n22\n172.31.1.2/32\nAllows inbound SSH access from the remote computer.\nOutbound\nProtocol Type\nProtocol\nPort range\nDestination\nComments\nAll traffic\nAll\nAll\nsg-1234567890abcdef0\nAll instances associated with this security group can communicate with each other.\nThe following is an example network ACL to associate with the subnets for the instances.\n      The network ACL rules apply to all instances in the subnet. Network ACLs are stateless. Therefore,\n      you need a rule that allows responses to inbound traffic.\nInbound\nRule #\nType\nProtocol\nPort range\nSource\nAllow/Deny\nComments\n100\nSSH\nTCP\n22\n172.31.1.2/32\nALLOW\nAllows inbound traffic from the remote computer.\n*\nAll traffic\nAll\nAll\n0.0.0.0/0\nDENY\nDenies all other inbound traffic.\nOutbound\nRule #\nType\nProtocol\nPort range\nDestination\nAllow/Deny\nComments\n100\nCustom TCP\nTCP\n1024-65535\n172.31.1.2/32\nALLOW\nAllows outbound responses to the remote computer.\n*\nAll traffic\nAll\nAll\n0.0.0.0/0\nDENY\nDenies all other outbound traffic.\nIf you accidentally make your security group rules too permissive, the network ACL in this\n      example continues to permit access only from the specified IP address. For example, the following \n      security group contains a rule that allows inbound SSH access from any IP address. However, if you \n      associate this security group with an instance in a subnet that uses the network ACL, only other \n      instances within the subnet and your remote computer can access the instance, because the network \n      ACL rules deny other inbound traffic to the subnet.\nInbound\nType\nProtocol\nPort range\nSource\nComments\nAll traffic\nAll\nAll\nsg-1234567890abcdef0\nAll instances associated with this security group can communicate with each other.\nSSH\nTCP\n22\n0.0.0.0/0\nAllows SSH access from any IP address.\nOutbound\nType\nProtocol\nPort range\nDestination\nComments\nAll  traffic\nAll\nAll\n0.0.0.0/0\nAllows all outbound traffic.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWork with security groups\nResilience\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/disaster-recovery-resiliency.html": "Resilience in Amazon Virtual Private Cloud - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nResilience in Amazon Virtual Private Cloud\nThe AWS global infrastructure is built around AWS Regions and Availability Zones. AWS Regions provide multiple physically separated and isolated\n        Availability Zones, which are connected using low-latency, high-throughput, and highly redundant networking. With Availability Zones, you can design and\n        operate applications and databases that automatically fail over between zones without interruption. Availability Zones are more highly\n        available, fault tolerant, and scalable than traditional single or multiple data center infrastructures.\nFor more information about AWS Regions and Availability Zones, see\nAWS Global Infrastructure\n.\nYou can configure your VPCs to meet the resilience requirements for your workloads. \n        For more information, see the following:\nUnderstand resiliency patterns and trade-offs\n(AWS Architecture Blog)\nPlan your network topology\n(AWS Well-Architected Framework)\nAmazon Virtual Private Cloud Connectivity Options\n(AWS Whitepapers)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nNetwork ACLs\nCompliance validation\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/VPC-compliance.html": "Compliance validation for Amazon Virtual Private Cloud - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nCompliance validation for Amazon Virtual Private Cloud\nTo learn whether an AWS service is within the scope of specific compliance programs, see\nAWS services in Scope by Compliance\n   Program\nand choose the compliance program that you are interested in. For general information, see\nAWS Compliance Programs\n.\nYou can download third-party audit reports using AWS Artifact. For more information, see\nDownloading Reports in AWS Artifact\n.\nYour compliance responsibility when using AWS services is determined by the sensitivity\n        of your data, your company's compliance objectives, and applicable laws and regulations. AWS provides the following resources to help with compliance:\nSecurity and Compliance Quick Start Guides\n\u00e2\u0080\u0093 These deployment guides discuss architectural\n    considerations and provide steps for deploying baseline environments on AWS that are security and compliance focused.\nArchitecting for HIPAA Security and Compliance on Amazon Web Services\n\u00e2\u0080\u0093\n                This whitepaper describes how companies can use AWS to create HIPAA-eligible\n                applications.\nNote\nNot all AWS services are HIPAA eligible. For more information, see the\nHIPAA Eligible Services Reference\n.\nAWS Compliance\n     Resources\n\u00e2\u0080\u0093 This collection of workbooks and guides might apply to your industry and\n    location.\nEvaluating\n                    Resources with Rules\nin the\nAWS Config Developer\n                        Guide\n\u00e2\u0080\u0093 The AWS Config service assesses how well your resource\n                configurations comply with internal practices, industry guidelines, and\n                regulations.\nAWS Security Hub\n\u00e2\u0080\u0093 \n     This AWS service provides a comprehensive view of your security state within AWS. Security Hub uses security controls to evaluate your AWS \n     resources and to check your compliance against security industry standards and best practices. For a list of supported services and \n     controls, see\nSecurity Hub controls reference\n.\nAWS Audit Manager\n\u00e2\u0080\u0093 This AWS service helps you continuously audit your AWS usage to simplify how you manage risk and compliance with regulations and industry standards.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nResilience\nBest practices\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html": "Security best practices for your VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nSecurity best practices for your VPC\nThe following best practices are general guidelines and don\u00e2\u0080\u0099t represent a complete security\n    solution. Because these best practices might not be appropriate or sufficient for your\n    environment, treat them as helpful considerations rather than prescriptions.\nWhen you add subnets to your VPC to host your application, create them in multiple \n        Availability Zones. An Availability Zone is one or more discrete data centers with \n        redundant power, networking, and connectivity in an AWS Region. Using multiple \n        Availability Zones makes your production applications highly available, fault tolerant,\n        and scalable. For more information, see\nAmazon VPC on AWS\n.\nUse security groups to control traffic to EC2 instances in your subnets. For more \n        information, see\nSecurity groups\n.\nUse network ACLs to control inbound and outbound traffic at the subnet level. For more \n        information, see\nControl traffic to subnets using network ACLs\n.\nManage access to AWS resources in your VPC using AWS Identity and Access Management (IAM) identity\n        federation, users, and roles. For more information, see\nIdentity and access management for Amazon VPC\n.\nUse VPC Flow Logs to monitor the IP traffic going to and from a VPC, subnet, or network\n        interface. For more information, see\nVPC Flow Logs\n.\nUse Network Access Analyzer to identify unintended network access to resources in our VPCs. For more\n        information, see the\nNetwork Access Analyzer Guide\n.\nUse AWS Network Firewall to monitor and protect your VPC by filtering inbound and outbound traffic. \n        For more information, see the\nAWS Network Firewall Guide\n.\nFor answers to frequently asked questions related to VPC security, see\nSecurity and \n    Filtering\nin the\nAmazon VPC FAQs\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCompliance validation\nUse with other services\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/related-services.html": "Use Amazon VPC with other AWS services - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nUse Amazon VPC with other AWS services\nYou can use Amazon VPC with other AWS services to build solutions that meet your needs.\nContents\nConnect your VPC to services using AWS PrivateLink\nFilter network traffic using AWS Network Firewall\nFilter DNS traffic using Route 53 Resolver DNS Firewall\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nBest practices\nAWS PrivateLink\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-services-overview.html": "Connect your VPC to services using AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nConnect your VPC to services using AWS PrivateLink\nAWS PrivateLink establishes private connectivity between virtual private clouds (VPC) and \n\t\tsupported AWS services, services hosted by other AWS accounts, and supported AWS Marketplace services.\n\t\tYou do not need to use an internet gateway, NAT device, AWS Direct Connect connection, or AWS Site-to-Site VPN \n\t\tconnection to communicate with the service.\nTo use AWS PrivateLink, create a VPC endpoint in your VPC, specifying the name of the service\n\t\tand a subnet. This creates an elastic network interface in the subnet that serves as an entry point\n\t\tfor traffic destined to the service.\nYou can create your own VPC endpoint service, powered by AWS PrivateLink and enable\n\t\tother AWS customers to access your service.\nThe following diagram shows the common use cases for AWS PrivateLink. The VPC on the left has\n\t\tseveral EC2 instances in a private subnet and three interface VPC endpoints. The top-most\n\t\tVPC endpoint connects to an AWS service. The middle VPC endpoint connects to a service\n\t\thosted by another AWS account (a VPC endpoint service). The bottom VPC endpoint connects\n\t\tto an AWS Marketplace partner service.\nFor more information, see\nAWS PrivateLink\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nUse with other services\nAWS Network Firewall\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/network-firewall.html": "Filter network traffic using AWS Network Firewall - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nFilter network traffic using AWS Network Firewall\nYou can filter network traffic at the perimeter of your VPC using AWS Network Firewall. Network Firewall is a stateful, managed, network firewall and intrusion detection and prevention service. For more information, see the\nAWS Network Firewall Developer Guide\n.\nYou implement Network Firewall with the following AWS resources.\nNetwork Firewall resource\nDescription\nFirewall\nA firewall connects a firewall policy's network traffic filtering\n\t\t\t\t\t\tbehavior to the VPC that you want to protect. The firewall configuration\n\t\t\t\t\t\tincludes specifications for the Availability Zones and subnets where the\n\t\t\t\t\t\tfirewall endpoints are placed. It also defines high-level settings like the\n\t\t\t\t\t\tfirewall logging configuration and tagging on the AWS firewall resource.\nFor more information, see\nFirewalls in\n\t\t\t\t\t\t\t\tAWS Network Firewall\n.\nFirewall policy\nA firewall policy defines the monitoring and protection behavior for a\n\t\t\t\t\t\tfirewall. The details of the behavior are defined in the rule groups that\n\t\t\t\t\t\tyou add to your policy, and in some policy default settings. To use a\n\t\t\t\t\t\tfirewall policy, you associate it with one or more firewalls.\nFor more\n\t\t\t\t\t\t\tinformation, see\nFirewall\n\t\t\t\t\t\t\t\tpolicies in AWS Network Firewall\n.\nRule group\nA rule group is a reusable set of criteria for inspecting and handling\n\t\t\t\t\t\tnetwork traffic. You add one or more rule groups to a firewall policy as\n\t\t\t\t\t\tpart of your policy configuration. You can define stateless rule groups to\n\t\t\t\t\t\tinspect each network packet in isolation. Stateless rule groups are similar\n\t\t\t\t\t\tin behavior and use to Amazon VPC network access control lists (ACLs). You can\n\t\t\t\t\t\talso define stateful rule groups to inspect packets in the context of their\n\t\t\t\t\t\ttraffic flow. Stateful rule groups are similar in behavior and use to Amazon VPC\n\t\t\t\t\t\tsecurity groups.\nFor more information, see\nRule groups in\n\t\t\t\t\t\t\t\tAWS Network Firewall\n.\nYou can also use AWS Firewall Manager to centrally configure and manage Network Firewall\n\t\tresources across your accounts and applications in AWS Organizations. You can manage firewalls for\n\t\tmultiple accounts using a single account in Firewall Manager. For more information, see\nAWS Firewall Manager\nin the\nAWS WAF, AWS Firewall Manager, and AWS Shield Advanced Developer Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS PrivateLink\nRoute 53 Resolver DNS Firewall\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/resolver-dns-firewall.html": "Filter DNS traffic using Route 53 Resolver DNS Firewall - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nFilter DNS traffic using Route 53 Resolver DNS Firewall\nWith DNS Firewall, you define domain name filtering rules in rule groups that you\n        associate with your VPCs. You can specify lists of domain names to allow or block, and you\n        can customize the responses for the DNS queries that you block.  For more information, see\n        the\nRoute 53 Resolver DNS Firewall Documentation\n.\nYou implement DNS Firewall with the following AWS resources.\nDNS Firewall resource\nDescription\nDNS Firewall rule group\nA DNS Firewall rule group is a named, reusable\n                        collection of DNS Firewall rules for filtering DNS\n                        queries. You populate the rule group with the filtering rules, then\n                        associate the rule group with one or more VPCs from Amazon VPC. When you\n                        associate a rule group with a VPC, you enable\n                        DNS Firewall filtering for the VPC. Then, when Resolver\n                        receives a DNS query for a VPC that has a rule group associated with it,\n                        Resolver passes the query to DNS Firewall for filtering.\nEach rule\n                            within the rule group specifies one domain list and an action to take on\n                            DNS queries whose domains match the domain specifications in the list.\n                            You can allow, block, or alert on matching queries. You can also define\n                            custom responses for blocked queries.\nFor more information, see\nRule groups and rules in\n                                Route 53 Resolver DNS Firewall\n.\nDomain list\nA domain list is a reusable set of domain specifications that you use in\n                        a DNS Firewall rule, inside a rule group.\nFor more information, see\nDomain lists in\n                        Route 53 Resolver DNS Firewall\n.\nYou can also use AWS Firewall Manager to centrally configure and manage\n        DNS Firewall resources across your accounts and organizations in\n        AWS Organizations. You can manage firewalls for multiple accounts using a single account in Firewall Manager.\n        For more information, see\nAWS Firewall Manager\nin the\nAWS WAF, AWS Firewall Manager, and AWS Shield Advanced Developer Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS Network Firewall\nExamples\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-examples-intro.html": "VPC examples - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nVPC examples\nThe following are example configurations for your virtual private clouds (VPCs).\nExamples\nTest environment\nWeb and database servers\nPrivate servers\nRelated examples\nTo connect your VPCs to each other, see\nVPC peering configurations\nin the\nAmazon VPC Peering Guide\n.\nTo connect your VPCs to your own network, see\nSite-to-Site VPN architectures\nin the\nAWS Site-to-Site VPN User Guide\n.\nTo connect your VPCs to each other and to your own network, see\nTransit gateway examples\nin the\nAmazon VPC Transit Gateways\n.\nAdditional resources\nUnderstand resiliency patterns and trade-offs\n(AWS Architecture Blog)\nPlan your network topology\n(AWS Well-Architected Framework)\nAmazon Virtual Private Cloud Connectivity Options\n(AWS Whitepapers)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nRoute 53 Resolver DNS Firewall\nTest environment\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-example-dev-test.html": "Example: VPC for a test environment - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nOverview\nCreate the VPC\nDeploy your application\nTest your configuration\nClean up\nExample: VPC for a test environment\nThis example demonstrates how to create a VPC that you can use as a development or test\n    environment. Because this VPC is not intended to be used in production, it is not necessary to\n    deploy your servers in multiple Availability Zones. To keep the cost and complexity low, you can\n    deploy your servers in a single Availability Zone.\nContents\nOverview\nCreate the VPC\nDeploy your application\nTest your configuration\nClean up\nOverview\nThe following diagram provides an overview of the resources included in this example. The\n      VPC has a public subnet in a single Availability Zone and an internet gateway. The server is\n      an EC2 instance that runs in the public subnet. The security group for the instance allows SSH\n      traffic from your own computer, plus any other traffic specifically required for your\n      development or testing activities.\nRouting\nWhen you create this VPC by using the Amazon VPC console, we create a route table for the\n        public subnet with local routes and routes to the internet gateway. The following is an\n        example of the route table with routes for both IPv4 and IPv6. If you create an IPv4-only\n        subnet instead of a dual stack subnet, your route table has only the IPv4 routes.\nDestination\nTarget\n10.0.0.0/16\nlocal\n2001:db8:1234:1a00::/56\nlocal\n0.0.0.0/0\nigw-id\n::/0\nigw-id\nSecurity\nFor this example configuration, you must create a security group for your instance that\n        allows the traffic that your application needs. For example, you might need to add a rule\n        that allows SSH traffic from your computer or HTTP traffic from your network.\nThe following are example inbound rules for a security group, with rules for both IPv4\n        and IPv6. If you create IPv4-only subnets instead of dual stack subnets, you need only the\n        rules for IPv4.\nInbound\nSource\nProtocol\nPort range\nDescription\n0.0.0.0/0\nTCP\n80\nAllows inbound HTTP access from all IPv4 addresses\n::/0\nTCP\n80\nAllows inbound HTTP access from all IPv6 addresses\n0.0.0.0/0\nTCP\n443\nAllows inbound HTTPS access from all IPv4 addresses\n::/0\nTCP\n443\nAllows inbound HTTPS access from all IPv6 addresses\nPublic IPv4 address range of your network\nTCP\n22\n(Optional) Allows inbound SSH access from IPv4 IP addresses in your\n                network\nIPv6 address range of your network\nTCP\n22\n(Optional) Allows inbound SSH access from IPv6 IP addresses in your\n                network\nPublic IPv4 address range of your network\nTCP\n3389\n(Optional) Allows inbound RDP access from IPv4 IP addresses in your\n                network\nIPv6 address range of your network\nTCP\n3389\n(Optional) Allows inbound RDP access from IPv6 IP addresses in your\n                network\nCreate the VPC\nUse the following procedure to create a VPC with a public subnet in one Availability\n      Zone. This configuration is suitable for a development or testing environment.\nTo create the VPC\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the dashboard, choose\nCreate VPC\n.\nFor\nResources to create\n, choose\nVPC \n          and more\n.\nConfigure the VPC\nFor\nName tag auto-generation\n, enter a name for the VPC.\nFor\nIPv4 CIDR block\n, you can keep the default suggestion, or\n              alternatively you can enter the CIDR block required by your application or\n              network. For more information, see\nVPC CIDR blocks\n.\n(Optional) If your application communicates by using IPv6 addresses, choose\nIPv6 CIDR block\n,\nAmazon-provided IPv6 CIDR\n                block\n.\nConfigure the subnets\nFor\nNumber of Availability Zones\n, choose\n1\n. You can keep the default Availability Zone, or alternatively\n              you can expand\nCustomize AZs\nand select an Availability\n              Zone.\nFor\nNumber of public subnets\n, choose\n1\n.\nFor\nNumber of private subnets\n, choose\n0\n.\nYou can keep the default CIDR block for the public subnet, or alternatively you\n              can expand\nCustomize subnet CIDR blocks\nand enter a CIDR block.\n              For more information, see\nSubnet CIDR blocks\n.\nFor\nNAT gateways\n, keep the default value,\nNone\n.\nFor\nVPC endpoints\n, choose\nNone\n. A gateway\n          VPC endpoint for S3 is used only to access Amazon S3 from private subnets.\nFor\nDNS options\n, keep both options selected. As a result, your instance\n          will receive a public DNS hostname that corresponds to its public IP address.\nChoose\nCreate VPC\n.\nDeploy your application\nThere are a variety of ways to deploy EC2 instances. For example:\nAmazon EC2 launch instance wizard\nAmazon EC2 Auto Scaling\nAWS CloudFormation\nAmazon Elastic Container Service (Amazon ECS)\nAfter you deploy an EC2 instance, you can connect to the instance, install the software\n      that you need for your application, and then create an image for future use. For more \n      information, see\nCreate a Linux AMI\nor\nCreate a Windows AMI\nin the Amazon EC2 documentation. Alternatively, you can use\nEC2 Image Builder\nto create and manage your Amazon Machine Image \n      (AMI).\nTest your configuration\nAfter you've finished deploying your application, you can test it. If you can't \n      connect to your EC2 instance, or if your application can't send or receive the traffic \n      that you expect, you can use Reachability Analyzer to help you troubleshoot. For  \n      example, Reachability Analyzer can identify configuration issues with your route  \n      tables or security groups. For more information, see the\nReachability Analyzer Guide\n.\nClean up\nWhen you are finished with this configuration, you can delete it. Before you can delete the VPC, \n      you must terminate your instance. For more information, see\nDelete your VPC\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExamples\nWeb and database servers\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-example-web-database-servers.html": "Example: VPC for web and database servers - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nOverview\nCreate the VPC\nDeploy your application\nTest your configuration\nClean up\nExample: VPC for web and database servers\nThis example demonstrates how to create a VPC that you can use for a two-tier architecture\n    in a production environment. To improve resiliency, you deploy the servers in two Availability\n    Zones.\nContents\nOverview\nCreate the VPC\nDeploy your application\nTest your configuration\nClean up\nOverview\nThe following diagram provides an overview of the resources included in this example. The\n      VPC has public subnets and private subnets in two Availability Zones. The web servers run in\n      the public subnets and receive traffic from clients through a load balancer. The security\n      group for the web servers allows traffic from the load balancer. The database servers run in\n      the private subnets and receive traffic from the web servers. The security group for the\n      database servers allows traffic from the web servers. The database servers can connect to Amazon S3\n      by using a gateway VPC endpoint.\nRouting\nWhen you create this VPC by using the Amazon VPC console, we create a route table for the\n        public subnets with local routes and routes to the internet gateway, and a route table for\n        each private subnet with local routes and a route to the gateway VPC endpoint.\nThe following is an example of a route table for the public subnets, with routes for \n        both IPv4 and IPv6. If you create IPv4-only subnets instead of dual stack subnets, your \n        route table has only the IPv4 routes.\nDestination\nTarget\n10.0.0.0/16\nlocal\n2001:db8:1234:1a00::/56\nlocal\n0.0.0.0/0\nigw-id\n::/0\nigw-id\nThe following is an example of a route table for the private subnets, with local routes for \n        both IPv4 and IPv6. If you created IPv4-only subnets, your route table has only the IPv4 \n        route. The last route sends traffic destined for Amazon S3 to the gateway VPC endpoint.\nDestination\nTarget\n10.0.0.0/16\nlocal\n2001:db8:1234:1a00::/56\nlocal\ns3-prefix-list-id\ns3-gateway-id\nSecurity\nFor this example configuration, you create a security group for the load balancer, a\n        security group for the web servers, and a security group for the database servers.\nLoad balancer\nThe security group for your Application Load Balancer or Network Load Balancer must allow inbound traffic from clients on\n          the load balancer listener port. To accept traffic from anywhere on the internet, specify\n          0.0.0.0/0 as the source. The load balancer security group must also allow outbound traffic\n          from the load balancer to the target instances on the instance listener port and the\n          health check port.\nWeb servers\nThe following security group rules allow the web servers to receive HTTP and HTTPS\n          traffic from the load balancer. You can optionally allow the web servers to receive SSH or\n          RDP traffic from your network. The web servers can send SQL or MySQL traffic to your\n          database servers.\nInbound\nSource\nProtocol\nPort range\nDescription\nID of the security group for the load balancer\nTCP\n80\nAllows inbound HTTP access from the load balancer\nID of the security group for the load balancer\nTCP\n443\nAllows inbound HTTPS access from the load balancer\nPublic IPv4 address range of your network\nTCP\n22\n(Optional) Allows inbound SSH access from IPv4 IP addresses in your\n                network\nIPv6 address range of your network\nTCP\n22\n(Optional) Allows inbound SSH access from IPv6 IP addresses in your\n                network\nPublic IPv4 address range of your network\nTCP\n3389\n(Optional) Allows inbound RDP access from IPv4 IP addresses in your\n                network\nIPv6 address range of your network\nTCP\n3389\n(Optional) Allows inbound RDP access from IPv6 IP addresses in your\n                network\nOutbound\nDestination\nProtocol\nPort range\nDescription\nID of the security group for instances running Microsoft SQL Server\nTCP\n1433\nAllows outbound Microsoft SQL Server access to the database servers\nID of the security group for instances running MySQL\nTCP\n3306\nAllows outbound MySQL access to the database servers\nDatabase servers\nThe following security group rules allow the database servers to receive read and\n          write requests from the web servers.\nInbound\nSource\nProtocol\nPort range\nComments\nID of the web server security group\nTCP\n1433\nAllows inbound Microsoft SQL Server access from the web servers\nID of the web server security group\nTCP\n3306\nAllows inbound MySQL Server access from the web servers\nOutbound\nDestination\nProtocol\nPort range\nComments\n0.0.0.0/0\nTCP\n80\nAllows outbound HTTP access to the internet over IPv4\n0.0.0.0/0\nTCP\n443\nAllows outbound HTTPS access to the internet over IPv4\nFor more information about security groups for Amazon RDS DB instances, see\nControlling access with\n        security groups\nin the\nAmazon RDS User Guide\n.\nCreate the VPC\nUse the following procedure to create a VPC with a public subnet and a private subnet\n      in two Availability Zones.\nTo create the VPC\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the dashboard, choose\nCreate VPC\n.\nFor\nResources to create\n, choose\nVPC \n          and more\n.\nConfigure the VPC\nFor\nName tag auto-generation\n, enter a name for the VPC.\nFor\nIPv4 CIDR block\n, you can keep the default suggestion, or\n              alternatively you can enter the CIDR block required by your application or network. \n              For more information, see\nVPC CIDR blocks\n.\n(Optional) If your application communicates by using IPv6 addresses, choose\nIPv6 CIDR block\n,\nAmazon-provided IPv6 CIDR\n                block\n.\nConfigure the subnets\nFor\nNumber of Availability Zones\n, choose\n2\n, so that you can launch instances in two Availability Zones\n              to improve resiliency.\nFor\nNumber of public subnets\n, choose\n2\n.\nFor\nNumber of private subnets\n, choose\n2\n.\nYou can keep the default CIDR blocks for the subnets, or alternatively you can\n              expand\nCustomize subnet CIDR blocks\nand enter a CIDR block.\n              For more information, see\nSubnet CIDR blocks\n.\nFor\nNAT gateways\n, keep the default value,\nNone\n.\nFor\nVPC endpoints\n, keep the default value,\nS3\n            Gateway\n. While there is no effect unless you access an S3 bucket, there is no\n          cost to enable this VPC endpoint.\nFor\nDNS options\n, keep both options selected. As a result, your\n          web servers will receive public DNS hostnames that correspond to their public IP\n          addresses.\nChoose\nCreate VPC\n.\nDeploy your application\nIdeally, you've already tested your web servers and database servers in a \n     development or test environment, and created the scripts or images that you'll\n     use to deploy your application in production.\nYou can use EC2 instances for your web servers. There are a variety of ways to deploy \n      EC2 instances. For example:\nAmazon EC2 launch instance wizard\nAWS CloudFormation\nAmazon Elastic Container Service (Amazon ECS)\nTo improve availability, you can use\nAmazon EC2 Auto Scaling\nto deploy\n      servers in multiple Availability Zones and maintain the minimum server capacity that is\n      required by your application.\nYou can use\nElastic Load Balancing\nto distribute traffic evenly across \n      your servers. You can attach your load balancer to an Auto Scaling group.\nYou can use EC2 instances for your database servers, or one of our purpose-built database \n      types. For more information, see\nDatabases on AWS: How to choose\n.\nTest your configuration\nAfter you've finished deploying your application, you can test it. If your application \n      can't send or receive the traffic that you expect, you can use Reachability Analyzer to \n      help you troubleshoot. For example, Reachability Analyzer can identify configuration \n      issues with your route tables or security groups. For more information, see the\nReachability Analyzer Guide\n.\nClean up\nWhen you are finished with this configuration, you can delete it. Before you can \n      delete the VPC, you must terminate your instances and delete the load balancer. For more \n      information, see\nDelete your VPC\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTest environment\nPrivate servers\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-example-private-subnets-nat.html": "Example: VPC with servers in private subnets and NAT - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nOverview\nCreate the VPC\nDeploy your application\nTest your configuration\nClean up\nExample: VPC with servers in private subnets and NAT\nThis example demonstrates how to create a VPC that you can use for servers in a production\n    environment. To improve resiliency, you deploy the servers in two Availability Zones, by using\n    an Auto Scaling group and an Application Load Balancer. For additional security, you deploy the servers in private\n    subnets. The servers receive requests through the load balancer. The servers can connect to the\n    internet by using a NAT gateway. To improve resiliency, you deploy the NAT gateway in both\n    Availability Zones.\nContents\nOverview\nCreate the VPC\nDeploy your application\nTest your configuration\nClean up\nOverview\nThe following diagram provides an overview of the resources included in this example. The\n      VPC has public subnets and private subnets in two Availability Zones. Each public subnet\n      contains a NAT gateway and a load balancer node. The servers run in the private subnets, are\n      launched and terminated by using an Auto Scaling group, and receive traffic from the load\n      balancer. The servers can connect to the internet by using the NAT gateway. The servers can\n      connect to Amazon S3 by using a gateway VPC endpoint.\nRouting\nWhen you create this VPC by using the Amazon VPC console, we create a route table for the\n        public subnets with local routes and routes to the internet gateway. We also create a route\n        table for the private subnets with local routes, and routes to the NAT gateway, egress-only\n        internet gateway, and gateway VPC endpoint.\nThe following is an example of the route table for the public subnets, with routes for \n        both IPv4 and IPv6. If you create IPv4-only subnets instead of dual stack subnets, your \n        route table includes only the IPv4 routes.\nDestination\nTarget\n10.0.0.0/16\nlocal\n2001:db8:1234:1a00::/56\nlocal\n0.0.0.0/0\nigw-id\n::/0\nigw-id\nThe following is an example of a route table for one of the private subnets, with routes\n        for both IPv4 and IPv6. If you created IPv4-only subnets, the route table includes only the \n        IPv4 routes. The last route sends traffic destined for Amazon S3 to the gateway VPC endpoint.\nDestination\nTarget\n10.0.0.0/16\nlocal\n2001:db8:1234:1a00::/56\nlocal\n0.0.0.0/0\nnat-gateway-id\n::/0\neigw-id\ns3-prefix-list-id\ns3-gateway-id\nSecurity\nThe following is an example of the rules that you might create for the security \n        group that you associate with your servers. The security group must allow traffic \n        from the load balancer over the listener port and protocol. It must also allow \n        health check traffic.\nInbound\nSource\nProtocol\nPort range\nComments\nID of the load balancer security group\nlistener protocol\nlistener port\nAllows inbound traffic from the load balancer on the listener port\nID of the load balancer security group\nhealth check protocol\nhealth check port\nAllows inbound health check traffic from the load balancer\nCreate the VPC\nUse the following procedure to create a VPC with a public subnet and a private subnet\n      in two Availability Zones, and a NAT gateway in each Availability Zone.\nTo create the VPC\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the dashboard, choose\nCreate VPC\n.\nFor\nResources to create\n, choose\nVPC \n          and more\n.\nConfigure the VPC\nFor\nName tag auto-generation\n, enter a name for the VPC.\nFor\nIPv4 CIDR block\n, you can keep the default suggestion, or\n              alternatively you can enter the CIDR block required by your application or\n              network.\nIf your application communicates by using IPv6 addresses, choose\nIPv6\n                CIDR block\n,\nAmazon-provided IPv6 CIDR block\n.\nConfigure the subnets\nFor\nNumber of Availability Zones\n, choose\n2\n, so that you can launch instances in multiple\n              Availability Zones to improve resiliency.\nFor\nNumber of public subnets\n, choose\n2\n.\nFor\nNumber of private subnets\n, choose\n2\n.\nYou can keep the default CIDR block for the public subnet, or alternatively you\n              can expand\nCustomize subnet CIDR blocks\nand enter a CIDR block.\n              For more information, see\nSubnet CIDR blocks\n.\nFor\nNAT gateways\n, choose\n1 per AZ\nto improve\n            resiliency.\nIf your application communicates by using IPv6 addresses, for\nEgress only\n            internet gateway\n, choose\nYes\n.\nFor\nVPC endpoints\n, if your instances must access an S3 bucket,\n          keep the\nS3 Gateway\ndefault. Otherwise, instances in your private\n          subnet can't access Amazon S3. There is no cost for this option, so you can keep the default if\n          you might use an S3 bucket in the future. If you choose\nNone\n, you can\n          always add a gateway VPC endpoint later on.\nFor\nDNS options\n, clear\nEnable DNS hostnames\n.\nChoose\nCreate VPC\n.\nDeploy your application\nIdeally, you've finished testing your servers in a development or test\n      environment, and created the scripts or images that you'll use to deploy your\n      application in production.\nYou can use\nAmazon EC2 Auto Scaling\nto deploy servers in multiple \n      Availability Zones and maintain the minimum server capacity required by your \n      application.\nTo launch instances by using an Auto Scaling group\nCreate a launch template to specify the configuration information needed to launch\n          your EC2 instances by using Amazon EC2 Auto Scaling. For step-by-step directions, see\nCreate\n            a launch template for your Auto Scaling group\nin the\nAmazon EC2 Auto Scaling User Guide\n.\nCreate an Auto Scaling group, which is a collection of EC2 instances with a \n          minimum, maximum, and desired size. For step-by-step directions, see\nCreate an Auto Scaling group using a launch template\nin the\nAmazon EC2 Auto Scaling User Guide\n.\nCreate a load balancer, which distributes traffic evenly across the instances\n          in your Auto Scaling group, and attach the load balancer to your Auto Scaling group.\n          For more information, see the\nElastic Load Balancing User Guide\nand\nUse Elastic Load Balancing\nin the\nAmazon EC2 Auto Scaling User Guide\n.\nTest your configuration\nAfter you've finished deploying your application, you can test it. If your application \n      can't send or receive the traffic that you expect, you can use Reachability Analyzer to \n      help you troubleshoot. For example, Reachability Analyzer can identify configuration \n      issues with your route tables or security groups. For more information, see the\nReachability Analyzer Guide\n.\nClean up\nWhen you are finished with this configuration, you can delete it. Before you can delete\n      the VPC, you must delete the Auto Scaling group, terminate your instances, delete the NAT\n      gateways, and delete the load balancer. For more information, see\nDelete your VPC\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWeb and database servers\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html": "Amazon VPC quotas - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nVPC and subnets\nDNS\nElastic IP addresses\nGateways\nCustomer-managed prefix lists\nNetwork ACLs\nNetwork interfaces\nRoute tables\nSecurity groups\nVPC sharing\nNetwork Address Usage\nAmazon EC2 API throttling\nAdditional quota resources\nAmazon VPC quotas\nThe following tables list the quotas, formerly referred to as limits, for Amazon VPC resources\n    for your AWS account. Unless indicated otherwise, these quotas are per Region.\nIf you request a quota increase that applies per resource, we increase the quota for all\n    resources in the Region.\nVPC and subnets\nName\nDefault\nAdjustable\nComments\nVPCs per Region\n5\nYes\nIncreasing this quota increases the quota on internet gateways per Region \n                by the same amount.\nYou can increase this limit so that you can have hundreds of VPCs per\n                Region.\nSubnets per VPC\n200\nYes\nIPv4 CIDR blocks per VPC\n5\nYes\n(up to 50)\nThis primary CIDR block and all secondary CIDR blocks count toward this quota.\nIPv6 CIDR blocks per VPC\n5\nYes\n(up to 50)\nThe number of\n/56\nCIDRs you can allocate to a single VPC.\nDNS\nEach EC2 instance can send 1024 packets per second per network interface to Route\u00c2\u00a053 Resolver \n            (specifically the .2 address, such as 10.0.0.2 and 169.254.169.253). This quota cannot be increased. \n            The number of DNS queries per second supported by Route\u00c2\u00a053 Resolver varies by the type of query, the size of the \n            response, and the protocol in use. For more information and recommendations for a scalable DNS architecture, \n            see the\nAWS Hybrid DNS with Active Directory\nTechnical Guide.\nElastic IP addresses\nName\nDefault\nAdjustable\nComments\nElastic IP addresses per Region\n5\nYes\nThis quota applies to individual AWS account VPCs and shared VPCs.\nElastic IP addresses per public NAT gateway\n2\nYes\nGateways\nName\nDefault\nAdjustable\nComments\nEgress-only internet gateways per Region\n5\nYes\nTo increase this quota, increase the quota for VPCs per Region.\nYou can\n                attach only one egress-only internet gateway to a VPC at a time.\nInternet gateways per Region\n5\nYes\nTo increase this quota, increase the quota for VPCs per Region.\nYou can\n                attach only one internet gateway to a VPC at a time.\nNAT gateways per Availability Zone\n5\nYes\nNAT gateways only count toward your quota in the\npending\n,\nactive\n, and\ndeleting\nstates.\nPrivate IP address quota per NAT gateway\n8\nYes\nYou can assign private IP addresses only to private NAT gateways.\nCarrier gateways per VPC\n1\nNo\nCustomer-managed prefix lists\nWhile the default quotas for customer-managed prefix lists are adjustable, you cannot \n      request an increase using the Service Quotas console. You must\nopen a service limit increase case\nusing the AWS Support Center Console.\nName\nDefault\nAdjustable\nComments\nPrefix lists per Region\n100\nYes\nVersions per prefix list\n1,000\nYes\nIf a prefix list has 1,000 stored versions and you add a new version, the\n                oldest version is removed so that the new version can be added.\nMaximum number of entries per prefix list\n1,000\nYes\nYou can resize a customer-managed prefix list up to 1000. For more information, see\nResize a prefix list\n. When you\n                reference a prefix list in a resource, the maximum number of entries for the prefix\n                lists counts against the quota for the number of entries for the resource. For\n                example, if you create a prefix list with 20 maximum entries and you reference that\n                prefix list in a security group rule, this counts as 20 security group rules.\nReferences to a prefix list per resource type\n5,000\nYes\nThis quota applies per resource type that can reference a prefix\n                  list. For example, you can have 5,000 references to a prefix list\n                  across all of your security groups plus 5,000 references to a prefix\n                  list across all of your subnet route tables. If you share a prefix\n                  list with other AWS accounts, the other accounts' references to your\n                  prefix list count toward this quota.\nNetwork ACLs\nName\nDefault\nAdjustable\nComments\nNetwork ACLs per VPC\n200\nYes\nYou can associate one network ACL to one or more subnets in a VPC.\nRules per network ACL\n20\nYes\nThis quota determines both the maximum number of inbound rules and the maximum\n                number of outbound rules. This quota can be increased up to a maximum of 40 inbound\n                rules and 40 outbound rules (for a total of 80 rules), but network performance might\n                be impacted.\nNetwork interfaces\nName\nDefault\nAdjustable\nComments\nNetwork interfaces per instance\nVaries by instance type\nNo\nFor more information, see\nNetwork interfaces per instance type\n.\nNetwork interfaces per Region\n5,000\nYes\nThis quota applies to individual AWS account VPCs and shared VPCs.\nRoute tables\nName\nDefault\nAdjustable\nComments\nRoute tables per VPC\n200\nYes\nThe main route table counts toward this quota. Note that if you request a quota increase for route tables, you may also want to request a quota increase for subnets. While route tables can be shared with multiple subnets, a subnet can only be associated with a single route table.\nRoutes per route table (non-propagated routes)\n50\nYes\nYou can increase this quota up to a maximum of 1,000; however, network\n              performance might be impacted. This quota is enforced separately for IPv4 routes and\n              IPv6 routes.\nIf you have more than 125 routes, we recommend that you paginate\n                calls to describe your route tables for better performance.\nPropagated routes per route table\n100\nNo\nIf you require additional prefixes, advertise a default route.\nSecurity groups\nName\nDefault\nAdjustable\nComments\nVPC security groups per Region\n2,500\nYes\nThis quota applies to individual AWS account VPCs and shared VPCs.\nIf you increase this quota to more than 5,000 security groups in a Region, we \n                recommend that you paginate calls to describe your security groups for better\n                performance.\nInbound or outbound rules per security group\n60\nYes\nThis quota is enforced separately for IPv4 rules and IPv6 rules. Therefore, for\n              an account with the default quota of 60 rules, a security group can have 60 inbound\n              rules for IPv4 traffic and 60 inbound rules for IPv6 traffic. For more information,\n              see\nSecurity group size\n.\nA quota change applies to both inbound and outbound rules. This quota multiplied by \n                the quota for security groups per network interface cannot exceed 1,000.\nSecurity groups per network interface\n5\nYes\n(up to 16)\nThis quota multiplied by the quota for rules per security group cannot exceed 1,000.\nVPC sharing\nAll standard VPC quotas apply to a shared VPC.\nName\nDefault\nAdjustable\nComments\nParticipant accounts per VPC\n100\nYes\nThe maximum number of distinct participant accounts that subnets in a VPC can be\n              shared with. This is a per VPC quota and applies across all the subnets shared in a\n                VPC.\nVPC owners can view the network interfaces and security groups that are\n                attached to the participant resources.\nSubnets that can be shared with an account\n100\nYes\nThis is the maximum number of subnets that can be shared with an AWS account.\nNetwork Address Usage\nNetwork Address Usage (NAU) is comprised of IP addresses, network interfaces, and CIDRs in managed prefix lists. \n      NAU is a metric applied to resources in a VPC to help you plan for and monitor the size of your VPC. \n      For more information, see\nNetwork Address Usage\n.\nThe resources that make up the NAU count have their own individual service quotas. \n      Even if a VPC has NAU capacity available, you won't be able to launch resources into the VPC \n      if the resources have exceeded their service quotas.\nName\nDefault\nAdjustable\nComments\nNetwork Address Usage\n64,000\nYes\n(up to to 256,000)\nThe maximum number of NAU units per VPC.\nPeered Network Address Usage\n128,000\nYes\n(up to 512,000)\nThe maximum number of NAU units for a VPC and all of its intra-Region peered\n              VPCs. VPCs that are peered across different Regions do not contribute to this\n              number.\nAmazon EC2 API throttling\nFor information about Amazon EC2 throttling, see\nAPI Request Throttling\nin the\nAmazon EC2 API Reference\n.\nAdditional quota resources\nFor more information, see the following:\nAWS Client VPN quotas\nin the\nAWS Client VPN Administrator Guide\nAWS Direct Connect\n            quotas\nin the\nAWS Direct Connect User Guide\nPeering quotas\nin the\nAmazon VPC Peering Guide\nPrivateLink quotas\nin the\nAWS PrivateLink Guide\nSite-to-Site VPN quotas\nin the\nAWS Site-to-Site VPN User Guide\nTraffic Mirroring quotas\nin the\nAmazon VPC Traffic Mirroring Guide\nTransit gateway quotas\nin the\nAmazon VPC Transit Gateways Guide\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPrivate servers\nDocument history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/userguide/WhatsNew.html": "Document history - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nUser Guide\nDocument history\nThe following table describes the important changes in each release of the\nAmazon VPC User Guide\n.\nChange\nDescription\nDate\nAWS managed policy update\nThe\nAmazonVPCCrossAccountNetworkInterfaceOperations\nmanaged policy was updated. The\nAssignIpv6Addresses\nand\nUnassignIpv6Addresses\nactions were added. These new actions allow you to manage the IPv6 addresses associated with network interfaces.\nSeptember 25, 2023\nEC2-Classic is deprecated\nWith EC2-Classic, EC2 instances ran in a single, flat network shared with other customers. \n\t\t\t\t\tAmazon VPC replaces EC2-Classic. With Amazon VPC, your instances run in a virtual private cloud (VPC) \n\t\t\t\t\tthat's logically isolated to your AWS account.\nJuly 31, 2023\nAdd secondary IPv4 addresses to NAT gateways\nYou can add secondary private IPv4 addresses to public and private NAT gateways. Secondary \n\t\t\t\t\tIPv4 addresses increase the number of available ports, and therefore they increase the limit \n\t\t\t\t\ton the number of concurrent connections that your workloads can establish using a NAT gateway.\nJanuary 31, 2023\nAligning with IAM best practices\nUpdated guide to align with the IAM best practices. \nFor more information, see\nSecurity best practices in IAM\n.\nJanuary 4, 2023\nPick the private IP address of your NAT gateway\nWhen you create a NAT gateway, you can now choose to pick the private IP address that's \n\t\t\t\t\tassigned to the NAT gateway. Previously, the private IP address was automatically assigned\n\t\t\t\t\tfrom the IP address range of the subnet.\nNovember 17, 2022\nIPv6 default gateway router configuration\nThree IPv6 addresses are now reserved for use by the default VPC router.\nNovember 11, 2022\nTransfer Elastic IP addresses\nYou can now transfer Elastic IP addresses from one AWS account to another.\nOctober 31, 2022\nNetwork Address Usage metrics\nYou can enable Network Address Usage metrics for your VPC to help you plan for\n\t\t\t\t    and monitor the size of your VPC.\nOctober 4, 2022\nPublish Flow Logs to Amazon Kinesis Data Firehose\nYou can specify a Kinesis Data Firehose delivery stream as a destination for flow log data.\nSeptember 8, 2022\nNAT gateway bandwidth\nNAT gateways now support bandwidth up to 100 Gbps (an increase from 45 Gbps) and can process up to ten million packets per second (up from four million packets).\nJune 15, 2022\nMultiple IPv6 CIDR blocks\nYou can associate up to five IPv6 CIDR blocks to a VPC.\nMay 12, 2022\nReorganization\nGeneral reorganization of this Amazon Virtual Private Cloud User Guide.\nJanuary 2, 2022\nNAT gateway IPv6 to IPv4\nNAT gateway supports network address translation from IPv6 to IPv4, popularly known as NAT64.\nNovember 24, 2021\nIPv6-only subnets in VPCs\nYou can create IPv6-only subnets into which you can launch IPv6-only EC2 instances.\nNovember 23, 2021\nVPC Flow Logs delivery options to Amazon S3\nYou can specify the Apache Parquet log file format, hourly partitions, and \n\t\t\t\t    Hive-compatible S3 prefixes.\nOctober 13, 2021\nAmazon EC2 Global View\nAmazon EC2 Global View enables you to view VPCs, subnets, instances, security groups, and volumes across \n\t\t\t\t\tmultiple AWS Regions in a single console.\nSeptember 1, 2021\nMore specific routes\nYou can add a route to your route tables that is more specific than the local route. \n\t\t\t\t\tYou can use more specific routes to redirect traffic between subnets within a VPC \n\t\t\t\t\t(East-West traffic) to a middlebox appliance. You can set the destination of a route \n\t\t\t\t\tto match an entire IPv4 or IPv6 CIDR block of a subnet in your VPC.\nAugust 30, 2021\nResource IDs and tagging support for security group rules\nYou can refer to security group rules by resource ID. You can also add tags to\n\t\t\t\t\tyour security group rules.\nJuly 7, 2021\nPrivate NAT gateways\nYou can use a private NAT gateway for outbound-only private communication\n\t\t\t\t\tbetween VPCs or between a VPC and your on-premises network.\nJune 10, 2021\nTag on create\nYou can add tags when you create a VPC, DHCP options, internet gateway,\n\t\t\t\t\tegress-only gateway, network ACL, and security group.\nJune 30, 2020\nManaged prefix lists\nYou can create and manage a set of CIDR blocks in prefix list.\nJune 29, 2020\nFlow logs enhancements\nNew flow log fields are available, and you can specify a custom format for\n\t\t\t\t\tflow logs that publish to CloudWatch Logs.\nMay 4, 2020\nTagging support for flow logs\nYou can add tags to your flow logs.\nMarch 16, 2020\nTag on NAT gateway creation\nYou can add a tag when you create a NAT gateway.\nMarch 9, 2020\nMaximum aggregation interval for flow logs\nYou can specify the maximum period of time during which a flow is captured and\n\t\t\t\t\taggregated into a flow log record.\nFebruary 4, 2020\nNetwork border group configuration\nYou can configure network border groups for your VPCs from the\n\t\t\t\t\tAmazon Virtual Private Cloud Console.\nJanuary 22, 2020\nPrivate DNS name\nYou can access AWS PrivateLink based services privately from within your VPC\n\t\t\t\t\tusing Private DNS names.\nJanuary 6, 2020\nGateway route tables\nYou can associate a route table with a gateway and route inbound VPC traffic\n\t\t\t\t\tto a specific network interface in your VPC.\nDecember 3, 2019\nFlow logs enhancements\nYou can specify a custom format for your flow log and choose which fields to\n\t\t\t\t\treturn in the flow log records.\nSeptember 11, 2019\nVPC Sharing\nYou can share subnets that are in the same VPC with multiple accounts in the\n\t\t\t\t\tsame AWS organization.\nNovember 27, 2018\nCreate default subnet\nYou can create a default subnet in an Availability Zone that does not have\n\t\t\t\t\tone.\nNovember 9, 2017\nTagging support for NAT gateways\nYou can tag your NAT gateway.\nSeptember 7, 2017\nAmazon CloudWatch metrics for NAT gateways\nYou can view CloudWatch metrics for your NAT gateway.\nSeptember 7, 2017\nSecurity group rule descriptions\nYou can add descriptions to your security group rules.\nAugust 31, 2017\nSecondary IPv4 CIDR blocks for your VPC\nYou can add multiple IPv4 CIDR blocks to your VPC.\nAugust 29, 2017\nRecover Elastic IP addresses\nIf you release an Elastic IP address, you might be able to recover it.\nAugust 11, 2017\nCreate default VPC\nYou can create a new default VPC if you delete your existing default\n\t\t\t\t\tVPC.\nJuly 27, 2017\nIPv6 support\nYou can associate an IPv6 CIDR block with your VPC and assign IPv6 addresses\n\t\t\t\t\tto resources in your VPC.\nDecember 1, 2016\nDNS resolution support for non-RFC 1918 IP address ranges\nThe Amazon DNS server can now resolve private DNS hostnames to private IP\n\t\t\t\t\taddresses for all address spaces.\nOctober 24, 2016\nNAT gateways\nYou can create a NAT gateway in a public subnet and enable instances in a\n\t\t\t\t\tprivate subnet to initiate outbound traffic to the internet or other AWS\n\t\t\t\t\tservices.\nDecember 17, 2015\nVPC flow logs\nYou can create a flow log to capture information about the IP traffic going to\n\t\t\t\t\tand from network interfaces in your VPC.\nJune 10, 2015\nClassicLink\nYou can use ClassicLink to link your EC2-Classic instance to a VPC in your\n\t\t\t\t\taccount. You can associate VPC security groups with the EC2-Classic instance,\n\t\t\t\t\tenabling communication between your EC2-Classic instance and instances in your\n\t\t\t\t\tVPC using private IP addresses.\nJanuary 7, 2015\nUse private hosted zones\nYou can access resources in your VPC using custom DNS domain names that you\n\t\t\t\t\tdefine in a private hosted zone in Route\u00c2\u00a053.\nNovember 5, 2014\nModify a subnet's public IP addressing attribute\nYou can modify the public IP addressing attribute of your subnet to indicate\n\t\t\t\t\twhether instances launched into that subnet should receive a public IP address.\nJune 21, 2014\nAssigning a public IP address\nYou can assign a public IP address to an instance during launch.\nAugust 20, 2013\nEnabling DNS hostnames and disabling DNS resolution\nYou can modify VPC defaults and disable DNS resolution and enable DNS\n\t\t\t\t\thostnames.\nMarch 11, 2013\nVPC Everywhere\nAdded support for VPC in five AWS Regions, VPCs in multiple Availability\n\t\t\t\t\tZones, multiple VPCs per AWS account,and multiple VPN connections per\n\t\t\t\t\tVPC.\nAugust 3, 2011\nDedicated Instances\nDedicated Instances are Amazon EC2 instances launched within your VPC that run\n\t\t\t\t\thardware dedicated to a single customer.\nMarch 27, 2011\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html": "What is VPC peering? - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nPricing for a VPC peering connection\nWhat is VPC peering?\nA\nvirtual private cloud\n(VPC) is a virtual network dedicated to your \n        AWS account. It is logically isolated from other virtual networks in the AWS Cloud. \n        You can launch AWS resources, such as Amazon EC2 instances, into your VPC.\nA VPC peering connection is a networking connection between two VPCs that enables you to\n        route traffic between them using private IPv4 addresses or IPv6 addresses. Instances in\n        either VPC can communicate with each other as if they are within the same network. You can\n        create a VPC peering connection between your own VPCs, or with a VPC in another AWS\n        account. The VPCs can be in different Regions (also known as an inter-Region VPC peering\n        connection).\nAWS uses the existing infrastructure of a VPC to create a VPC peering connection; it is\n        neither a gateway nor a VPN connection, and does not rely on a separate piece of physical\n        hardware. There is no single point of failure for communication or a bandwidth bottleneck.\nA VPC peering connection helps you to facilitate the transfer of data. For example, if you\n        have more than one AWS account, you can peer the VPCs across those accounts to create a file\n\t\tsharing network. You can also use a VPC peering connection to allow other VPCs to access\n\t\tresources you have in one of your VPCs.\nWhen you establish peering relationships between VPCs across different AWS Regions,\n        resources in the VPCs (for example, EC2 instances and Lambda functions) in different AWS\n        Regions can communicate with each other using private IP addresses, without using a gateway,\n        VPN connection, or network appliance. The traffic remains in the private IP space. All\n        inter-Region traffic is encrypted with no single point of failure, or bandwidth bottleneck.\n        Traffic always stays on the global AWS backbone, and never traverses the public internet,\n        which reduces threats, such as common exploits, and DDoS attacks. Inter-Region VPC peering\n        provides a simple and cost-effective way to share resources between regions or replicate\n        data for geographic redundancy.\nPricing for a VPC peering connection\nThere is no charge to create a VPC peering connection. All data transfer over a VPC\n            Peering connection that stays within an Availability Zone (AZ) is free. Charges apply\n            for data transfer over a VPC Peering connections that cross Availability Zones and\n            Regions. For more information, see\nAmazon EC2 Pricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVPC peering basics\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-basics.html": "VPC peering basics - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nVPC peering connection lifecycle\nMultiple VPC peering connections\nVPC peering limitations\nVPC peering basics\nTo establish a VPC peering connection, you do the following:\nThe owner of the\nrequester VPC\nsends a request to the\n                owner of the\naccepter VPC\nto create the VPC peering\n                connection. The accepter VPC can be owned by you, or another AWS account,\n                and cannot have a CIDR block that overlaps with the CIDR block of the requester \n                VPC.\nThe owner of the accepter VPC accepts the VPC peering connection request\n                to activate the VPC peering connection.\nTo enable the flow of traffic between the VPCs using private IP addresses,\n                the owner of each VPC in the VPC peering connection must manually add a route to\n                one or more of their VPC route tables that points to the IP address range of the\n                other VPC (the peer VPC).\nIf required, update the security group rules that are associated with your\n                instance to ensure that traffic to and from the peer VPC is not restricted. If\n                both VPCs are in the same region, you can reference a security group from the\n                peer VPC as a source or destination for ingress or egress rules in your security\n                group rules.\nWith the default VPC peering connection options, if EC2 instances on either side \n                of a VPC peering connection address each other using a public DNS hostname, the \n                hostname resolves to the public IP address of the instance. To change this behavior, \n                enable DNS hostname resolution for your VPC connection. After enabling DNS hostname \n                resolution, if instances on either side of the VPC peering connection address each \n                other using a public DNS hostname, the hostname resolves to the private IP address \n                of the instance.\nFor more information, see\nWork with VPC peering connections\n.\nVPC peering connection lifecycle\nA VPC peering connection goes through various stages starting from when the request is\n            initiated. At each stage, there may be actions that you can take, and at the end of its\n            lifecycle, the VPC peering connection remains visible in the Amazon VPC console and API or\n            command line output for a period of time.\nInitiating-request\n: A request for a VPC peering connection has been\n                    initiated. At this stage, the peering connection can fail, or can go to\npending-acceptance\n.\nFailed\n: The request for the VPC peering connection has failed. While\n                    in this state, it cannot be accepted, rejected, or deleted. The failed VPC\n                    peering connection remains visible to the requester for 2 hours.\nPending-acceptance\n: The VPC peering connection\n                    request is awaiting acceptance from the owner of the accepter VPC. During\n                    this state, the owner of the requester VPC can delete the request, and the\n                    owner of the accepter VPC can accept or reject the request. If no action is\n                    taken on the request, it expires after 7 days.\nExpired\n: The VPC peering connection request has\n                    expired, and no action can be taken on it by either VPC owner. The expired\n                    VPC peering connection remains visible to both VPC owners for 2 days.\nRejected\n: The owner of the accepter VPC has rejected a\npending-acceptance\nVPC peering connection request. While in\n                    this state, the request cannot be accepted. The rejected VPC peering\n                    connection remains visible to the owner of the requester VPC for 2 days, and\n                    visible to the owner of the accepter VPC for 2 hours. If the request was\n                    created within the same AWS account, the rejected request remains visible\n                    for 2 hours.\nProvisioning\n: The VPC peering connection request has\n                    been accepted, and will soon be in the\nactive\nstate.\nActive\n: The VPC peering connection is active, and traffic can flow\n                    between the VPCs (provided that your security groups and route tables allow\n                    the flow of traffic). While in this state, either of the VPC owners can\n                    delete the VPC peering connection, but cannot reject it.\nNote\nIf an event in a region in which a VPC resides prevents the flow of traffic, the status\n                        of the VPC peering connection remains\nActive\n.\nDeleting\n: Applies to an inter-Region VPC peering\n                    connection that is in the process of being deleted. The owner of either VPC\n                    has submitted a request to delete an\nactive\nVPC peering\n                    connection, or the owner of the requester VPC has submitted a request to\n                    delete a\npending-acceptance\nVPC peering connection\n                    request.\nDeleted\n: An\nactive\nVPC peering connection has been\n                    deleted by either of the VPC owners, or a\npending-acceptance\nVPC peering connection request has been deleted by the owner of the\n                    requester VPC. While in this state, the VPC peering connection cannot be\n                    accepted or rejected. The VPC peering connection remains visible to the\n                    party that deleted it for 2 hours, and visible to the other party for 2\n                    days. If the VPC peering connection was created within the same AWS account,\n                    the deleted request remains visible for 2 hours.\nMultiple VPC peering connections\nA VPC peering connection is a one to one relationship between two VPCs. You can create\n            multiple VPC peering connections for each VPC that you own, but transitive peering\n            relationships are not supported. You do not have any peering relationship with VPCs\n            that your VPC is not directly peered with.\nThe following diagram is an example of one VPC peered to two different VPCs. There are two\n            VPC peering connections: VPC A is peered with both VPC B and VPC C. VPC B and VPC C are not\n            peered, and you cannot use VPC A as a transit point for peering between VPC B and VPC C. If\n            you want to enable routing of traffic between VPC B and VPC C, you must create a unique VPC\n            peering connection between them.\nVPC peering limitations\nConsider the following limitations for VPC peering connections. In some cases, you\n            can use a transit gateway attachment instead of a VPC peering connection. For more\n            information, see\nExamples\nin\nAmazon VPC Transit Gateways\n.\nConnections\nThere is a quota on the number of active and pending VPC peering connections \n                    per VPC. For more information, see\nVPC peering connection quotas\n.\nYou cannot have more than one VPC peering connection between two\n                    VPCs at the same time.\nAny tags that you create for your VPC peering connection are only applied\n                    in the account or Region in which you create them.\nYou cannot connect to or query the Amazon DNS server in a peer VPC.\nIf the IPv4 CIDR block of a VPC in a VPC peering connection falls outside\n                    of the private IPv4 address ranges specified by\nRFC 1918\n, private\n                    DNS hostnames for that VPC cannot be resolved to private IP addresses. To\n                    resolve private DNS hostnames to private IP addresses, you can enable DNS\n                    resolution support for the VPC peering connection. For more information, see\nEnable DNS resolution for a VPC peering connection\n.\nYou can enable resources on either side of a VPC peering connection to communicate \n                    over IPv6. You must associate an IPv6 CIDR block with each VPC, enable the instances \n                    in the VPCs for IPv6 communication, and route IPv6 traffic intended for the peer VPC \n                    to the VPC peering connection.\nUnicast reverse path forwarding in VPC peering connections is not\n                    supported. For more information, see\nRouting for response traffic\n.\nOverlapping CIDR blocks\nYou cannot create a VPC peering connection between VPCs that have matching or\n                    overlapping IPv4 or IPv6 CIDR blocks.\nIf you have multiple IPv4 CIDR blocks, you can't create a VPC peering \n                    connection if any of the CIDR blocks overlap, even if you intend to use\n                    only the non-overlapping CIDR blocks or only IPv6 CIDR blocks.\nTransitive peering\nVPC peering does not support transitive peering relationships. For example,\n                    if there are VPC peering connections between VPC A and VPC B, and between\n                    VPC A and VPC C, you can't route traffic from VPC B to VPC C through VPC A.\n                    To route traffic between VPC B and VPC C, you must create a VPC peering\n                    connection between them. For more information, see\nThree VPCs peered together\n.\nEdge to edge routing through a gateway or private connection\nIf VPC A has an internet gateway, resources in VPC B can't use the internet \n                    gateway in VPC A to access the internet.\nIf VPC A has an NAT device that provides internet access to subnets in VPC A,\n                    resources in VPC B can't use the NAT device in VPC A to access the internet.\nIf VPC A has a VPN connection to a corporate network, resources in VPC B can't \n                    use the VPN connection to communicate with the corporate network.\nIf VPC A has an AWS Direct Connect connection to a corporate network, resources in VPC B can't \n                    use the AWS Direct Connect connection to communicate with the corporate network.\nIf VPC A has a gateway endpoint that provides connectivity to Amazon S3 to private\n                    subnets in VPC A, resources in VPC B can't use the gateway endpoint to access Amazon S3.\nInter-Region VPC peering connections\nYou cannot create a security group rule that references a peer VPC security\n                    group.\nThe Maximum Transmission Unit (MTU) across the VPC peering connection over\n                    Regions is 1500 bytes. Jumbo frames (MTUs up to 9001 bytes) are not\n                    supported for inter-Region VPC peering connections. They are, however,\n                    supported for VPC peering connections in the same Region. For more\n                    information about jumbo frames, see\nJumbo frames (9001 MTU)\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nYou must enable DNS resolution support for the VPC peering connection to resolve \n                    private DNS hostnames of the peered VPC to private IP addresses, even if the IPv4 \n                    CIDR for the VPC falls into the private IPv4 address ranges specified by RFC 1918.\nShared VPCs and subnets\nOnly VPC owners can work with (describe, create, accept, reject, modify, or\n                    delete) peering connections. Participants cannot work with peering connections.\n                    For more information see,\nShare your VPC with other\n                        accounts\nin the\nAmazon VPC User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWhat is VPC peering?\nVPC peering connections\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/working-with-vpc-peering.html": "Work with VPC peering connections - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nWork with VPC peering connections\nUse the following procedures to create and work with VPC peering connections.\nTasks\nCreate a VPC peering connection\nAccept a VPC peering connection\nReject a VPC peering connection\nView your VPC peering connections\nUpdate your route tables for a VPC peering connection\nUpdate your security groups to reference peer security groups\nModify VPC peering connection options\nDelete a VPC peering connection\nTroubleshoot a VPC peering connection\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVPC peering basics\nCreate\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/create-vpc-peering-connection.html": "Create a VPC peering connection - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nPrerequisites\nCreate with VPCs in the same account and Region\nCreate with VPCs in the same account and different Regions\nCreate with VPCs in different accounts and the same Region\nCreate with VPCs in different accounts and Regions\nCreate a VPC peering connection using the command line\nCreate a VPC peering connection\nTo create a VPC peering connection, first create a request to peer with another VPC. You\n\t\t\tcan request a VPC peering connection with another VPC in your account, or with a VPC in\n\t\t\ta different AWS account. For an inter-Region VPC peering connection where the VPCs are\n\t\t\tin different Regions, the request must be made from the Region of the requester\n\t\t\tVPC.\nTo activate the request, the owner of the accepter VPC must accept the request. For an\n\t\t\tinter-Region VPC peering connection, the request must be accepted in the Region of the\n\t\t\taccepter VPC. For more information, see\nAccept a VPC peering connection\n. For more information about the\nPending acceptance\npeering connection status, see\nVPC peering connection lifecycle\n.\nTasks\nPrerequisites\nCreate with VPCs in the same account and Region\nCreate with VPCs in the same account and different Regions\nCreate with VPCs in different accounts and the same Region\nCreate with VPCs in different accounts and Regions\nCreate a VPC peering connection using the command line\nPrerequisites\nReview the\nlimitations and rules\nfor VPC peering connections.\nEnsure that your VPCs do not have overlapping IPv4 CIDR blocks. If they overlap, \n  \t\t\t\t\tthe status of the VPC peering connection immediately goes to\nfailed\n. \n  \t\t\t\t\tThis limitation applies even if the VPCs have unique IPv6 CIDR blocks.\nCreate with VPCs in the same account and Region\nTo create a VPC peering connection with VPCs in the same account and Region\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nPeering connections\n.\nChoose\nCreate peering connection\n.\nConfigure the following information, and choose\nCreate peering\n\t\t\t\t\t\t\tconnection\nwhen you are done:\nName\n: You can optionally name your VPC peering connection.\nVPC ID (Requester)\n: Select the VPC in your account with which you\n\t\t\t\t\t\t\t\twant to create the VPC peering connection.\nFor\nSelect another VPC to peer with\n, choose\nMy\n\t\t\t\t\t\t\t\t\taccount\nand select another of your VPCs.\n(Optional) To add a tag, choose\nAdd new tag\nand\n  \t\t\t\t\t\t    enter the tag key and value.\nChoose\nActions\n,\nAccept request\n.\nWhen prompted for confirmation, choose\nAccept request\n.\nChoose\nModify my route tables now\nto add a route to the VPC route\n\t\t\t\t\t\ttable so that you can send and receive traffic across the peering\n\t\t\t\t\t\tconnection. For more information, see\nUpdate your route tables for a VPC peering connection\n.\nCreate with VPCs in the same account and different Regions\nTo create a VPC peering connection with VPCs in the same account and different Regions\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nPeering connections\n.\nChoose\nCreate peering connection\n.\nConfigure the following information, and choose\nCreate peering\n  \t\t\t\t\tconnection\nwhen you are done:\nName\n: You can optionally name your VPC peering connection. \n  \t\t\t\t\t\t\tDoing so creates a tag with a key of\nName\nand the value that you specify.\nVPC ID (Requester)\n: Select the requester VPC in\n  \t\t\t\t\t\t\tyour account with which to request the VPC peering connection.\nAccount\n: Choose\nMy account\n.\nRegion\n: Choose\nAnother region\nand select \n  \t\t\t\t\t\t\tthe Region ifor the accepter VPC.\nVPC ID (Accepter)\n: Select the accepter VPC.\nIn the Region selector, select the Region of the accepter VPC.\nIn the navigation pane, choose\nPeering connections\n.\n  \t\t\t\t\tSelect the VPC peering connection that you created, and choose\nActions\n,\nAccept request\n.\nWhen prompted for confirmation, choose\nAccept request\n.\nChoose\nModify my route tables now\nto add a route to the\n  \t\t\t\t\tVPC route table so that you can send and receive traffic across the peering\n  \t\t\t\t\tconnection. For more information, see\nUpdate your route tables for a VPC peering connection\n.\nCreate with VPCs in different accounts and the same Region\nTo request a VPC peering connection with VPCs in different accounts and the same Region\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nPeering connections\n.\nChoose\nCreate peering connection\n.\nConfigure the information as follows, and choose\nCreate peering\n  \t\t\t\t\tconnection\nwhen you are done:\nName\n: You can\n  \t\t\t\t\t\t\toptionally name your VPC peering connection. Doing so creates a tag\n  \t\t\t\t\t\t\twith a key of\nName\nand a value that you specify. This\n  \t\t\t\t\t\t\ttag is only visible to you; the owner of the peer VPC can create\n  \t\t\t\t\t\t\ttheir own tags for the VPC peering connection.\nVPC ID (Requester)\n: Select the VPC in your account with which to\n  \t\t\t\t\t\t\tcreate the VPC peering connection.\nAccount\n: Choose\nAnother account\n.\nAccount ID\n: Enter the ID of the AWS account that owns\n  \t\t\t\t\t\t\tthe accepter VPC.\nVPC ID (Accepter)\n: Enter the ID of the VPC with\n  \t\t\t\t\t\t\twhich to create the VPC peering connection.\nCreate with VPCs in different accounts and Regions\nTo request a VPC peering connection with VPCs in different accounts and Regions\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nPeering connections\n.\nChoose\nCreate peering connection\n.\nConfigure the information as follows, and choose\nCreate peering\n  \t\t\t\t\tconnection\nwhen you are done:\nName\n: You can\n  \t\t\t\t\t\t\toptionally name your VPC peering connection. Doing so creates a tag\n  \t\t\t\t\t\t\twith a key of\nName\nand a value that you specify. This\n  \t\t\t\t\t\t\ttag is only visible to you; the owner of the peer VPC can create\n  \t\t\t\t\t\t\ttheir own tags for the VPC peering connection.\nVPC ID (Requester)\n: Select the VPC in your account with which to\n  \t\t\t\t\t\t\tcreate the VPC peering connection.\nAccount\n: Choose\nAnother account\n.\nAccount ID\n: Enter the ID of the AWS account that owns\n  \t\t\t\t\t\t\tthe accepter VPC.\nRegion\n: Choose\nAnother region\nand select \n  \t\t\t\t\t\t\tthe Region in which the accepter VPC resides.\nVPC ID (Accepter)\n: Enter the ID of the VPC with\n  \t\t\t\t\t\t\twhich to create the VPC peering connection.\nCreate a VPC peering connection using the command line\nYou can create a VPC peering connection using the following commands:\ncreate-vpc-peering-connection\n(AWS CLI)\nNew-EC2VpcPeeringConnection\n(AWS Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVPC peering connections\nAccept\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/accept-vpc-peering-connection.html": "Accept a VPC peering connection - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nAccept a VPC peering connection\nA VPC peering connection that's in the\npending-acceptance\nstate must be\n\t\t\taccepted by the owner of the accepter VPC to be activated. For more information about\n\t\t\tthe\nDeleted\npeering connection status, see\nVPC peering connection lifecycle\n. You cannot\n\t\t\taccept a VPC peering connection request that you've sent to another AWS account. If\n\t\t\tyou are creating a VPC peering connection in the same AWS account, you must both\n\t\t\tcreate and accept the request yourself.\nIf the VPCs are in different Regions, the request must be accepted in the Region of the\n\t\t\taccepter VPC.\nImportant\nDo not accept VPC peering connections from unknown AWS accounts. A malicious user may have\n\t\t\t\tsent you a VPC peering connection request to gain unauthorized network access to\n\t\t\t\tyour VPC. This is known as peer phishing. You can safely reject unwanted VPC\n\t\t\t\tpeering connection requests without any risk of the requester gaining access to\n\t\t\t\tany information about your AWS account or your VPC. For more information, see\nReject a VPC peering connection\n. You can also ignore the\n\t\t\t\trequest and let it expire; by default, requests expire after 7 days.\nAfter you accept the VPC peering connection, you must add an entry to your \n\t\t\troute tables to enable traffic between the peered VPCs. For more information, see\nUpdate your route tables for a VPC peering connection\n.\nTo accept a VPC peering connection\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nUse the Region selector to choose the Region of the accepter VPC.\nIn the navigation pane, choose\nPeering connections\n.\nSelect the pending VPC peering connection (the status is\npending-acceptance\n), and choose\nActions\n,\nAccept request\n. \n\t\t\t\t\tFor more information about peering connection lifecycle statuses, see\nVPC peering connection lifecycle\n.\nTip\nIf you cannot see the pending VPC peering connection, check the Region. An inter-Region\n\t\t\t\t\t\tpeering request must be accepted in the Region of the accepter\n\t\t\t\t\t\tVPC.\nWhen prompted for confirmation, choose\nAccept request\n.\nChoose\nModify my route tables now\nto add a route to the\n\t\t\t\t\tVPC route table so that you can send and receive traffic across the peering\n\t\t\t\t\tconnection. For more information, see\nUpdate your route tables for a VPC peering connection\n.\nTo accept a VPC peering connection using the command line or an API\naccept-vpc-peering-connection\n(AWS CLI)\nApprove-EC2VpcPeeringConnection\n(AWS Tools for Windows PowerShell)\nAcceptVpcPeeringConnection\n(Amazon EC2 Query API)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate\nReject\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/reject-vpc-peering-connection.html": "Reject a VPC peering connection - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nReject a VPC peering connection\nYou can reject any VPC peering connection request that you've received that's\n\t\t\tin the\npending-acceptance\nstate. You should only accept VPC peering\n\t\t\tconnections from AWS accounts that you know and trust; you can reject any unwanted\n\t\t\trequests. For more information about the\nRejected\npeering connection status, \n\t\t\tsee\nVPC peering connection lifecycle\n.\nTo reject a VPC peering connection\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nPeering connections\n.\nSelect the VPC peering connection, and choose\nActions\n,\nReject request\n.\nWhen prompted for confirmation, choose\nReject request\n.\nTo reject a VPC peering connection using the command line or an API\nreject-vpc-peering-connection\n(AWS CLI)\nDeny-EC2VpcPeeringConnection\n(AWS Tools for Windows PowerShell)\nRejectVpcPeeringConnection\n(Amazon EC2 Query API)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAccept\nView\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/describe-vpc-peering-connections.html": "View your VPC peering connections - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nView your VPC peering connections\nYou can view all of your VPC peering connections in the Amazon VPC console. By default,\n\t\t\tthe console displays all VPC peering connections in different states, including\n\t\t\tthose that may have been recently deleted or rejected. For more information about\n\t\t\tthe lifecycle of a VPC peering connection, see\nVPC peering connection lifecycle\n.\nTo view your VPC peering connections\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nPeering connections\n.\nAll of your VPC peering connections are listed. Use the filter search bar\n\t\t\t\t\tto narrow your results.\nTo describe a VPC peering connection using the command line or an API\ndescribe-vpc-peering-connections\n(AWS CLI)\nGet-EC2VpcPeeringConnections\n(AWS Tools for Windows PowerShell)\nDescribeVpcPeeringConnections\n(Amazon EC2 Query API)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nReject\nUpdate route tables\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-routing.html": "Update your route tables for a VPC peering connection - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nUpdate your route tables for a VPC peering connection\nTo enable private IPv4 traffic between instances in peered VPCs, you must add a route to the\n\t\t\troute tables associated with the subnets for both instances. The route destination is\n\t\t\tthe CIDR block (or portion of the CIDR block) of the peer VPC and the target is the ID\n\t\t\tof the VPC peering connection. For more information, see\nConfigure route tables\nin the\nAmazon VPC User Guide\n.\nThe following is an example of the route tables that enables communication between instances \n\t\t\tin two peered VPCs, VPC A and VPC B. Each table has a local route and a route that sends \n\t\t\ttraffic for the peer VPC to the VPC peering connection.\nRoute table\nDestination\nTarget\nVPC A\nVPC A CIDR\nLocal\nVPC B CIDR\npcx-\n11112222\nVPC B\nVPC B CIDR\nLocal\nVPC A CIDR\npcx-\n11112222\nSimilarly, if the VPCs in the VPC peering connection have associated IPv6 CIDR blocks, \n\t\t\tyou can add routes that enable communication with the peer VPC over IPv6.\nFor more information about supported route table configurations for VPC peering\n\t\t\tconnections, see\nVPC peering configurations\n.\nConsiderations\nIf you have a VPC peered with multiple VPCs that have overlapping or matching IPv4 CIDR\n\t\t\t\t\tblocks, ensure that your route tables are configured to avoid sending response traffic from\n\t\t\t\t\tyour VPC to the incorrect VPC. AWS currently does not support unicast reverse path\n\t\t\t\t\tforwarding in VPC peering connections that checks the source IP of packets and routes reply\n\t\t\t\t\tpackets back to the source. For more information, see\nRouting for response traffic\n.\nYour account has a\nquota\non the number of entries you can add per route table. If the number of VPC peering\n\t\t\t\t\tconnections in your VPC exceeds the route table entry quota for a single route\n\t\t\t\t\ttable, consider using multiple subnets that are each associated with a custom route\n\t\t\t\t\ttable.\nYou can add a route for a VPC peering connection that's in the\npending-acceptance\nstate. However, the route has a state of\nblackhole\n, and has no effect until the VPC peering connection is in \n\t\t\t\t\tthe\nactive\nstate.\nTo add an IPv4 route for a VPC peering connection\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n.\nSelect the check box next to the route table that's associated with the subnet in\n\t\t\twhich your instance resides.\nIf you do not have a route table explicitly associated with that subnet, the main route\n            table for the VPC is implicitly associated with the subnet.\nChoose\nActions\n,\nEdit routes\n.\nChoose\nAdd route\n.\nFor\nDestination\n, enter the IPv4 address range to which the\n          network traffic in the VPC peering connection must be directed. You can specify the entire\n          IPv4 CIDR block of the peer VPC, a specific range, or an individual IPv4 address, such as\n          the IP address of the instance with which to communicate. For example, if the CIDR block\n          of the peer VPC is\n10.0.0.0/16\n, you can specify a portion\n10.0.0.0/24\n, or a specific IP address\n10.0.0.7/32\n.\nFor\nTarget\n, select the VPC peering connection.\nChoose\nSave changes\n.\nThe owner of the peer VPC must also complete these steps to add a route to direct\n            traffic back to your VPC through the VPC peering connection.\nIf you have resources in different AWS Regions that use IPv6 addresses, you can create an\n\t\t\tinter-Region peering connection. You can then add an IPv6 route for communication\n\t\t\tbetween the resources.\nTo add an IPv6 route for a VPC peering connection\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute tables\n.\nSelect the check box next to the route table that's associated with the subnet\n\t\t\t\t\tin which your instance resides.\nNote\nIf you do not have a route table associated with that subnet, select the\n\t\t\t\t\t\tmain route table for the VPC, as the subnet then uses this route table by\n\t\t\t\t\t\tdefault.\nChoose\nActions\n,\nEdit routes\n.\nChoose\nAdd route\n.\nFor\nDestination\n, enter the IPv6 address range for the peer VPC.\n          You can specify the entire IPv6 CIDR block of the peer VPC, a specific range, or an\n          individual IPv6 address. For example, if the CIDR block of the peer VPC is\n2001:db8:1234:1a00::/56\n, you can specify a portion\n2001:db8:1234:1a00::/64\n, or a specific IP address\n2001:db8:1234:1a00::123/128\n.\nFor\nTarget\n, select the VPC peering connection.\nChoose\nSave changes\n.\nFor more information, see\nRoute\n        Tables\nin the\nAmazon VPC User Guide\n.\nTo add or replace a route using the command line or an API\ncreate-route\n(AWS CLI)\nNew-EC2Route\n(AWS Tools for Windows PowerShell)\nCreateRoute\n(Amazon EC2 Query API)\nreplace-route\n(AWS CLI)\nSet-EC2Route\n(AWS Tools for Windows PowerShell)\nReplaceRoute\n(Amazon EC2 Query API)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nView\nReference peer security groups\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-security-groups.html": "Update your security groups to reference peer security groups - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nIdentify your referenced security groups\nWork with stale security group rules\nUpdate your security groups to reference peer security groups\nYou can update the inbound or outbound rules for your VPC security groups to reference\n\t\t\tsecurity groups in the peered VPC. Doing so allows traffic to flow to and from instances\n\t\t\tthat are associated with the referenced security group in the peered VPC.\nRequirements\nThe peer VPC can be a VPC in your account, or a VPC in another AWS account.\n\t\t\t\t    To reference a security group in another AWS account, include the account number \n\t\t\t\t    in\nSource\nor\nDestination\nfield;\n\t\t\t\t\tfor example,\n123456789012/sg-1a2b3c4d\n.\nYou cannot reference the security group of a peer VPC that's in a different Region.\n\t\t\t\t\tInstead, use the CIDR block of the peer VPC.\nTo reference a security group in a peer VPC, the VPC peering connection must be in the\nactive\nstate.\nIf you configure routes to forward the traffic between two instances in different\n\t\t\t\t\tsubnets through a middlebox appliance, you must ensure that the security groups\n\t\t\t\t\tfor both instances allow traffic to flow between the instances. The security\n\t\t\t\t\tgroup for each instance must reference the private IP address of the other\n\t\t\t\t\tinstance, or the CIDR range of the subnet that contains the other instance, as\n\t\t\t\t\tthe source. If you reference the security group of the other instance as the\n\t\t\t\t\tsource, this does not allow traffic to flow between the instances.\nTo update your security group rules using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSecurity groups\n.\nSelect the security group, and choose\nActions\n,\nEdit inbound rules\nto modify the inbound rules or choose\nActions\n,\nEdit outbound rules\nto modify \n\t\t\t\t\tthe outbound rules.\nTo add a rule, choose\nAdd rule\nand specify the type, protocol, \n\t\t\t\t\tand port range. For\nSource\n(inbound rule) or\nDestination\n(outbound rule), enter the ID of the security group in the peer VPC if it is in the same Region \n\t\t\t\t\tor the CIDR block of the peer VPC if it is in a different Region.\nNote\nSecurity groups in a peer VPC are not automatically displayed.\nTo edit an existing rule, change its values (for example, the source or the description).\nTo delete a rule, choose\nDelete\nnext to the rule.\nChoose\nSave rules\n.\nTo update inbound rules using the command line\nauthorize-security-group-ingress\n(AWS CLI)\nGrant-EC2SecurityGroupIngress\n(AWS Tools for Windows PowerShell)\nRevoke-EC2SecurityGroupIngress\n(AWS Tools for Windows PowerShell)\nrevoke-security-group-ingress\n(AWS CLI)\nTo update outbound rules using the command line\nauthorize-security-group-egress\n(AWS CLI)\nGrant-EC2SecurityGroupEgress\n(AWS Tools for Windows PowerShell)\nRevoke-EC2SecurityGroupEgress\n(AWS Tools for Windows PowerShell)\nrevoke-security-group-egress\n(AWS CLI)\nFor example, to update your security group\nsg-aaaa1111\nto allow inbound access\n\t\t\tover HTTP from\nsg-bbbb2222\nthat's in a peer VPC, you can use the following\n\t\t\tAWS CLI command:\naws ec2 authorize-security-group-ingress --group-id\nsg-aaaa1111\n--protocol tcp --port\n80\n--source-group\nsg-bbbb2222\nAfter you've updated the security group rules, use the\ndescribe-security-groups\ncommand to view the referenced security group in\n\t\t\tyour security group rules.\nIdentify your referenced security groups\nTo determine if your security group is being referenced in the rules of a security\n\t\t\t\tgroup in a peer VPC, use one of the following commands for one or more security\n\t\t\t\tgroups in your account.\ndescribe-security-group-references\n(AWS CLI)\nGet-EC2SecurityGroupReference\n(AWS Tools for Windows PowerShell)\nDescribeSecurityGroupReferences\n(Amazon EC2 Query API)\nIn the following example, the response indicates that security group\nsg-bbbb2222\nis being referenced by a security group in VPC\nvpc-aaaaaaaa\n:\naws ec2 describe-security-group-references --group-id\nsg-bbbb2222\n{\n\"SecurityGroupsReferenceSet\": [\n{\n\"ReferencingVpcId\": \"vpc-aaaaaaaa\",\n      \"GroupId\": \"sg-bbbb2222\",\n      \"VpcPeeringConnectionId\": \"pcx-b04deed9\"       \n    }   \n  ]\n}\nIf the VPC peering connection is deleted, or if the owner of the peer VPC deletes\n\t\t\t\tthe referenced security group, the security group rule becomes stale.\nWork with stale security group rules\nA stale security group rule is a rule that references a deleted security group in \n    \t\t\tthe same VPC or in a peer VPC, or that references a security group in a peer VPC for \n    \t\t\twhich the VPC peering connection has been deleted. When a security group rule becomes \n    \t\t\tstale, it's not automatically removed from your security group\u00e2\u0080\u0094you must manually \n    \t\t\tremove it. If a security group rule is stale because the VPC peering connection was \n    \t\t\tdeleted, the rule will no longer be marked as stale if you create a new VPC peering \n    \t\t\tconnection with the same VPCs.\nYou can view and delete the stale security group rules for a VPC using the Amazon VPC\n\t\t\t\tconsole.\nTo view and delete stale security group rules\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nSecurity groups\n.\nChoose\nActions\n,\nManage stale rules\n.\nFor\nVPC\n, choose the VPC with the stale rules.\nChoose\nEdit\n.\nChoose the\nDelete\nbutton next to the rule that you want to delete.\n\t\t\t\t\t\tChoose\nPreview changes\n,\nSave\n\t\t\t\t\t\trules\n.\nTo describe your stale security group rules using the command line or an API\ndescribe-stale-security-groups\n(AWS CLI)\nGet-EC2StaleSecurityGroup\n(AWS Tools for Windows PowerShell)\nDescribeStaleSecurityGroups\n(Amazon EC2 Query API)\nIn the following example, VPC A\n(vpc-aaaaaaaa\n) and VPC B were peered,\n\t\t\t\tand the VPC peering connection was deleted. Your security group\nsg-aaaa1111\nin VPC A references\nsg-bbbb2222\nin VPC B.\n\t\t\t\tWhen you run the\ndescribe-stale-security-groups\ncommand for your VPC,\n\t\t\t\tthe response indicates that security group\nsg-aaaa1111\nhas a stale SSH\n\t\t\t\trule that references\nsg-bbbb2222\n.\naws ec2 describe-stale-security-groups --vpc-id\nvpc-aaaaaaaa\n{\n\"StaleSecurityGroupSet\": [\n{\n\"VpcId\": \"vpc-aaaaaaaa\", \n            \"StaleIpPermissionsEgress\": [], \n            \"GroupName\": \"Access1\", \n            \"StaleIpPermissions\": [\n{\n\"ToPort\": 22, \n                    \"FromPort\": 22, \n                    \"UserIdGroupPairs\": [\n{\n\"VpcId\": \"vpc-bbbbbbbb\", \n                            \"PeeringStatus\": \"deleted\", \n                            \"UserId\": \"123456789101\", \n                            \"GroupName\": \"Prod1\", \n                            \"VpcPeeringConnectionId\": \"pcx-b04deed9\", \n                            \"GroupId\": \"sg-bbbb2222\"\n                        }\n                    ], \n                    \"IpProtocol\": \"tcp\"\n                }\n            ], \n            \"GroupId\": \"sg-aaaa1111\", \n            \"Description\": \"Reference remote SG\"\n        }\n    ]\n}\nAfter you've identified the stale security group rules, you can delete them using\n\t\t\t\tthe\nrevoke-security-group-ingress\nor\nrevoke-security-group-egress\ncommands.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nUpdate route tables\nModify peering options\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html": "Modify VPC peering connection options - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nEnable DNS resolution for a VPC peering connection\nModify VPC peering connection options\nYou can modify a VPC peering connection to do the following:\nEnable a VPC to resolve public IPv4 DNS hostnames to private IPv4 addresses when\n            queried from instances in the peer VPC. For more information, see\nEnable DNS resolution for a VPC peering connection\n.\nEnable DNS resolution for a VPC peering connection\nTo enable a VPC to resolve public IPv4 DNS hostnames to private IPv4 addresses when queried\n                from instances in the peer VPC, you must modify your existing peering\n                connection.\nBoth VPCs must be enabled for DNS hostnames and DNS resolution.\nYou cannot enable DNS resolution support when you create a new peering connection.\n                You can enable DNS resolution support for an existing peering connection that's in\n                the\nactive\nstate.\nTo enable DNS resolution for a peering connection\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nPeering connections\n.\nSelect the VPC peering connection, and choose\nActions\n,\nEdit DNS settings\n.\nTo ensure that queries from the peer VPC resolve to private IP addresses in your local\n                        VPC, choose the option to enable DNS resolution for queries from the peer\n                        VPC. This option is\nRequester DNS resolution\nor\nAccepter DNS resolution\n, depending on whether the\n                        VPC is the requester or accepter VPC.\nIf the peer VPC is in the same AWS account, you can enable DNS resolution for both VPCs\n                        in the peering connection.\nChoose\nSave changes\n.\nIf the peer VPC is in a different AWS account or a different Region, the owner of the\n\t\t\t\t\t\tpeer VPC must sign into the VPC console, perform steps 2 through 4, and\n\t\t\t\t\t\tchoose\nSave changes\n.\nTo enable DNS resolution using the command line or an API\nmodify-vpc-peering-connection-options\n(AWS CLI)\nEdit-EC2VpcPeeringConnectionOption\n(AWS Tools for Windows PowerShell)\nModifyVpcPeeringConnectionOptions\n(Amazon EC2 Query API)\nYou must modify the requester VPC peering options if you are the requester of the VPC\n\t\t\t\tpeering connection, and you must modify the accepter VPC peering options if you are\n\t\t\t\tthe accepter of the VPC peering connection. You can use the\ndescribe-vpc-peering-connections\nor\nGet-EC2VpcPeeringConnections\ncommands to verify which VPC is the\n\t\t\t\taccepter and the requester for a VPC peering connection. For inter-Region peering\n\t\t\t\tconnections, you must use the Region for the requester VPC to modify the requester\n\t\t\t\tVPC peering options and the Region for the accepter VPC to modify the accepter VPC\n\t\t\t\tpeering options.\nIn this example, you are the requester of the VPC peering connection, therefore\n\t\t\t\tmodify the peering connection options using the AWS CLI as follows:\naws ec2 modify-vpc-peering-connection-options --vpc-peering-connection-id\npcx-aaaabbbb\n--requester-peering-connection-options AllowDnsResolutionFromRemoteVpc=true\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nReference peer security groups\nDelete\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/delete-vpc-peering-connection.html": "Delete a VPC peering connection - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nDelete a VPC peering connection\nEither owner of a VPC in a peering connection can delete the VPC peering\n\t\t\tconnection at any time. You can also delete a VPC peering connection that you've\n\t\t\trequested that is still in the\npending-acceptance\nstate.\nYou cannot delete the  VPC peering connection when the  VPC peering connection is in\n\t\t\tthe\nrejected\nstate. We automatically delete the connection for you.\nDeleting a VPC in the Amazon VPC console that's part of an active VPC peering connection also\n\t\t\tdeletes the VPC peering connection. If you have requested a VPC peering connection with a\n\t\t\tVPC in another account, and you delete your VPC before the other party has accepted the\n\t\t\trequest, the VPC peering connection is also deleted. You cannot delete a VPC for which you\n\t\t\thave a\npending-acceptance\nrequest from a VPC in another account. You must first\n\t\t\treject the VPC peering connection request.\nWhen you delete a peering connection, the status is set to\nDeleting\nand then\nDeleted\n. After you delete a connection, it can't be accepted, rejected, or edited.\n\t\t\tFor more information about how long the peering connection remains visible, see\nVPC peering connection lifecycle\n.\nTo delete a VPC peering connection\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nPeering connections\n.\nSelect the VPC peering connection.\nChoose\nActions\n,\nDelete peering connection\n.\nWhen prompted for confirmation, enter\ndelete\nand then \n\t\t\t\t\tchoose\nDelete\n.\nTo delete a VPC peering connection using the command line or an API\ndelete-vpc-peering-connection\n(AWS CLI)\nRemove-EC2VpcPeeringConnection\n(AWS Tools for Windows PowerShell)\nDeleteVpcPeeringConnection\n(Amazon EC2 Query API)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nModify peering options\nTroubleshoot\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/troubleshoot-vpc-peering-connections.html": "Troubleshoot a VPC peering connection - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nTroubleshoot a VPC peering connection\nIf you're having trouble connecting to a resource in a VPC from a resource in a\n\t\t    peer VPC, do the following:\nFor each resource in each VPC, verify that the route table for its subnet \n\t\t\t\t\tcontains a route that sends traffic destined for the peer VPC to the VPC \n\t\t\t\t\tpeering connection. For more information, see\nUpdate route tables\n.\nFor EC2 instances, verify that the security groups for the EC2 instances \n\t\t\t\t\tallow traffic from the peer VPC. For more information, see\nReference peer security groups\n.\nFor each resource in each VPC, verify that the network ACL for its subnet \n\t\t\t\t\tallows traffic from the peer VPC.\nYou can also use Reachability Analyzer to identify the component with a configuration issue, such as\n\t\t    a route table, security group, or network ACL. For more information, see the\nReachability Analyzer Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDelete\nVPC peering configurations\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/peering-configurations.html": "VPC peering configurations - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nVPC peering configurations\nThe following documentation describes different types of VPC peering configurations.\nConfigurations\nVPC peering configurations with routes to an entire VPC\nVPC peering configurations with specific routes\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTroubleshoot\nRoute to a VPC CIDR block\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/peering-configurations-full-access.html": "VPC peering configurations with routes to an entire VPC - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nTwo VPCs peered together\nOne VPC peered with two VPCs\nThree VPCs peered together\nMultiple VPCs peered together\nVPC peering configurations with routes to an entire VPC\nYou can configure VPC peering connections so that your route tables have access to the entire \n     CIDR block of the peer VPC. For more information about scenarios in which you might need a \n     specific VPC peering connection configuration, see\nVPC peering scenarios\n. For more information about creating and working with VPC \n     peering connections, see\nWork with VPC peering connections\n.\nFor more information about updating your route tables, see\nUpdate your route tables for a VPC peering connection\n.\nConfigurations\nTwo VPCs peered together\nOne VPC peered with two VPCs\nThree VPCs peered together\nMultiple VPCs peered together\nTwo VPCs peered together\nIn this configuration, there is a peering connection between VPC A and VPC B \n       (\npcx-11112222\n). The VPCs are in the same AWS account and their CIDR blocks \n       do not overlap.\nYou might use this configuration when you have two VPCs that require access to each\n      others' resources. For example, you set up VPC A for your accounting records and VPC B for\n      your financial records, and these each VPC must be able to access resources from the other VPC\n      without restriction.\nSingle VPC CIDR\nUpdate the route table for each VPC with a route that sends traffic for the CIDR block\n        of the peer VPC to the VPC peering connection.\nRoute table\nDestination\nTarget\nVPC A\nVPC A CIDR\nLocal\nVPC B CIDR\npcx-11112222\nVPC B\nVPC B CIDR\nLocal\nVPC A CIDR\npcx-11112222\nMultiple IPv4 VPC CIDRs\nIf VPC A and VPC B have multiple associated IPv4 CIDR blocks, you can update the route\n        table for each VPC with routes for some or all of the IPv4 CIDR blocks of the peer\n        VPC.\nRoute table\nDestination\nTarget\nVPC A\nVPC A CIDR 1\nLocal\nVPC A CIDR 2\nLocal\nVPC B CIDR 1\npcx-11112222\nVPC B CIDR 2\npcx-11112222\nVPC B\nVPC B CIDR 1\nLocal\nVPC B CIDR 2\nLocal\nVPC A CIDR 1\npcx-11112222\nVPC A CIDR 2\npcx-11112222\nIPv4 and IPv6 VPC CIDRs\nIf VPC A and VPC B have associated IPv6 CIDR blocks, you can update the route table for\n        each VPC with routes for both the IPv4 and IPv6 CIDR blocks of the peer VPC.\nRoute table\nDestination\nTarget\nVPC A\nVPC A IPv4 CIDR\nLocal\nVPC A IPv6 CIDR\nLocal\nVPC B IPv4 CIDR\npcx-11112222\nVPC B IPv6 CIDR\npcx-11112222\nVPC B\nVPC B IPv4 CIDR\nLocal\nVPC B IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-11112222\nVPC A IPv6 CIDR\npcx-11112222\nOne VPC peered with two VPCs\nIn this configuration, there is a central VPC (VPC A), a peering connection between\n      VPC A and VPC B (\npcx-12121212\n), and a peering connection between VPC A and\n      VPC C (\npcx-23232323\n). All three VPCs are in the same AWS account and their\n      CIDR blocks do not overlap.\nVPC B and VPC C can't send traffic directly to each other through a VPC A, because VPC\n        peering does not support transitive peering relationships. You can create a VPC peering\n        connection between VPC B and VPC C, as shown in\nThree VPCs peered together\n. For more information about unsupported peering\n        scenarios, see\nVPC peering limitations\n.\nYou might use this configuration when you have resources on a central VPC, such as a\n      repository of services, that other VPCs need to access. The other VPCs do not need access to\n      each others' resources; they only need to access resources in the central VPC.\nUpdate the route table for each VPC as follows to implement this configuration using one\n      CIDR block per VPC.\nRoute table\nDestination\nTarget\nVPC A\nVPC A CIDR\nLocal\nVPC B CIDR\npcx-12121212\nVPC C CIDR\npcx-23232323\nVPC B\nVPC B CIDR\nLocal\nVPC A CIDR\npcx-12121212\nVPC C\nVPC C CIDR\nLocal\nVPC A CIDR\npcx-23232323\nYou can extend this configuration to additional VPCs. For example, VPC A is peered with\n      VPC B through VPC G using both IPv4 and IPv6 CIDRs, but the other VPCs are not peered to each\n      other. In this diagram, the lines represent VPC peering connections.\nUpdate the route table as follows.\nRoute table\nDestination\nTarget\nVPC A\nVPC A IPv4 CIDR\nLocal\nVPC A IPv6 CIDR\nLocal\nVPC B IPv4 CIDR\npcx-aaaabbbb\nVPC B IPv6 CIDR\npcx-aaaabbbb\nVPC C IPv4 CIDR\npcx-aaaacccc\nVPC C IPv6 CIDR\npcx-aaaacccc\nVPC D IPv4 CIDR\npcx-aaaadddd\nVPC D IPv6 CIDR\npcx-aaaadddd\nVPC E IPv4 CIDR\npcx-aaaaeeee\nVPC E IPv6 CIDR\npcx-aaaaeeee\nVPC F IPv4 CIDR\npcx-aaaaffff\nVPC F IPv6 CIDR\npcx-aaaaffff\nVPC G IPv4 CIDR\npcx-aaaagggg\nVPC G IPv6 CIDR\npcx-aaaagggg\nVPC B\nVPC B IPv4 CIDR\nLocal\nVPC B IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaabbbb\nVPC A IPv6 CIDR\npcx-aaaabbbb\nVPC C\nVPC C IPv4 CIDR\nLocal\nVPC C IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaacccc\nVPC A IPv6 CIDR\npcx-aaaacccc\nVPC D\nVPC D IPv4 CIDR\nLocal\nVPC D IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaadddd\nVPC A IPv6 CIDR\npcx-aaaadddd\nVPC E\nVPC E IPv4 CIDR\nLocal\nVPC E IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaaeeee\nVPC A IPv6 CIDR\npcx-aaaaeeee\nVPC F\nVPC F IPv4 CIDR\nLocal\nVPC F IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaaffff\nVPC A IPv6 CIDR\npcx-aaaaffff\nVPC G\nVPC G IPv4 CIDR\nLocal\nVPC G IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaagggg\nVPC A IPv6 CIDR\npcx-aaaagggg\nThree VPCs peered together\nIn this configuration, there are three VPCs in the same AWS account with CIDR blocks \n      that do not overlap. The VPCs are peered in a full mesh as follows:\nVPC A is peered to VPC B through VPC peering connection\npcx-aaaabbbb\nVPC A is peered to VPC C through VPC peering connection\npcx-aaaacccc\nVPC B is peered to VPC C through VPC peering connection\npcx-bbbbcccc\nYou might use this configuration when you have VPCs that need to share resources\n      with each other without restriction. For example, as a file sharing system.\nUpdate the route table for each VPC as follows to implement this configuration.\nRoute table\nDestination\nTarget\nVPC A\nVPC A CIDR\nLocal\nVPC B CIDR\npcx-aaaabbbb\nVPC C CIDR\npcx-aaaacccc\nVPC B\nVPC B CIDR\nLocal\nVPC A CIDR\npcx-aaaabbbb\nVPC C CIDR\npcx-bbbbcccc\nVPC C\nVPC C CIDR\nLocal\nVPC A CIDR\npcx-aaaacccc\nVPC B CIDR\npcx-bbbbcccc\nIf VPC A and VPC B have both IPv4 and IPv6 CIDR blocks, but VPC C does not have an IPv6 \n        CIDR block, update the route tables as follows. Resources in VPC A and VPC B can communicate \n        using IPv6 over the VPC peering connection. However, VPC C cannot communicate with either \n        VPC A or VPC B using IPv6.\nRoute tables\nDestination\nTarget\nVPC A\nVPC A IPv4 CIDR\nLocal\nVPC A IPv6 CIDR\nLocal\nVPC B IPv4 CIDR\npcx-aaaabbbb\nVPC B IPv6 CIDR\npcx-aaaabbbb\nVPC C IPv4 CIDR\npcx-aaaacccc\nVPC B\nVPC B IPv4 CIDR\nLocal\nVPC B IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaabbbb\nVPC A IPv6 CIDR\npcx-aaaabbbb\nVPC C IPv4 CIDR\npcx-bbbbcccc\nVPC C\nVPC C IPv4 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaacccc\nVPC B IPv4 CIDR\npcx-bbbbcccc\nMultiple VPCs peered together\nIn this configuration, there are seven VPCs peered in a full mesh configuration. The \n      VPCs are in the same AWS account and their CIDR blocks do not overlap.\nVPC\nVPC\nVPC peering connection\nA\nB\npcx-aaaabbbb\nA\nC\npcx-aaaacccc\nA\nD\npcx-aaaadddd\nA\nE\npcx-aaaaeeee\nA\nF\npcx-aaaaffff\nA\nG\npcx-aaaagggg\nB\nC\npcx-bbbbcccc\nB\nD\npcx-bbbbdddd\nB\nE\npcx-bbbbeeee\nB\nF\npcx-bbbbffff\nB\nG\npcx-bbbbgggg\nC\nD\npcx-ccccdddd\nC\nE\npcx-cccceeee\nC\nF\npcx-ccccffff\nC\nG\npcx-ccccgggg\nD\nE\npcx-ddddeeee\nD\nF\npcx-ddddffff\nD\nG\npcx-ddddgggg\nE\nF\npcx-eeeeffff\nE\nG\npcx-eeeegggg\nF\nG\npcx-ffffgggg\nYou might use this configuration when you have multiple VPCs that must be\n      able to access each others' resources without restriction. For example, as a file sharing\n      network. In this diagram, the lines represent VPC peering connections.\nUpdate the route table for each VPC as follows to implement this configuration.\nRoute table\nDestination\nTarget\nVPC A\nVPC A CIDR\nLocal\nVPC B CIDR\npcx-aaaabbbb\nVPC C CIDR\npcx-aaaacccc\nVPC D CIDR\npcx-aaaadddd\nVPC E CIDR\npcx-aaaaeeee\nVPC F CIDR\npcx-aaaaffff\nVPC G CIDR\npcx-aaaagggg\nVPC B\nVPC B CIDR\nLocal\nVPC A CIDR\npcx-aaaabbbb\nVPC C CIDR\npcx-bbbbcccc\nVPC D CIDR\npcx-bbbbdddd\nVPC E CIDR\npcx-bbbbeeee\nVPC F CIDR\npcx-bbbbffff\nVPC G CIDR\npcx-bbbbgggg\nVPC C\nVPC C CIDR\nLocal\nVPC A CIDR\npcx-aaaacccc\nVPC B CIDR\npcx-bbbbcccc\nVPC D CIDR\npcx-ccccdddd\nVPC E CIDR\npcx-cccceeee\nVPC F CIDR\npcx-ccccffff\nVPC G CIDR\npcx-ccccgggg\nVPC D\nVPC D CIDR\nLocal\nVPC A CIDR\npcx-aaaadddd\nVPC B CIDR\npcx-bbbbdddd\nVPC C CIDR\npcx-ccccdddd\nVPC E CIDR\npcx-ddddeeee\nVPC F CIDR\npcx-ddddffff\nVPC G CIDR\npcx-ddddgggg\nVPC E\nVPC E CIDR\nLocal\nVPC A CIDR\npcx-aaaaeeee\nVPC B CIDR\npcx-bbbbeeee\nVPC C CIDR\npcx-cccceeee\nVPC D CIDR\npcx-ddddeeee\nVPC F CIDR\npcx-eeeeffff\nVPC G CIDR\npcx-eeeegggg\nVPC F\nVPC F CIDR\nLocal\nVPC A CIDR\npcx-aaaaffff\nVPC B CIDR\npcx-bbbbffff\nVPC C CIDR\npcx-ccccffff\nVPC D CIDR\npcx-ddddffff\nVPC E CIDR\npcx-eeeeffff\nVPC G CIDR\npcx-ffffgggg\nVPC G\nVPC G CIDR\nLocal\nVPC A CIDR\npcx-aaaagggg\nVPC B CIDR\npcx-bbbbgggg\nVPC C CIDR\npcx-ccccgggg\nVPC D CIDR\npcx-ddddgggg\nVPC E CIDR\npcx-eeeegggg\nVPC F CIDR\npcx-ffffgggg\nIf all VPCs have associated IPv6 CIDR blocks, update the route tables as follows.\nRoute table\nDestination\nTarget\nVPC A\nVPC A IPv4 CIDR\nLocal\nVPC A IPv6 CIDR\nLocal\nVPC B IPv4 CIDR\npcx-aaaabbbb\nVPC B IPv6 CIDR\npcx-aaaabbbb\nVPC C IPv4 CIDR\npcx-aaaacccc\nVPC C IPv6 CIDR\npcx-aaaacccc\nVPC D IPv4 CIDR\npcx-aaaadddd\nVPC D IPv6 CIDR\npcx-aaaadddd\nVPC E IPv4 CIDR\npcx-aaaaeeee\nVPC E IPv6 CIDR\npcx-aaaaeeee\nVPC F IPv4 CIDR\npcx-aaaaffff\nVPC F IPv6 CIDR\npcx-aaaaffff\nVPC G IPv4 CIDR\npcx-aaaagggg\nVPC G IPv6 CIDR\npcx-aaaagggg\nVPC B\nVPC B IPv4 CIDR\nLocal\nVPC B IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaabbbb\nVPC A IPv6 CIDR\npcx-aaaabbbb\nVPC C IPv4 CIDR\npcx-bbbbcccc\nVPC C IPv6 CIDR\npcx-bbbbcccc\nVPC D IPv4 CIDR\npcx-bbbbdddd\nVPC D IPv6 CIDR\npcx-bbbbdddd\nVPC E IPv4 CIDR\npcx-bbbbeeee\nVPC E IPv6 CIDR\npcx-bbbbeeee\nVPC F IPv4 CIDR\npcx-bbbbffff\nVPC F IPv6 CIDR\npcx-bbbbffff\nVPC G IPv4 CIDR\npcx-bbbbgggg\nVPC G IPv6 CIDR\npcx-bbbbgggg\nVPC C\nVPC C IPv4 CIDR\nLocal\nVPC C IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaacccc\nVPC A IPv6 CIDR\npcx-aaaacccc\nVPC B IPv4 CIDR\npcx-bbbbcccc\nVPC B IPv6 CIDR\npcx-bbbbcccc\nVPC D IPv4 CIDR\npcx-ccccdddd\nVPC D IPv6 CIDR\npcx-ccccdddd\nVPC E IPv4 CIDR\npcx-cccceeee\nVPC E IPv6 CIDR\npcx-cccceeee\nVPC F IPv4 CIDR\npcx-ccccffff\nVPC F IPv6 CIDR\npcx-ccccffff\nVPC G IPv4 CIDR\npcx-ccccgggg\nVPC G IPv6 CIDR\npcx-ccccgggg\nVPC D\nVPC D IPv4 CIDR\nLocal\nVPC D IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaadddd\nVPC A IPv6 CIDR\npcx-aaaadddd\nVPC B IPv4 CIDR\npcx-bbbbdddd\nVPC B IPv6 CIDR\npcx-bbbbdddd\nVPC C IPv4 CIDR\npcx-ccccdddd\nVPC C IPv6 CIDR\npcx-ccccdddd\nVPC E IPv4 CIDR\npcx-ddddeeee\nVPC E IPv6 CIDR\npcx-ddddeeee\nVPC F IPv4 CIDR\npcx-ddddffff\nVPC F IPv6 CIDR\npcx-ddddffff\nVPC G IPv4 CIDR\npcx-ddddgggg\nVPC G IPv6 CIDR\npcx-ddddgggg\nVPC E\nVPC E IPv4 CIDR\nLocal\nVPC E IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaaeeee\nVPC A IPv6 CIDR\npcx-aaaaeeee\nVPC B IPv4 CIDR\npcx-bbbbeeee\nVPC B IPv6 CIDR\npcx-bbbbeeee\nVPC C IPv4 CIDR\npcx-cccceeee\nVPC C IPv6 CIDR\npcx-cccceeee\nVPC D IPv4 CIDR\npcx-ddddeeee\nVPC D IPv6 CIDR\npcx-ddddeeee\nVPC F IPv4 CIDR\npcx-eeeeffff\nVPC F IPv6 CIDR\npcx-eeeeffff\nVPC G IPv4 CIDR\npcx-eeeegggg\nVPC G IPv6 CIDR\npcx-eeeegggg\nVPC F\nVPC F IPv4 CIDR\nLocal\nVPC F IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaaffff\nVPC A IPv6 CIDR\npcx-aaaaffff\nVPC B IPv4 CIDR\npcx-bbbbffff\nVPC B IPv6 CIDR\npcx-bbbbffff\nVPC C IPv4 CIDR\npcx-ccccffff\nVPC C IPv6 CIDR\npcx-ccccffff\nVPC D IPv4 CIDR\npcx-ddddffff\nVPC D IPv6 CIDR\npcx-ddddffff\nVPC E IPv4 CIDR\npcx-eeeeffff\nVPC E IPv6 CIDR\npcx-eeeeffff\nVPC G IPv4 CIDR\npcx-ffffgggg\nVPC G IPv6 CIDR\npcx-ffffgggg\nVPC G\nVPC G IPv4 CIDR\nLocal\nVPC G IPv6 CIDR\nLocal\nVPC A IPv4 CIDR\npcx-aaaagggg\nVPC A IPv6 CIDR\npcx-aaaagggg\nVPC B IPv4 CIDR\npcx-bbbbgggg\nVPC B IPv6 CIDR\npcx-bbbbgggg\nVPC C IPv4 CIDR\npcx-ccccgggg\nVPC C IPv6 CIDR\npcx-ccccgggg\nVPC D IPv4 CIDR\npcx-ddddgggg\nVPC D IPv6 CIDR\npcx-ddddgggg\nVPC E IPv4 CIDR\npcx-eeeegggg\nVPC E IPv6 CIDR\npcx-eeeegggg\nVPC F IPv4 CIDR\npcx-ffffgggg\nVPC F IPv6 CIDR\npcx-ffffgggg\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVPC peering configurations\nRoute to specific addresses\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/peering-configurations-partial-access.html": "VPC peering configurations with specific routes - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nTwo VPCs that access specific subnets in one\n                VPC\nTwo VPCs that access specific CIDR blocks in one\n                VPC\nOne VPC that accesses specific subnets in two\n                VPCs\nInstances in one VPC that access specific instances in\n                two VPCs\nOne VPC that accesses two VPCs using longest prefix\n                matches\nMultiple VPC configurations\nVPC peering configurations with specific routes\nYou can configure route tables for a VPC peering connection to restrict access to a subnet\n        CIDR block, a specific CIDR block (if the VPC has multiple CIDR blocks), or a specific\n        resource in the peer VPC. In these examples, a central VPC is peered to at least two VPCs\n        that have overlapping CIDR blocks.\nFor examples of scenarios in which you might need a specific VPC peering connection \n        configuration, see\nVPC peering scenarios\n. \n        For more information about working with VPC peering connections, see\nWork with VPC peering connections\n. For more information about updating your\n        route tables, see\nUpdate your route tables for a VPC peering connection\n.\nConfigurations\nTwo VPCs that access specific subnets in one\n                VPC\nTwo VPCs that access specific CIDR blocks in one\n                VPC\nOne VPC that accesses specific subnets in two\n                VPCs\nInstances in one VPC that access specific instances in\n                two VPCs\nOne VPC that accesses two VPCs using longest prefix\n                matches\nMultiple VPC configurations\nTwo VPCs that access specific subnets in one\n                VPC\nIn this configuration, there is a central VPC with two subnets (VPC A), a peering\n            connection between VPC A and VPC B (\npcx-aaaabbbb\n), and a peering connection\n            between VPC A and VPC C (\npcx-aaaacccc\n). Each VPC requires access to the\n            resources in only one of the subnets in VPC A.\nThe route table for subnet 1 uses VPC peering connection\npcx-aaaabbbb\nto access the entire CIDR block of VPC B. \n            The route table for VPC B uses\npcx-aaaabbbb\nto access the CIDR block of subnet 1 in VPC A. \n            The route table for subnet 2 uses VPC peering connection\npcx-aaaacccc\nto access the entire CIDR block of VPC C. \n            The route table for VPC C table uses\npcx-aaaacccc\nto access the CIDR block of subnet 2 in VPC A.\nRoute table\nDestination\nTarget\nSubnet 1 (VPC A)\nVPC A CIDR\nLocal\nVPC B CIDR\npcx-aaaabbbb\nSubnet 2 (VPC A)\nVPC A CIDR\nLocal\nVPC C CIDR\npcx-aaaacccc\nVPC B\nVPC B CIDR\nLocal\nSubnet 1 CIDR\npcx-aaaabbbb\nVPC C\nVPC C CIDR\nLocal\nSubnet 2 CIDR\npcx-aaaacccc\nYou can extend this configuration to multiple CIDR blocks. Suppose that VPC A and VPC B \n            have both IPv4 and IPv6 CIDR blocks, and that subnet 1 has an associated IPv6 CIDR block.\n            You can enable VPC B to communicate with subnet 1 in VPC A over IPv6 using the VPC\n            peering connection. To do this, add a route to the route table for VPC A with a\n            destination of the IPv6 CIDR block for VPC B, and a route to the route table for VPC\n            B with a destination of the IPv6 CIDR of subnet 1 in VPC A.\nRoute table\nDestination\nTarget\nNotes\nSubnet 1 in VPC A\nVPC A IPv4 CIDR\nLocal\nVPC A IPv6 CIDR\nLocal\nLocal route that's automatically added for IPv6 communication\n                                within the VPC.\nVPC B IPv4 CIDR\npcx-aaaabbbb\nVPC B IPv6 CIDR\npcx-aaaabbbb\nRoute to the IPv6 CIDR block of VPC B.\nSubnet 2 in VPC A\nVPC A IPv4 CIDR\nLocal\nVPC A IPv6 CIDR\nLocal\nLocal route that's automatically added for IPv6 communication\n                                within the VPC.\nVPC C IPv4 CIDR\npcx-aaaacccc\nVPC B\nVPC B IPv4 CIDR\nLocal\nVPC B IPv6 CIDR\nLocal\nLocal route that's automatically added for IPv6 communication\n                                within the VPC.\nSubnet 1 IPv4 CIDR\npcx-aaaabbbb\nSubnet 2 IPv4 CIDR\npcx-aaaabbbb\nRoute to the IPv6 CIDR block of VPC A.\nVPC C\nVPC C IPv4 CIDR\nLocal\nSubnet 2 IPv4 CIDR\npcx-aaaacccc\nTwo VPCs that access specific CIDR blocks in one\n                VPC\nIn this configuration, there is a central VPC (VPC A), a peering connection between VPC A and \n            VPC B (\npcx-aaaabbbb\n), and a peering connection between VPC A and VPC C\n            (\npcx-aaaacccc\n). VPC A has one CIDR block for each peering connection.\nRoute table\nDestination\nTarget\nVPC A\nVPC A CIDR 1\nLocal\nVPC A CIDR 2\nLocal\nVPC B CIDR\npcx-aaaabbbb\nVPC C CIDR\npcx-aaaacccc\nVPC B\nVPC B CIDR\nLocal\nVPC A CIDR 1\npcx-aaaabbbb\nVPC C\nVPC C CIDR\nLocal\nVPC A CIDR 2\npcx-aaaacccc\nOne VPC that accesses specific subnets in two\n                VPCs\nIn this configuration, there is a central VPC (VPC A) with one subnet, a peering connection\n            between VPC A and VPC B (\npcx-aaaabbbb\n), and a peering connection between\n            VPC A and VPC C (\npcx-aaaacccc\n). VPC B and VPC C each have two subnets. The\n            peering connection between VPC A and VPC B uses only one of the subnets in VPC B. The\n            peering connection between VPC A and VPC C uses only one of the subnets in VPC C.\nUse this configuration when you have a central VPC that has a\n      single set of resources, such as Active Directory services, that other VPCs need to access.\n      The central VPC does not require full access to the VPCs that it's peered with.\nThe route table for VPC A uses the peering connections to access only specific\n      subnets in the peered VPCs. The route table for subnet 1 uses the peering connection \n      with VPC A to access the subnet in VPC A. The route table for subnet 2 uses the peering \n      connection with VPC A to access the subnet in VPC A.\nRoute table\nDestination\nTarget\nVPC A\nVPC A CIDR\nLocal\nSubnet 1 CIDR\npcx-aaaabbbb\nSubnet 2 CIDR\npcx-aaaacccc\nSubnet 1 (VPC B)\nVPC B CIDR\nLocal\nSubnet in VPC A CIDR\npcx-aaaabbbb\nSubnet 2 (VPC C)\nVPC C CIDR\nLocal\nSubnet in VPC A CIDR\npcx-aaaacccc\nRouting for response traffic\nIf you have a VPC peered with multiple VPCs that have overlapping or matching CIDR\n                blocks, ensure that your route tables are configured to avoid sending response\n                traffic from your VPC to the incorrect VPC. AWS does not support unicast reverse\n                path forwarding in VPC peering connections that checks the source IP of packets and\n                routes reply packets back to the source.\nFor example, VPC A is peered with VPC B and VPC C. VPC B and VPC C have matching CIDR\n                blocks, and their subnets have matching CIDR blocks. The route table for subnet 2 in\n                VPC B points to the VPC peering connection\npcx-aaaabbbb\nto access the\n                VPC A subnet. The VPC A route table is configured to send traffic destined for the\n                VPC CIDR to peering connection\npcx-aaaaccccc\n.\nRoute table\nDestination\nTarget\nSubnet 2 (VPC B)\nVPC B CIDR\nLocal\nSubnet in VPC A CIDR\npcx-aaaabbbb\nVPC A\nVPC A CIDR\nLocal\nVPC C CIDR\npcx-aaaacccc\nSuppose that an instance in subnet 2 in VPC B sends traffic to the Active Directory\n                server in VPC A using VPC peering connection\npcx-aaaabbbb\n. VPC A sends\n                the response traffic to Active Directory server. However, the VPC A route table is\n                configured to send all traffic within the VPC CIDR range to VPC peering connection\npcx-aaaacccc\n. If subnet 2 in VPC C has an instance with the same IP\n                address as the instance in subnet two of VPC B, it receives the response traffic\n                from VPC A. The instance in subnet 2 in VPC B does not receive a response to its\n                request to VPC A.\nTo prevent this, you can add a specific route to the VPC A route table with the CIDR of\n                subnet 2 in VPC B as the destination and a target of\npcx-aaaabbbb\n. The\n                new route is more specific, therefore traffic destined for the subnet 2 CIDR is\n                routed to the VPC peering connection\npcx-aaaabbbb\nAlternatively, in the following example, the VPC A route table has a route for\n                each subnet for each VPC peering connection. VPC A can communicate with subnet B in\n                VPC B and with subnet A in VPC C. This scenario is useful if you need to add another\n                VPC peering connection with another subnet that falls within the same address range\n                as VPC B and VPC C \u00e2\u0080\u0094you can simply add another route for that specific\n                subnet.\nDestination\nTarget\nVPC A CIDR\nLocal\nSubnet 2 CIDR\npcx-aaaabbbb\nSubnet 1 CIDR\npcx-aaaacccc\nAlternatively, depending on your use case, you can create a route to a specific IP\n        address in VPC B to ensure that traffic routed back to the correct server (the route table\n        uses longest prefix match to prioritize the routes):\nDestination\nTarget\nVPC A CIDR\nLocal\nSpecific IP address in subnet 2\npcx-aaaabbbb\nVPC B CIDR\npcx-aaaacccc\nInstances in one VPC that access specific instances in\n                two VPCs\nIn this configuration, there is a central VPC (VPC A) with one subnet, a peering\n            connection between VPC A and VPC B (\npcx-aaaabbbb\n), and a peering connection\n            between VPC A and VPC C (\npcx-aaaacccc\n). VPC A has a subnet with one\n            instance for each peering connection. You can use this configuration to limit peering \n            traffic to specific instances.\nEach VPC route table points to the relevant VPC peering connection to access a single\n            IP address (and therefore a specific instance) in the peer VPC.\nRoute table\nDestination\nTarget\nVPC A\nVPC A CIDR\nLocal\nInstance 3 IP address\npcx-aaaabbbb\nInstance 4 IP address\npcx-aaaacccc\nVPC B\nVPC B CIDR\nLocal\nInstance 1 IP address\npcx-aaaabbbb\nVPC C\nVPC C CIDR\nLocal\nInstance 2 IP address\npcx-aaaacccc\nOne VPC that accesses two VPCs using longest prefix\n                matches\nIn this configuration, there is a central VPC (VPC A) with one subnet, a peering connection\n            between VPC A and VPC B (\npcx-aaaabbbb\n), and a peering connection between\n            VPC A and VPC C (\npcx-aaaacccc\n). VPC B and VPC C have matching CIDR blocks.\n            You use VPC peering connection\npcx-aaaabbbb\nto route traffic between VPC A\n            and a specific instance in VPC B. All other traffic destined for the CIDR address range\n            shared by VPC B and VPC C is routed to VPC C through\npcx-aaaacccc\n.\nVPC route tables use longest prefix match to select the most specific route across the\n            intended VPC peering connection. All other traffic is routed through the next matching\n            route, in this case, across the VPC peering connection\npcx-aaaacccc\n.\nRoute table\nDestination\nTarget\nVPC A\nVPC A CIDR block\nLocal\nInstance X IP address\npcx-aaaabbbb\nVPC C CIDR block\npcx-aaaacccc\nVPC B\nVPC B CIDR block\nLocal\nVPC A CIDR block\npcx-aaaabbbb\nVPC C\nVPC C CIDR block\nLocal\nVPC A CIDR block\npcx-aaaacccc\nImportant\nIf an instance other than instance X in VPC B sends traffic to VPC A, the response traffic\n                might be routed to VPC C instead of VPC B. For more information, see\nRouting for response traffic\n.\nMultiple VPC configurations\nIn this configuration, there is a central VPC (VPC A) is peered with multiple VPCs in \n            a spoke configuration. You also have three VPCs (VPCs X, Y, and Z) peered in a full mesh\n            configuration.\nVPC D also has a VPC peering connection with VPC X (\npcx-ddddxxxx\n). VPC A\n            and VPC X have overlapping CIDR blocks. This means that peering traffic between VPC A\n            and VPC D is limited to a specific subnet (subnet 2) in VPC D. This is to ensure that if\n            VPC D receives a request from VPC A or VPC X, it sends the response traffic to the\n            correct VPC. AWS does not support unicast reverse path forwarding in VPC peering\n            connections that checks the source IP of packets and routes reply packets back to the\n            source. For more information, see\nRouting for response traffic\n.\nSimilarly, VPC D and VPC Z have overlapping CIDR blocks. Peering traffic between VPC D\n            and VPC X is limited to subnet 2 in VPC D, and peering traffic between VPC X and VPC Z\n            is limited to subnet 1 in VPC Z. This is to ensure that if VPC X receives peering\n            traffic from VPC D or VPC Z, it sends the response traffic back to the correct VPC.\nThe route tables for VPCs B, C, E, F, and G point to the relevant peering connections\n            to access the full CIDR block for VPC A, and the VPC A route table points to the\n            relevant peering connections for VPCs B, C, E, F, and G to access their full CIDR\n            blocks. For peering connection\npcx-aaaadddd\n, the VPC A route table routes\n            traffic only to subnet 1 in VPC D and the subnet 1 route table in VPC D points to the\n            full CIDR block of VPC A.\nThe VPC Y route table points to the relevant peering connections to access the full\n            CIDR blocks of VPC X and VPC Z, and the VPC Z route table points to the relevant peering\n            connection to access the full CIDR block of VPC Y. The subnet 1 route table in VPC Z\n            points to the relevant peering connection to access the full CIDR block of VPC Y. The\n            VPC X route table points to the relevant peering connection to access subnet 2 in VPC D\n            and subnet 1 in VPC Z.\nRoute table\nDestination\nTarget\nVPC A\nVPC A CIDR\nLocal\nVPC B CIDR\npcx-aaaabbbb\nVPC C CIDR\npcx-aaaacccc\nSubnet 1 CIDR in VPC D\npcx-aaaadddd\nVPC E CIDR\npcx-aaaaeeee\nVPC F CIDR\npcx-aaaaffff\nVPC G CIDR\npcx-aaaagggg\nVPC B\nVPC B CIDR\nLocal\nVPC A CIDR\npcx-aaaabbbb\nVPC C\nVPC C CIDR\nLocal\nVPC A CIDR\npcx-aaaacccc\nSubnet 1 in VPC D\nVPC D CIDR\nLocal\nVPC A CIDR\npcx-aaaadddd\nSubnet 2 in VPC D\nVPC D CIDR\nLocal\nVPC X CIDR\npcx-ddddxxxx\nVPC E\nVPC E CIDR\nLocal\nVPC A CIDR\npcx-aaaaeeee\nVPC F\nVPC F CIDR\nLocal\nVPC A CIDR\npcx-aaaaaffff\nVPC G\nVPC G CIDR\nLocal\nVPC A CIDR\npcx-aaaagggg\nVPC X\nVPC X CIDR\nLocal\nSubnet 2 CIDR in VPC D\npcx-ddddxxxx\nVPC Y CIDR\npcx-xxxxyyyy\nSubnet 1 CIDR in VPC Z\npcx-xxxxzzzz\nVPC Y\nVPC Y CIDR\nLocal\nVPC X CIDR\npcx-xxxxyyyy\nVPC Z CIDR\npcx-yyyyzzzz\nVPC Z\nVPC Z CIDR\nLocal\nVPC Y CIDR\npcx-yyyyzzzz\nVPC X CIDR\npcx-xxxxzzzz\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nRoute to a VPC CIDR block\nVPC peering scenarios\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/peering-scenarios.html": "VPC peering scenarios - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nPeering two or more VPCs to provide full access to\n                resources\nPeering to one VPC to access centralized\n                resources\nVPC peering scenarios\nThere are a number of reasons you might need to set up a VPC peering connection between your\n        VPCs, or between a VPC that you own and a VPC in a different AWS account. The following\n        scenarios can help you determine which configuration is best suited to your networking\n        requirements.\nScenarios\nPeering two or more VPCs to provide full access to\n                resources\nPeering to one VPC to access centralized\n                resources\nPeering two or more VPCs to provide full access to\n                resources\nIn this scenario, you have two or more VPCs that you want to peer to enable full\n            sharing of resources between all VPCs. The following are some examples:\nYour company has a VPC for the finance department, and another VPC for the\n                        accounting department. The finance department requires access to all\n                        resources that are in the accounting department, and the accounting\n                        department requires access to all resources in the finance department.\nYour company has multiple IT departments, each with their own VPC. Some\n                        VPCs are located within the same AWS account, and others in a different AWS\n                        account. You want to peer together all VPCs to enable the IT departments to\n                        have full access to each others' resources.\nFor more information about how to set up the VPC peering connection configuration and\n            route tables for this scenario, see the following documentation:\nTwo VPCs peered together\nThree VPCs peered together\nMultiple VPCs peered together\nFor more information about creating and working with VPC peering\n            connections in the Amazon VPC console, see\nWork with VPC peering connections\n.\nPeering to one VPC to access centralized\n                resources\nIn this scenario, you have a central VPC that contains resources that you want to\n            share with other VPCs. Your central VPC may require full or partial access to the peer\n            VPCs, and similarly, the peer VPCs may require full or partial access to the central\n            VPC. The following are some examples:\nYour company's IT department has a VPC for file sharing. You want to peer\n                        other VPCs to that central VPC, however, you do not want the other VPCs to\n                        send traffic to each other.\nYour company has a VPC that you want to share with your customers. Each\n                        customer can create a VPC peering connection with your VPC, however, your\n                        customers cannot route traffic to other VPCs that are peered to yours, nor\n                        are they aware of the other customers' routes.\nYou have a central VPC that is used for Active Directory services.\n                        Specific instances in peer VPCs send requests to the Active Directory\n                        servers and require full access to the central VPC. The central VPC does not\n                        require full access to the peer VPCs; it only needs to route response\n                        traffic to the specific instances.\nFor more information about creating and working with VPC peering connections in the\n            Amazon VPC console, see\nWork with VPC peering connections\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nRoute to specific addresses\nIdentity and access management\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/security-iam.html": "Identity and access management for VPC peering - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nCreate a VPC peering connection\nAccept a VPC peering connection\nDelete a VPC peering connection\nWork within a specific account\nManage VPC peering connections in the console\nIdentity and access management for VPC peering\nBy default, users cannot create or modify VPC peering connections. To grant access\n        to VPC peering resources, attach an IAM policy to an IAM identity, such as a role.\nExamples\nCreate a VPC peering connection\nAccept a VPC peering connection\nDelete a VPC peering connection\nWork within a specific account\nManage VPC peering connections in the console\nFor a list of Amazon VPC actions, and the supported resources and conditions keys for each action,\n        see\nActions, resources, and condition keys\n            for Amazon EC2\nin the\nService Authorization Reference\n.\nExample: Create a VPC peering connection\nThe following policy grants users permission to create VPC peering connection requests using \n            VPCs that are tagged with\nPurpose=Peering\n. The first statement applies a condition\n            key (\nec2:ResourceTag\n) to the VPC resource. Note that the VPC resource for the\nCreateVpcPeeringConnection\naction is always the requester VPC.\nThe second statement grants users permission to create the VPC peering connection\n            resources, and therefore uses the * wildcard in place of a specific resource ID.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\":[\n{\n\"Effect\":\"Allow\",\n      \"Action\": \"ec2:CreateVpcPeeringConnection\",\n      \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc/*\",\n      \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:ResourceTag/\nPurpose\n\": \"\nPeering\n\"\n        }\n      }\n    },\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateVpcPeeringConnection\",\n      \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc-peering-connection/*\"\n    }\n  ]\n}\nThe following policy grants users in the specified AWS account permission to create VPC \n            peering connections using any VPC in the specified Region, but only if the VPC that accepts\n            the peering connection is a specific VPC in specific account.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\":\"Allow\",\n      \"Action\": \"ec2:CreateVpcPeeringConnection\",\n      \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount-id-1\n:vpc/*\"\n    },\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateVpcPeeringConnection\",\n      \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount-id-1\n:vpc-peering-connection/*\",\n      \"Condition\":\n{\n\"ArnEquals\":\n{\n\"ec2:AccepterVpc\": \"arn:aws:ec2:\nregion\n:\naccount-id-2\n:vpc/\nvpc-id\n\"\n        }\n      }\n    }\n  ]\n}\nExample: Accept a VPC peering connection\nThe following policy grants users permission to accept VPC peering connection requests \n            from a specific AWS account. This helps to prevent users from accepting VPC peering\n            connection requests from unknown accounts. The statement uses the\nec2:RequesterVpc\ncondition key to enforce this.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\":[\n{\n\"Effect\":\"Allow\",\n      \"Action\": \"ec2:AcceptVpcPeeringConnection\",\n      \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount-id-1\n:vpc-peering-connection/*\",\n      \"Condition\":\n{\n\"ArnEquals\":\n{\n\"ec2:RequesterVpc\": \"arn:aws:ec2:\nregion\n:\naccount-id-2\n:vpc/*\"\n        }\n      }\n    }\n  ]\n}\nThe following policy grants users permission to accept VPC peering requests  \n            if the VPC has the tag\nPurpose=Peering\n.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\":[\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"ec2:AcceptVpcPeeringConnection\",\n      \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc/*\",\n      \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:ResourceTag/\nPurpose\n\": \"\nPeering\n\"\n        }\n      }\n    }\n  ]\n}\nExample: Delete a VPC peering connection\nThe following policy grants users in the specified account permission to delete any VPC peering\n            connection, except those that use the specified VPC, which is in the same account. The\n            policy specifies both the\nec2:AccepterVpc\nand\nec2:RequesterVpc\ncondition keys, as the VPC might have been the requester VPC or the peer VPC in the\n            original VPC peering connection request.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\":\"Allow\",\n      \"Action\": \"ec2:DeleteVpcPeeringConnection\",\n      \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc-peering-connection/*\",\n      \"Condition\":\n{\n\"ArnNotEquals\":\n{\n\"ec2:AccepterVpc\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc/\nvpc-id\n\",\n          \"ec2:RequesterVpc\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc/\nvpc-id\n\"\n        }\n      }\n    }\n  ]\n}\nExample: Work within a specific account\nThe following policy grants users permission to work with VPC peering connections  \n            within a specific account. Users can view, create, accept, reject, and delete VPC peering\n            connections, provided they are all within the same AWS account.\nThe first statement grants users permission to view all VPC peering connections. The\nResource\nelement requires a * wildcard in this case, as this API action\n            (\nDescribeVpcPeeringConnections\n) currently does not support resource-level\n            permissions.\nThe second statement grants users permission to create VPC peering connections, and \n            access to all VPCs in the specified account in order to do so.\nThe third statement uses a * wildcard as part of the\nAction\nelement to\n            grant permission for all VPC peering connection actions. The condition keys ensure that the actions can\n            only be performed on VPC peering connections with VPCs that are part of the account. For\n            example, a user is cannot delete a VPC peering connection if either the accepter\n            or requester VPC is in a different account. A user cannot create a VPC peering\n            connection with a VPC in a different account.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"ec2:DescribeVpcPeeringConnections\",\n      \"Resource\": \"*\"\n    },\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\"ec2:CreateVpcPeeringConnection\",\"ec2:AcceptVpcPeeringConnection\"],\n      \"Resource\": \"arn:aws:ec2:*:\naccount-id\n:vpc/*\"\n    },\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"ec2:*VpcPeeringConnection\",\n      \"Resource\": \"arn:aws:ec2:*:\naccount-id\n:vpc-peering-connection/*\",\n      \"Condition\":\n{\n\"ArnEquals\":\n{\n\"ec2:AccepterVpc\": \"arn:aws:ec2:*:\naccount-id\n:vpc/*\",\n          \"ec2:RequesterVpc\": \"arn:aws:ec2:*:\naccount-id\n:vpc/*\"\n        }\n      }\n    }\n  ]\n}\nExample: Manage VPC peering connections\n                using the console\nTo view VPC peering connections in the Amazon VPC console, users must have permission to\n            use the\nec2:DescribeVpcPeeringConnections\naction. To use the\nCreate Peering Connection\npage, users must have permission to\n            use the\nec2:DescribeVpcs\naction. This grants them permission to view and select a VPC.\n            You can apply resource-level permissions to all the\nec2:*PeeringConnection\nactions, except\nec2:DescribeVpcPeeringConnections\n.\nThe following policy grants users permission to view VPC peering connections, and to use the\nCreate VPC Peering Connection\ndialog box to create a VPC\n            peering connection using a specific requester VPC only. If users try to create a VPC\n            peering connection with a different requester VPC, the request fails.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\":\"Allow\",\n      \"Action\": [\n        \"ec2:DescribeVpcPeeringConnections\", \"ec2:DescribeVpcs\"\n      ],\n      \"Resource\": \"*\"\n    },\n{\n\"Effect\":\"Allow\",\n      \"Action\": \"ec2:CreateVpcPeeringConnection\",\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:vpc/\nvpc-id\n\",\n        \"arn:aws:ec2:*:*:vpc-peering-connection/*\"\n      ]\n    }\n  ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVPC peering scenarios\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-connection-quotas.html": "VPC peering connection quotas - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nVPC peering connection quotas\nThe following table lists the quotas, formerly referred to as limits, for VPC peering\n        connections for your AWS account. Unless indicated otherwise, you can request an increase \n        for these quotas.\nName\nDefault\nAdjustable\nActive VPC peering connections per VPC\n50\nYes\n(up to 125)\nOutstanding VPC peering connection requests\n25\nYes\nExpiry time for an unaccepted VPC peering connection request\n1 week (168 hours)\nNo\nFor more information about the rules for using VPC peering connections, see\nVPC peering limitations\n.\nFor additional quotas for Amazon VPC, see\nAmazon VPC quotas\nin the\nAmazon VPC User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIdentity and access management\nDocument history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/peering/doc-history.html": "Document history for the Amazon VPC Peering Guide - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nVPC Peering\nDocument history for the Amazon VPC Peering Guide\nThe following table describes the documentation releases for the\nAmazon VPC Peering Guide\n.\nChange\nDescription\nDate\nTag on create\nYou can add tags when you create a VPC peering connection and route\n        table.\nJuly 20, 2020\nInter-Region peering\nDNS hostname resolution is supported for inter-Region VPC peering connections\n        in the Asia Pacific (Hong Kong) Region.\nAugust 26, 2019\nInter-Region peering\nYou can create a VPC peering connection between VPCs in different AWS\n        Regions.\nNovember 29, 2017\nDNS resolution support for VPC peering\nYou can enable a local VPC to resolve public DNS hostnames to private IP\n        addresses when queried from instances in the peer VPC.\nJuly 28, 2016\nStale security group rules\nYou can identify if your security group is being referenced in the rules of a\n        security group in a peer VPC and you can identify stale security group\n        rules.\nMay 12, 2016\nUsing ClassicLink over a VPC peering connection\nYou can modify your VPC peering connection to enable local linked EC2-Classic\n        instances to communicate with instances in a peer VPC, or vice versa.\nApril 26, 2016\nVPC peering\nYou can create a VPC peering connection between two VPCs, which allows\n        instances in either VPC to communicate with each other using private IP\n        addresses\nMarch 24, 2014\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/what-is-traffic-mirroring.html": "What is Traffic Mirroring? - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nTraffic Mirroring concepts\nWork with Traffic Mirroring\nTraffic Mirroring benefits\nPricing\nWhat is Traffic Mirroring?\nTraffic Mirroring is an Amazon VPC feature that you can use to copy network traffic from an elastic network\n    interface of type\ninterface\n. You can then send the traffic to out-of-band security\n    and monitoring appliances for:\nContent inspection\nThreat monitoring\nTroubleshooting\nThe security and monitoring appliances can be deployed as individual instances, or as a\n    fleet of instances behind either a Network Load Balancer or a Gateway Load Balancer with a UDP listener. Traffic Mirroring supports filters\n    and packet truncation, so that you can extract only the traffic of interest, using the \n    monitoring tools of your choice.\nTraffic Mirroring concepts\nThe following are the key concepts for Traffic Mirroring:\nSource\n\u00e2\u0080\u0094 The network interface to monitor.\nFilter\n\u00e2\u0080\u0094 A set of rules that defines the traffic\n          that is mirrored.\nTarget\n\u00e2\u0080\u0094 The destination for mirrored traffic.\nSession\n\u00e2\u0080\u0094 Establishes a relationship between a \n          source, a filter, and a target.\nWork with Traffic Mirroring\nYou can create, access, and manage your traffic mirror resources using any of the\n      following:\nAWS Management Console\n\u00e2\u0080\u0094 Provides a web interface that you\n          can use to access your traffic mirror resources.\nAWS Command Line Interface (AWS CLI)\n\u00e2\u0080\u0094 Provides commands for a\n          broad set of AWS services, including Amazon VPC. The AWS CLI is supported on Windows, macOS, and\n          Linux. For more information, see\nAWS Command Line Interface\n.\nAWS SDKs\n\u00e2\u0080\u0094 Provide language-specific APIs.\n          The AWS SDKs take care of many of the connection details, such as calculating\n          signatures, handling request retries, and handling errors. For more information, see\nAWS SDKs\n.\nQuery API\n\u00e2\u0080\u0094 Provides low-level API actions that\n          you call using HTTPS requests. Using the Query API is the most direct way to access Amazon VPC.\n          However, it requires that your application handle low-level details such as generating the\n          hash to sign the request and handling errors. For more information, see\nAmazon VPC actions\nin the\nAmazon EC2 API Reference\n.\nTraffic Mirroring benefits\nTraffic Mirroring offers the following benefits:\nSimplified operation\n\u00e2\u0080\u0094 Mirror any range of\n          your VPC traffic without having to manage packet forwarding agents on your EC2\n          instances.\nEnhanced security\n\u00e2\u0080\u0094 Capture packets at the\n          elastic network interface, which cannot be disabled or tampered with from a user\n          space.\nIncreased monitoring options\n\u00e2\u0080\u0094 Send your\n          mirrored traffic to any security device.\nPricing\nYou are charged on an hourly basis for each active traffic mirror session. You'll continue \n      to be charged for Traffic Mirroring until you delete all active traffic mirror sessions. For example, you'll\n      still be charged in the following scenarios:\nYou detached the network interface from the mirror source\nYou stopped or terminated the mirror source\nYou changed the instance type of the mirror source to an unsupported instance type\nFor the steps to delete a traffic mirror session, see\nDelete a traffic mirror session\n.\nFor information about pricing for Traffic Mirroring, see\nNetwork Analysis\non\n      the\nAmazon VPC pricing\npage.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow Traffic Mirroring works\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-how-it-works.html": "How Traffic Mirroring works - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nHow Traffic Mirroring works\nTraffic Mirroring copies inbound and outbound traffic from the network interfaces that are attached to\n    your instances. You can send the mirrored traffic to the network interface of another  \n    instance, a Network Load Balancer that has a UDP listener, or a Gateway Load Balancer that has a UDP listener. The traffic mirror\n    source and the traffic mirror target (monitoring appliance) can be in the same VPC. Or they can\n    be in a different VPCs that are connected through intra-Region VPC peering, a transit gateway, or by a\n    Gateway Load Balancer endpoint to connect to a Gateway Load Balancer in a different VPC.\nConsider the following scenario, where you mirror traffic from two sources (Source A and\n    Source B) to a single traffic mirror target (Target D). After you create the traffic mirror session, \n    any traffic that matches the filter rules is encapsulated in a VXLAN header. It is then sent to \n    the target.\nThe following procedures are required:\nIdentify the traffic mirror source (Source A)\nIdentify the traffic mirror source (Source B)\nConfigure the  traffic mirror target (Target D)\nConfigure the traffic mirror filter (Filter A)\nConfigure the traffic mirror session for Source A, Filter A, and Target D\nConfigure the traffic mirror session for Source B, Filter A, and Target D\nContents\nTargets\nFilters\nSessions\nConnectivity options\nPacket format\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWhat is Traffic Mirroring?\nTargets\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-targets.html": "Traffic mirror target concepts - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nNetwork interfaces\nNetwork Load Balancer\nGateway Load Balancer endpoints\nVXLAN encapsulation\nRouting and security groups\nProcessing mirrored traffic\nTraffic mirror target concepts\nA\ntraffic mirror target\nis the destination for mirrored traffic.\nYou can use the following resources as traffic mirror targets:\nNetwork interfaces\nof type\ninterface\nNetwork Load Balancers\nGateway Load Balancer endpoints\nFor high availability, we recommend that you use a Network Load Balancer or a Gateway Load Balancer endpoint as a mirror target.\nYou might experience out-of-order delivery of mirrored packets when you use a\n    Network Load Balancer or Gateway Load Balancer endpoint as your traffic mirror target. If your monitoring appliance can't \n    handle out-of-order packets, we recommend using a network interface as your traffic \n    mirror target.\nA traffic mirror target can be owned by an AWS account that is different from the\n    traffic mirror source. For more information, see\nCross-account targets\n.\nAfter you create a traffic mirror target, you add it to a traffic mirror session. \n    You can use a traffic mirror target in more than one traffic mirror session. For more information,\n    see\nTraffic mirror session concepts\n.\nNetwork interfaces\nThe following diagram shows a traffic mirror session where the traffic mirror target is a\n      network interface for an EC2 instance. Traffic Mirroring filters the traffic from the network interface of\n      the mirror source and sends the accepted mirrored traffic to the mirror target.\nNetwork Load Balancer\nThe following diagram shows a traffic mirror session where the traffic mirror target is a\n      Network Load Balancer. You install the monitoring software on the target instances, and then register them\n      with the load balancer. Traffic Mirroring filters the traffic from the network interface of the mirror\n      source and sends the accepted mirrored traffic to the load balancer. The load balancer sends\n      the mirrored traffic to the target instances.\nConsiderations\nTraffic mirroring can't occur unless the load balancer has UDP listeners on port 4789.\n          If you remove the UDP listeners, Traffic Mirroring fails without an error indication.\nTo improve availability and fault tolerance, we recommend that you select at least \n          two Availability Zones when you create the Network Load Balancer, and that you register target \n          instances in each selected Availability Zone.\nWe recommend that you enable cross-zone load balancing for your Network Load Balancer. If all\n          registered target instances in an Availability Zone become unhealthy and cross-zone load\n          balancing is disabled, the load balancer can't send the mirrored traffic to target\n          instances in another Availability Zone. If you enable cross-zone load balancing, the load\n          balancer can send the mirrored traffic to healthy target instances in another Availability\n          Zone.\nIf you select an additional Availability Zone for your Network Load Balancer after you create it,\n          Traffic Mirroring does not send mirrored traffic to target instances in the new Availability Zone \n          unless you enable cross-zone load balancing.\nWhen the Network Load Balancer removes a load balancer node from the DNS table, Traffic Mirroring continues to send\n          the mirrored traffic to that node.\nGateway Load Balancer endpoints\nThe following diagram shows a traffic mirror session where the traffic mirror target is a\n      Gateway Load Balancer endpoint. The mirror source is in the service consumer VPC and the Gateway Load Balancer is in the service\n      provider VPC. You install the monitoring software on the target appliances, and then register\n      them with the load balancer. Traffic Mirroring filters the traffic from the network interface of the mirror\n      source and sends the accepted mirrored traffic to the Gateway Load Balancer endpoint. The load balancer sends the\n      mirrored traffic to the target appliances.\nConsiderations\nA listener for Gateway Load Balancers listens for all IP packets across all ports, and then forwards\n          traffic to the target group.\nTo improve availability and fault tolerance, we recommend that you select at least \n          two Availability Zones when you create the Gateway Load Balancer, and that you register target \n          appliances in each selected Availability Zone.\nIf all registered target appliances in an Availability Zone become unhealthy and \n          cross-zone load balancing is disabled, the load balancer can't send the mirrored traffic \n          to target appliances in another Availability Zone. If you enable cross-zone load balancing, \n          the load balancer can send the mirrored traffic to healthy target appliances in another \n          Availability Zone.\nThe maximum MTU supported by the Gateway Load Balancer is 8500. Traffic Mirroring adds 54 bytes of \n          additional headers to the original packet payload when using IPv4, and\n          74 bytes when using IPv6. Therefore, the maximum packet size that can be\n          delivered to an appliance without truncation is\n8500 \u00e2\u0080\u0093 54 = 8446\nwhen using IPv4, or\n8500 \u00e2\u0080\u0093 74 = 8426\nwhen using IPv6.\nYou can use the\nBytesProcessed\nand\nPacketsDropped\nCloudWatch metrics for VPC endpoints to monitor the volume of traffic being sent over the \n          Gateway Load Balancer endpoint. You can also use CloudWatch metrics for Traffic Mirroring. For more information, see\nMonitor mirrored traffic using Amazon CloudWatch\n.\nVXLAN encapsulation\nMirrored traffic is encapsulated in VXLAN packets and then routed to the mirror target.\n      The security groups for a traffic mirror target must allow VXLAN traffic (UDP port 4789) from\n      the traffic mirror source. The route table for the subnet with the traffic mirror source must\n      have a route that sends the mirrored traffic to the traffic mirror target. The monitoring\n      software that you run on the mirror target must be able to process encapsulated VXLAN\n      packets.\nRouting and security groups\nEncapsulated mirror traffic is routed to the traffic mirror target by using the VPC route\n      table. Make sure that your route table is configured to send the mirrored traffic to the\n      traffic mirror target.\nInbound traffic that is dropped at the traffic mirror source, because of the inbound\n      security group rules or the inbound network ACL rules, is not mirrored.\nMirrored outbound traffic is not subject to the outbound security group rules for the\n      traffic mirror source.\nProcessing mirrored traffic\nYou can use open-source tools or choose a monitoring solution available on\nAWS Marketplace\n. You can stream mirrored\n      traffic to any network packet collector or analytics tool, without having to install \n      vendor-specific agents.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow Traffic Mirroring works\nFilters\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-sessions.html": "Traffic mirror session concepts - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nTraffic mirror sources\nTraffic mirror session concepts\nA\ntraffic mirror session\nestablishes a relationship between a traffic mirror\n    source and a traffic mirror target. Traffic mirror sessions are evaluated based on the ascending \n    session number that you define when you create the session.\nA traffic mirror session contains the following resources:\nA traffic mirror\nsource\nA traffic mirror\ntarget\nA traffic mirror\nfilter\nEach packet is mirrored once. However, you can use multiple traffic mirror sessions on\n    the same mirror source. This is useful if you want to send a subset of the mirrored traffic\n    from a traffic mirror source to multiple tools. For example, you can filter HTTP traffic in a\n    higher priority traffic mirror session and send it to a specific monitoring appliance. At the\n    same time, you can filter all other TCP traffic in a lower priority traffic mirror session and\n    send it to another monitoring appliance.\nTraffic mirror sources\nA traffic mirror source is the network interface of type\ninterface\n. For example, \n      a network interface for an EC2 instance or an RDS instance.\nA network interface can't be a traffic mirror target and a traffic mirror source in\n      the same traffic mirror session.\nTraffic Mirroring is not available on all instance types.\nInstance types\nTraffic Mirroring is not available on the following virtualized Nitro instance types:\nGeneral purpose: M6a, M6i, M6in, M7g, M7i, M7i-flex\nCompute optimized: C6a, C6gn, C6i, C6id, C6in, C7g, Hpc6a\nMemory optimized: R6a, R6i, R6id, R6idn, R6in, R7g, R7iz, X2idn, X2iedn, X2iezn\nStorage optimized:  I4g, I4i, Im4gn, Is4gen\nAccelerated computing:  Inf2, Trn1\nTraffic Mirroring is not available on bare metal instances.\nTraffic Mirroring is available only on the following non-Nitro instances types:\n                    C4, D2, G3, G3s, H1, I3, M4, P2, P3, R4, X1, and X1e. Note that this does not include T2 instances.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nFilters\nConnectivity options\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-connection.html": "Traffic mirror source and target connectivity options - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nTraffic mirror source and target connectivity options\nThe traffic mirror source and the traffic mirror target (monitoring appliance) can be in the\n    same VPC, or different VPCs, connected using an intra-Region VPC peering connection or with a\n    transit gateway using a Gateway Load Balancer endpoint to connect to a Gateway Load Balancer in a different VPC.\nThe traffic mirror target can be owned by an AWS account that is different from the\n    traffic mirror source.\nThe mirrored traffic is sent to the traffic mirror target using the source VPC route table.\n    Before you configure Traffic Mirroring, make sure that the traffic mirror source can route to the\n    traffic mirror target.\nThe following table describes the available resource configurations.\nSource owner\nSource VPC\nTarget owner\nTarget VPC\nConnectivity option\nAccount A\nVPC 1\nAccount A\nVPC1\nNo additional configuration\nAccount A\nVPC 1\nAccount A\nVPC 2\nIntra-Region peering or a transit gateway or Gateway Load Balancer endpoint\nAccount A\nVPC 1\nAccount B\nVPC 2\nCross-account intra-Region peering connection, a transit gateway, or a Gateway Load Balancer endpoint\nAccount A\nVPC 1\nAccount B\nVPC 1\nVPC sharing\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSessions\nPacket format\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-packet-formats.html": "Traffic Mirroring packet format - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nTraffic Mirroring packet format\nMirrored traffic is encapsulated with a VXLAN header. All appliances that receive traffic\n    directly with this feature should be able parse a VXLAN-encapsulated packet, as shown in the\n    following example:\nFor more information about the VXLAN protocol, see\nRFC 7348\n.\nThe following fields apply to Traffic Mirroring:\nVXLAN ID\n\u00e2\u0080\u0094 The virtual network ID that you can assign\n        to a traffic mirror session. If you do not assign a value, we assign a random value that is\n        unique to all sessions in the account.\nSource IP address\n\u00e2\u0080\u0094  The primary IP address of the\n        source network interface.\nSource port\n\u00e2\u0080\u0094 The port is determined by a 5-tuple hash\n        of the original L2 packet, for ICMP, TCP, and UDP flows. For other flows, the port is\n        determined by a 3-tuple hash of the original L2 packet.\nDestination IP address\n\u00e2\u0080\u0094 The primary IP address \n         of the appliance, Gateway Load Balancer endpoint, or Network Load Balancer (when the appliance is deployed behind one).\nDestination port\n\u00e2\u0080\u0094 The port is 4789, which is the well\n        known port for VXLAN.\nAppliances that received mirrored traffic through a Gateway Load Balancer should be able to parse both outer\n    GENEVE encapsulation (from Gateway Load Balancer) and an inner VXLAN encapsulation (from VPC Traffic Mirroring) to retrieve the\n    original L3 packet. The following shows an example:\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConnectivity options\nGet started\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-getting-started.html": "Get started with Traffic Mirroring - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nPrerequisites\nStep 1: Create the traffic mirror target\nStep 2: Create the traffic mirror\n        filter\nStep 3: Create the traffic mirror\n        session\nStep 4: Analyze the data\nGet started with Traffic Mirroring\nTo get started with Traffic Mirroring, we'll explore traffic mirror targets, filters, and sessions.\nA mirror session is a connection between a mirror source and a mirror target. In the\n    following diagram, both the mirror source and the mirror target are EC2 instances. The mirror\n    filter determines which network packets are mirrored. For example, you can add inbound and\n    outbound rules to the filter such that it rejects SSH traffic but accepts all other traffic.\n    Traffic Mirroring applies the filter rules, and then copies the accepted traffic from the network interface\n    of the mirror source to the network interface of the mirror target. You can run your capture and\n    analysis tools on the packets delivered to the mirror target.\nTasks\nPrerequisites\nStep 1: Create the traffic mirror target\nStep 2: Create the traffic mirror\n        filter\nStep 3: Create the traffic mirror\n        session\nStep 4: Analyze the data\nPrerequisites\nThe traffic mirror source and traffic mirror target must be in the same VPC or\n          in VPCs that are connected (for example, using VPC peering or a transit gateway).\nThe traffic mirror target must allow traffic to UDP port 4789.\nThe traffic mirror source must have a route table entry for the\n          traffic mirror target.\nSecurity group rules and network ACL rules on the traffic mirror target cannot\n          drop the mirrored traffic from the traffic mirror source.\nStep 1: Create the traffic mirror target\nCreate a destination for the mirrored traffic.\nTo create a traffic mirror target\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the\nRegion\nselector, choose the AWS Region that you used\n          when you created the mirror target.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror targets\n.\nChoose\nCreate traffic mirror target\n.\n(Optional) For\nName tag\n, enter a name for the traffic mirror\n          target.\n(Optional) For\nDescription\n, enter a description for the traffic mirror\n          target.\nFor\nTarget type\n, choose\nNetwork\n          Interface\n.\nFor\nTarget\n, choose the network interface of the instance.\n(Optional) For each tag to add, choose\nAdd new tag\nand enter the tag key \n          and tag value.\nChoose\nCreate\n.\nStep 2: Create the traffic mirror\n        filter\nA traffic mirror filter contains one or more traffic mirror rules, and a set of network\n      services. The filters and rules that you add define the traffic that is mirrored.\nTo create a traffic mirror filter\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror filters\n.\nChoose\nCreate traffic mirror filter\n.\n(Optional For\nName tag\n, enter a name for the traffic mirror\n          filter.\n(Optional) For\nDescription\n,  enter a description for the traffic mirror\n          filter.\nFor each rule, inbound or outbound, choose\nAdd rule\n, and then\n          specify the following information:\nNumber\n: The rule priority.\nRule action\n: Indicates whether to accept or reject the\n              packets.\nProtocol\n: The protocol.\n(Optional)\nSource port range\n: The source port range.\n(Optional)\nDestination port range\n: The destination port\n              range.\nSource CIDR block\n: The source CIDR block.\nDestination CIDR block\n: The destination CIDR block.\nDescription\n: A description for the rule.\n(Optional) For each tag to add, choose\nAdd new tag\nand enter the tag key \n          and tag value.\nChoose\nCreate\n.\nStep 3: Create the traffic mirror\n        session\nCreate a traffic mirror session that sends mirrored packets from the source to a target so\n      that you can monitor and analyze traffic.\nTo create a traffic mirror session\nIn the navigation pane, choose\nTraffic Mirroring\n,\nMirror\n            sessions\n.\nChoose\nCreate traffic mirror session\n.\n(Optional) For\nName tag\n, enter a name for the traffic mirror\n          session.\n(Optional) For\nDescription\n, enter a description for the traffic mirror\n          session.\nFor\nMirror source\n, choose the network interface of the mirror\n          source.\nFor\nMirror target\n, choose your traffic mirror target.\nFor\nAdditional settings\n, do the following:\nFor\nSession number\n, enter\n1\n, which is\n              the highest priority.\n(Optional) For\nVNI\n, enter the VXLAN ID to use for the traffic mirror\n              session. For more information about the VXLAN protocol, see\nRFC 7348\n.\nIf you do not enter a value, we assign a random unused number.\n(Optional) For\nPacket length\n, enter the number of bytes in\n              each packet to mirror.\nTo mirror the entire packet, do not enter a value. To mirror only a portion of \n              each packet, set this value to the number of bytes to mirror. For example, if you \n              set this value to 100, the first 100 bytes after the VXLAN header that meet the \n              filter criteria are copied to the target.\nFor\nFilter\n, choose your traffic mirror filter.\n(Optional) For each tag to add, choose\nAdd new tag\nand enter the tag key \n          and tag value.\nChoose\nCreate\n.\nStep 4: Analyze the data\nAfter the mirrored traffic is copied to the traffic mirror target, you can use a tool from\n      the\nAWS Partner Network\nto analyze the data.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPacket format\nTraffic Mirroring examples\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/Traffic_Mirroring_Scenarios.html": "Traffic Mirroring examples - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nTraffic Mirroring examples\nThe following are common use cases for Traffic Mirroring:\nMirror inbound TCP traffic to a single appliance\nMirror inbound TCP and UDP traffic to multiple appliances\nMirror non-local VPC traffic\nMirror traffic to a Gateway Load Balancer endpoint\nTo mirror traffic from multiple network interfaces, see\nVPC Traffic Mirroring Source Automation Application\non github.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGet started\nMirror inbound TCP traffic to a single appliance\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/tm-example-inbound-tcp.html": "Example: Mirror inbound TCP traffic to a single monitoring appliance - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nStep 1: Create a traffic mirror target\nStep 2: Create a traffic mirror filter\nStep 3: Create a traffic mirror session\nExample: Mirror inbound TCP traffic to a single monitoring appliance\nConsider the scenario where you want to mirror inbound TCP traffic on an instance, and send\n    it to a single monitoring appliance. You need the following traffic mirror resources for this\n    example:\nA traffic mirror target for the appliance (Target A)\nA traffic mirror filter with a traffic mirror rule for the TCP inbound traffic (Filter 1)\nA traffic mirror session that has the following:\nA traffic mirror source\nA traffic mirror target for the appliance\nA traffic mirror filter with a traffic mirror rule for the TCP inbound traffic\nStep 1: Create a traffic mirror target\nCreate a traffic mirror target (Target A) for the monitoring appliance. Depending on your\n      configuration, the target is one of the following types:\nThe network interface of the monitoring appliance\nThe Network Load Balancer when the appliance is deployed behind one\nThe Gateway Load Balancer endpoint when the appliance is deployed behind a Gateway Load Balancer\nFor more information, see\nCreate a traffic mirror target\n.\nStep 2: Create a traffic mirror filter\nCreate a traffic mirror filter (Filter 1) that has the following inbound rule. For more information,\n      see\nCreate a traffic mirror filter\n.\nTraffic mirror filter rule for inbound TCP traffic\nOption\nValue\nRule action\nAccept\nProtocol\nTCP\nSource port range\nDestination port range\nSource CIDR block\n0.0.0.0/0\nDestination CIDR block\n0.0.0.0/0\nDescription\nTCP Rule\nStep 3: Create a traffic mirror session\nCreate and configure a traffic mirror session with the following options. For more\n      information, see\nCreate a traffic mirror session\n.\nTraffic mirror session to monitor inbound TCP traffic\nOption\nValue\nMirror source\nThe network interface of the instance that you want to monitor.\nMirror target\nTarget A\nFilter\nFilter 1\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTraffic Mirroring examples\nMirror inbound TCP and UDP traffic to multiple appliances\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/tm-example-inbound-tcp-udp.html": "Example: Mirror inbound TCP and UDP traffic to multiple appliances - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nStep 1: Create a traffic mirror target for appliance\n        a\nStep 2: Create a traffic mirror target for appliance\n        b\nStep 3: Create a traffic mirror filter with a rule\n        for TCP traffic\nStep 4: Create a traffic mirror filter with a rule\n        for UDP traffic\nStep 5: Create a traffic mirror session for the TCP\n        traffic\nStep 6: Create a traffic mirror session for the UDP\n        traffic\nExample: Mirror inbound TCP and UDP traffic to multiple appliances\nConsider the scenario where you want to mirror inbound TCP and UDP traffic on an instance.\n    But you want to send the TCP traffic to one appliance (Appliance A), and the UDP traffic to a\n    second appliance (Appliance B). You need the following traffic mirror entities for this\n    example:\nA traffic mirror target for Appliance A (Target A)\nA traffic mirror target for Appliance B (Target B)\nA traffic mirror filter with a traffic mirror rule for the TCP inbound traffic (Filter 1)\nA traffic mirror filter with a traffic mirror rule for the UDP inbound traffic (Filter 2)\nA traffic mirror session that has the following:\nA traffic mirror source\nA traffic mirror target (Target A) for Appliance A\nA traffic mirror filter (Filter 1) with a traffic mirror rule for the TCP inbound\n            traffic\nA traffic mirror session that has the following:\nA traffic mirror source\nA traffic mirror target (Target B) for Appliance B\nA traffic mirror filter (Filter 2) with a traffic mirror rule for the UDP inbound\n            traffic\nStep 1: Create a traffic mirror target for appliance\n        a\nCreate a traffic mirror target for Appliance A (Target A). Depending on your configuration,\n      the target is one of the following types:\nThe network interface of the monitoring appliance\nThe Network Load Balancer when the appliance is deployed behind one\nThe Gateway Load Balancer endpoint when the appliance is deployed behind a Gateway Load Balancer\nFor more information, see\nCreate a traffic mirror target\n.\nStep 2: Create a traffic mirror target for appliance\n        b\nCreate a traffic mirror target (Target B) for Appliance B. Depending on your configuration,\n      the target is one of the following types:\nThe network interface of the monitoring appliance\nThe Network Load Balancer when the appliance is deployed behind one\nThe Gateway Load Balancer endpoint when the appliance is deployed behind a Gateway Load Balancer\nFor more information, see\nCreate a traffic mirror target\n.\nStep 3: Create a traffic mirror filter with a rule\n        for TCP traffic\nCreate a traffic mirror filter (Filter 1) with the following inbound rule for TCP traffic. For more\n      information, see\nCreate a traffic mirror filter\nTraffic mirror filter rule for inbound TCP traffic\nOption\nValue\nRule action\nAccept\nProtocol\nTCP\nSource port range\nDestination port range\nSource CIDR block\n0.0.0.0/0\nDestination CIDR block\n0.0.0.0/0\nDescription\nTCP Rule\nStep 4: Create a traffic mirror filter with a rule\n        for UDP traffic\nCreate a traffic mirror filter (Filter 2) with the following inbound rule for UDP traffic. For more\n      information, see\nCreate a traffic mirror filter\nTraffic mirror filter rule for inbound UDP traffic\nOption\nValue\nRule action\nAccept\nProtocol\nUDP\nSource port range\nDestination port range\nSource CIDR block\n0.0.0.0/0\nDestination CIDR block\n0.0.0.0/0\nDescription\nUDP Rule\nStep 5: Create a traffic mirror session for the TCP\n        traffic\nCreate and configure a traffic mirror session with the following options. For more\n      information, see\nCreate a traffic mirror session\n.\nTraffic mirror session to monitor inbound TCP traffic\nOption\nValue\nMirror source\nThe network interface of the instance that you want to monitor.\nMirror target\nTarget A\nFilter\nFilter 1\nSession number\n1\nStep 6: Create a traffic mirror session for the UDP\n        traffic\nCreate and configure a traffic mirror session with the following options. For more\n      information, see\nCreate a traffic mirror session\n.\nTraffic mirror session to monitor inbound UDP traffic\nOption\nValue\nMirror source\nThe network interface of the instance that you want to monitor.\nMirror target\nTarget B\nFilter\nFilter 2\nSession number\n2\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMirror inbound TCP traffic to a single appliance\nMirror non-local VPC traffic\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/tm-example-non-vpc.html": "Example: Mirror non-local VPC traffic - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nStep 1: Create a traffic mirror target\nStep 2: Create a traffic mirror filter\nStep 3: Create a traffic mirror session\nExample: Mirror non-local VPC traffic\nConsider the scenario where you want to monitor traffic leaving your VPC or traffic whose\n    source is outside your VPC. In this case, you will mirror all traffic except traffic passing\n    within your VPC and send it to a single monitoring appliance. You need the following traffic\n    mirror resources:\nA traffic mirror target for the appliance (Target A)\nA traffic mirror filter that has two sets of rules for outbound and inbound traffic. For\n        outbound traffic, it will reject all packets which have a destination IP in the VPC CIDR\n        block and accept all other outbound packets. For inbound traffic, it will reject all packets\n        which have a source IP in the VPC CIDR block and accept all other inbound packets.\nA traffic mirror session that has the following:\nA traffic mirror source\nA traffic mirror target for the appliance (Target A)\nA traffic mirror filter with a traffic mirror rule for the TCP inbound traffic (Filter\n            F)\nIn this example, the VPC CIDR block is 10.0.0.0/16.\nStep 1: Create a traffic mirror target\nCreate a traffic mirror target (Target A) for the monitoring appliance. Depending on your\n      configuration, the target is one of the following types:\nThe network interface of the monitoring appliance\nThe Network Load Balancer when the appliance is deployed behind one\nThe Gateway Load Balancer endpoint when the appliance is deployed behind a Gateway Load Balancer\nFor more information, see\nCreate a traffic mirror target\n.\nStep 2: Create a traffic mirror filter\nCreate a traffic mirror filter (Filter F) that has the following rules. For more\n      information, see\nCreate a traffic mirror filter\n.\nOutbound traffic mirror filter rules\nCreate the following outbound rules:\nReject all outbound packets which have a destination IP in the VPC CIDR block\nAccept all other outbound packets (destination CIDR block 0.0.0.0/0)\nOption\nValue\nRule number\n10\nRule action\nReject\nProtocol\nAll\nSource port range\nDestination port range\nSource CIDR block\n0.0.0.0/0\nDestination CIDR block\n10.0.0.0/16\nDescription\nReject all intra-VPC traffic\nOption\nValue\nRule number\n20\nRule action\nAccept\nProtocol\nAll\nSource port range\nDestination port range\nSource CIDR block\n0.0.0.0/0\nDestination CIDR block\n0.0.0.0/0\nDescription\nAccept all outbound traffic\nInbound traffic mirror filter rules\nCreate the following inbound rules:\nReject all inbound packets which have a source IP in the VPC CIDR block\nAccept all other inbound packets (source CIDR block 0.0.0.0/0)\nOption\nValue\nRule number\n10\nRule action\nReject\nProtocol\nAll\nSource port range\nDestination port range\nSource CIDR block\n10.0.0.0/16\nDestination CIDR block\n0.0.0.0/0\nDescription\nReject all intra-VPC traffic\nOption\nValue\nRule number\n20\nRule action\nAccept\nProtocol\nAll\nSource port range\nDestination port range\nSource CIDR block\n0.0.0.0/0\nDestination CIDR block\n0.0.0.0/0\nDescription\nAccept all inbound traffic\nStep 3: Create a traffic mirror session\nCreate and configure a traffic mirror session with the following options. For more\n      information, see\nCreate a traffic mirror session\n.\nTraffic mirror session to monitor inbound TCP traffic\nOption\nValue\nMirror source\nThe network interface of the instance that you want to monitor.\nMirror target\nTarget A\nFilter\nFilter F\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMirror inbound TCP and UDP traffic to multiple appliances\nMirror traffic to a Gateway Load Balancer endpoint\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/tm-example-glb-endpoints.html": "Example: Mirror traffic to appliances behind a Gateway Load Balancer via Gateway Load Balancer endpoints - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nStep 1: Create a traffic mirror target in\n        Spoke VPC1\nStep 2: Create a traffic mirror target in Spoke\n        VPC2\nStep 3: Create a traffic mirror filter rule\nStep 4: Create a traffic mirror session in Spoke\n        VPC1\nStep 5: Create a traffic mirror session in Spoke\n        VPC2\nExample: Mirror traffic to appliances behind a Gateway Load Balancer\n      via Gateway Load Balancer endpoints\nYou can deploy a Gateway Load Balancer (GWLB) and Gateway Load Balancer endpoint (GWLBe) to securely send mirror traffic\n    across VPC and accounts. The GWLBe is a VPC endpoint that provides private connectivity between\n    VPC with the mirror sources and the monitoring appliances deployed behind the GWLB.\nThe following diagram shows a deployment of a GWLB for traffic mirroring utilizing GWLBe\n    interfaces. The GWLB is deployed in a centralized Service VPC with multiple appliances as\n    targets. The GWLB is set up for each Availability Zone that the customer wants to monitor\n    traffic, and it can configure their GWLB with cross-zone load balancing as an option to protect\n    against single Availability Zone failures. In the spoke VPCs, GWLBe interfaces are deployed in\n    each spoke VPC. These endpoints are connected to the GWLB to send traffic from the spoke VPC to\n    the Service VPC.\nConsider the scenario where you want to mirror inbound TCP traffic on an instance and then\n    send it to a Gateway Load Balancer via a Gateway Load Balancer endpoint. You need the following Traffic Mirroring entities for this example:\nA Traffic Mirroring target for the Gateway Load Balancer endpoint (Target A) in Spoke VPC1\nA Traffic Mirroring target for the Gateway Load Balancer endpoint (Target B) in Spoke VPC2\nA Traffic Mirroring filter with a Traffic Mirroring rule for the TCP inbound traffic (Filter 1) for the Gateway Load Balancer\n        endpoint\nA Traffic Mirroring session for Spoke VPC1 that  has the following:\nA  Traffic Mirroring source\nA Traffic Mirroring target (Target A) for the Gateway Load Balancer endpoint\nA Traffic Mirroring filter  (Filter 1) with a Traffic Mirroring rule for the TCP inbound traffic\nA Traffic Mirroring session for Spoke VPC2 that has the following:\nA  Traffic Mirroring source\nA Traffic Mirroring target (Target B) for the Gateway Load Balancer endpoint\nA Traffic Mirroring filter  (Filter 1) with a Traffic Mirroring rule for the TCP inbound traffic\nStep 1: Create a traffic mirror target in\n        Spoke VPC1\nCreate a traffic mirror target (Target A) for the Gateway Load Balancer endpoint in Spoke VPC1. For more\n      information, see\nCreate a traffic mirror target\n.\nThe Gateway Load Balancer endpoint will be the target when the monitoring appliances are deployed behind a\n      Gateway Load Balancer.\nStep 2: Create a traffic mirror target in Spoke\n        VPC2\nCreate a traffic mirror target (Target B) for the Gateway Load Balancer endpoint in Spoke VPC1. For more\n      information, see\nCreate a traffic mirror target\n.\nThe Gateway Load Balancer endpoint will be the target when the monitoring appliances are deployed behind a\n      Gateway Load Balancer.\nStep 3: Create a traffic mirror filter rule\nCreate a traffic mirror filter (Filter 1) that has the following inbound rule. For more\n      information on creating a filter, see\nCreate a traffic mirror filter\n.\nTraffic mirror filter rule for inbound TCP traffic\nOption\nValue\nRule action\nAccept\nProtocol\nTCP\nSource port range\nDestination port range\nSource CIDR block\n0.0.0.0/0\nDestination CIDR block\n0.0.0.0/0\nDescription\nTCP Rule\nStep 4: Create a traffic mirror session in Spoke\n        VPC1\nCreate and configure a traffic mirror session with the following options. For more\n      information, see\nCreate a traffic mirror session\n.\nTraffic mirror session to monitor inbound TCP traffic for Spoke VPC1\nOption\nValue\nMirror source\nThe network interface of the instance that you want to monitor.\nMirror target\nTarget A\nFilter\nFilter 1\nStep 5: Create a traffic mirror session in Spoke\n        VPC2\nCreate and configure a traffic mirror session with the following options. For more\n      information, see\nCreate a traffic mirror session\n.\nTraffic mirror session to monitor inbound TCP traffic for Spoke VPC2\nOption\nValue\nMirror source\nThe network interface of the instance that you want to monitor.\nMirror target\nTarget B\nFilter\nFilter 1\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMirror non-local VPC traffic\nWork with Traffic Mirroring\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/working-with-traffic-mirroring.html": "Work with Traffic Mirroring - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nWork with Traffic Mirroring\nYou can work with traffic mirror targets, sessions, and filters by using the Amazon VPC console or\n    the AWS CLI.\nContents\nTraffic mirror targets\nCross-account traffic mirror targets\nTraffic mirror filters\nTraffic mirror sessions\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMirror traffic to a Gateway Load Balancer endpoint\nTargets\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-target.html": "Traffic mirror targets - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nCreate a traffic mirror target\nView traffic mirror target details\nModify traffic mirror target tags\nDelete a traffic mirror target\nTraffic mirror targets\nA traffic mirror target is the destination for mirrored traffic. For more information, see\nTraffic mirror target concepts\n.\nAfter you create a target, assign it to a traffic mirror session. For more\n      information, see\nCreate a traffic mirror session\n.\nYou must configure a security group for the traffic mirror target that allows VXLAN traffic\n      (UDP port 4789) from the traffic mirror source.\nYou can share a traffic mirror target across accounts. For more information, see\nCross-account targets\n.\nTasks\nCreate a traffic mirror target\nView traffic mirror target details\nModify traffic mirror target tags\nDelete a traffic mirror target\nCreate a traffic mirror target\nTo create a traffic mirror target using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the\nRegion\nselector, choose the AWS Region that you used when\n            you created the mirror target.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror\n              targets\n.\nChoose\nCreate traffic mirror target\n.\n(Optional) For\nName tag\n, enter a name for the traffic mirror\n            target.\n(Optional) For\nDescription\n, enter a description for the traffic mirror\n         target.\nFor\nTarget type\n, choose the type of the traffic mirror\n            target:\nNetwork interface\nNetwork Load Balancer\nGateway Load Balancer endpoint\nFor\nTarget\n, choose the traffic mirror target. We display targets\n            based on the target type that you selected in the previous step.\n(Optional) For each tag to add, choose\nAdd new tag\nand enter the tag key \n         and tag value.\nChoose\nCreate\n.\nTo create a traffic mirror target using the AWS CLI\nUse the\ncreate-traffic-mirror-target\ncommand.\nView traffic mirror target details\nTo view your traffic mirror targets using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror targets\n.\nSelect the ID of the traffic mirror target to open its details page.\nTo view your traffic mirror targets using the AWS CLI\nUse the\ndescribe-traffic-mirror-targets\ncommand.\nModify traffic mirror target tags\nTo modify your traffic mirror target tags using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror targets\n.\nSelect the ID of the traffic mirror target to open its details page.\nOn the\nTags\ntab, choose\nManage\n            tags\n.\n(Optional) For each tag to add, choose\nAdd new tag\nand enter the tag key \n            and tag value. For each tag to remove, choose\nRemove\n.\nChoose\nSave\n.\nTo modify your traffic mirror target tags using the AWS CLI\nUse the\ncreate-tags\ncommand to add a tag. Use the\ndelete-tags\ncommand to remove a tag.\nDelete a traffic mirror target\nBefore you can delete a traffic mirror target, you must remove it from any traffic mirror sessions.\nTo delete your traffic mirror target using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror\n              targets\n.\nSelect the traffic mirror target.\nChoose\nDelete\n.\nWhen prompted for confirmation, enter\ndelete\n, and then choose\nDelete\n.\nTo delete a traffic mirror target using the AWS CLI\nUse the\ndelete-traffic-mirror-target\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWork with Traffic Mirroring\nCross-account targets\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/cross-account-traffic-mirroring-targets.html": "Cross-account traffic mirror targets - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nShare a traffic mirror target\nAccept a resource share\nDelete a resource share\nCross-account traffic mirror targets\nA traffic mirror target can be owned by an AWS account that is different from the traffic mirror\n    source.\nBefore you can use a cross-account traffic mirror target, the traffic mirror target owner\n    shares the target with you by using the AWS Resource Access Manager. When you are in different AWS Organizations from the\n    owner, after the owner shares the traffic mirror target, you accept the share request. After you\n    accept the share request, you can use the traffic mirror target in a traffic mirror session.\nThe traffic mirror target is visible to shared accounts in their\nDescribeTrafficMirrorTarget\nAPI calls. Only the traffic mirror target owner can\n    modify or delete the traffic mirror target.\nTraffic mirror  sessions that are created in a different account than the traffic mirror\n    target are visible in\nDescribeTrafficMirrorSession\nAPI calls that are made by the\n    traffic mirror target owner.\nTasks\nShare a traffic mirror target\nAccept a resource share\nDelete a resource share\nShare a traffic mirror target\nYou can use AWS Resource Access Manager (RAM) to share a traffic mirror target across accounts. Use the\n      following procedure to share a traffic mirror target that you own.\nYou must create a traffic mirror target before you share it. For more information, see\nCreate a traffic mirror target\n.\nTo share a traffic mirror target\nOpen the AWS Resource Access Manager console at\nhttps://console.aws.amazon.com/ram/\n.\nChoose\nCreate a resource share\n.\nUnder\nDescription\n, for\nName\n, enter a\n          descriptive name for the resource share.\nFor\nSelect resource type\n, choose\nTraffic Mirror\n            Targets\n. Select the traffic mirror target.\nFor\nPrincipals\n, add principals to the resource share. For each\n          AWS account, OU, or organization, specify its ID and choose\nAdd\n.\nFor\nAllow external accounts\n, choose whether to allow sharing\n          for this resource with AWS accounts that are external to your organization.\n(Optional) Under\nTags\n, enter a tag key and tag value pair for\n          each tag. These tags are applied to the resource share but not to the traffic mirror\n          target.\nChoose\nCreate resource share\n.\nAccept a resource share\nIf you are in different AWS Organizations from the  share owner, you must accept the resource\n      share before you can access the shared resources.\nTo accept a resource share\nOpen the AWS Resource Access Manager console at\nhttps://console.aws.amazon.com/ram/\n.\nOn the navigation pane, choose\nShared with me\n,\nResource shares\n.\nSelect the resource share.\nChoose\nAccept resource share\n.\nTo view the shared traffic mirror target, open the\nTraffic Mirror\n            Targets\npage in the Amazon VPC console.\nDelete a resource share\nYou can delete a resource share at any time. When you delete a resource share, all\n      principals that are associated with the resource share lose access to the shared resources.\n      Deleting a resource share does not delete the shared resources.\nWhen you delete a shared traffic mirror target that is in use, the traffic mirror session becomes\n      inactive.\nTo delete a resource share\nOpen the AWS Resource Access Manager console at\nhttps://console.aws.amazon.com/ram/\n.\nOn the navigation pane, choose\nShared by me\n,\nResource\n            shares\n.\nSelect the resource share.\nBe sure to select the correct resource share. You cannot recover a resource share\n          after you delete it.\nChoose\nDelete\n.\nWhen prompted for confirmation, enter\ndelete\n, and then choose\nDelete\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTargets\nFilters\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-filter.html": "Traffic mirror filters - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nCreate a traffic mirror filter\nView your traffic mirror filters\nModify your traffic mirror filter\n          rules\nModify traffic mirror filter\n          tags\nModify traffic mirror\n          filter network services\nDelete a traffic mirror filter\nTraffic mirror filters\nUse a traffic mirror filter and its rules to determine the traffic that is mirrored. A\n      traffic mirror filter contains one or more traffic mirror rules. For more information, see\nTraffic mirror filter concepts\n.\nRules are evaluated from the lowest value to the highest value. The first rule that\n        matches the traffic determines the action to take.\nTasks\nCreate a traffic mirror filter\nView your traffic mirror filters\nModify your traffic mirror filter\n          rules\nModify traffic mirror filter\n          tags\nModify traffic mirror\n          filter network services\nDelete a traffic mirror filter\nCreate a traffic mirror filter\nTo create a traffic mirror filter using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror filters\n.\nChoose\nCreate traffic mirror filter\n.\n(Optional) For\nName tag\n, enter a name for the traffic mirror\n            filter.\n(Optional) For\nDescription\n, enter a description for the\n            traffic mirror filter.\n(Optional) If you need to mirror Amazon DNS traffic, select\namazon-dns\n.\nFor each rule, inbound or outbound, choose\nAdd rule\n, and then\n            specify the following information:\nNumber\n: The rule priority.\nRule action\n: Indicates whether to accept or reject the\n                packets.\nProtocol\n: The protocol.\n(Optional)\nSource port range\n: The source port range.\n(Optional)\nDestination port range\n: The destination port\n                range.\nSource CIDR block\n: The source CIDR block. The source and destination\n                CIDR blocks must both be either IPv4 ranges or IPv6 ranges.\nDestination CIDR block\n: The destination CIDR block. The source and \n                destination CIDR blocks must both be either IPv4 ranges or IPv6 ranges.\nDescription\n: A description for the rule.\n(Optional) For each tag to add, choose\nAdd new tag\nand enter the tag key \n            and tag value.\nChoose\nCreate\n.\nTo create a traffic mirror filter using the AWS CLI\nUse the\ncreate-traffic-mirror-filter\ncommand.\nView your traffic mirror filters\nTo view your traffic mirror filters using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror filters\n.\nSelect the ID of the traffic mirror filter to open its details page.\nTo view your traffic mirror filters using the AWS CLI\nUse the\ndescribe-traffic-mirror-filters\ncommand.\nModify your traffic mirror filter\n          rules\nTo modify your traffic mirror filter using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror filters\n.\nSelect the ID of the traffic mirror filter to open its details page.\nFor each rule to add, choose either\nInbound rules\n,\nAdd inbound\n              rule\nor\nOutbound rules\n,\nAdd outbound rule\n. \n            Specify the following information, and then choose\nAdd rule\n:\nRule number\n: The rule priority.\n(Optional)\nDescription\n: A description for the rule.\nRule action\n: Indicates whether to accept or reject the packets.\nProtocol\n: The protocol.\n(Optional)\nSource port range\n: The source port range.\n(Optional)\nDestination port range\n: The destination port range.\nSource CIDR block\n: The source CIDR block. The source and destination\n                  CIDR blocks must both be either IPv4 ranges or IPv6 ranges.\nDestination CIDR block\n: The destination CIDR block. The source and \n                destination CIDR blocks must both be either IPv4 ranges or IPv6 ranges.\nFor each inbound rule to modify, select the rule and choose\nModify\n              outbound rule\n. Update the rule as needed, and then choose\nModify\n              rule\n.\nFor each rule to delete, select the rule and choose\nDelete\n.\n            When prompted for confirmation, enter\ndelete\n, and then choose\nDelete\n.\nModify traffic mirror filter\n          tags\nTo modify your traffic mirror filters using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror filters\n.\nSelect the ID of the traffic mirror filter to open its details page.\nFrom the\nTags\ntab, choose\nManage tags\n.\nFor each tag to add, choose\nAdd new tag\nand enter the tag key \n            and tag value.\nFor each tag to remove, choose\nRemove\n.\nChoose\nSave\n.\nTo modify the traffic mirror filter tags using the AWS CLI\nUse the\ncreate-tags\ncommand to add a tag. Use the\ndelete-tags\ncommand to remove a tag.\nModify traffic mirror\n          filter network services\nTo modify your traffic mirror filter network services using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror filters\n.\nSelect the radio button for the traffic mirror filter.\nChoose\nActions\n,\nModify Network Services\n.\nIf you need to mirror Amazon DNS traffic, select\namazon-dns\n.\n            Otherwise, clear\namazon-dns\n.\nChoose\nModify\n.\nTo modify the network services traffic mirror filters using the AWS CLI\nUse the\nmodify-traffic-mirror-filter-network-services\ncommand.\nDelete a traffic mirror filter\nBefore you can delete a traffic mirror filter, you must remove it from any traffic mirror sessions.\nTo delete a traffic mirror filter using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror filters\n.\nSelect the traffic mirror filter, and then choose\nActions\n,\nDelete\n.\nWhen prompted for  confirmation, enter\ndelete\n, and then choose\nDelete\n.\nTo delete a traffic mirror filter using the AWS CLI\nUse the\ndelete-traffic-mirror-filter\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCross-account targets\nSessions\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-session.html": "Traffic mirror sessions - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nCreate a traffic mirror session\nView your traffic mirror sessions\nModify your traffic mirror\n          session\nModify traffic mirror session tags\nDelete a traffic mirror session\nTraffic mirror sessions\nA traffic mirror session establishes a relationship between a traffic mirror source and a \n      traffic mirror target. For more information, see\nTraffic mirror session concepts\n.\nA traffic mirror session contains the following resources:\nA traffic mirror\nsource\nA traffic mirror\ntarget\nA traffic mirror\nfilter\nYou can create a traffic mirror session only if you are the owner of the network interface\n      or the subnet for the traffic mirror source.\nTasks\nCreate a traffic mirror session\nView your traffic mirror sessions\nModify your traffic mirror\n          session\nModify traffic mirror session tags\nDelete a traffic mirror session\nCreate a traffic mirror session\nTo create a traffic mirror session using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the\nRegion\nselector, choose the AWS Region that you used\n            when you created the VPCs.\nIn the navigation pane, choose\nTraffic Mirroring\n,\nMirror\n              sessions\n.\nChoose\nCreate traffic mirror session\n.\n(Optional) For\nName tag\n, enter a name for the traffic mirror\n            session.\n(Optional) For\nDescription\n, enter a description for the traffic mirror\n            session.\nFor\nMirror source\n, choose the network interface of the mirror\n            source.\nFor\nMirror target\n, choose an existing traffic mirror target or \n            choose\nCreate target\nto create one. For more information, see\nCreate a traffic mirror target\n.\nIf the mirror target is owned by another account and shared with you, you must \n            first\naccept the resource share\n.\nFor\nAdditional settings\n, do the following:\nFor\nSession number\n, enter the session number. The valid\n                values are 1 to 32,766, where 1 is the highest priority. Sessions are evaluated\n                based on the priority indicated by this session number.\n(Optional) For\nVNI\n, enter the VXLAN ID to use for the traffic mirror\n                session. For more information about the VXLAN protocol, see\nRFC 7348\n.\nIf you do not enter a value, we assign a random number.\n(Optional) For\nPacket Length\n, enter the number of bytes in\n                each packet to mirror.\nTo mirror the entire packet, do not enter a value. To mirror only a portion of\n                each packet, set this value to the number of bytes to mirror. For example, if you\n                set this value to 100, the first 100 bytes after the VXLAN header that meet the\n                filter criteria are copied to the target.\nFor\nFilter\n, choose an existing traffic mirror filter.\n                Alternatively, choose\nCreate filter\n. For more information,\n                see\nStep 2: Create the traffic mirror\n        filter\n.\n(Optional) For each tag to add, choose\nAdd new tag\nand enter the tag key \n            and tag value.\nChoose\nCreate\n.\nTo create a traffic mirror session using the AWS CLI\nUse the\ncreate-traffic-mirror-session\ncommand.\nView your traffic mirror sessions\nTo view your traffic mirror sessions using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTraffic Mirroring\n,\nMirror sessions\n.\nSelect the ID of the traffic mirror session to open its details page.\nTo view your traffic mirror session using the AWS CLI\nUse the\ndescribe-traffic-mirror-sessions\ncommand.\nModify your traffic mirror\n          session\nTo modify your traffic mirror session using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTraffic Mirroring\n,\nMirror sessions\n.\nSelect the radio button for the traffic mirror session.\nChoose\nActions\n,\nModify session\n.\n(Optional) For\nDescription\n, enter a description for the traffic mirror\n            session.\nFor\nMirror target\n, choose an existing traffic mirror target or \n            choose\nCreate target\nto create one. For more information, see\nCreate a traffic mirror target\n.\nFor\nAdditional settings\n, do the following:\nFor\nSession number\n, enter the session number. The valid\n                values are 1 to 32,766, where 1 is the highest priority.\n(Optional) For\nVNI\n, enter the VXLAN ID to use for the\n                traffic mirror session. For more information about the VXLAN protocol, see\nRFC 7348\n.\nIf you do not enter a value, we assign a random unused number.\n(Optional) For\nPacket Length\n, enter the number of bytes in\n                each packet to mirror.\nTo mirror the entire packet, do not enter a value. To mirror only a portion of\n                each packet, set this value to the number of bytes to mirror. For example, if you\n                set this value to 100, the first 100 bytes after the VXLAN header that meet the\n                filter criteria are copied to the target.\nFor\nFilter\n, choose the traffic mirror filter that determines\n                what traffic gets mirrored.\nChoose\nModify\n.\nTo modify your traffic mirror session using the AWS CLI\nUse the\nmodify-traffic-mirror-session\ncommand.\nModify traffic mirror session tags\nTo modify your traffic mirror session tags using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTraffic Mirroring\n,\nMirror sessions\n.\nSelect the ID of the traffic mirror session to open its details page.\nOn the\nTags\ntab, choose\nManage\n            tags\n.\n(Optional) For each tag to add, choose\nAdd new tag\nand enter the tag key \n            and tag value. For each tag to remove, choose\nRemove\n.\nChoose\nModify\n.\nTo modify your traffic mirror session using the AWS CLI\nUse the\ncreate-tags\ncommand to add a tag. Use the\ndelete-tags\ncommand to remove a tag.\nDelete a traffic mirror session\nYou are charged on an hourly basis for each active traffic mirror session. To stop all\n        Traffic Mirroring charges, you must delete all active traffic mirror sessions. If you delete the network \n        interface for the traffic mirror source, the traffic mirror sessions for the source are deleted \n        automatically.\nTo delete your traffic mirror session using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTraffic Mirroring\n,\nMirror sessions\n.\nSelect the traffic mirror session, and then choose\nActions\n,\nDelete\n.\nWhen prompted for confirmation, enter\ndelete\n, and then choose\nDelete\n.\nTo delete a traffic mirror session using the AWS CLI\nUse the\ndelete-traffic-mirror-session\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nFilters\nWork with open-source tools\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/tm-example-open-source.html": "Work with open-source tools for Traffic Mirroring - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nStep 1: Install the Suricata\n        software on the EC2 instance target\nStep 2: Create a traffic mirror\n        target\nStep 3: Create a traffic mirror\n        filter\nStep 4: Create a traffic mirror\n        session\nWork with open-source tools for Traffic Mirroring\nYou can use open-source tools to monitor network traffic from Amazon EC2 instances. The following\n    tools work with Traffic Mirroring:\nZeek\n\u00e2\u0080\u0094 For more information, see the\nZeek Network Monitor Security website\n.\nSuricata\n\u00e2\u0080\u0094 For more information see the\nSuricata website\n.\nThese open-source tools support VXLAN decapsulation, and they can be used at scale to\n    monitor VPC traffic. For information about how Zeek handles VXLAN support and to download the\n    code, see\nZeek\n      vxlan\non the GitHub website. For information about how Suricata handles VXLAN support\n    and to download the code, see\nSuricata\non the GitHub website.\nThe following example uses the Suricata open-source tool. You can follow similar steps for\n    Zeek.\nConsider the scenario where you want to mirror inbound TCP traffic on an instance and send\n    the traffic to an instance that has the Suricata software installed. You need the following\n    traffic mirror entities for this example:\nAn EC2 instance with the Suricata software installed on it\nA traffic mirror target for the EC2 instance (Target A)\nA traffic mirror filter with a traffic mirror rule for the TCP inbound traffic (Filter rule 1)\nA traffic mirror session that has the following:\nA traffic mirror source\nA traffic mirror target for the appliance\nA traffic mirror filter with a traffic mirror rule for the TCP inbound traffic\nStep 1: Install the Suricata\n        software on the EC2 instance target\nLaunch an EC2 instance, and then install the Suricata software on it by using the\n      following commands.\n# Become sudo\nsudo -s\n# Install epel-release\namazon-linux-extras install -y epel\n# Install suricata\nyum install -y suricata\n# Create the default suricata rules directory\nmkdir /var/lib/suricata/rules\n# Add a rule to match all UDP traffic\necho 'alert udp any any -> any any (msg:\"UDP traffic detected\"; sid:200001; rev:1;)' > /var/lib/suricata/rules/suricata.rules\n# Start suricata listening on eth0 in daemon mode\nsuricata -c /etc/suricata/suricata.yaml -k none -i eth0 -D\n\n# Capture logs can be found in /var/log/suricata/fast.log\nStep 2: Create a traffic mirror\n        target\nCreate a traffic mirror target (Target A) for the EC2 instance. Depending on your\n      configuration, the target is one of the following types:\nThe network interface of the monitoring appliance\nThe Network Load Balancer when the appliance is deployed behind one.\nThe Gateway Load Balancer endpoint when the appliance is deployed behind a Gateway Load Balancer\nFor more information, see\nCreate a traffic mirror target\n.\nStep 3: Create a traffic mirror\n        filter\nCreate a traffic mirror filter (Filter 1) with the following inbound rule. For more\n        information, see\nCreate a traffic mirror filter\n.\nTraffic mirror filter rule for inbound TCP traffic\nOption\nValue\nRule action\nAccept\nProtocol\nTCP\nSource port range\nDestination port range\nSource CIDR block\n0.0.0.0/0\nDestination CIDR block\n0.0.0.0/0\nDescription\nTCP Rule\nStep 4: Create a traffic mirror\n        session\nCreate and configure a traffic mirror session with the following options. For more\n        information, see\nCreate a traffic mirror session\n.\nTraffic mirror session to monitor inbound TCP traffic\nOption\nValue\nMirror source\nThe network interface of the instance that you want to monitor.\nMirror target\nTarget A\nFilter\nFilter 1\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSessions\nMonitor mirrored traffic\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirror-cloudwatch.html": "Monitor mirrored traffic using Amazon CloudWatch - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nTraffic Mirroring metrics and dimensions\nView Traffic Mirroring CloudWatch metrics\nMonitor mirrored traffic using Amazon CloudWatch\nYou can monitor your mirrored traffic using Amazon CloudWatch, which collects information from\n        your network interface that is part of a traffic mirror session, and creates readable, near\n        real-time metrics. You can use this information to monitor and troubleshoot Traffic Mirroring.\nFor more information about Amazon CloudWatch, see the\nAmazon CloudWatch User Guide\n. For more information,\n        see\nList the available CloudWatch\n            metrics for your instances\nin\nAmazon EC2 User Guide for Linux Instances\n. For more information,\n            see\nAmazon CloudWatch Pricing\n.\nTraffic Mirroring metrics and dimensions\nThe following metrics are available for your mirrored traffic at the traffic mirror source:\nMetric\nDescription\nNetworkMirrorIn\nThe number of bytes received on all network interfaces by the\n                                instance that are mirrored.\nThe number reported is the number of bytes received during the\n                                period. If you are using basic (five-minute) monitoring, you can\n                                divide this number by 300 to find Bytes/second. If you have detailed\n                                (one-minute) monitoring, divide it by 60.\nUnits: Bytes\nNetworkMirrorOut\nThe number of bytes sent out on all network interfaces by the\n                                instance that are mirrored.\nThe number reported is the number of bytes sent during the period.\n                                If you are using basic (five-minute) monitoring, you can divide this\n                                number by 300 to find Bytes/second. If you have detailed\n                                (one-minute) monitoring, divide it by 60.\nUnits: Bytes\nNetworkPacketsMirrorIn\nThe number of packets received on all network interfaces by\n                                the instance that are mirrored. This metric is available for basic\n                                monitoring only.\nUnits: Count\nNetworkPacketsMirrorOut\nThe number of packets sent out on all network interfaces by the\n                                instance that are mirrored. This metric is available for basic\n                                monitoring only.\nUnits: Count\nNetworkSkipMirrorIn\nThe number of bytes received, that meet the traffic mirror filter\n                                rules, that did not get mirrored because of production traffic\n                                taking priority.\nUnits: Bytes\nNetworkSkipMirrorOut\nThe number of bytes sent out, that meet the traffic mirror filter\n                                rules, that did not get mirrored because of production traffic\n                                taking priority.\nUnits: Bytes\nNetworkPacketsSkipMirrorIn\nThe number of packets received, that meet the traffic mirror\n                                filter rules, that did not get mirrored because of production\n                                traffic taking priority. This metric is available for basic\n                                monitoring only.\nUnits: Count\nNetworkPacketsSkipMirrorOut\nThe number of packets sent out, that meet the traffic mirror filter\n                                rules, that did not get mirrored because of production traffic\n                                taking priority. This metric is available for basic monitoring only.\nUnits: Count\nTo filter the metric data, use the following dimensions.\nDimension\nDescription\nAutoScalingGroupName\nThis dimension filters the data you request for all instances in\n                            a specified capacity group. An Auto Scaling group is a collection of\n                            instances you define if you're using Auto Scaling. This dimension is\n                            available only for Amazon EC2 metrics when the instances are in such an\n                            Auto Scaling group. Available for instances with Detailed or Basic\n                            Monitoring enabled.\nImageId\nThis dimension filters the data you request for all instances running\n                            this Amazon EC2 Amazon Machine Image (AMI). Available for instances with\n                            Detailed Monitoring enabled.\nInstanceId\nThis dimension filters the data you request for the identified\n                            instance only. This helps you pinpoint an exact instance from which to\n                            monitor data. Available for instances with Detailed or Basic Monitoring\n                            enabled.\nInstanceType\nThis dimension filters the data you request for all instances running\n                            with this specified instance type. This helps you categorize your data\n                            by the type of instance running. For example, you might compare data\n                            from an m1.small instance and an m1.large instance to determine which\n                            has the better business value for your application. Available for\n                            instances with Detailed Monitoring enabled.\nView Traffic Mirroring CloudWatch metrics\nYou can view the metrics for Traffic Mirroring as follows.\nTo view metrics using the CloudWatch console\nMetrics are grouped first by the service namespace, and then by the various\n                    dimension combinations within each namespace.\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nMetrics\n.\nUnder\nAll metrics\n, choose the\nEC2\nmetric namespace.\nTo view the metrics, select the metric dimension.\nTo view metrics using the AWS CLI\nAt a command prompt, use the following command to list the metrics that are\n                available for Traffic Mirroring:\naws cloudwatch list-metrics --namespace \"AWS/EC2\"\nThe Traffic Mirroring metrics are included with the metrics for Amazon EC2.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWork with open-source tools\nQuotas and limitations\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-limits.html": "Traffic Mirroring quotas and limitations - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nQuotas\nLimitations\nMTU\nTraffic bandwidth and prioritization\nChecksum offloading\nTraffic Mirroring quotas and limitations\nTraffic Mirroring has the following quotas and limitations.\nContents\nQuotas\nLimitations\nMTU\nTraffic bandwidth and prioritization\nChecksum offloading\nQuotas\nThe following are the quotas for Traffic Mirroring for your AWS account.\nSessions\nThe following table lists the Traffic Mirroring session limits.\nQuota\nDefault\nAdjustable\nMaximum number of sessions per account\n10,000\nNo\nMaximum number of sessions per source network interface\n3\nNo\nMaximum number of sessions for a single Gateway Load Balancer endpoint\nUnlimited\nNot applicable\nTargets\nThe following table lists the Traffic Mirroring target limits.\nQuota\nDefault\nAdjustable\nMaximum number of targets per account\n10,000\nNo\nFilters\nThe following table lists the Traffic Mirroring filter limits.\nQuota\nDefault\nAdjustable\nMaximum number of filters per account\n10,000\nNo\nMaximum number of sessions per source network interface\n3\nNo\nMaximum number of filter rules per filter\n10\nNo\nThroughput\nThe following table lists the Traffic Mirroring throughput limits.\nQuota\nDefault\nAdjustable\nMaximum throughput through a single Gateway Load Balancer endpoint\n100 Gbps\nNo\nPackets\nThe following table lists the Traffic Mirroring packet sizes.\nQuota\nDefault\nAdjustable\nMaximum number of MTUs for a Gateway Load Balancer endpoint\n8,500\nNo\nSources\nThe following table lists the Traffic Mirroring source limits.\nQuota\nDefault\nAdjustable\nMaximum number of sources per Network Load Balancer\nNo limit\nNo\nMaximum number of sources per Gateway Load Balancer endpoint\nNo limit\nNo\nMaximum number of sessions per target (smaller sizes)\n10\nNo\nMaximum number of sources per target (largest size)\n100\n*\nNo\n*\nThis applies only to the largest instance\n                    size. For example, for M5 instances, the maximum is 100 for\nm5.24xlarge\nand\n10\nfor all other M5 instance\n                    sizes. For more information about instance sizes, see\nAvailable instance types\nin the\nAmazon EC2 User Guide\n.\nLimitations\nInstance types\nTraffic Mirroring is not available on the following virtualized Nitro instance types:\nGeneral purpose: M6a, M6i, M6in, M7g, M7i, M7i-flex\nCompute optimized: C6a, C6gn, C6i, C6id, C6in, C7g, Hpc6a\nMemory optimized: R6a, R6i, R6id, R6idn, R6in, R7g, R7iz, X2idn, X2iedn, X2iezn\nStorage optimized:  I4g, I4i, Im4gn, Is4gen\nAccelerated computing:  Inf2, Trn1\nTraffic Mirroring is not available on bare metal instances.\nTraffic Mirroring is available only on the following non-Nitro instances types:\n                    C4, D2, G3, G3s, H1, I3, M4, P2, P3, R4, X1, and X1e. Note that this does not include T2 instances.\nIPv6 traffic\nTraffic mirroring is not supported for IPv6-only subnets.\nTraffic types\nTraffic Mirroring can't mirror the following traffic types:\nARP\nDHCP\nInstance metadata service\nNTP\nWindows activation\nVPC Flow Logs\nVPC Flow Logs do not capture mirrored traffic.\nShared VPCs and subnets\nParticipants cannot describe, create, modify, or delete a traffic mirror\n                    session or target that belongs to the VPC owner. Participants can describe,\n                    create, modify, and delete a traffic mirror session or target that belongs to\n                    them.\nVPC owners cannot describe, create, modify, or delete a traffic mirror\n                    session or target that belongs to the participant.\nFor more information see,\nShare your VPC with other\n                accounts\nin the\nAmazon VPC User Guide\n.\nMTU\nWe truncate the packet to the MTU value when both of the following are true:\nThe traffic mirror target is a standalone instance.\nThe mirrored traffic packet size is greater than the traffic mirror\n                    target MTU value.\nFor example, if an 8996 byte packet is mirrored, and the traffic mirror\n            target MTU value is 9001 bytes, the mirror encapsulation results in the\n            mirrored packet being greater than the MTU value. In this case, the\n            mirror packet is truncated. To prevent mirror packets from being\n            truncated, set the traffic mirror source interface MTU value to 54 bytes\n            less than the traffic mirror target MTU value for IPv4 and 74 bytes less\n            than the traffic mirror target MTU value when you use IPv6. Therefore,\n            the maximum MTU value supported by Traffic Mirroring with no packet\n            truncation is 8947 bytes.\nFor more information about configuring the network MTU value, see\nNetwork maximum transmission unit (MTU)\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nTraffic bandwidth and prioritization\nMirrored traffic counts toward instance bandwidth. For example, if you mirror a\n            network interface that has 1 Gbps of inbound traffic and 1 Gbps of outbound traffic,\n            the instance must handle 4 Gbps of traffic (1 Gbps inbound, 1 Gbps mirrored inbound,\n            1 Gbps outbound, and 1 Gbps mirrored outbound).\nProduction traffic has a higher priority than mirrored traffic when there is\n            traffic congestion. As a result, mirrored traffic is dropped when there is\n            congestion.\nBy default, each Gateway Load Balancer endpoint can support a bandwidth of up to 10 Gbps per\n            Availability Zone and automatically scales up to 100 Gbps. For more information, see\nAWS PrivateLink quotas\nin the\nAWS PrivateLink Guide\n.\nChecksum offloading\nThe Elastic Network Adapter (ENA) provides checksum offloading capabilities. If a\n            packet is truncated, this might result in the packet checksum not being calculated for\n            the mirrored packet. The following checksums are not calculated when the mirrored packet\n            is truncated:\nIf the mirror packet is truncated, the mirror packet L4 checksum is not\n                    calculated.\nIf any part of the L3 header is truncated, the L3 checksum is not\n                    calculated.\nIf this causes issues, you can disable ENA checksum offloading on the ENA for the \n            source. For example, use the following commands on Amazon Linux 2:\n[ec2-user ~]$\nsudo ethtool --offload eth0 tx off\n[ec2-user ~]$\nsudo ethtool --show-offload eth0\nFeatures for eth0:\nrx-checksumming: on\ntx-checksumming: off\n     tx-checksum-ipv4: off\n     tx-checksum-ip-generic: off [fixed]\n     tx-checksum-ipv6: off [fixed]\n     tx-checksum-fcoe-crc: off [fixed]\n     tx-checksum-sctp: off [fixed]\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMonitor mirrored traffic\nIdentity and access management\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-security.html": "Identity and access management for Traffic Mirroring - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nIdentity and access management for Traffic Mirroring\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely control access\n      to AWS resources. Administrators control who can be\nauthenticated\n(signed in) and\nauthorized\n(have permissions) to use traffic mirror\n      resources.\nTo allow access to traffic mirror resources, you create and attach an IAM policy \n      to an IAM role and users or groups assume that role.\nThe IAM role must be given permission to use specific traffic mirror resources and\n      API actions. When you attach a policy to a role, it allows or\n      denies permission to perform the specified tasks on the specified resources.\nYou can also use resource-level permissions to restrict what resources users can use when\n            they invoke APIs.\nExample: CreateTrafficMirrorSession policy\nThe following IAM policy allows users to use the\nCreateTrafficMirrorSession\nAPI, but restricts the action to a\n                specific traffic mirror target (\ntmt-12345645678\n). To create a\n                traffic mirror session, users must also have permission to use the traffic mirror\n                filter and network interface resources. Therefore, you must include these resources\n                in the IAM policy attached to the role.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateTrafficMirrorSession\",\n            \"Resource\": [\n                \"arn:aws:ec2:*:*:traffic-mirror-target/\ntmt-12345645678\n\",\n                \"arn:aws:ec2:*:*:traffic-mirror-filter/*\",\n                \"arn:aws:ec2:*:*:network-interface/*\"\n            ]\n        }\n     ]\n}\nFor more information about supported traffic mirror actions, resources, and condition\n            keys, see\nActions, Resources, and\n                Condition Keys for Amazon EC2\nin the\nIAM User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nQuotas and limitations\nDocument history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/mirroring/doc-history.html": "Document history for Traffic Mirroring - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nTraffic Mirroring\nDocument history for Traffic Mirroring\nThe following table describes the releases for Traffic Mirroring.\nChange\nDescription\nDate\nSupport for Gateway Load Balancer endpoints as traffic mirror targets\nSend mirrored traffic to monitoring appliances registered\n\t\t\t\t\twith a Gateway Load Balancer.\nMay 12, 2022\nSupport for non-Nitro instance types\nEnable Traffic Mirroring on the following non-Nitro instance types: \n\t\t\t\t\tC4, D2, G3, G3s, H1, I3, M4, P2, P3, R4, X1 and X1e.\nFebruary 10, 2021\nSupport for Amazon CloudWatch\nMonitor your mirrored traffic using Amazon CloudWatch.\nNovember 25, 2019\nInitial release\nThis release introduces Traffic Mirroring.\nJune 25, 2019\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIdentity and access management\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/what-is-privatelink.html": "What is AWS PrivateLink? - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nUse cases\nWork with VPC endpoints\nPricing\nWhat is AWS PrivateLink?\nAWS PrivateLink is a highly available, scalable technology that you can use to privately\n\t\tconnect your VPC to services as if they were in your VPC. You do not need to use an internet\n\t\tgateway, NAT device, public IP address, AWS Direct Connect connection, or AWS Site-to-Site VPN connection to\n\t\tallow communication with the service from your private subnets. Therefore, you control the\n\t\tspecific API endpoints, sites, and services that are reachable from your VPC.\nUse cases\nYou can create VPC endpoints to connect resources in your VPC to services that integrate\n\t\t\twith AWS PrivateLink. You can create your own VPC endpoint service and make it available\n\t\t\tto other AWS customers. For more information, see\nAWS PrivateLink concepts\n.\nIn the following diagram, the VPC on the left has several EC2 instances in a private subnet \n\t    \tand three interface VPC endpoints. The top-most VPC endpoint connects to an AWS service. \n\t    \tThe middle VPC endpoint connects to a service hosted by another AWS account (a VPC endpoint \n\t    \tservice). The bottom VPC endpoint connects to an AWS Marketplace partner service.\nLearn more\nAWS PrivateLink concepts\nAccess\n      AWS services\nAccess SaaS products\nAccess virtual appliances\nShare your services\nWork with VPC endpoints\nYou can create, access, and manage VPC endpoints using any of the following:\nAWS Management Console\n\u00e2\u0080\u0094 Provides a web interface that you can\n\t\t\t\t\tuse to access your AWS PrivateLink resources.\nAWS Command Line Interface (AWS CLI)\n\u00e2\u0080\u0094 Provides commands for a\n\t\t\t\t\tbroad set of AWS services, including AWS PrivateLink. For more information about commands\n\t\t\t\t\tfor AWS PrivateLink, see\nec2\nin the\nAWS CLI Command Reference\n.\nAWS CloudFormation\n- Create templates that describe your AWS \n\t\t\t\t\tresources. You use the templates to provision and manage these resources as a single unit.\n\t\t\t\t\tFor more information, see the following AWS PrivateLink resources:\nAWS::EC2::VPCEndpoint\nAWS::EC2::VPCEndpointConnectionNotification\nAWS::EC2::VPCEndpointService\nAWS::EC2::VPCEndpointServicePermissions\nAWS::ElasticLoadBalancingV2::LoadBalancer\nAWS SDKs\n\u00e2\u0080\u0094 Provide language-specific APIs. The\n\t\t\t\t\tSDKs take care of many of the connection details, such as calculating signatures,\n\t\t\t\t\thandling request retries, and handling errors. For more information, see\nAWS SDKs\n.\nQuery API\n\u00e2\u0080\u0094 Provides low-level API actions that\n\t\t\t\t\tyou call using HTTPS requests. Using the Query API is the most direct way to\n\t\t\t\t\taccess Amazon VPC. However, it requires that your application handle low-level\n\t\t\t\t\tdetails such as generating the hash to sign the request and handling errors. For\n\t\t\t\t\tmore information, see\nAWS PrivateLink actions\nin the\nAmazon EC2 API Reference\n.\nPricing\nFor information about the pricing for VPC endpoints, see\nAWS PrivateLink Pricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConcepts\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/concepts.html": "AWS PrivateLink concepts - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nArchitecture diagram\nService providers\nService consumers\nAWS PrivateLink connections\nPrivate hosted zones\nAWS PrivateLink concepts\nYou can use Amazon VPC to define a virtual private cloud (VPC), which is a logically\n\t\t\tisolated virtual network. You can launch AWS resources in your VPC. You can allow the\n\t\t\tresources in your VPC to connect to resources outside that VPC. For example, add an\n\t\t\tinternet gateway to the VPC to allow access to the internet, or add a VPN connection to\n\t\t\tallow access to your on-premises network. Alternatively, use AWS PrivateLink to allow the\n\t\t\tresources in your VPC to connect to services in other VPCs using private IP addresses,\n\t\t\tas if those services were hosted directly in your VPC.\nThe following are important concepts to understand as you get started using \n\t\t\tAWS PrivateLink.\nContents\nArchitecture diagram\nService providers\nService consumers\nAWS PrivateLink connections\nPrivate hosted zones\nArchitecture diagram\nThe following diagram provides a high-level overview of how AWS PrivateLink works.\n        \t\tService consumers create interface VPC endpoints to connect to endpoint services \n        \t\tthat are hosted by service providers.\nService providers\nThe owner of a service is the\nservice provider\n. Service providers\n\t\t\t\tinclude AWS, AWS Partners, and other AWS accounts. Service providers can host\n\t\t\t\ttheir services using AWS resources, such as EC2 instances, or using on-premises \n\t\t\t\tservers.\nConcepts\nEndpoint services\nService names\nService states\nEndpoint services\nA service provider creates an\nendpoint service\nto make their service\n\t\t\t\t\tavailable in a Region. A service provider must specify a load balancer when\n\t\t\t\t\tcreating an endpoint service. The load balancer receives requests from service\n\t\t\t\t\tconsumers and routes them to your service.\nBy default, your endpoint service is not available to service consumers. You must add \n\t\t\t\t\tpermissions that allow specific AWS principals to connect to your endpoint service.\nService names\nEach endpoint service is identified by a service name. A service consumer must specify the\n\t\t\t\t\tname of the service when creating a VPC endpoint. Service consumers can query\n\t\t\t\t\tthe service names for AWS services. Service providers must share the names of\n\t\t\t\t\ttheir services with service consumers.\nService states\nThe following are the possible states for an endpoint service:\nPending\n- The endpoint service is being created.\nAvailable\n- The endpoint service is available.\nFailed\n- The endpoint service could not be created.\nDeleting\n- The service provider deleted the endpoint service and deletion\n\t\t\t\t\t\t\tis in progress.\nDeleted\n- The endpoint service is deleted.\nService consumers\nThe user of a service is a\nservice consumer\n. Service consumers can \n\t\t\t\taccess endpoint services from AWS resources, such as EC2 instances, or from on-premises \n\t\t\t\tservers.\nConcepts\nVPC endpoints\nEndpoint network interfaces\nEndpoint policies\nEndpoint states\nVPC endpoints\nA service consumer creates a\nVPC endpoint\nto connect their \n\t\t\t\t\tVPC to an endpoint service. A service consumer must specify the service name of \n\t\t\t\t\tthe endpoint service when creating a VPC endpoint. There are multiple types of \n\t\t\t\t\tVPC endpoints. You must create the type of VPC endpoint that's required by the\n\t\t\t\t\tendpoint service.\nInterface\n- Create an\ninterface endpoint\nto send TCP traffic to an endpoint service. Traffic destined for the endpoint \n\t\t\t\t\t\t\tservice is resolved using DNS.\nGatewayLoadBalancer\n- Create a\nGateway Load Balancer endpoint\nto send traffic to a fleet of virtual appliances using private IP addresses. \n\t\t\t\t\t\t\tYou route traffic from your VPC to the Gateway Load Balancer endpoint using route tables. The Gateway Load Balancer\n\t\t\t\t\t\t\tdistributes traffic to the virtual appliances and can scale with\n\t\t\t\t\t\t\tdemand.\nThere is another type of VPC endpoint,\nGateway\n, which creates a\ngateway endpoint\nto send traffic to Amazon S3 or DynamoDB. Gateway \n\t\t\t\t\tendpoints do not use AWS PrivateLink, unlike the other types of VPC endpoints. \n\t\t\t\t\tFor more information, see\nGateway endpoints\n.\nEndpoint network interfaces\nAn\nendpoint network interface\nis a requester-managed network\n\t\t\t\t\tinterface that serves as an entry point for traffic destined to an endpoint\n\t\t\t\t\tservice. For each subnet that you specify when you create a VPC endpoint, we\n\t\t\t\t\tcreate an endpoint network interface in the subnet.\nIf a VPC endpoint supports IPv4, its endpoint network interfaces have IPv4 addresses. If a\n\t\t\t\t\tVPC endpoint supports IPv6, its endpoint network interfaces have IPv6 addresses.\n\t\t\t\t\tThe IPv6 address for an endpoint network interface is unreachable from the\n\t\t\t\t\tinternet. When you describe an endpoint network interface with an IPv6 address, notice \n\t\t\t\t\tthat\ndenyAllIgwTraffic\nis enabled.\nThe IP addresses of an endpoint network interface will not change during the lifetime \n\t\t\t\t\tof its VPC endpoint.\nEndpoint policies\nA\nVPC endpoint policy\nis an IAM resource policy that you attach to\n\t\t\t\t\ta VPC endpoint. It determines which principals can use the VPC endpoint to\n\t\t\t\t\taccess the endpoint service. The default VPC endpoint policy allows all actions\n\t\t\t\t\tby all principals on all resources over the VPC endpoint.\nEndpoint states\nWhen you create a VPC endpoint, the endpoint service receives a connection request. \n\t\t\t\t\tThe service provider can accept or reject the request. If the service provider \n\t\t\t\t\taccepts the request, the service consumer can use the VPC endpoint after it enters\n\t\t\t\t\tthe\nAvailable\nstate.\nThe following are the possible states for a VPC endpoint:\nPendingAcceptance\n- The connection request is pending. This is the\n\t\t\t\t\t\t    initial state if requests are manually accepted.\nPending\n- The service provider accepted the connection request.\n\t\t\t\t\t\t\tThis is the initial state if requests are automatically accepted. The VPC endpoint\n\t\t\t\t\t\t    returns to this state if the service consumer modifies the VPC endpoint.\nAvailable\n- The VPC endpoint is available for use.\nRejected\n- The service provider rejected the connection request. The\n\t\t\t\t\t\t   service provider can also reject a connection after it is available for use.\nExpired\n- The connection request expired.\nFailed\n- The VPC endpoint could not be made available.\nDeleting\n- The service consumer deleted the VPC endpoint and deletion is in\n\t\t\t\t\t\t\tprogress.\nDeleted\n- The VPC endpoint is deleted.\nAWS PrivateLink connections\nTraffic from your VPC is sent to an endpoint service using a connection between the VPC\n\t\t\t\tendpoint and the endpoint service. Traffic between a VPC endpoint and an endpoint\n\t\t\t\tservice stays within the AWS network, without traversing the public internet.\nA service provider adds\npermissions\nso that\n\t\t\t\tservice consumers can access the endpoint service. The service consumer initiates\n\t\t\t\tthe connection and the service provider accepts or rejects the connection\n\t\t\t\trequest.\nWith interface VPC endpoints, service consumers can use\nendpoint polices\nto control which IAM\n\t\t\t\tprincipals can use a VPC endpoint to access an endpoint service.\nPrivate hosted zones\nA\nhosted zone\nis a container for DNS records that define how to route\n\t\t\t\ttraffic for a domain or subdomain. With a\npublic hosted zone\n,\n\t\t\t\tthe records specify how to route traffic on the internet. With a\nprivate\n\t\t\t\t\thosted zone\n, the records specify how to route traffic in your\n\t\t\t\tVPCs.\nYou can configure Amazon Route\u00c2\u00a053 to route domain traffic to a VPC endpoint. For more\n\t\t\t\tinformation, see\nRouting traffic to a VPC endpoint using your domain name\n.\nYou can use Route\u00c2\u00a053 to configure split-horizon DNS, where you use the same domain name for\n\t\t\t\tboth a public website and an endpoint service powered by AWS PrivateLink. DNS requests\n\t\t\t\tfor the public hostname from the consumer VPC resolve to the private IP addresses of\n\t\t\t\tthe endpoint network interfaces, but requests from outside the VPC continue to\n\t\t\t\tresolve to the public endpoints. For more information, see\nDNS Mechanisms for Routing Traffic and Enabling Failover for AWS PrivateLink\n\t\t\t\t\tDeployments\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWhat is AWS PrivateLink?\nGet started\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/getting-started.html": "Get started with AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nStep 1: Create a VPC with subnets\nStep 2: Launch the instances\nStep 3: Test CloudWatch access\nStep 4: Create a VPC endpoint to access CloudWatch\nStep 5: Test the VPC endpoint\nStep 6: Clean up\nGet started with AWS PrivateLink\nThis tutorial demonstrates how to send a request from an EC2 instance in a private\n    subnet to Amazon CloudWatch using AWS PrivateLink.\nThe following diagram provides an overview of this scenario. To connect from your computer\n    to the instance in the private subnet, you'll first connect to a bastion host in a public\n    subnet. Both the bastion host and the instance must use the same key pair. Because the\n.pem\nfile for the private key is on your computer, not the bastion host,\n    you'll use SSH key forwarding. Then, you can connect to the instance from the bastion host\n    without specifying the\n.pem\nfile in the\nssh\ncommand.\n    After you set up a VPC endpoint for CloudWatch, traffic from the instance that's destined for CloudWatch is\n    resolved to the endpoint network interface and then sent to CloudWatch using the VPC endpoint.\nFor testing purposes, you can use a single Availability Zone. In production, we recommend \n    that you use at least two Availability Zones for low latency and high availability.\nTasks\nStep 1: Create a VPC with subnets\nStep 2: Launch the instances\nStep 3: Test CloudWatch access\nStep 4: Create a VPC endpoint to access CloudWatch\nStep 5: Test the VPC endpoint\nStep 6: Clean up\nStep 1: Create a VPC with subnets\nUse the following procedure to create a VPC with a public subnet and a private subnet.\nTo create the VPC\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nChoose\nCreate VPC\n.\nFor\nResources to create\n, choose\nVPC and more\n.\nFor\nName tag auto-generation\n, enter a name for the VPC.\nTo configure the subnets, do the following:\nFor\nNumber of Availability Zones\n, choose\n1\nor\n2\n, depending on your needs.\nFor\nNumber of public subnets\n, ensure that you have one public\n              subnet per Availability Zone.\nFor\nNumber of private subnets\n, ensure that you have one\n              private subnet per Availability Zone.\nChoose\nCreate VPC\n.\nStep 2: Launch the instances\nUsing the VPC that you created in the previous step, launch the bastion host in the public\n      subnet and the instance in the private subnet.\nPrerequisites\nCreate a key pair using the\n.pem\nformat. You must choose this key pair\n          when you launch both the bastion host and the instance.\nCreate a security group for the bastion host that allows inbound SSH traffic from the CIDR\n          block for your computer.\nCreate a security group for the instance that allows inbound SSH traffic from the security\n          group for the bastion host.\nCreate an IAM instance profile and attach the\nCloudWatchReadOnlyAccess\npolicy.\nTo launch the bastion host\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\nChoose\nLaunch instance\n.\nFor\nName\n, enter a name for your bastion host.\nKeep the default image and instance type.\nFor\nKey pair\n, select your key pair.\nFor\nNetwork settings\n, do the following:\nFor\nVPC\n, choose your VPC.\nFor\nSubnet\n, choose the public subnet.\nFor\nAuto-assign public IP\n, choose\nEnable\n.\nFor\nFirewall\n, choose\nSelect existing\n              security group\nand then choose the security group for the \n              bastion host.\nChoose\nLaunch instance\n.\nTo launch the instance\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\nChoose\nLaunch instance\n.\nFor\nName\n, enter a name for your instance.\nKeep the default image and instance type.\nFor\nKey pair\n, select your key pair.\nFor\nNetwork settings\n, do the following:\nFor\nVPC\n, choose your VPC.\nFor\nSubnet\n, choose the private subnet.\nFor\nAuto-assign public IP\n, choose\nDisable\n.\nFor\nFirewall\n, choose\nSelect existing\n              security group\nand then choose the security group for the \n              instance.\nExpand\nAdvanced details\n. For\nIAM \n          instance profile\n, choose your IAM instance profile.\nChoose\nLaunch instance\n.\nStep 3: Test CloudWatch access\nUse the following procedure to confirm that the instance can't access CloudWatch. You'll do so\n      using a read-only AWS CLI command for CloudWatch.\nTo test CloudWatch access\nFrom your computer, add the key pair to the SSH agent using the following command,\n          where\nkey.pem\nis the name of your .pem file.\nssh-add ./\nkey.pem\nIf you receive an error that permissions for your key pair are too open,\n          run the following command, and then retry the previous command.\nchmod 400 ./\nkey.pem\nConnect to the bastion host from your computer. You must specify the\n-A\noption, the instance user name (for example,\nec2-user\n), and the public IP\n          address of the bastion host.\nssh -A\nec2-user\n@\nbastion-public-ip-address\nConnect to the instance from the bastion host. You must specify the instance user name\n          (for example,\nec2-user\n) and the private IP address of the instance.\nssh\nec2-user\n@\ninstance-private-ip-address\nRun the CloudWatch\nlist-metrics\ncommand on the instance as follows. For the\n--region\noption, specify the Region where you created the VPC.\naws cloudwatch list-metrics --namespace AWS/EC2 --region\nus-east-1\nAfter a few minutes, the command times out. This demonstrates that you\n          can't access CloudWatch from the instance with the current VPC configuration.\nConnect timeout on endpoint URL: https://monitoring.\nus-east-1\n.amazonaws.com/\nStay connected to your instance. After you create the VPC endpoint, you'll \n          try this\nlist-metrics\ncommand again.\nStep 4: Create a VPC endpoint to access CloudWatch\nUse the following procedure to create a VPC endpoint that connects to CloudWatch.\nPrerequisite\nCreate a security group for the VPC endpoint that allows traffic to CloudWatch. For example,\n        add a rule that allows HTTPS traffic from the VPC CIDR block.\nTo create a VPC endpoint for CloudWatch\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nChoose\nCreate endpoint\n.\nFor\nName tag\n, enter a name for the endpoint.\nFor\nService category\n, choose\nAWS services\n.\nFor\nService\n, select\ncom.amazonaws.\nregion\n.monitoring\n.\nFor\nVPC\n, select your VPC.\nFor\nSubnets\n, select the Availability Zone and then select the\n          private subnet.\nFor\nSecurity group\n, select the security group for the VPC endpoint.\nFor\nPolicy\n, select\nFull access\nto allow all\n          operations by all principals on all resources over the VPC endpoint.\n(Optional) To add a tag, choose\nAdd new tag\nand enter the tag\n          key and the tag value.\nChoose\nCreate endpoint\n. The initial status is\nPending\n. Before you go to the next step, wait until the status is\nAvailable\n. This can take a few minutes.\nStep 5: Test the VPC endpoint\nVerify that the VPC endpoint is sending requests from your instance to CloudWatch.\nTo test the VPC endpoint\nRun the following command on your instance. For the\n--region\noption,\n        specify the Region where you created the VPC endpoint.\naws cloudwatch list-metrics --namespace AWS/EC2 --region\nus-east-1\nIf you get a response, even a response with empty results, then you are connected \n      to CloudWatch using AWS PrivateLink.\nIf you get an\nUnauthorizedOperation\nerror, ensure that the instance \n      has an IAM role that allows access to CloudWatch.\nIf the request times out, verify the following:\nThe security group for the endpoint allows traffic to CloudWatch.\nThe\n--region\noption specifies the Region in which you\n        created the VPC endpoint.\nStep 6: Clean up\nIf you no longer need the bastion host and instance that you created for this\n      tutorial, you can terminate them.\nTo terminate the instances\nOpen the Amazon EC2 console at\nhttps://console.aws.amazon.com/ec2/\n.\nIn the navigation pane, choose\nInstances\n.\nSelect both test instances and choose\nInstance state\n,\nTerminate instance\n.\nWhen prompted for confirmation, choose\nTerminate\n.\nIf you no longer need the VPC endpoint, you can delete it.\nTo delete the VPC endpoint\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the VPC endpoint.\nChoose\nActions\n,\nDelete VPC endpoints\n.\nWhen prompted for confirmation, enter\ndelete\nand \n          then choose\nDelete\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConcepts\nAccess\n      AWS services\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/privatelink-access-aws-services.html": "Access AWS services through AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nOverview\nDNS hostnames\nDNS resolution\nPrivate DNS\nSubnets and Availability Zones\nIP address types\nAccess AWS services through\n      AWS PrivateLink\nYou access an AWS service using an endpoint. The default service endpoints are public\n    interfaces, so you must add an internet gateway to your VPC so that traffic can get from the VPC\n    to the AWS service. If this configuration doesn't work with your network security\n    requirements, you can use AWS PrivateLink to connect your VPC to AWS services as if they were in\n    your VPC, without the use of an internet gateway.\nYou can privately access the AWS services that integrate with AWS PrivateLink using VPC\n    endpoints. You can build and manage all layers of your application stack without using an\n    internet gateway.\nContents\nOverview\nDNS hostnames\nDNS resolution\nPrivate DNS\nSubnets and Availability Zones\nIP address types\nServices that integrate\nCreate an interface endpoint\nConfigure an interface endpoint\nReceive alerts for interface endpoint\n        events\nDelete an interface endpoint\nGateway endpoints\nOverview\nYou can access AWS services through their public service endpoints or connect to\n      supported AWS services using AWS PrivateLink. This overview compares these methods.\nAccess through public service endpoints\nThe following diagram shows how instances access AWS services through the public\n        service endpoints. Traffic to an AWS service from an instance in a public subnet is routed\n        to the internet gateway for the VPC and then to the AWS service. Traffic to an\n        AWS service from an instance in a private subnet is routed to a NAT gateway, then to the\n        internet gateway for the VPC, and then to the AWS service. While this traffic traverses\n        the internet gateway, it does not leave the AWS network.\nConnect through AWS PrivateLink\nThe following diagram shows how instances access AWS services through AWS PrivateLink.\n        First, you create an interface VPC endpoint, which establishes connections between the\n        subnets in your VPC and an AWS service using network interfaces. Traffic destined for the\n        AWS service is resolved to the private IP addresses of the endpoint network interfaces\n        using DNS, and then sent to the AWS service using the connection between the VPC endpoint\n        and the AWS service.\nAWS services accept connection requests automatically. The service can't initiate requests \n      to resources through the VPC endpoint.\nDNS hostnames\nMost AWS services offer public Regional endpoints, which have the following syntax.\nprotocol\n://\nservice_code\n.\nregion_code\n.amazonaws.com\nFor example, the public endpoint for Amazon CloudWatch in us-east-2 is as\n      follows.\nhttps://monitoring.us-east-2.amazonaws.com\nWith AWS PrivateLink, you send traffic to the service using private endpoints. When you\n      create an interface VPC endpoint, we create Regional and zonal DNS names that you can use to\n      communicate with the AWS service from your VPC.\nThe Regional DNS name for your interface VPC endpoint has the following syntax:\nendpoint_id\n.\nservice_id\n.\nregion\n.vpce.amazonaws.com\nThe zonal DNS names have the following syntax:\nendpoint_id\n-\naz_name\n.\nservice_id\n.\nregion\n.vpce.amazonaws.com\nWhen you create an interface VPC endpoint for an AWS service, you can enable\nprivate DNS\n. With private DNS, you can \n      continue to make requests to a service using the DNS name for its public endpoint, while \n      leveraging private connectivity through the interface VPC endpoint. For more information, \n      see\nDNS resolution\n.\nThe following\ndescribe-vpc-endpoints\ncommand displays the DNS entries for an interface\n      endpoint.\naws ec2 describe-vpc-endpoints --vpc-endpoint-id\nvpce-099deb00b40f00e22\n--query VpcEndpoints[*].DnsEntries\nThe following is example output for an interface endpoint for Amazon CloudWatch with private DNS\n      names enabled. The first entry is the private Regional endpoint. The next three entries are\n      the private zonal endpoints. The final entry is from the hidden private hosted zone, which\n      resolves requests to the public endpoint to the private IP addresses of the endpoint network\n      interfaces.\n[\n    [\n{\n\"DnsName\": \"vpce-099deb00b40f00e22-lj2wisx3.monitoring.us-east-2.vpce.amazonaws.com\",\n            \"HostedZoneId\": \"ZC8PG0KIFKBRI\"\n        },\n{\n\"DnsName\": \"vpce-099deb00b40f00e22-lj2wisx3-us-east-2c.monitoring.us-east-2.vpce.amazonaws.com\",\n            \"HostedZoneId\": \"ZC8PG0KIFKBRI\"\n        },\n{\n\"DnsName\": \"vpce-099deb00b40f00e22-lj2wisx3-us-east-2a.monitoring.us-east-2.vpce.amazonaws.com\",\n            \"HostedZoneId\": \"ZC8PG0KIFKBRI\"\n        },\n{\n\"DnsName\": \"vpce-099deb00b40f00e22-lj2wisx3-us-east-2b.monitoring.us-east-2.vpce.amazonaws.com\",\n            \"HostedZoneId\": \"ZC8PG0KIFKBRI\"\n        },\n{\n\"DnsName\": \"monitoring.us-east-2.amazonaws.com\",\n            \"HostedZoneId\": \"Z06320943MMOWYG6MAVL9\"\n        }\n    ]\n]\nDNS resolution\nThe DNS records that we create for your interface VPC endpoint are public. Therefore,\n      these DNS names are publicly resolvable. However, DNS requests from outside the VPC still\n      return the private IP addresses of the endpoint network interfaces, so these IP addresses\n      can't be used to access the endpoint service unless you have access to the VPC.\nPrivate DNS\nIf you enable private DNS for your interface VPC endpoint, and your VPC has both\nDNS hostnames and DNS resolution\nenabled, we create a hidden, AWS-managed private hosted zone for you. The hosted zone\n      contains a record set for the default DNS name for the service that resolves it to the private\n      IP addresses of the endpoint network interfaces in your VPC. Therefore, if you have existing\n      applications that send requests to the AWS service using a public Regional endpoint, those\n      requests now go through the endpoint network interfaces, without requiring that you make any\n      changes to those applications.\nAmazon provides a DNS server for your VPC, called the\nRoute\u00c2\u00a053 Resolver\n. The Route\u00c2\u00a053 Resolver automatically\n      resolves local VPC domain names and record in private hosted zones. However, you can't use \n      the Route\u00c2\u00a053 Resolver from outside your VPC. If you'd like to access your VPC endpoint from your \n      on-premises network, you can use Route\u00c2\u00a053 Resolver endpoints and Resolver rules. For more \n      information, see\nIntegrating AWS Transit Gateway with AWS PrivateLink and Amazon Route\u00c2\u00a053 Resolver\n.\nSubnets and Availability Zones\nYou can configure your VPC endpoint with one subnet per Availability Zone. \n      We create an endpoint network interface for the VPC endpoint in your subnet. We\n      assign IP addresses to each endpoint network interface from its subnet, based on\n      the\nIP address type\nof the VPC \n      endpoint. The IP addresses of an endpoint network interface will not change during \n      the lifetime of its VPC endpoint.\nIn a production environment, for high availability and resiliency, we recommend \n      the following:\nConfigure at least two Availability Zones per VPC endpoint and deploy your AWS \n          resources that must access the AWS service in these Availability Zones.\nConfigure private DNS names for the VPC endpoint.\nAccess the AWS service by using its Regional DNS name, also known as the public\n          endpoint.\nThe following diagram shows a VPC endpoint for Amazon CloudWatch with an endpoint network interface\n      in a single Availability Zone. When any resource in any subnet in the VPC accesses Amazon CloudWatch\n      using its public endpoint, we resolve the traffic to the IP address of the endpoint network\n      interface. This includes traffic from subnets in other Availability Zones. However, if\n      Availability Zone 1 is impaired, the resources in Availability Zone 2 lose access to\n      Amazon CloudWatch.\nThe following diagram shows a VPC endpoint for Amazon CloudWatch with endpoint network interfaces\n      in two Availability Zones. When any resource in any subnet in the VPC accesses Amazon CloudWatch by\n      using its public endpoint, we select a healthy endpoint network interface, using the round\n      robin algorithm to alternate between them. We then resolve the traffic to the IP address of\n      the selected endpoint network interface.\nIf it's better for your use case, you can send traffic from your resources to the\n      AWS service by using the endpoint network interface in the same Availability Zone. To do so,\n      use the private zonal endpoint or IP address of the endpoint network interface.\nIP address types\nAWS services can support IPv6 through their private endpoints even if they do not \n      support IPv6 through their public endpoints. Endpoints that support IPv6 can respond to DNS \n      queries with AAAA records.\nRequirements to enable IPv6 for an interface endpoint\nThe AWS service must make its service endpoints available over IPv6. For more\n          information, see\nView IPv6 support\n.\nThe IP address type of an interface endpoint must be compatible with the subnets for\n          the interface endpoint, as described here:\nIPv4\n\u00e2\u0080\u0093 Assign IPv4 addresses to your endpoint\n              network interfaces. This option is supported only if all selected subnets have\n              IPv4 address ranges.\nIPv6\n\u00e2\u0080\u0093 Assign IPv6 addresses to your endpoint\n              network interfaces. This option is supported only if all selected subnets are IPv6\n              only subnets.\nDualstack\n\u00e2\u0080\u0093 Assign both IPv4 and IPv6 addresses to\n              your endpoint network interfaces. This option is supported only if all selected\n              subnets have both IPv4 and IPv6 address ranges.\nIf an interface VPC endpoint supports IPv4, the endpoint network interfaces have IPv4 \n      addresses. If an interface VPC endpoint supports IPv6, the endpoint network interfaces have\n      IPv6 addresses. The IPv6 address for an endpoint network interface is unreachable from the \n      internet. If you describe an endpoint network interface with an IPv6 address, notice that\ndenyAllIgwTraffic\nis enabled.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGet started\nServices that integrate\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/aws-services-privatelink-support.html": "AWS services that integrate with AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nView available AWS service names\nView information about a service\nView endpoint policy support\nView IPv6 support\nAWS services that integrate with AWS PrivateLink\nThe following AWS services integrate with AWS PrivateLink. You can create a VPC endpoint \n        to connect to these services privately, as if they were running in your own VPC.\nChoose the link in the\nAWS service\ncolumn to see the\n        documentation for services that integrate with AWS PrivateLink. The\nService name\ncolumn contains the service name that you specify when you\n        create the interface VPC endpoint, or indicates that the service manages the\n        endpoint.\nAWS service\nService name\nAccess Analyzer\ncom.amazonaws.\nregion\n.access-analyzer\nAWS Account Management\ncom.amazonaws.\nregion\n.account\nAmazon API Gateway\ncom.amazonaws.\nregion\n.execute-api\nAWS App Mesh\ncom.amazonaws.\nregion\n.appmesh\ncom.amazonaws.\nregion\n.appmesh-envoy-management\nAWS App Runner\ncom.amazonaws.\nregion\n.apprunner\nAWS App Runner services\ncom.amazonaws.\nregion\n.apprunner.requests\nApplication Auto Scaling\ncom.amazonaws.\nregion\n.application-autoscaling\nAWS Application Migration Service\ncom.amazonaws.\nregion\n.mgn\nAmazon AppStream 2.0\ncom.amazonaws.\nregion\n.appstream.api\ncom.amazonaws.\nregion\n.appstream.streaming\nAWS AppSync\ncom.amazonaws.\nregion\n.appsync-api\nAmazon Athena\ncom.amazonaws.\nregion\n.athena\nAWS Audit Manager\ncom.amazonaws.\nregion\n.auditmanager\nAmazon Aurora\ncom.amazonaws.\nregion\n.rds\nAWS Auto Scaling\ncom.amazonaws.\nregion\n.autoscaling-plans\nAWS Backup\ncom.amazonaws.\nregion\n.backup\ncom.amazonaws.\nregion\n.backup-gateway\nAWS Batch\ncom.amazonaws.\nregion\n.batch\nAmazon Bedrock\ncom.amazonaws.\nregion\n.bedrock\ncom.amazonaws.\nregion\n.bedrock-runtime\nAWS Billing Conductor\ncom.amazonaws.\nregion\n.billingconductor\nAmazon Braket\ncom.amazonaws.\nregion\n.braket\nAWS Clean Rooms\ncom.amazonaws.\nregion\n.cleanrooms\nAWS Cloud Control API\ncom.amazonaws.\nregion\n.cloudcontrolapi\ncom.amazonaws.\nregion\n.cloudcontrolapi-fips\nAmazon Cloud Directory\ncom.amazonaws.\nregion\n.clouddirectory\nAWS CloudFormation\ncom.amazonaws.\nregion\n.cloudformation\nAWS CloudHSM\ncom.amazonaws.\nregion\n.cloudhsmv2\nAWS Cloud Map\ncom.amazonaws.\nregion\n.servicediscovery\ncom.amazonaws.\nregion\n.servicediscovery-fips\ncom.amazonaws.\nregion\n.data-servicediscovery\ncom.amazonaws.\nregion\n.data-servicediscovery-fips\nAWS CloudTrail\ncom.amazonaws.\nregion\n.cloudtrail\nAmazon CloudWatch\ncom.amazonaws.\nregion\n.evidently\ncom.amazonaws.\nregion\n.evidently-dataplane\ncom.amazonaws.\nregion\n.monitoring\ncom.amazonaws.\nregion\n.rum\ncom.amazonaws.\nregion\n.rum-dataplane\ncom.amazonaws.\nregion\n.synthetics\nAmazon CloudWatch Events\ncom.amazonaws.\nregion\n.events\nAmazon CloudWatch Logs\ncom.amazonaws.\nregion\n.logs\nAWS CodeArtifact\ncom.amazonaws.\nregion\n.codeartifact.api\ncom.amazonaws.\nregion\n.codeartifact.repositories\nAWS CodeBuild\ncom.amazonaws.\nregion\n.codebuild\ncom.amazonaws.\nregion\n.codebuild-fips\nAWS CodeCommit\ncom.amazonaws.\nregion\n.codecommit\ncom.amazonaws.\nregion\n.codecommit-fips\ncom.amazonaws.\nregion\n.git-codecommit\ncom.amazonaws.\nregion\n.git-codecommit-fips\nAWS CodeDeploy\ncom.amazonaws.\nregion\n.codedeploy\ncom.amazonaws.\nregion\n.codedeploy-commands-secure\nAmazon CodeGuru Profiler\ncom.amazonaws.\nregion\n.codeguru-profiler\nAmazon CodeGuru Reviewer\ncom.amazonaws.\nregion\n.codeguru-reviewer\nAWS CodePipeline\ncom.amazonaws.\nregion\n.codepipeline\nAWS CodeStar Connections\ncom.amazonaws.\nregion\n.codestar-connections.api\nAmazon CodeWhisperer\ncom.amazonaws.\nregion\n.codewhisperer\nAmazon Comprehend\ncom.amazonaws.\nregion\n.comprehend\nAmazon Comprehend Medical\ncom.amazonaws.\nregion\n.comprehendmedical\nAWS Config\ncom.amazonaws.\nregion\n.config\nAmazon Connect\ncom.amazonaws.\nregion\n.app-integrations\ncom.amazonaws.\nregion\n.cases\ncom.amazonaws.\nregion\n.connect-campaigns\ncom.amazonaws.\nregion\n.profile\ncom.amazonaws.\nregion\n.voiceid\ncom.amazonaws.\nregion\n.wisdom\nAWS Data Exchange\ncom.amazonaws.\nregion\n.dataexchange\nAWS Database Migration Service\ncom.amazonaws.\nregion\n.dms\ncom.amazonaws.\nregion\n.dms-fips\nAWS DataSync\ncom.amazonaws.\nregion\n.datasync\nAmazon DataZone\ncom.amazonaws.\nregion\n.datazone\nAmazon DevOps\u00c2\u00a0Guru\ncom.amazonaws.\nregion\n.devops-guru\nAWS Directory Service\ncom.amazonaws.\nregion\n.ds\nAmazon EBS direct APIs\ncom.amazonaws.\nregion\n.ebs\nAmazon EC2\ncom.amazonaws.\nregion\n.ec2\nAmazon EC2 Auto Scaling\ncom.amazonaws.\nregion\n.autoscaling\nEC2 Image Builder\ncom.amazonaws.\nregion\n.imagebuilder\nAmazon ECR\ncom.amazonaws.\nregion\n.ecr.api\ncom.amazonaws.\nregion\n.ecr.dkr\nAmazon ECS\ncom.amazonaws.\nregion\n.ecs\ncom.amazonaws.\nregion\n.ecs-agent\ncom.amazonaws.\nregion\n.ecs-telemetry\nAmazon EKS\ncom.amazonaws.\nregion\n.eks\nAWS Elastic Beanstalk\ncom.amazonaws.\nregion\n.elasticbeanstalk\ncom.amazonaws.\nregion\n.elasticbeanstalk-health\nAWS Elastic Disaster Recovery\ncom.amazonaws.\nregion\n.drs\nAmazon Elastic File System\ncom.amazonaws.\nregion\n.elasticfilesystem\ncom.amazonaws.\nregion\n.elasticfilesystem-fips\nAmazon Elastic Inference\ncom.amazonaws.\nregion\n.elastic-inference.runtime\nElastic Load Balancing\ncom.amazonaws.\nregion\n.elasticloadbalancing\nAmazon ElastiCache\ncom.amazonaws.\nregion\n.elasticache\ncom.amazonaws.\nregion\n.elasticache-fips\nAWS Elemental MediaConnect\ncom.amazonaws.\nregion\n.mediaconnect\nAmazon EMR\ncom.amazonaws.\nregion\n.elasticmapreduce\nAmazon EMR on EKS\ncom.amazonaws.\nregion\n.emr-containers\nAmazon EMR Serverless\ncom.amazonaws.\nregion\n.emr-serverless\nAWS Entity Resolution\ncom.amazonaws.\nregion\n.entityresolution\nAmazon EventBridge\ncom.amazonaws.\nregion\n.events\nAWS Fault Injection Simulator\ncom.amazonaws.\nregion\n.fis\nAmazon FinSpace\ncom.amazonaws.\nregion\n.finspace\ncom.amazonaws.\nregion\n.finspace-api\nAmazon Forecast\ncom.amazonaws.\nregion\n.forecast\ncom.amazonaws.\nregion\n.forecastquery\ncom.amazonaws.\nregion\n.forecast-fips\ncom.amazonaws.\nregion\n.forecastquery-fips\nAmazon Fraud Detector\ncom.amazonaws.\nregion\n.frauddetector\nAmazon FSx\ncom.amazonaws.\nregion\n.fsx\ncom.amazonaws.\nregion\n.fsx-fips\nAWS Glue\ncom.amazonaws.\nregion\n.glue\nAWS Glue DataBrew\ncom.amazonaws.\nregion\n.databrew\nAmazon Managed Grafana\ncom.amazonaws.\nregion\n.grafana\ncom.amazonaws.\nregion\n.grafana-workspace\nAWS Ground Station\ncom.amazonaws.\nregion\n.groundstation\nAmazon GuardDuty\ncom.amazonaws.\nregion\n.guardduty-data\ncom.amazonaws.\nregion\n.guardduty-data-fips\nAWS HealthImaging\ncom.amazonaws.\nregion\n.medical-imaging\ncom.amazonaws.\nregion\n.runtime-medical-imaging\nAWS HealthLake\ncom.amazonaws.\nregion\n.healthlake\nIAM Identity Center\ncom.amazonaws.\nregion\n.identitystore\nIAM Roles Anywhere\ncom.amazonaws.\nregion\n.rolesanywhere\nAmazon Inspector\ncom.amazonaws.\nregion\n.inspector2\nAWS IoT Core\ncom.amazonaws.\nregion\n.iot.data\ncom.amazonaws.\nregion\n.iot.fleethub.api\nAWS IoT Core Device Advisor\ncom.amazonaws.\nregion\n.deviceadvisor.iot\nAWS IoT Core for LoRaWAN\ncom.amazonaws.\nregion\n.iotwireless.api\ncom.amazonaws.\nregion\n.lorawan.cups\ncom.amazonaws.\nregion\n.lorawan.lns\nAWS IoT FleetWise\ncom.amazonaws.\nregion\n.iotfleetwise\nAWS IoT Greengrass\ncom.amazonaws.\nregion\n.greengrass\nAWS IoT RoboRunner\ncom.amazonaws.\nregion\n.iotroborunner\nAWS IoT SiteWise\ncom.amazonaws.\nregion\n.iotsitewise.api\ncom.amazonaws.\nregion\n.iotsitewise.data\nAWS IoT TwinMaker\ncom.amazonaws.\nregion\n.iottwinmaker.api\ncom.amazonaws.\nregion\n.iottwinmaker.data\nAmazon Kendra\ncom.amazonaws.\nregion\n.kendra\naws.api.\nregion\n.kendra-ranking\nAWS Key Management Service\ncom.amazonaws.\nregion\n.kms\ncom.amazonaws.\nregion\n.kms-fips\nAmazon Keyspaces (for Apache Cassandra)\ncom.amazonaws.\nregion\n.cassandra\ncom.amazonaws.\nregion\n.cassandra-fips\nAmazon Kinesis Data Firehose\ncom.amazonaws.\nregion\n.kinesis-firehose\nAmazon Kinesis Data Streams\ncom.amazonaws.\nregion\n.kinesis-streams\nAWS Lake Formation\ncom.amazonaws.\nregion\n.lakeformation\nAWS Lambda\ncom.amazonaws.\nregion\n.lambda\nAmazon Lex\ncom.amazonaws.\nregion\n.models-v2-lex\ncom.amazonaws.\nregion\n.runtime-v2-lex\nAWS License Manager\ncom.amazonaws.\nregion\n.license-manager\ncom.amazonaws.\nregion\n.license-manager-fips\nAmazon Lookout for Equipment\ncom.amazonaws.\nregion\n.lookoutequipment\nAmazon Lookout for Metrics\ncom.amazonaws.\nregion\n.lookoutmetrics\nAmazon Lookout for Vision\ncom.amazonaws.\nregion\n.lookoutvision\nAmazon Macie\ncom.amazonaws.\nregion\n.macie2\nAWS Mainframe Modernization\ncom.amazonaws.\nregion\n.m2\nAmazon Managed Blockchain\ncom.amazonaws.\nregion\n.managedblockchain-query\ncom.amazonaws.\nregion\n.managedblockchain.bitcoin.mainnet\ncom.amazonaws.\nregion\n.managedblockchain.bitcoin.testnet\nAmazon Managed Service for Prometheus\ncom.amazonaws.\nregion\n.aps\ncom.amazonaws.\nregion\n.aps-workspaces\nAmazon Managed Workflows for Apache Airflow\ncom.amazonaws.\nregion\n.airflow.api\ncom.amazonaws.\nregion\n.airflow.env\ncom.amazonaws.\nregion\n.airflow.ops\nAWS Management Console\ncom.amazonaws.\nregion\n.console\ncom.amazonaws.\nregion\n.signin\nAmazon MemoryDB for Redis\ncom.amazonaws.\nregion\n.memory-db\ncom.amazonaws.\nregion\n.memorydb-fips\nAWS Migration Hub Orchestrator\ncom.amazonaws.\nregion\n.migrationhub-orchestrator\nAWS Migration Hub Refactor Spaces\ncom.amazonaws.\nregion\n.refactor-spaces\nMigration Hub Strategy Recommendations\ncom.amazonaws.\nregion\n.migrationhub-strategy\nAmazon Nimble Studio\ncom.amazonaws.\nregion\n.nimble\nAWS HealthOmics\ncom.amazonaws.\nregion\n.analytics-omics\ncom.amazonaws.\nregion\n.control-storage-omics\ncom.amazonaws.\nregion\n.storage-omics\ncom.amazonaws.\nregion\n.tags-omics\ncom.amazonaws.\nregion\n.workflows-omics\nAmazon OpenSearch Service\nThese endpoints are service-managed\nAWS Panorama\ncom.amazonaws.\nregion\n.panorama\nAWS Payment Cryptography\ncom.amazonaws.\nregion\n.payment-cryptography.controlplane\ncom.amazonaws.\nregion\n.payment-cryptography.dataplane\nAmazon Personalize\ncom.amazonaws.\nregion\n.personalize\ncom.amazonaws.\nregion\n.personalize-events\ncom.amazonaws.\nregion\n.personalize-runtime\nAmazon Pinpoint\ncom.amazonaws.\nregion\n.pinpoint\ncom.amazonaws.\nregion\n.pinpoint-sms-voice-v2\nAmazon Polly\ncom.amazonaws.\nregion\n.polly\nAWS Private 5G\ncom.amazonaws.\nregion\n.private-networks\nAWS Private Certificate Authority\ncom.amazonaws.\nregion\n.acm-pca\ncom.amazonaws.\nregion\n.pca-connector-ad\nAWS Proton\ncom.amazonaws.\nregion\n.proton\nAmazon QLDB\ncom.amazonaws.\nregion\n.qldb.session\nAmazon RDS\ncom.amazonaws.\nregion\n.rds\nAmazon RDS Data\n                            API\ncom.amazonaws.\nregion\n.rds-data\nAmazon Redshift\ncom.amazonaws.\nregion\n.redshift\ncom.amazonaws.\nregion\n.redshift-fips\nAmazon Redshift Data API\ncom.amazonaws.\nregion\n.redshift-data\nAmazon Rekognition\ncom.amazonaws.\nregion\n.rekognition\ncom.amazonaws.\nregion\n.rekognition-fips\ncom.amazonaws.\nregion\n.streaming-rekognition\ncom.amazonaws.\nregion\n.streaming-rekognition-fips\nAWS RoboMaker\ncom.amazonaws.\nregion\n.robomaker\nAmazon S3\ncom.amazonaws.\nregion\n.s3\nAmazon S3 Multi-Region Access Points\ncom.amazonaws.s3-global.accesspoint\nAmazon S3 on Outposts\ncom.amazonaws.\nregion\n.s3-outposts\nAmazon SageMaker\naws.sagemaker.\nregion\n.notebook\naws.sagemaker.\nregion\n.studio\ncom.amazonaws.\nregion\n.sagemaker.api\ncom.amazonaws.\nregion\n.sagemaker.featurestore-runtime\ncom.amazonaws.\nregion\n.sagemaker.metrics\ncom.amazonaws.\nregion\n.sagemaker.runtime\ncom.amazonaws.\nregion\n.sagemaker.runtime-fips\nAWS Secrets Manager\ncom.amazonaws.\nregion\n.secretsmanager\nAWS Security Hub\ncom.amazonaws.\nregion\n.securityhub\nAWS Security Token Service\ncom.amazonaws.\nregion\n.sts\nService Catalog\ncom.amazonaws.\nregion\n.servicecatalog\ncom.amazonaws.\nregion\n.servicecatalog-appregistry\nAmazon SES\ncom.amazonaws.\nregion\n.email-smtp\nAWS SimSpace Weaver\ncom.amazonaws.\nregion\n.simspaceweaver\nAWS Snow Device Management\ncom.amazonaws.\nregion\n.snow-device-management\nAmazon SNS\ncom.amazonaws.\nregion\n.sns\nAmazon SQS\ncom.amazonaws.\nregion\n.sqs\nAmazon SWF\ncom.amazonaws.\nregion\n.swf\ncom.amazonaws.\nregion\n.swf-fips\nAWS Step Functions\ncom.amazonaws.\nregion\n.states\ncom.amazonaws.\nregion\n.sync-states\nAWS Storage Gateway\ncom.amazonaws.\nregion\n.storagegateway\nAWS Systems Manager\ncom.amazonaws.\nregion\n.ec2messages\ncom.amazonaws.\nregion\n.ssm\ncom.amazonaws.\nregion\n.ssm-contacts\ncom.amazonaws.\nregion\n.ssm-incidents\ncom.amazonaws.\nregion\n.ssmmessages\nAWS Telco Network Builder\ncom.amazonaws.\nregion\n.tnb\nAmazon Textract\ncom.amazonaws.\nregion\n.textract\ncom.amazonaws.\nregion\n.textract-fips\nAmazon Timestream\ncom.amazonaws.\nregion\n.timestream.ingest-\ncell\ncom.amazonaws.\nregion\n.timestream.query-\ncell\nAmazon Transcribe\ncom.amazonaws.\nregion\n.transcribe\ncom.amazonaws.\nregion\n.transcribestreaming\nAmazon Transcribe\n                            Medical\ncom.amazonaws.\nregion\n.transcribe\ncom.amazonaws.\nregion\n.transcribestreaming\nAWS Transfer for SFTP\ncom.amazonaws.\nregion\n.transfer\ncom.amazonaws.\nregion\n.transfer.server\nAmazon Translate\ncom.amazonaws.\nregion\n.translate\nAmazon Verified Permissions\ncom.amazonaws.\nregion\n.verifiedpermissions\nAmazon VPC Lattice\ncom.amazonaws.\nregion\n.vpc-lattice\nAmazon WorkSpaces\ncom.amazonaws.\nregion\n.workspaces\nAWS X-Ray\ncom.amazonaws.\nregion\n.xray\nView available AWS service names\nYou can use the\ndescribe-vpc-endpoint-services\ncommand to view the service names that\n            support VPC endpoints.\nThe following example displays the AWS services that support interface endpoints in\n            the specified Region. The\n--query\noption limits the output to the service\n            names.\naws ec2 describe-vpc-endpoint-services \\\n  --filters Name=service-type,Values=Interface Name=owner,Values=amazon \\ \n  --region\nus-east-1\n\\\n  --query ServiceNames\nThe following is example output:\n[\n    \"aws.api.us-east-1.kendra-ranking\",\n    \"aws.sagemaker.us-east-1.notebook\",\n    \"aws.sagemaker.us-east-1.studio\",\n    \"com.amazonaws.s3-global.accesspoint\",\n    \"com.amazonaws.us-east-1.access-analyzer\",\n    \"com.amazonaws.us-east-1.account\",\n    ...\n]\nView information about a service\nAfter you have the service name, you can use the\ndescribe-vpc-endpoint-services\ncommand to view detailed information about\n            each endpoint service.\nThe following example displays information about the Amazon CloudWatch interface endpoint in the\n            specified Region.\naws ec2 describe-vpc-endpoint-services \\\n  --service-name \"com.amazonaws.us-east-1.monitoring\" \\\n  --region\nus-east-1\nThe following is example output.\nVpcEndpointPolicySupported\nindicates\n            whether\nendpoint policies\nare supported.\nSupportedIpAddressTypes\nindicates which IP address types are supported\n            .\n{\n\"ServiceDetails\": [\n{\n\"ServiceName\": \"com.amazonaws.us-east-1.monitoring\",\n            \"ServiceId\": \"vpce-svc-0fc975f3e7e5beba4\",\n            \"ServiceType\": [\n{\n\"ServiceType\": \"Interface\"\n                }\n            ],\n            \"AvailabilityZones\": [\n                \"us-east-1a\",\n                \"us-east-1b\",\n                \"us-east-1c\",\n                \"us-east-1d\",\n                \"us-east-1e\",\n                \"us-east-1f\"\n            ],\n            \"Owner\": \"amazon\",\n            \"BaseEndpointDnsNames\": [\n                \"monitoring.us-east-1.vpce.amazonaws.com\"\n            ],\n            \"PrivateDnsName\": \"monitoring.us-east-1.amazonaws.com\",\n            \"PrivateDnsNames\": [\n{\n\"PrivateDnsName\": \"monitoring.us-east-1.amazonaws.com\"\n                }\n            ],\n            \"VpcEndpointPolicySupported\": true,\n            \"AcceptanceRequired\": false,\n            \"ManagesVpcEndpoints\": false,\n            \"Tags\": [],\n            \"PrivateDnsNameVerificationState\": \"verified\",\n            \"SupportedIpAddressTypes\": [\n                \"ipv4\"\n            ]\n        }\n    ],\n    \"ServiceNames\": [\n        \"com.amazonaws.us-east-1.monitoring\"\n    ]\n}\nView endpoint policy support\nTo verify whether a service supports\nendpoint\n                policies\n, call the\ndescribe-vpc-endpoint-services\ncommand and check the value of\nVpcEndpointPolicySupported\n. The possible values are\ntrue\nand\nfalse\n.\nThe following example checks whether the specified service supports endpoint policies\n            in the specified Region. The\n--query\noption limits the output to the value\n            of\nVpcEndpointPolicySupported\n.\naws ec2 describe-vpc-endpoint-services \\\n  --service-name \"\ncom.amazonaws.us-east-1.s3\n\" \\\n  --region\nus-east-1\n\\\n  --query ServiceDetails[*].VpcEndpointPolicySupported \\\n  --output text\nThe following is example output.\nTrue\nThe following example lists the AWS services that support endpoint policies in the\n            specified Region. The\n--query\noption limits the output to the service\n            names. To run this command using the Windows command prompt, remove the single quotes\n            around the query string, and change the line continuation character from \\ to ^.\naws ec2 describe-vpc-endpoint-services \\\n  --filters Name=service-type,Values=Interface Name=owner,Values=amazon \\\n  --region\nus-east-1\n\\\n  --query 'ServiceDetails[?VpcEndpointPolicySupported==`true`].ServiceName'\nThe following is example output.\n[\n    \"aws.api.us-east-1.kendra-ranking\",\n    \"aws.sagemaker.us-east-1.notebook\",\n    \"aws.sagemaker.us-east-1.studio\",\n    \"com.amazonaws.s3-global.accesspoint\",\n    \"com.amazonaws.us-east-1.access-analyzer\",\n    \"com.amazonaws.us-east-1.account\",\n    ...\n]\nThe following example lists the AWS services that do not support endpoint policies in the\n            specified Region. The\n--query\noption limits the output to the service\n            names. To run this command using the Windows command prompt, remove the single quotes\n            around the query string, and change the line continuation character from \\ to ^.\naws ec2 describe-vpc-endpoint-services \\\n  --filters Name=service-type,Values=Interface Name=owner,Values=amazon \\\n  --region\nus-east-1\n\\\n  --query 'ServiceDetails[?VpcEndpointPolicySupported==`false`].ServiceName'\nThe following is example output.\n[\n    \"com.amazonaws.us-east-1.appmesh-envoy-management\",\n    \"com.amazonaws.us-east-1.apprunner.requests\",\n    \"com.amazonaws.us-east-1.appstream.api\",\n    \"com.amazonaws.us-east-1.appstream.streaming\",\n    \"com.amazonaws.us-east-1.awsconnector\",\n    \"com.amazonaws.us-east-1.cleanrooms\",\n    \"com.amazonaws.us-east-1.cloudtrail\",\n    \"com.amazonaws.us-east-1.codeguru-profiler\",\n    \"com.amazonaws.us-east-1.codeguru-reviewer\",\n    \"com.amazonaws.us-east-1.codepipeline\",\n    \"com.amazonaws.us-east-1.codewhisperer\",\n    \"com.amazonaws.us-east-1.datasync\",\n    \"com.amazonaws.us-east-1.datazone\",\n    \"com.amazonaws.us-east-1.deviceadvisor.iot\",\n    \"com.amazonaws.us-east-1.ebs\",\n    \"com.amazonaws.us-east-1.eks\",\n    \"com.amazonaws.us-east-1.elastic-inference.runtime\",\n    \"com.amazonaws.us-east-1.email-smtp\",\n    \"com.amazonaws.us-east-1.grafana-workspace\",\n    \"com.amazonaws.us-east-1.iot.data\",\n    \"com.amazonaws.us-east-1.iotwireless.api\",\n    \"com.amazonaws.us-east-1.lorawan.cups\",\n    \"com.amazonaws.us-east-1.lorawan.lns\",\n    \"com.amazonaws.us-east-1.macie2\",\n    \"com.amazonaws.us-east-1.nimble\",\n    \"com.amazonaws.us-east-1.redshift-data\",\n    \"com.amazonaws.us-east-1.refactor-spaces\",\n    \"com.amazonaws.us-east-1.sagemaker.runtime-fips\",\n    \"com.amazonaws.us-east-1.storagegateway\",\n    \"com.amazonaws.us-east-1.transfer\",\n    \"com.amazonaws.us-east-1.transfer.server\",\n    \"com.amazonaws.us-east-1.verifiedpermissions\"\n]\nView IPv6 support\nYou can use the following\ndescribe-vpc-endpoint-services\ncommand to view the AWS services that you\n            can access over IPv6 in the specified Region. The\n--query\noption limits the\n            output to the service names.\naws ec2 describe-vpc-endpoint-services \\\n  --filters Name=supported-ip-address-types,Values=ipv6 Name=owner,Values=amazon Name=service-type,Values=Interface \\ \n  --region\nus-east-1\n\\\n  --query ServiceNames\nThe following is example output:\n[\n    \"aws.api.us-east-1.kendra-ranking\",\n    \"com.amazonaws.us-east-1.athena\",\n    \"com.amazonaws.us-east-1.data-servicediscovery\",\n    \"com.amazonaws.us-east-1.data-servicediscovery-fips\",\n    \"com.amazonaws.us-east-1.glue\",\n    \"com.amazonaws.us-east-1.lakeformation\",\n    \"com.amazonaws.us-east-1.servicediscovery\",\n    \"com.amazonaws.us-east-1.servicediscovery-fips\"\n]\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAccess\n      AWS services\nCreate an interface endpoint\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/create-interface-endpoint.html": "Access an AWS service using an interface VPC endpoint - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nPrerequisites\nCreate a VPC endpoint\nShared subnets\nAccess an AWS service using an interface VPC endpoint\nYou can create an interface VPC endpoint to connect to services powered by AWS PrivateLink,\n      including many AWS services. For an overview, see\nAWS PrivateLink concepts\nand\nAccess AWS services through\n      AWS PrivateLink\n.\nFor each subnet that you specify from your VPC, we create an endpoint network interface in\n      the subnet and assign it a private IP address from the subnet address range. An endpoint\n      network interface is a requester-managed network interface; you can view it in your\n      AWS account, but you can't manage it yourself.\nYou are billed for hourly usage and data processing charges. For more\n      information, see\nInterface endpoint pricing\n.\nContents\nPrerequisites\nCreate a VPC endpoint\nShared subnets\nPrerequisites\nDeploy the resources that will access the AWS service in your VPC.\nTo use private DNS, you must enable DNS hostnames and DNS resolution for your VPC.\n            For more information, see\nView\n              and update DNS attributes\nin the\nAmazon VPC User Guide\n.\nTo enable IPv6 for an interface endpoint, the AWS service must support access\n            over IPv6. For more information, see\nIP address types\n.\nCreate a security group that allows the resources in your VPC to communicate with\n            the endpoint network interfaces for the VPC endpoint. To ensure that tools such as the\n            AWS CLI can make requests over HTTPS from resources in the VPC to the AWS service, the\n            security group must allow inbound HTTPS traffic.\nIf your resources are in a subnet with a network ACL, verify that the network ACL\n            allows traffic between the endpoint network interfaces and the resources in the\n            VPC.\nThere are quotas on your AWS PrivateLink resources. For more information, see\nAWS PrivateLink quotas\n.\nCreate a VPC endpoint\nUse the following procedure to create an interface VPC endpoint that connects to an\n        AWS service.\nTo create an interface endpoint for an AWS service\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nChoose\nCreate endpoint\n.\nFor\nService category\n, choose\nAWS services\n.\nFor\nService name\n, select the service. For more information,\n            see\nAWS services that integrate with AWS PrivateLink\n.\nFor\nVPC\n, select the VPC from which you'll access the\n            AWS service.\nIf, in Step 5, you selected the service name for Amazon S3, and if you want to configure\nprivate DNS support\n, select\nAdditional\n              settings\n,\nEnable DNS name\n. When you make this\n            selection, it also automatically selects\nEnable private DNS only for inbound\n              endpoint\n. You can configure private DNS with an inbound Resolver endpoint\n            only for interface endpoints for Amazon S3. If you do not have a gateway endpoint for Amazon S3\n            and you select\nEnable private DNS only for inbound endpoint\n, you'll\n            receive an error when you attempt the final step in this procedure.\nIf, in Step 5, you selected the service name for any service other than Amazon S3,\nAdditional settings\n,\nEnable DNS name\nis\n            already selected. We recommend that you keep the default.\nFor\nSubnets\n, select one subnet per Availability Zone from which\n            you'll access the AWS service. You can't select multiple subnets from the same\n            Availability Zone. We create an endpoint network interface in each subnet that you\n            select. By default, we select IP addresses from the subnet IP address ranges and assign\n            them to the endpoint network interfaces. To choose the IP addresses for an endpoint\n            network interface, select\nDesignate IP addresses\nand enter an IPv4\n            address from the subnet address range. If the endpoint service supports IPv6, you can\n            also enter an IPv6 address from the subnet address range.\nFor\nIP address type\n, choose from the following\n            options:\nIPv4\n\u00e2\u0080\u0093 Assign IPv4 addresses to your endpoint\n                network interfaces. This option is supported only if all selected subnets have\n                IPv4 address ranges and the service accepts IPv4 requests.\nIPv6\n\u00e2\u0080\u0093 Assign IPv6 addresses to your endpoint\n                network interfaces. This option is supported only if all selected subnets are IPv6\n                only subnets and the service accepts IPv6 requests.\nDualstack\n\u00e2\u0080\u0093 Assign both IPv4 and IPv6 addresses to\n                your endpoint network interfaces. This option is supported only if all selected\n                subnets have both IPv4 and IPv6 address ranges and the service accepts both \n                IPv4 and IPv6 requests.\nFor\nSecurity groups\n, select the security groups to associate\n            with the endpoint network interfaces for the VPC endpoint. By default, we associate the\n            default security group for the VPC.\nFor\nPolicy\n, select\nFull access\nto allow\n            all operations by all principals on all resources over the VPC endpoint. Otherwise,\n            select\nCustom\nto attach a VPC endpoint policy that controls the\n            permissions that principals have for performing actions on resources over the VPC\n            endpoint. This option is available only if the service supports VPC endpoint policies.\n            For more information, see\nEndpoint policies\n.\n(Optional) To add a tag, choose\nAdd new tag\nand enter the tag\n            key and the tag value.\nChoose\nCreate endpoint\n.\nTo create an interface endpoint using the command line\ncreate-vpc-endpoint\n(AWS CLI)\nNew-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nShared subnets\nYou can't create, describe, modify, or delete VPC endpoints in subnets that are shared with\n        you. However, you can use the VPC endpoints in subnets that are shared with you.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nServices that integrate\nConfigure an interface endpoint\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/interface-endpoints.html": "Configure an interface endpoint - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nAdd or remove subnets\nAssociate security groups\nEdit the VPC endpoint policy\nEnable private DNS names\nManage tags\nConfigure an interface endpoint\nAfter you create an interface VPC endpoint, you can update its configuration.\nTasks\nAdd or remove subnets\nAssociate security groups\nEdit the VPC endpoint policy\nEnable private DNS names\nManage tags\nAdd or remove subnets\nYou can choose one subnet per Availability Zone for your interface endpoint.\n      If you add a subnet, we create an endpoint network interface in the subnet and\n      assign it a private IP address from the IP address range of the subnet. \n      If you remove a subnet, we delete its endpoint network interface.\nTo change the subnets using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the interface endpoint.\nChoose\nActions\n,\nManage subnets\n.\nSelect or deselect Availability Zones as needed. For each Availability Zone,\n          select one subnet. By default, we select IP addresses from the subnet IP address \n          ranges and assign them to the endpoint network interfaces. To choose the IP addresses \n          for an endpoint network interface, select\nDesignate IP addresses\nand enter an IPv4 address from the subnet address range. If the endpoint service \n          supports IPv6, you can also enter an IPv6 address from the subnet address range.\nIf you specify an IP address for a subnet that already has an endpoint network \n          interface for this VPC endpoint, we replace the endpoint network interface with a new one. \n          This processes temporarily disconnects the subnet and the VPC endpoint.\nChoose\nModify subnets\n.\nTo change the subnets using the command line\nmodify-vpc-endpoint\n(AWS CLI)\nEdit-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nAssociate security groups\nYou can change the security groups that are associated with the network interfaces\n      for your interface endpoint. The security group rules control the traffic that is\n      allowed to the endpoint network interface from the resources in your VPC.\nTo change the security groups using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the interface endpoint.\nChoose\nActions\n,\nManage security groups\n.\nSelect or deselect security groups as needed.\nChoose\nModify security groups\n.\nTo change the security groups using the command line\nmodify-vpc-endpoint\n(AWS CLI)\nEdit-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nEdit the VPC endpoint policy\nIf the AWS service supports endpoint policies you can edit the endpoint policy for \n      the endpoint. After you update an endpoint policy, it can take a few minutes for the \n      changes to take effect. For more information, see\nEndpoint policies\n.\nTo change the endpoint policy using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the interface endpoint.\nChoose\nActions\n,\nManage policy\n.\nChoose\nFull Access\nto allow full access to the service, or\n          choose\nCustom\nand attach a custom policy.\nChoose\nSave\n.\nTo change the endpoint policy using the command line\nmodify-vpc-endpoint\n(AWS CLI)\nEdit-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nEnable private DNS names\nYou can enable private DNS names for your VPC endpoint. To use private DNS names, you must\n      enable both\nDNS hostnames and DNS\n        resolution\nfor your VPC. After you enable private DNS names, it might take a few\n      minutes for the private IP addresses to become available. The DNS records that we create when\n      you enable private DNS names are private. Therefore, the private DNS name is not publicly\n      resolvable.\nTo change the private DNS names option using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the interface endpoint.\nChoose\nActions\n,\nModify private DNS name\n.\nSelect or clear\nEnable for this endpoint\nas required.\nIf the service is Amazon S3, selecting\nEnable for this endpoint\nin the previous step also selects\nEnable private DNS only for inbound \n            endpoint\n. If you prefer the standard private DNS functionality, clear\nEnable private DNS only for inbound endpoint\n. If you do not\n          have a gateway endpoint for Amazon S3 in addition to an interface endpoint for Amazon S3, \n          and you select\nEnable private DNS only for inbound endpoint\n, \n          you'll receive an error when you save changes in the next step. For more information, \n          see\nPrivate DNS\n.\nChoose\nSave changes\n.\nTo change the private DNS names option using the command line\nmodify-vpc-endpoint\n(AWS CLI)\nEdit-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nManage tags\nYou can tag your interface endpoint to help you identify it or categorize it\n      according to your organization's needs.\nTo manage tags using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the interface endpoint.\nChoose\nActions\n,\nManage tags\n.\nFor each tag to add choose\nAdd new tag\nand enter the \n          tag key and tag value.\nTo remove a tag, choose\nRemove\nto the right of the \n          tag key and value.\nChoose\nSave\n.\nTo manage tags using the command line\ncreate-tags\nand\ndelete-tags\n(AWS CLI)\nNew-EC2Tag\nand\nRemove-EC2Tag\n(Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate an interface endpoint\nReceive alerts for interface endpoint\n        events\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/manage-notifications-endpoint.html": "Receive alerts for interface endpoint events - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nCreate an SNS notification\nAdd an access policy\nAdd a key policy\nReceive alerts for interface endpoint\n        events\nYou can create a notification to receive alerts for specific events related to your\n      interface endpoint. For example, you can receive an email when a connection request is\n      accepted or rejected.\nTasks\nCreate an SNS notification\nAdd an access policy\nAdd a key policy\nCreate an SNS notification\nUse the following procedure to create an Amazon SNS topic for the notifications and\n        subscribe to the topic.\nTo create a notification for an interface endpoint using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the interface endpoint.\nFrom the\nNotifications\ntab, choose\nCreate\n            notification\n.\nFor\nNotification ARN\n, choose the ARN for the SNS topic that you\n            created.\nTo subscribe to an event, select it from\nEvents\n.\nConnect\n\u00e2\u0080\u0093 The service consumer created the interface\n                endpoint. This sends a connection request to the service provider.\nAccept\n\u00e2\u0080\u0093 The service provider accepted the connection\n                request.\nReject\n\u00e2\u0080\u0093 The service provider rejected the connection\n                request.\nDelete\n\u00e2\u0080\u0093 The service consumer deleted the interface\n                endpoint.\nChoose\nCreate notification\n.\nTo create a notification for an interface endpoint using the command line\ncreate-vpc-endpoint-connection-notification\n(AWS CLI)\nNew-EC2VpcEndpointConnectionNotification\n(Tools for Windows PowerShell)\nAdd an access policy\nAdd an access policy to the Amazon SNS topic that allows AWS PrivateLink to publish\n        notifications on your behalf, such as the following. For more information, see\nHow\n          do I edit my Amazon SNS topic's access policy?\nUse the\naws:SourceArn\nand\naws:SourceAccount\nglobal condition keys to protect against the\nconfused deputy problem\n.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Principal\":\n{\n\"Service\": \"vpce.amazonaws.com\"\n      },\n      \"Action\": \"SNS:Publish\",\n      \"Resource\": \"arn:aws:sns:\nregion\n:\naccount-id\n:\ntopic-name\n\",\n      \"Condition\":\n{\n\"ArnLike\":\n{\n\"aws:SourceArn\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc-endpoint/\nendpoint-id\n\"\n        },\n        \"StringEquals\":\n{\n\"aws:SourceAccount\": \"\naccount-id\n\"\n        }\n      }\n    }\n  ]\n}\nAdd a key policy\nIf you're using encrypted SNS topics, the resource policy for the KMS key must trust\n        AWS PrivateLink to call AWS KMS API operations. The following is an example key policy.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Principal\":\n{\n\"Service\": \"vpce.amazonaws.com\"\n      },\n      \"Action\": [\n        \"kms:GenerateDataKey*\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"arn:aws:kms:\nregion\n:\naccount-id\n:key/\nkey-id\n\",\n      \"Condition\":\n{\n\"ArnLike\":\n{\n\"aws:SourceArn\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc-endpoint/\nendpoint-id\n\"\n        },\n        \"StringEquals\":\n{\n\"aws:SourceAccount\": \"\naccount-id\n\"\n        }\n      }\n    }\n  ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConfigure an interface endpoint\nDelete an interface endpoint\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/delete-interface-endpoint.html": "Delete an interface endpoint - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nDelete an interface endpoint\nWhen you are finished with a VPC endpoint, you can delete it. Deleting an interface\n      endpoint also deletes its endpoint network interfaces.\nTo delete an interface endpoint using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the interface endpoint.\nChoose\nActions\n,\nDelete VPC endpoints\n.\nWhen prompted for confirmation, enter\ndelete\n.\nChoose\nDelete\n.\nTo delete an interface endpoint using the command line\ndelete-vpc-endpoints\n(AWS CLI)\nRemove-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nReceive alerts for interface endpoint\n        events\nGateway endpoints\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/gateway-endpoints.html": "Gateway endpoints - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nOverview\nRouting\nGateway endpoints\nGateway VPC endpoints provide reliable connectivity to Amazon S3 and DynamoDB without requiring an\n    internet gateway or a NAT device for your VPC. Gateway endpoints do not use AWS PrivateLink,\n    unlike other types of VPC endpoints.\nThere is no additional charge for using gateway endpoints.\nAmazon S3 supports both gateway endpoints and interface endpoints. For a comparison of the two options, \n    see\nTypes of VPC endpoints for Amazon S3\nin the\nAmazon S3 User Guide\n.\nContents\nOverview\nRouting\nGateway endpoints for Amazon S3\nGateway endpoints for Amazon DynamoDB\nOverview\nYou can access Amazon S3 and DynamoDB through their public service endpoints or through \n      gateway endpoints. This overview compares these methods.\nAccess through an internet gateway\nThe following diagram shows how instances access Amazon S3 and DynamoDB through their public\n        service endpoints. Traffic to Amazon S3 or DynamoDB from an instance in a public subnet is routed to\n        the internet gateway for the VPC and then to the service. Instances in a private subnet\n        can't send traffic to Amazon S3 or DynamoDB, because by definition private subnets do not have\n        routes to an internet gateway. To enable instances in the private subnet to send traffic to\n        Amazon S3 or DynamoDB, you would add a NAT device to the public subnet and route traffic in the\n        private subnet to the NAT device. While traffic to Amazon S3 or DynamoDB traverses the internet\n        gateway, it does not leave the AWS network.\nAccess through a gateway endpoint\nThe following diagram shows how instances access Amazon S3 and DynamoDB through a gateway\n        endpoint. Traffic from your VPC to Amazon S3 or DynamoDB is routed to the gateway endpoint. Each\n        subnet route table must have a route that sends traffic destined for the service to the\n        gateway endpoint using the prefix list for the service. For more information, see\nAWS-managed \n          prefix lists\nin the\nAmazon VPC User Guide\n.\nRouting\nWhen you create a gateway endpoint, you select the VPC route tables for the subnets\n      that you enable. The following route is automatically added to each route table that you\n      select. The destination is a prefix list for the service owned by AWS and the target \n      is the gateway endpoint.\nDestination\nTarget\nprefix_list_id\ngateway_endpoint_id\nConsiderations\nYou can review the endpoint routes that we add to your route table, but you\n          cannot modify or delete them. To add an endpoint route to a route table, associate \n          it with the gateway endpoint. We delete the endpoint route when you disassociate \n          the route table from the gateway endpoint or when you delete the gateway endpoint.\nAll instances in the subnets associated with a route table associated with\n          a gateway endpoint automatically use the gateway endpoint to access the service. \n          Instances in subnets that aren't associated with these route tables use the public \n          service endpoint, not the gateway endpoint.\nA route table can have both an endpoint route to Amazon S3 and an endpoint route \n          to DynamoDB. You can have endpoint routes to the same service (Amazon S3 or DynamoDB) in \n          multiple route tables. You can't have multiple endpoint routes to the same \n          service (Amazon S3 or DynamoDB) in a single route table.\nWe use the most specific route that matches the traffic to determine how to \n          route the traffic (longest prefix match). For route tables with an endpoint route,\n          this means the following:\nIf there is a route that sends all internet traffic (0.0.0.0/0) to an \n              internet gateway, the endpoint route takes precedence for traffic destined for \n              the service (Amazon S3 or DynamoDB) in the current Region. Traffic destined for a\n              different AWS service uses the internet gateway.\nTraffic that's destined for the service (Amazon S3 or DynamoDB) in a different Region \n              goes to the internet gateway because prefix lists are specific to a Region.\nIf there is a route that specifies the exact IP address range for the service \n              (Amazon S3 or DynamoDB) in the same Region, that route takes precedence over the endpoint \n              route.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDelete an interface endpoint\nEndpoints for Amazon S3\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-endpoints-s3.html": "Gateway endpoints for Amazon S3 - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nConsiderations\nPrivate DNS\nCreate a gateway endpoint\nControl access using bucket policies\nAssociate route tables\nEdit the VPC endpoint policy\nDelete a gateway endpoint\nGateway endpoints for Amazon S3\nYou can access Amazon S3 from your VPC using gateway VPC endpoints. After you create the\n      gateway endpoint, you can add it as a target in your route table for traffic\n      destined from your VPC to Amazon S3.\nThere is no additional charge for using gateway endpoints.\nAmazon S3 supports both gateway endpoints and interface endpoints. With a gateway endpoint, \n      you can access Amazon S3 from your VPC, without requiring an internet gateway or NAT device for \n      your VPC, and with no additional cost. However, gateway endpoints do not allow access from \n      on-premises networks, from peered VPCs in other AWS Regions, or through a transit gateway. \n      For those scenarios, you must use an interface endpoint, which is available for an additional \n      cost. For more information, see\nTypes of VPC endpoints for Amazon S3\nin the\nAmazon S3 User Guide\n.\nContents\nConsiderations\nPrivate DNS\nCreate a gateway endpoint\nControl access using bucket policies\nAssociate route tables\nEdit the VPC endpoint policy\nDelete a gateway endpoint\nConsiderations\nA gateway endpoint is available only in the Region where you created it. Be sure\n            to create your gateway endpoint in the same Region as your S3 buckets.\nIf you're using the Amazon DNS servers, you must enable both\nDNS hostnames and DNS resolution\nfor your VPC. If you're using your own DNS server, ensure that requests to Amazon S3\n            resolve correctly to the IP addresses maintained by AWS.\nCheck whether you are using an AWS service that requires access to an S3 bucket.\n            For example, a service might require access to buckets that contain log files, or might\n            require you to download drivers or agents to your EC2 instances. If so, ensure that your\n            endpoint policy allows the AWS service or resource to access these buckets using the\ns3:GetObject\naction.\nYou can't use the\naws:SourceIp\ncondition in an identity policy or  \n            a bucket policy for requests to Amazon S3 that traverse a VPC endpoint. Instead, use the\naws:VpcSourceIp\ncondition. Alternatively, you can use route tables to\n            control which EC2 instances can access Amazon S3 through the VPC endpoint.\nThe outbound rules for the security group for instances that access Amazon S3 through \n            the gateway endpoint must allow traffic to Amazon S3. You can use the ID of the\nprefix list\nfor Amazon S3 as the destination in the outbound rule.\nGateway endpoints support only IPv4 traffic.\nThe source IPv4 addresses from instances in your affected subnets as received by\n            Amazon S3 change from public IPv4 addresses to the private IPv4 addresses in your VPC. An\n            endpoint switches network routes, and disconnects open TCP connections. The previous\n            connections that used public IPv4 addresses are not resumed. We recommend that you\n            do not have any critical tasks running when you create or modify an endpoint; or\n            that you test to ensure that your software can automatically reconnect to Amazon S3 after\n            the connection break.\nEndpoint connections cannot be extended out of a VPC. Resources on the other side of a\n            VPN connection, VPC peering connection, transit gateway, or AWS Direct Connect connection in your \n            VPC cannot use a gateway endpoint to communicate with Amazon S3.\nYour account has a default quota of 20 gateway endpoints per Region, which is adjustable. \n            There is also a limit of 255 gateway endpoints per VPC.\nPrivate DNS\nYou can configure private DNS to optimize costs when you create both a gateway endpoint\n        and an interface endpoint for Amazon S3.\nRoute\u00c2\u00a053 Resolver\nAmazon provides a DNS server, called the\nRoute\u00c2\u00a053 Resolver\n, for your VPC. The\n          Route\u00c2\u00a053 Resolver automatically resolves local VPC domain names and records in private hosted zones.\n          However, you can't use the Route\u00c2\u00a053 Resolver from outside your VPC. Route\u00c2\u00a053 provides Resolver endpoints\n          and Resolver rules so that you can use the Route\u00c2\u00a053 Resolver from outside your VPC. An\ninbound Resolver endpoint\nforwards DNS queries from the on-premises\n          network to Route\u00c2\u00a053 Resolver. An\noutbound Resolver endpoint\nforwards DNS queries\n          from the Route\u00c2\u00a053 Resolver to the on-premises network.\nWhen you configure your interface endpoint for Amazon S3 to use private DNS only for the\n        inbound Resolver endpoint, we create an inbound Resolver endpoint. The inbound Resolver\n        endpoint resolves DNS queries to Amazon S3 from on-premises to the private IP addresses of the\n        interface endpoint. We also add ALIAS records for the Route\u00c2\u00a053 Resolver to the public hosted zone for\n        Amazon S3, so that DNS queries from your VPC resolve to the Amazon S3 public IP addresses, which\n        routes traffic to the gateway endpoint.\nPrivate DNS\nIf you configure private DNS for your interface endpoint for Amazon S3 but do not configure\n          private DNS only for the inbound Resolver endpoint, requests from both your on-premises\n          network and your VPC use the interface endpoint to access Amazon S3. Therefore, you pay to use\n          the interface endpoint for traffic from the VPC, instead of using the gateway endpoint for\n          no additional charge.\nPrivate DNS only for the inbound Resolver endpoint\nIf you configure private DNS only for the inbound Resolver endpoint, requests from your \n          on-premises network use the interface endpoint to access Amazon S3, and requests from your VPC \n          use the gateway endpoint to access Amazon S3. Therefore, you optimize your costs, because you \n          pay to use the interface endpoint only for traffic that can't use the gateway endpoint.\nConfigure private DNS\nYou can configure private DNS for an interface endpoint for Amazon S3 when you create \n          it or after you create it. For more information, see\nCreate a VPC endpoint\n(configure during creation) or\nEnable private DNS names\n(configure after creation).\nCreate a gateway endpoint\nUse the following procedure to create a gateway endpoint that connects to Amazon S3.\nTo create a gateway endpoint using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nChoose\nCreate endpoint\n.\nFor\nService category\n, choose\nAWS services\n.\nFor\nServices\n, add the filter\nType: Gateway\nand select\ncom.amazonaws.\nregion\n.s3\n.\nFor\nVPC\n, select the VPC in which to create the\n            endpoint.\nFor\nRoute tables\n, select the route tables to be used \n            by the endpoint. We automatically add a route that points traffic destined for \n            the service to the endpoint network interface.\nFor\nPolicy\n, select\nFull access\nto allow\n            all operations by all principals on all resources over the VPC endpoint. Otherwise, select\nCustom\nto attach a VPC endpoint policy that controls the permissions\n            that principals have to perform actions on resources over the VPC endpoint.\n(Optional) To add a tag, choose\nAdd new tag\nand enter the tag\n            key and the tag value.\nChoose\nCreate endpoint\n.\nTo create a gateway endpoint using the command line\ncreate-vpc-endpoint\n(AWS CLI)\nNew-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nControl access using bucket policies\nYou can use bucket policies to control access to buckets from specific endpoints, VPCs,\n        IP address ranges, and AWS accounts. These examples assume that there are also policy\n        statements that allow the access required for your use cases.\nExample: Restrict access to a specific endpoint\nYou can create a bucket policy that restricts access to a specific endpoint by using\n          the\naws:sourceVpce\ncondition key. The following policy denies access to the\n          specified bucket using the specified actions unless the specified gateway endpoint \n          is used. Note that this policy blocks access to the specified bucket using the \n          specified actions through the AWS Management Console.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Sid\": \"Allow-access-to-specific-VPCE\",\n      \"Effect\": \"Deny\",\n      \"Principal\": \"*\",\n      \"Action\": [\"s3:PutObject\", \"s3:GetObject\", \"s3:DeleteObject\"],\n      \"Resource\": [\"arn:aws:s3:::\nbucket_name\n\",\n                   \"arn:aws:s3:::\nbucket_name\n/*\"],\n      \"Condition\":\n{\n\"StringNotEquals\":\n{\n\"aws:sourceVpce\": \"\nvpce-1a2b3c4d\n\"\n        }\n      }\n    }\n  ]\n}\nExample: Restrict access to a specific VPC\nYou can create a bucket policy that restricts access to specific VPCs by using the\naws:sourceVpc\ncondition key. This is useful if you have multiple endpoints\n          configured in the same VPC. The following policy denies access to the specified bucket \n          using the specified actions unless the request comes from the specified VPC. Note that\n          this policy blocks access to the specified bucket using the specified actions through \n          the AWS Management Console.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Sid\": \"Allow-access-to-specific-VPC\",\n      \"Effect\": \"Deny\",\n      \"Principal\": \"*\",\n      \"Action\": [\"s3:PutObject\", \"s3:GetObject\", \"s3:DeleteObject\"],\n      \"Resource\": [\"arn:aws:s3:::\nexample_bucket\n\",\n                   \"arn:aws:s3:::\nexample_bucket\n/*\"],\n      \"Condition\":\n{\n\"StringNotEquals\":\n{\n\"aws:sourceVpc\": \"\nvpc-111bbb22\n\"\n        }\n      }\n    }\n  ]\n}\nExample: Restrict access to a specific IP address range\nYou can create a policy that restricts access to specific IP address ranges by using\n          the\naws:VpcSourceIp\ncondition key. The following policy denies access to the\n          specified bucket using the specified actions unless the request comes from the specified \n          IP address. Note that this policy blocks access to the specified bucket using the specified \n          actions through the AWS Management Console.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Sid\": \"Allow-access-to-specific-VPC-CIDR\",\n      \"Effect\": \"Deny\",\n      \"Principal\": \"*\",\n      \"Action\": [\"s3:PutObject\", \"s3:GetObject\", \"s3:DeleteObject\"],\n      \"Resource\": [\"arn:aws:s3:::\nbucket_name\n\",\n                   \"arn:aws:s3:::\nbucket_name\n/*\"],\n      \"Condition\":\n{\n\"NotIpAddress\":\n{\n\"aws:VpcSourceIp\": \"\n172.31.0.0/16\n\"\n        }\n      }\n    }\n  ]\n}\nExample: Restrict access to buckets in a specific AWS account\nYou can create a policy that restricts access to the S3 buckets in a specific\n          AWS account by using the\ns3:ResourceAccount\ncondition key. The \n          following policy denies access to S3 buckets using the specified actions unless\n          they are owned by the specified AWS account.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Sid\": \"Allow-access-to-bucket-in-specific-account\",\n      \"Effect\": \"Deny\",\n      \"Principal\": \"*\",\n      \"Action\": [\"s3:GetObject\", \"s3:PutObject\", \"s3:DeleteObject\"],\n      \"Resource\": \"arn:aws:s3:::*\",\n      \"Condition\":\n{\n\"StringNotEquals\":\n{\n\"s3:ResourceAccount\": \"\n111122223333\n\"\n        }\n      }\n    }\n  ]\n}\nAssociate route tables\nYou can change the route tables that are associated with the gateway endpoint.\n        When you associate a route table, we automatically add a route that points traffic \n        destined for the service to the endpoint network interface. When you disassociate\n        a route table, we automatically remove the endpoint route from the route table.\nTo associate route tables using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the gateway endpoint.\nChoose\nActions\n,\nManage route tables\n.\nSelect or deselect route tables as needed.\nChoose\nModify route tables\n.\nTo associate route tables using the command line\nmodify-vpc-endpoint\n(AWS CLI)\nEdit-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nEdit the VPC endpoint policy\nYou can edit the endpoint policy for a gateway endpoint, which controls access to Amazon S3 \n        from the VPC through the endpoint. The default policy allows full access. For more information,\n        see\nEndpoint policies\n.\nTo change the endpoint policy using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the gateway endpoint.\nChoose\nActions\n,\nManage policy\n.\nChoose\nFull Access\nto allow full access to the service, or\n            choose\nCustom\nand attach a custom policy.\nChoose\nSave\n.\nThe following are example endpoint policies for accessing Amazon S3.\nExample: Restrict access to a specific bucket\nYou can create a policy that restricts access to specific S3 buckets only. This is\n          useful if you have other AWS services in your VPC that use S3 buckets.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Sid\": \"Allow-access-to-specific-bucket\",\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": [\n         \"s3:ListBucket\",\n         \"s3:GetObject\",\n         \"s3:PutObject\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::\nbucket_name\n\",\n        \"arn:aws:s3:::\nbucket_name\n/*\"\n      ]\n    }\n  ]\n}\nExample: Restrict access to a specific IAM role\nYou can create a policy that restricts access to a specific IAM role. You must use\naws:PrincipalArn\nto grant access to a principal.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Sid\": \"Allow-access-to-specific-IAM-role\",\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": \"*\",\n      \"Resource\": \"*\",\n      \"Condition\":\n{\n\"ArnEquals\":\n{\n\"aws:PrincipalArn\": \"arn:aws:iam::\n111122223333\n:role/\nrole_name\n\"\n        }\n      }\n    }\n  ]\n}\nExample: Restrict access to users in a specific account\nYou can create a policy that restricts access to a specific account.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Sid\": \"Allow-callers-from-specific-account\",\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": \"*\",\n      \"Resource\": \"*\",\n      \"Condition\":\n{\n\"StringEquals\":\n{\n\"aws:PrincipalAccount\": \"\n111122223333\n\"\n        }\n      }\n    }\n  ]\n}\nDelete a gateway endpoint\nWhen you are finished with a gateway endpoint, you can delete it. When you delete a\n        gateway endpoint, we remove the endpoint route from the subnet route tables.\nYou can't delete a gateway endpoint if private DNS is enabled.\nTo delete a gateway endpoint using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the gateway endpoint.\nChoose\nActions\n,\nDelete VPC endpoints\n.\nWhen prompted for confirmation, enter\ndelete\n.\nChoose\nDelete\n.\nTo delete a gateway endpoint using the command line\ndelete-vpc-endpoints\n(AWS CLI)\nRemove-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGateway endpoints\nEndpoints for DynamoDB\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-endpoints-ddb.html": "Gateway endpoints for Amazon DynamoDB - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nConsiderations\nCreate a gateway endpoint\nControl access using IAM policies\nAssociate route tables\nEdit the VPC endpoint policy\nDelete a gateway endpoint\nGateway endpoints for Amazon DynamoDB\nYou can access Amazon DynamoDB from your VPC using gateway VPC endpoints. After you create \n      the gateway endpoint, you can add it as a target in your route table for traffic\n      destined from your VPC to DynamoDB.\nThere is no additional charge for using gateway endpoints.\nContents\nConsiderations\nCreate a gateway endpoint\nControl access using IAM policies\nAssociate route tables\nEdit the VPC endpoint policy\nDelete a gateway endpoint\nConsiderations\nA gateway endpoint is available only in the Region where you created it. Be sure\n           to create your gateway endpoint in the same Region as your DynamoDB tables.\nIf you're using the Amazon DNS servers, you must enable both\nDNS hostnames and DNS resolution\nfor your VPC. If you're using your own DNS server, ensure that requests to DynamoDB\n            resolve correctly to the IP addresses maintained by AWS.\nThe outbound rules for the security group for instances that access DynamoDB through \n            the gateway endpoint must allow traffic to DynamoDB. You can use the ID of the\nprefix list\nfor DynamoDB as the destination in the outbound rule.\nDynamoDB does not support resource-based policies (for example, on tables). Access to\n            DynamoDB is controlled through the endpoint policy and policies for individual users and \n            roles.\nIf you use AWS CloudTrail to log DynamoDB operations, the log files contain the private IP\n            addresses of the EC2 instances in the service consumer VPC and the ID of the gateway\n            endpoint for any requests performed through the endpoint.\nGateway endpoints support only IPv4 traffic.\nThe source IPv4 addresses from instances in your affected subnets change from\n            public IPv4 addresses to private IPv4 addresses from your VPC. An endpoint\n            switches network routes and disconnects open TCP connections. The previous\n            connections that used public IPv4 addresses are not resumed. We recommend that you\n            do not have any critical tasks running when you create or modify a gateway endpoint. \n            Alternatively, test to ensure that your software can automatically reconnect to DynamoDB\n            if a connection breaks.\nEndpoint connections cannot be extended out of a VPC. Resources on the other side of a\n            VPN connection, VPC peering connection, transit gateway, or AWS Direct Connect connection in your \n            VPC cannot use a gateway endpoint to communicate with DynamoDB.\nYour account has a default quota of 20 gateway endpoints per Region, which is adjustable. \n            There is also a limit of 255 gateway endpoints per VPC.\nCreate a gateway endpoint\nUse the following procedure to create a gateway endpoint that connects to DynamoDB.\nTo create a gateway endpoint using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nChoose\nCreate endpoint\n.\nFor\nService category\n, choose\nAWS services\n.\nFor\nServices\n, add the filter\nType: Gateway\nand select\ncom.amazonaws.\nregion\n.dynamodb\n.\nFor\nVPC\n, select the VPC in which to create the\n            endpoint.\nFor\nRoute tables\n, select the route tables to be used \n            by the endpoint. We automatically add a route that points traffic destined for \n            the service to the endpoint network interface.\nFor\nPolicy\n, select\nFull access\nto allow\n            all operations by all principals on all resources over the VPC endpoint. Otherwise, select\nCustom\nto attach a VPC endpoint policy that controls the permissions\n            that principals have to perform actions on resources over the VPC endpoint.\n(Optional) To add a tag, choose\nAdd new tag\nand enter the tag\n            key and the tag value.\nChoose\nCreate endpoint\n.\nTo create a gateway endpoint using the command line\ncreate-vpc-endpoint\n(AWS CLI)\nNew-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nControl access using IAM policies\nYou can create IAM policies to control which IAM principals can access\n        DynamoDB tables using a specific VPC endpoint.\nExample: Restrict access to a specific endpoint\nYou can create a policy that restricts access to a specific VPC endpoint by using the\naws:sourceVpce\ncondition key. The following policy denies access to DynamoDB\n          tables in the account unless the specified VPC endpoint is used. This example assumes that\n          there is also a policy statement that allows the access required for your use\n          cases.\n{\n\"Version\": \"2012-10-17\",\n   \"Statement\": [\n{\n\"Sid\": \"Allow-access-from-specific-endpoint\",\n         \"Effect\": \"Deny\",\n         \"Action\": \"dynamodb:*\",\n         \"Resource\": \"arn:aws:dynamodb:\nregion\n:\naccount-id\n:table/*\",\n         \"Condition\":\n{\n\"StringNotEquals\" :\n{\n\"aws:sourceVpce\": \"vpce-11aa22bb\" \n            } \n         }\n      }\n   ]\n}\nExample: Allow access from a specific IAM role\nYou can create a policy that allows access using a specific IAM role. \n          The following policy grants access to the specified IAM role.\n{\n\"Version\": \"2012-10-17\",\n   \"Statement\": [\n{\n\"Sid\": \"Allow-access-from-specific-IAM-role\",\n         \"Effect\": \"Allow\",\n         \"Principal\": \"*\",\n         \"Action\": \"*\",\n         \"Resource\": \"*\",\n         \"Condition\":\n{\n\"ArnEquals\":\n{\n\"aws:PrincipalArn\": \"arn:aws:iam::\n111122223333\n:role/\nrole_name\n\"\n            }\n         }\n      }\n   ]\n}\nExample: Allows access from a specific account\nYou can create a policy that allows access from a specific account only.  \n          The following policy grants access to users in the specified account.\n{\n\"Version\": \"2012-10-17\",\n   \"Statement\": [\n{\n\"Sid\": \"Allow-access-from-account\",\n         \"Effect\": \"Allow\",\n         \"Principal\": \"*\",\n         \"Action\": \"*\",\n         \"Resource\": \"*\",\n         \"Condition\":\n{\n\"StringEquals\":\n{\n\"aws:PrincipalAccount\": \"\n111122223333\n\"\n            }\n         }\n      }\n   ]        \n}\nAssociate route tables\nYou can change the route tables that are associated with the gateway endpoint.\n        When you associate a route table, we automatically add a route that points traffic \n        destined for the service to the endpoint network interface. When you disassociate\n        a route table, we automatically remove the endpoint route from the route table.\nTo associate route tables using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the gateway endpoint.\nChoose\nActions\n,\nManage route tables\n.\nSelect or deselect route tables as needed.\nChoose\nModify route tables\n.\nTo associate route tables using the command line\nmodify-vpc-endpoint\n(AWS CLI)\nEdit-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nEdit the VPC endpoint policy\nYou can edit the endpoint policy for a gateway endpoint, which controls access to DynamoDB \n        from the VPC through the endpoint. The default policy allows full access. For more information,\n        see\nEndpoint policies\n.\nTo change the endpoint policy using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the gateway endpoint.\nChoose\nActions\n,\nManage policy\n.\nChoose\nFull Access\nto allow full access to the service, or\n            choose\nCustom\nand attach a custom policy.\nChoose\nSave\n.\nTo modify a gateway endpoint using the command line\nmodify-vpc-endpoint\n(AWS CLI)\nEdit-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nThe following are example endpoint policies for accessing DynamoDB.\nExample: Allow read-only access\nYou can create a policy that restricts access to read-only access. The following\n          policy grants permission to list and describe DynamoDB tables.\n{\n\"Statement\": [\n{\n\"Sid\": \"ReadOnlyAccess\",\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": [\n        \"dynamodb:DescribeTable\",\n        \"dynamodb:ListTables\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\nExample: Restrict access to a specific table\nYou can create a policy that restricts access to a specific DynamoDB table. \n          The following policy allows access to the specified DynamoDB table.\n{\n\"Statement\": [\n{\n\"Sid\": \"Allow-access-to-specific-table\",\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": [\n        \"dynamodb:Batch*\",\n        \"dynamodb:Delete*\",\n        \"dynamodb:DescribeTable\",\n        \"dynamodb:GetItem\",\n        \"dynamodb:PutItem\",\n        \"dynamodb:Update*\"\n      ],\n      \"Resource\": \"arn:aws:dynamodb:\nregion\n:\n123456789012\n:table/\ntable_name\n\"\n    }\n  ]\n}\nDelete a gateway endpoint\nWhen you are finished with a gateway endpoint, you can delete it.  When you delete a\n        gateway endpoint, we remove the endpoint route from the subnet route tables.\nTo delete a gateway endpoint using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the gateway endpoint.\nChoose\nActions\n,\nDelete VPC endpoints\n.\nWhen prompted for confirmation, enter\ndelete\n.\nChoose\nDelete\n.\nTo delete an interface endpoint using the command line\ndelete-vpc-endpoints\n(AWS CLI)\nRemove-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nEndpoints for Amazon S3\nAccess SaaS products\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/privatelink-access-saas.html": "Access SaaS products through AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nOverview\nCreate an interface endpoint\nAccess SaaS products through AWS PrivateLink\nUsing AWS PrivateLink, you can access SaaS products privately, as if they were running in your\n    own VPC.\nContents\nOverview\nCreate an interface endpoint\nOverview\nYou can discover, purchase, and provision SaaS products powered by AWS PrivateLink through\n      AWS Marketplace. For more information, see\nAWS Marketplace: \n        - PrivateLink\n.\nYou can also find SaaS products powered by AWS PrivateLink from AWS Partners. For more\n      information see\nAWS PrivateLink Partners\n.\nThe following diagram shows how you use VPC endpoints to connect to SaaS products. The\n      service provider creates an endpoint service and grants their customers access to the endpoint\n      service. As the service consumer, you create an interface VPC endpoint, which establishes\n      connections between one or more subnets in your VPC and the endpoint service.\nCreate an interface endpoint\nUse the following procedure to create an interface VPC endpoint that connects to the SaaS\n      product.\nRequirement\nSubscribe to the service.\nTo create an interface endpoint to a partner service\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nChoose\nCreate endpoint\n.\nIf you purchased the service from AWS Marketplace, do the following:\nFor\nService category\n, choose\nAWS Marketplace services\n.\nEnter the name of the service.\nIf you subscribed to a service with the AWS Service Ready designation, do the following:\nFor\nService category\n, choose\nPrivateLink Ready partner services\n.\nEnter the name of the service and choose\nVerify service\n.\nFor\nVPC\n, select the VPC from which you'll access the product.\nFor\nSubnets\n, select one subnet per Availability Zone from which \n          you'll access the product.\nFor\nSecurity group\n, select the security groups to associate with \n          the endpoint network interfaces. The security group rules must allow traffic between the\n          resources in the VPC and the endpoint network interfaces.\n(Optional) To add a tag, choose\nAdd new tag\nand enter the tag\n          key and the tag value.\nChoose\nCreate endpoint\n.\nTo configure an interface endpoint\nFor information about configuring your interface endpoint, see\nConfigure an interface endpoint\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nEndpoints for DynamoDB\nAccess virtual appliances\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/vpce-gateway-load-balancer.html": "Access virtual appliances through AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nOverview\nIP address types\nRouting\nAccess virtual appliances through AWS PrivateLink\nYou can use a Gateway Load Balancer to distribute traffic to a fleet of network virtual appliances. The\n    appliances can be used for security inspection, compliance, policy controls, and other\n    networking services. You specify the Gateway Load Balancer when you create a VPC endpoint service. Other AWS\n    principals access the endpoint service by creating a Gateway Load Balancer endpoint.\nFor more information, see\nGateway Load Balancers\n.\nContents\nOverview\nIP address types\nRouting\nCreate a Gateway Load Balancer endpoint service\nCreate a Gateway Load Balancer endpoint\nOverview\nThe following diagram shows how application servers access security appliances through AWS PrivateLink.\n      The application servers run in a subnet of the service consumer VPC. You create a Gateway Load Balancer endpoint in\n      another subnet of the same VPC. All traffic entering the service consumer VPC through the internet\n      gateway is first routed to the Gateway Load Balancer endpoint for inspection and then routed to the destination \n      subnet. Similarly, all traffic leaving the application servers is routed to the Gateway Load Balancer endpoint\n      for inspection before it is routed back through the internet gateway.\nTraffic from the internet to the application servers (blue arrows):\nTraffic enters the service consumer VPC through the internet gateway.\nTraffic is sent to the Gateway Load Balancer endpoint, based on route table configuration.\nTraffic is sent to the Gateway Load Balancer for inspection through the security appliance.\nTraffic is sent back to the Gateway Load Balancer endpoint after inspection.\nTraffic is sent to the application servers, based on route table configuration.\nTraffic from the application servers to the internet (orange arrows):\nTraffic is sent to the Gateway Load Balancer endpoint, based on route table configuration.\nTraffic is sent to the Gateway Load Balancer for inspection through the security appliance.\nTraffic is sent back to the Gateway Load Balancer endpoint after inspection.\nTraffic is sent to the internet gateway based on the route table configuration.\nTraffic is routed back to the internet.\nIP address types\nService providers can make their service endpoints available to service consumers over\n      IPv4, IPv6, or both IPv4 and IPv6, even if their security appliances support only IPv4. If \n      you enable dualstack support, existing consumers can continue to use IPv4 to access your \n      service and new consumers can choose to use IPv6 to access your service.\nIf a Gateway Load Balancer endpoint supports IPv4, the endpoint network interfaces have IPv4 addresses. If a \n      Gateway Load Balancer endpoint supports IPv6, the endpoint network interfaces have IPv6 addresses. The IPv6 address \n      for an endpoint network interface is unreachable from the internet. If you describe an \n      endpoint network interface with an IPv6 address, notice that\ndenyAllIgwTraffic\nis enabled.\nRequirements to enable IPv6 for an endpoint service\nThe VPC and subnets for the endpoint service must have associated IPv6 CIDR\n          blocks.\nThe Gateway Load Balancer for the endpoint service must use the dualstack IP address type. The\n          security appliances do not need to support IPv6 traffic.\nRequirements to enable IPv6 for a Gateway Load Balancer endpoint\nThe endpoint service must have an IP address type that includes IPv6 support.\nThe IP address type of a Gateway Load Balancer endpoint must be compatible with the subnet for\n          the Gateway Load Balancer endpoint, as described here:\nIPv4\n\u00e2\u0080\u0093 Assign IPv4 addresses to your endpoint\n              network interfaces. This option is supported only if all selected subnets have\n              IPv4 address ranges.\nIPv6\n\u00e2\u0080\u0093 Assign IPv6 addresses to your endpoint\n              network interfaces. This option is supported only if all selected subnets are \n              IPv6 only subnets.\nDualstack\n\u00e2\u0080\u0093 Assign both IPv4 and IPv6 addresses to\n              your endpoint network interfaces. This option is supported only if all selected\n              subnets have both IPv4 and IPv6 address ranges.\nThe route tables for the subnets in the service consumer VPC must route IPv6 \n          traffic and the network ACLs for these subnets must allow IPv6 traffic.\nRouting\nTo route traffic to the endpoint service, specify the Gateway Load Balancer endpoint as a target in your route\n      tables, using its ID. For the diagram above, add routes to the route tables as\n      follows. Note that IPv6 routes are included for a dualstack configuration.\nRoute table for the internet gateway\nThis route table must have a route that sends traffic destined for the application\n        servers to the Gateway Load Balancer endpoint.\nDestination\nTarget\nVPC IPv4 CIDR\nLocal\nVPC IPv6 CIDR\nLocal\nApplication subnet IPv4 CIDR\nvpc-endpoint-id\nApplication subnet IPv6 CIDR\nvpc-endpoint-id\nRoute table for the subnet with the application servers\nThis route table must have a route that sends all traffic from the application servers\n        to the Gateway Load Balancer endpoint.\nDestination\nTarget\nVPC IPv4 CIDR\nLocal\nVPC IPv6 CIDR\nLocal\n0.0.0.0/0\nvpc-endpoint-id\n::/0\nvpc-endpoint-id\nRoute table for the subnet with the Gateway Load Balancer endpoint\nThis route table must send traffic that is returned from inspection to its final\n        destination. For traffic that originated from the internet, the local route sends the\n        traffic to the application servers. For traffic that originated from the application\n        servers, add a route that sends all traffic to the internet gateway.\nDestination\nTarget\nVPC IPv4 CIDR\nLocal\nVPC IPv6 CIDR\nLocal\n0.0.0.0/0\ninternet-gateway-id\n::/0\ninternet-gateway-id\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAccess SaaS products\nCreate a Gateway Load Balancer endpoint service\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/create-gateway-load-balancer-endpoint-service.html": "Create an inspection system as a Gateway Load Balancer endpoint service - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nConsiderations\nPrerequisites\nCreate the endpoint service\nMake your endpoint service available\nCreate an inspection system as a Gateway Load Balancer endpoint service\nYou can create your own service powered by AWS PrivateLink, known as an\nendpoint service\n.\n      You are the service provider, and the AWS principals that create connections to your service are the\n      service consumers.\nEndpoint services require either a Network Load Balancer or a Gateway Load Balancer. In this case, you'll create an endpoint service \n      using a Gateway Load Balancer. For more information about creating an endpoint service using a Network Load Balancer, see\nCreate an endpoint service\n.\nContents\nConsiderations\nPrerequisites\nCreate the endpoint service\nMake your endpoint service available\nConsiderations\nAn endpoint service is available in the Region where you created it.\nWhen service consumers retrieve information about an endpoint service, they can \n            see only the Availability Zones that they have in common with the service provider.\n            When the service provider and service consumer are in different accounts, an\n            Availability Zone name, such as\nus-east-1a\n, might be mapped to a\n            different physical Availability Zone in each AWS account. You can use AZ IDs \n            to consistently identify the Availability Zones for your service. For more information, \n            see\nAZ IDs\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nThere are quotas on your AWS PrivateLink resources. For more information, see\nAWS PrivateLink quotas\n.\nPrerequisites\nCreate a service provider VPC with at least two subnets in the Availability Zone \n            in which the service should be available. One subnet is for the security appliance\n            instances and the other is for the Gateway Load Balancer.\nCreate a Gateway Load Balancer in your service provider VPC. If you plan to enable IPv6 support on\n            your endpoint service, you must enable dualstack support on your Gateway Load Balancer. For more\n            information, see\nGetting started with\n              Gateway Load Balancers\n.\nLaunch security appliances in the service provider VPC and register them with \n            a load balancer target group.\nCreate the endpoint service\nUse the following procedure to create an endpoint service using a Gateway Load Balancer.\nTo create an endpoint service using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nChoose\nCreate endpoint service\n.\nFor\nLoad balancer type\n, choose\nGateway\n.\nFor\nAvailable load balancers\n, select your Gateway Load Balancer.\nFor\nRequire acceptance for endpoint\n, select\nAcceptance required\nto require that connection requests to your\n            endpoint service are accepted manually. Otherwise, they are accepted\n            automatically.\nFor\nSupported IP address types\n, do one of the following:\nSelect\nIPv4\n\u00e2\u0080\u0093 Enable the endpoint service to accept\n                IPv4 requests.\nSelect\nIPv6\n\u00e2\u0080\u0093 Enable the endpoint service to accept\n                IPv6 requests.\nSelect\nIPv4\nand\nIPv6\n\u00e2\u0080\u0093 Enable the \n                endpoint service to accept both IPv4 and IPv6 requests.\n(Optional) To add a tag, choose\nAdd new tag\nand\n            enter the tag key and the tag value.\nChoose\nCreate\n.\nTo create an endpoint service using the command line\ncreate-vpc-endpoint-service-configuration\n(AWS CLI)\nNew-EC2VpcEndpointServiceConfiguration\n(Tools for Windows PowerShell)\nMake your endpoint service available\nService providers must do the following to make their services available to service \n        consumers.\nAdd permissions that allow each service consumer to connect to your endpoint\n            service. For more information, see\nManage permissions\n.\nProvide the service consumer with the name of your service and the supported\n            Availability Zones so that they can create an interface endpoint to connect to \n            your service. For more information, see the procedure below.\nAccept the endpoint connection request from the service consumer. For more\n            information see\nAccept or reject connection requests\n.\nAWS principals can connect to your endpoint service privately by creating a Gateway Load Balancer endpoint. \n        For more information, see\nCreate a Gateway Load Balancer endpoint\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAccess virtual appliances\nCreate a Gateway Load Balancer endpoint\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/gateway-load-balancer-endpoints.html": "Access an inspection system using a Gateway Load Balancer endpoint - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nConsiderations\nPrerequisites\nCreate the endpoint\nConfigure routing\nManage tags\nDelete the endpoint\nAccess an inspection system using a Gateway Load Balancer endpoint\nYou can create a Gateway Load Balancer endpoint to connect to services powered by AWS PrivateLink.\nFor each subnet that you specify from your VPC, we create an endpoint network interface in \n      the subnet and assign it a private IP address from the subnet address range. An endpoint network \n      interface is a requester-managed network interface; you can view it in your AWS account, \n      but you can't manage it yourself.\nYou are billed for hourly usage and data processing charges. For more \n      information, see\nGateway Load Balancer endpoint pricing\n.\nContents\nConsiderations\nPrerequisites\nCreate the endpoint\nConfigure routing\nManage tags\nDelete a Gateway Load Balancer endpoint\nConsiderations\nYou can choose only one Availability Zone in the service consumer VPC. You \n            can't change this subnet later on. To use a Gateway Load Balancer endpoint in a different subnet, you\n            must create a new Gateway Load Balancer endpoint.\nYou can create a single Gateway Load Balancer endpoint per Availability Zone per service, and you \n            must select the Availability Zone that the Gateway Load Balancer supports. When the service \n            provider and service consumer are in different accounts, an Availability Zone \n            name, such as\nus-east-1a\n, might be mapped to a different physical \n            Availability Zone in each AWS account. You can use AZ IDs to consistently \n            identify the Availability Zones for your service. For more information, see\nAZ IDs\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nBefore you can use the endpoint service the service provider must accept the\n            connection requests. The service can't initiate requests to resources in your VPC \n            through the VPC endpoint. The endpoint only returns responses to traffic that was \n            initiated by resources in your VPC.\nEach Gateway Load Balancer endpoint can support a bandwidth of up to 10 Gbps per Availability Zone and\n            automatically scales up to 100 Gbps.\nIf an endpoint service is associated with multiple Gateway Load Balancers, a Gateway Load Balancer endpoint\n            establishes a connection with only one load balancer per Availability Zone.\nTo keep traffic within the same Availability Zone, we recommend that you\n            create a Gateway Load Balancer endpoint in each Availability Zone to which you'll send traffic.\nNetwork Load Balancer client IP preservation is not supported when traffic is routed through a\n            Gateway Load Balancer endpoint, even if the target is in the same VPC as the Network Load Balancer.\nThere are quotas on your AWS PrivateLink resources. For more information, see\nAWS PrivateLink quotas\n.\nPrerequisites\nCreate a service consumer VPC with at least two subnets in the Availability Zone \n            from which you'll access the service. One subnet is for the application servers and \n            the other is for the Gateway Load Balancer endpoint.\nTo verify which Availability Zones are supported by the endpoint service, describe\n            the endpoint service using the console or the\ndescribe-vpc-endpoint-services\ncommand.\nIf your resources are in a subnet with a network ACL, verify that the network\n            ACL allows traffic between the endpoint network interfaces and the resources in the\n            VPC.\nCreate the endpoint\nUse the following procedure to create a Gateway Load Balancer endpoint that connects to the endpoint service\n        for the inspection system.\nTo create a Gateway Load Balancer endpoint using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nChoose\nCreate endpoint\n.\nFor\nService category\n, choose\nOther endpoint services\n.\nFor\nService name\n, enter the name of the service, and then\n            choose\nVerify service\n.\nFor\nVPC\n, select the VPC in which to create the endpoint.\nFor\nSubnets\n, select the subnet in which to create the\n            endpoint.\nFor\nIP address type\n, choose from the following\n            options:\nIPv4\n\u00e2\u0080\u0093 Assign IPv4 addresses to your endpoint\n                network interfaces. This option is supported only if all selected subnets have\n                IPv4 address ranges.\nIPv6\n\u00e2\u0080\u0093 Assign IPv6 addresses to your endpoint\n                network interfaces. This option is supported only if all selected subnets are IPv6\n                only subnets.\nDualstack\n\u00e2\u0080\u0093 Assign both IPv4 and IPv6 addresses to\n                your endpoint network interfaces. This option is supported only if all selected\n                subnets have both IPv4 and IPv6 address ranges.\n(Optional) To add a tag, choose\nAdd new tag\nand enter the tag\n            key and the tag value.\nChoose\nCreate endpoint\n. The initial status is\npending acceptance\n.\nTo create a Gateway Load Balancer endpoint using the command line\ncreate-vpc-endpoint\n(AWS CLI)\nNew-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nConfigure routing\nUse the following procedure to configure route tables for the service consumer VPC.\n        This enables the security appliances to perform security inspection for inbound traffic \n        that's destined for the application servers. For more information, see\nRouting\n.\nTo configure routing using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nRoute Tables\n.\nSelect the route table for the internet gateway and do the following:\nChoose\nActions\n,\nEdit routes\n.\nIf you support IPv4, choose\nAdd route\n. For\nDestination\n, enter the IPv4 CIDR block of the subnet for the\n                application servers. For\nTarget\n, select the VPC\n                endpoint.\nIf you support IPv6, choose\nAdd route\n. For\nDestination\n, \n                enter the IPv6 CIDR block of the subnet for the application servers. For\nTarget\n,\n                select the VPC endpoint.\nChoose\nSave changes\n.\nSelect the route table for the subnet with the application servers and do the\n            following:\nChoose\nActions\n,\nEdit routes\n.\nIf you support IPv4, choose\nAdd route\n. For\nDestination\n, enter\n0.0.0.0/0\n. For\nTarget\n, select the VPC endpoint.\nIf you support IPv6, choose\nAdd route\n. For\nDestination\n,\n                enter\n::/0\n. For\nTarget\n, select the VPC\n                endpoint.\nChoose\nSave changes\n.\nSelect the route table for the subnet with the Gateway Load Balancer endpoint, and do the following:\nChoose\nActions\n,\nEdit routes\n.\nIf you support IPv4, choose\nAdd route\n. For\nDestination\n, enter\n0.0.0.0/0\n. For\nTarget\n, select the internet gateway.\nIf you support IPv6, choose\nAdd route\n. For\nDestination\n, enter\n::/0\n. For\nTarget\n, select the internet gateway.\nChoose\nSave changes\n.\nTo configure routing using the command line\ncreate-route\n(AWS CLI)\nNew-EC2Route\n(Tools for Windows PowerShell)\nManage tags\nYou can tag your Gateway Load Balancer endpoint to help you identify it or categorize it\n        according to your organization's needs.\nTo manage tags using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the interface endpoint.\nChoose\nActions\n,\nManage tags\n.\nFor each tag to add choose\nAdd new tag\nand enter the \n            tag key and tag value.\nTo remove a tag, choose\nRemove\nto the right of the \n            tag key and value.\nChoose\nSave\n.\nTo manage tags using the command line\ncreate-tags\nand\ndelete-tags\n(AWS CLI)\nNew-EC2Tag\nand\nRemove-EC2Tag\n(Tools for Windows PowerShell)\nDelete a Gateway Load Balancer endpoint\nWhen you are finished with an endpoint, you can delete it. Deleting a Gateway Load Balancer endpoint also \n        deletes the endpoint network interfaces. You can't delete a Gateway Load Balancer endpoint if there are routes \n        in your route tables that point to the endpoint.\nTo delete a Gateway Load Balancer endpoint\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\nand select your\n            endpoint.\nChoose\nActions\n,\nDelete Endpoint\n.\nIn the confirmation screen, choose\nYes, Delete\n.\nTo delete a Gateway Load Balancer endpoint\ndelete-vpc-endpoints\n(AWS CLI)\nRemove-EC2VpcEndpoint\n(AWS Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a Gateway Load Balancer endpoint service\nShare your services\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/privatelink-share-your-services.html": "Share your services through AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nOverview\nDNS hostnames\nPrivate DNS\nIP address types\nShare your services through AWS PrivateLink\nYou can host your own AWS PrivateLink powered service, known as an\nendpoint\n      service\n, and share it with other AWS customers.\nContents\nOverview\nDNS hostnames\nPrivate DNS\nIP address types\nCreate an endpoint service\nConfigure an endpoint service\nManage DNS names\nReceive alerts for endpoint service events\nDelete an endpoint service\nOverview\nThe following diagram shows how you share your service that's hosted in AWS with other\n      AWS customers, and how those customers connect to your service. As the service provider, you\n      create a Network Load Balancer in your VPC as the service front end. You then select this load balancer when\n      you create the VPC endpoint service configuration. You grant permission to specific AWS\n      principals so that they can connect to your service. As a service consumer, the customer \n      creates an interface VPC endpoint, which establishes connections between the subnets that \n      they select from their VPC and your endpoint service. The load balancer receives requests \n      from the service consumer and routes them to the targets hosting your service.\nFor low latency and high availability, we recommend that you make your service available\n      in at least two Availability Zones.\nDNS hostnames\nWhen a service provider creates a VPC endpoint service, AWS generates an endpoint-specific\n      DNS hostname for the service. These names have the following syntax:\nendpoint_service_id\n.\nregion\n.vpce.amazonaws.com\nThe following is an example of a DNS hostname for a VPC endpoint service in the\n      us-east-2 Region:\nvpce-svc-071afff70666e61e0.us-east-2.vpce.amazonaws.com\nWhen a service consumer creates an interface VPC endpoint, we create Regional and zonal\n      DNS names that the service consumer can use to communicate with the endpoint service. Regional\n      names have the following syntax:\nendpoint_id\n.\nendpoint_service_id\n.\nregion\n.vpce.amazonaws.com\nZonal names have the following syntax:\nendpoint_id\n-\nzone\n.\nendpoint_service_id\n.\nregion\n.vpce.amazonaws.com\nPrivate DNS\nA service provider can also associate a private DNS name for their endpoint service, so\n      that service consumers can continue to access the service using its existing DNS name. If a\n      service provider associates a private DNS name with their endpoint service, then service\n      consumers can enable private DNS names for their interface endpoints. If a service provider\n      doesn't enable private DNS, then service consumers might need to update their applications to\n      use the public DNS name of the VPC endpoint service. For more information, see\nManage DNS names\n.\nIP address types\nService providers can make their service endpoints available to service consumers over\n      IPv4, IPv6, or both IPv4 and IPv6, even if their backend servers support only IPv4. If you\n      enable dualstack support, existing consumers can continue to use IPv4 to access your service\n      and new consumers can choose to use IPv6 to access your service.\nIf an interface VPC endpoint supports IPv4, the endpoint network interfaces have IPv4 \n      addresses. If an interface VPC endpoint supports IPv6, the endpoint network interfaces have\n      IPv6 addresses. The IPv6 address for an endpoint network interface is unreachable from the \n      internet. If you describe an endpoint network interface with an IPv6 address, notice that\ndenyAllIgwTraffic\nis enabled.\nRequirements to enable IPv6 for an endpoint service\nThe VPC and subnets for the endpoint service must have associated IPv6 CIDR\n          blocks.\nAll Network Load Balancers for the endpoint service must use the dualstack IP address type. The\n            targets do not need to support IPv6 traffic. If the service processes source IP \n            addresses from the proxy protocol version 2 header, it must process IPv6 addresses.\nRequirements to enable IPv6 for an interface endpoint\nThe endpoint service must support IPv6 requests.\nThe IP address type of an interface endpoint must be compatible with the subnets for\n          the interface endpoint, as described here:\nIPv4\n\u00e2\u0080\u0093 Assign IPv4 addresses to your endpoint\n              network interfaces. This option is supported only if all selected subnets have\n              IPv4 address ranges.\nIPv6\n\u00e2\u0080\u0093 Assign IPv6 addresses to your endpoint\n              network interfaces. This option is supported only if all selected subnets are IPv6\n              only subnets.\nDualstack\n\u00e2\u0080\u0093 Assign both IPv4 and IPv6 addresses to\n              your endpoint network interfaces. This option is supported only if all selected\n              subnets have both IPv4 and IPv6 address ranges.\nDNS record IP address type for an interface endpoint\nThe DNS record IP address type that an interface endpoint supports determines the DNS records \n        that we create. The DNS record IP address type of an interface endpoint must be compatible with\n        the IP address type of the interface endpoint, as described here:\nIPv4\n\u00e2\u0080\u0093 Create A records for the private, Regional, \n          and zonal DNS names. The IP address type must be\nIPv4\nor\nDualstack\n.\nIPv6\n\u00e2\u0080\u0093 Create AAAA records for the private, Regional, \n          and zonal DNS names. The IP address type must  be\nIPv6\nor\nDualstack\n.\nDualstack\n\u00e2\u0080\u0093 Create A and AAAA records for the private,\n          Regional, and zonal DNS names. The IP address type must be\nDualstack\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a Gateway Load Balancer endpoint\nCreate an endpoint service\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/create-endpoint-service.html": "Create a service powered by AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nConsiderations\nPrerequisites\nCreate an endpoint service\nMake your endpoint service available to service\n          consumers\nCreate a service powered by AWS PrivateLink\nYou can create your own service powered by AWS PrivateLink, known as an\nendpoint service\n. You are the service provider, and the\n      AWS principals that create connections to your service are the service\n      consumers.\nEndpoint services require either a Network Load Balancer or a Gateway Load Balancer. The load balancer receives\n      requests from service consumers and routes them to your service. In this case, you'll \n      create an endpoint service using a Network Load Balancer. For more information about creating an\n      endpoint service using a Gateway Load Balancer, see\nAccess virtual appliances\n.\nContents\nConsiderations\nPrerequisites\nCreate an endpoint service\nMake your endpoint service available to service\n          consumers\nConsiderations\nAn endpoint service is available in the Region where you created it.\n              You can access the endpoint service from other Regions using VPC peering.\nAn endpoint service supports traffic only over TCP.\nWhen service consumers retrieve information about an endpoint service, they can \n            see only the Availability Zones that they have in common with the service provider.\n            When the service provider and service consumer are in different accounts, an\n            Availability Zone name, such as\nus-east-1a\n, might be mapped to a\n            different physical Availability Zone in each AWS account. You can use AZ IDs \n            to consistently identify the Availability Zones for your service. For more information, \n            see\nAZ IDs\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nWhen service consumers send traffic to a service through an interface endpoint,\n            the source IP addresses provided to the application are the private IP addresses\n            of the load balancer nodes, not the IP addresses of the service consumers. If you \n            enable proxy protocol on the load balancer, you can obtain the addresses of the \n            service consumers and the IDs of the interface endpoints from the proxy protocol \n            header. For more information, see\nProxy protocol\nin the\nUser Guide for Network Load Balancers\n.\nIf an endpoint service is associated with multiple Network Load Balancers, each endpoint network \n            interface is associated with one load balancer. When the first connection from an \n            endpoint network interface is initiated, we select one of the Network Load Balancers in the same\n            Availability Zone as the endpoint network interface at random. All subsequent \n            connection requests from this endpoint network interface use the selected load balancer. \n            We recommend that you use the same listener and target group configuration for all \n            load balancers for an endpoint service, so that consumers can use the endpoint service \n            successfully no matter which load balancer is chosen.\nThere are quotas on your AWS PrivateLink resources. For more information, see\nAWS PrivateLink quotas\n.\nPrerequisites\nCreate a VPC for your endpoint service with at least one subnet in each\n            Availability Zone in which the service should be available.\nTo enable service consumers to create IPv6 interface VPC endpoints for your\n              endpoint service, the VPC and subnets must have associated IPv6 CIDR blocks.\nCreate a Network Load Balancer in your VPC. Select one subnet per Availability Zone in which the\n            service should be available to service consumers. For low latency and fault tolerance,\n            we recommend that you make your service available in at least two Availability Zones in\n            the Region.\nTo enable your endpoint service to accept IPv6 requests, its Network Load Balancers must use the\n            dualstack IP address type. The targets do not need to support IPv6 traffic. For more\n            information, see\nIP\n              address type\nin the\nUser Guide for Network Load Balancers\n.\nIf you process source IP addresses from the proxy protocol version 2 header,\n             verify that you can process IPv6 addresses.\nLaunch instances in each Availability Zone in which the service should be available\n            and register them with a load balancer target group. If you do not launch instances in\n            all enabled Availability Zones, you can enable cross-zone load balancing to support\n            service consumers that use zonal DNS hostnames to access the service. Regional data\n            transfer charges apply when you enable cross-zone load balancing. For more information,\n            see\nCross-zone load balancing\nin the\nUser Guide for Network Load Balancers\nCreate an endpoint service\nUse the following procedure to create an endpoint service using a Network Load Balancer.\nTo create an endpoint service using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nChoose\nCreate endpoint service\n.\nFor\nLoad balancer type\n, choose\nNetwork\n.\nFor\nAvailable load balancers\n, select the\n            Network Load Balancers to associate with the endpoint service.\nFor\nRequire acceptance for endpoint\n, select\nAcceptance required\nto require that connection requests \n            to your endpoint service are accepted manually. Otherwise, these requests are\n            accepted automatically.\nFor\nEnable private DNS name\n, select\nAssociate a \n            private DNS name with the service\nto associate a private DNS name that\n            service consumers can use to access your service, and then enter the private DNS name. \n            Otherwise, service consumers can use the endpoint-specific DNS name provided by AWS.\n            Before service consumers can use the private DNS name, the service provider must verify \n            that they own the domain. For more information, see\nManage DNS names\n.\nFor\nSupported IP address types\n, do one of the following:\nSelect\nIPv4\n\u00e2\u0080\u0093 Enable the endpoint service to accept\n                  IPv4 requests.\nSelect\nIPv6\n\u00e2\u0080\u0093 Enable the endpoint service to accept\n                IPv6 requests.\nSelect\nIPv4\nand\nIPv6\n\u00e2\u0080\u0093 Enable the \n                endpoint service to accept both IPv4 and IPv6 requests.\n(Optional) To add a tag, choose\nAdd new tag\nand\n            enter the tag key and the tag value.\nChoose\nCreate\n.\nTo create an endpoint service using the command line\ncreate-vpc-endpoint-service-configuration\n(AWS CLI)\nNew-EC2VpcEndpointServiceConfiguration\n(Tools for Windows PowerShell)\nMake your endpoint service available to service\n          consumers\nAWS principals can connect to your endpoint service privately by creating an \n        interface VPC endpoint. Service providers must do the following to make their services \n        available to service consumers.\nAdd permissions that allow each service consumer to connect to your endpoint\n            service. For more information, see\nManage permissions\n.\nProvide the service consumer with the name of your service and the supported\n            Availability Zones so that they can create an interface endpoint to connect to your\n            service. For more information, see the following procedure.\nAccept the endpoint connection request from the service consumer. For more\n            information, see\nAccept or reject connection requests\n.\nConnect to an endpoint service as the service consumer\nA service consumer uses the following procedure to create an interface endpoint to\n          connect to your endpoint service.\nTo create an interface endpoint using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nChoose\nCreate endpoint\n.\nFor\nService category\n, choose\nOther endpoint services\n.\nFor\nService name\n, enter the name of the service (for example,\ncom.amazonaws.vpce.us-east-1.vpce-svc-0e123abc123198abc\n), and choose\nVerify service\n.\nFor\nVPC\n, select a VPC in which to\n              create the endpoint.\nFor\nSubnets\n, select the subnets\n              (Availability Zones) from which you'll access the endpoint service.\nFor\nIP address type\n, choose from the following\n              options:\nIPv4\n\u00e2\u0080\u0093 Assign IPv4 addresses to your endpoint\n                  network interfaces. This option is supported only if all selected subnets have\n                  IPv4 address ranges and the endpoint service accepts IPv4 requests.\nIPv6\n\u00e2\u0080\u0093 Assign IPv6 addresses to your endpoint\n                  network interfaces. This option is supported only if all selected subnets are IPv6\n                  only subnets and the endpoint service accepts IPv6 requests.\nDualstack\n\u00e2\u0080\u0093 Assign both IPv4 and IPv6 addresses to\n                  your endpoint network interfaces. This option is supported only if all selected\n                  subnets have both IPv4 and IPv6 address ranges and the endpoint service accepts \n                  both IPv4 and IPv6 requests.\nFor\nDNS record IP type\n, choose from the following options:\nIPv4\n\u00e2\u0080\u0093 Create A records for the private, Regional, \n                  and zonal DNS names. The IP address type must be\nIPv4\nor\nDualstack\n.\nIPv6\n\u00e2\u0080\u0093 Create AAAA records for the private, Regional, \n                  and zonal DNS names. The IP address type must  be\nIPv6\nor\nDualstack\n.\nDualstack\n\u00e2\u0080\u0093 Create A and AAAA records for the private,\n                  Regional, and zonal DNS names. The IP address type must be\nDualstack\n.\nService defined\n\u00e2\u0080\u0093 Create A records for the private, \n                  Regional, and zonal DNS names and AAAA records for the Regional and zonal DNS names. \n                  The IP address type must be\nDualstack\n.\nFor\nSecurity group\n, select the security groups to associate with the \n              endpoint network interfaces.\nChoose\nCreate endpoint\n.\nTo create an interface endpoint using the command line\ncreate-vpc-endpoint\n(AWS CLI)\nNew-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nShare your services\nConfigure an endpoint service\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/configure-endpoint-service.html": "Configure an endpoint service - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nManage permissions\nAccept or reject connection requests\nChange the load balancer association\nAssociate a private DNS name\nModify the supported IP address types\nManage tags\nConfigure an endpoint service\nAfter you create an endpoint service, you can update its configuration.\nTasks\nManage permissions\nAccept or reject connection requests\nChange the load balancer association\nAssociate a private DNS name\nModify the supported IP address types\nManage tags\nManage permissions\nThe combination of permissions and acceptance settings help you control which\n        service consumers (AWS principals) can access your endpoint service. For example, \n        you can grant permissions to specific principals that you trust and automatically \n        accept all connection requests, or you can grant permissions to a wider group of \n        principals and manually accept specific connection requests that you trust.\nBy default, your endpoint service is not available to service consumers. You must add\n        permissions that allow specific AWS principals to create an interface VPC endpoint to\n        connect to your endpoint service. To add permissions for an AWS principal, you need its\n        Amazon Resource Name (ARN). The following list includes example ARNs for supported AWS\n        principals.\nARNs for AWS principals\nAWS account (includes all principals in the account)\narn:aws:iam::\naccount_id\n:root\nRole\narn:aws:iam::\naccount_id\n:role/\nrole_name\nUser\narn:aws:iam::\naccount_id\n:user/\nuser_name\nAll principals in all AWS accounts\n*\nConsideration\nIf you grant everyone permission to access the endpoint service and configure the \n          endpoint service to accept all requests, your load balancer will be public even if it has \n          no public IP address.\nTo manage permissions for your endpoint service using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the endpoint service and choose the\nAllow principals\ntab.\nTo add permissions, choose\nAllow principals\n. For\nPrincipals to add\n, enter the ARN of the principal. To add\n            another principal, choose\nAdd principal\n. When you are finished\n            adding principals, choose\nAllow principals\n.\nTo remove permissions, select the principal and choose\nActions\n,\nDelete\n. When prompted for confirmation, enter\ndelete\nand then choose\nDelete\n.\nTo add permissions for your endpoint service using the command line\nmodify-vpc-endpoint-service-permissions\n(AWS CLI)\nEdit-EC2EndpointServicePermission\n(Tools for Windows PowerShell)\nAccept or reject connection requests\nThe combination of permissions and acceptance settings help you control which\n        service consumers (AWS principals) can access your endpoint service. For example, \n        you can grant permissions to specific principals that you trust and automatically \n        accept all connection requests, or you can grant permissions to a wider group of \n        principals and manually accept specific connection requests that you trust.\nYou can configure your endpoint service to accept connection requests automatically. \n        Otherwise, you must accept or reject them manually. If you do not accept a connection\n        request, the service consumer can't access your endpoint service.\nYou can receive a notification when a connection request is accepted or rejected.\n        For more information, see\nReceive alerts for endpoint service events\n.\nConsideration\nIf you grant everyone permission to access the endpoint service and configure the \n          endpoint service to accept all requests, your load balancer will be public even if it has \n          no public IP address.\nTo modify the acceptance setting using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the endpoint service.\nChoose\nActions\n,\nModify endpoint acceptance \n            setting\n.\nSelect or clear\nAcceptance required\n.\nChoose\nSave changes\nTo modify the acceptance setting using the command line\nmodify-vpc-endpoint-service-configuration\n(AWS CLI)\nEdit-EC2VpcEndpointServiceConfiguration\n(Tools for Windows PowerShell)\nTo accept or reject a connection request using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the endpoint service.\nFrom the\nEndpoint connections\ntab, select the \n            endpoint connection.\nTo accept the connection request, choose\nActions\n,\nAccept endpoint connection request\n. When prompted for\n            confirmation, enter\naccept\nand then choose\nAccept\n.\nTo reject the connection request, choose\nActions\n,\nReject endpoint connection request\n. When prompted for\n            confirmation, enter\nreject\nand then choose\nReject\n.\nTo accept or reject a connection request using the command line\naccept-vpc-endpoint-connections\nor\nreject-vpc-endpoint-connections\n(AWS CLI)\nApprove-EC2EndpointConnection\nor\nDeny-EC2EndpointConnection\n(Tools for Windows PowerShell)\nChange the load balancer association\nYou can change the load balancer that is associated with your endpoint service. You can't disassociate\n        a load balancer if there are endpoints connected to your endpoint service.\nTo change the load balancers for your endpoint service using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the endpoint service.\nChoose\nActions\n,\nAssociate or disassociate load \n            balancers\n.\nAdd or remove load balancers as needed.\nChoose\nSave changes\nTo change the load balancers for your endpoint service using the command line\nmodify-vpc-endpoint-service-configuration\n(AWS CLI)\nEdit-EC2VpcEndpointServiceConfiguration\n(Tools for Windows PowerShell)\nAssociate a private DNS name\nYou can associate a private DNS name with your endpoint service. After you associate\n        a private DNS name, you must update the entry for the domain on your DNS server. Before\n        service consumers can use the private DNS name, the service provider must verify that \n        they own the domain. For more information, see\nManage DNS names\n.\nTo modify an endpoint service private DNS name using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the endpoint service.\nChoose\nActions\n,\nModify private DNS name\n.\nSelect\nAssociate a private DNS name with the service\nand  \n            enter the private DNS name.\nDomain names must use lowercase.\nYou can use wildcards in domain names (for example,\n*.myexampleservice.com\n).\nChoose\nSave changes\n.\nThe private DNS name is ready for use by service consumers when the verification\n            status is\nverified\n. If the verification status changes, new \n            connection requests are denied but existing connections are not affected.\nTo modify an endpoint service private DNS name using the command line\nmodify-vpc-endpoint-service-configuration\n(AWS CLI)\nEdit-EC2VpcEndpointServiceConfiguration\n(Tools for Windows PowerShell)\nTo initiate the domain verification process using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the endpoint service.\nChoose\nActions\n,\nVerify domain ownership\n              for private DNS name\n.\nWhen prompted for confirmation, enter\nverify\nand\n            then choose\nVerify\n.\nTo initiate the domain verification process using the command line\nstart-vpc-endpoint-service-private-dns-verification\n(AWS CLI)\nStart-EC2VpcEndpointServicePrivateDnsVerification\n(Tools for Windows PowerShell)\nModify the supported IP address types\nYou can change the IP address types that are supported by your endpoint service.\nConsideration\nTo enable your endpoint service to accept IPv6 requests, its Network Load Balancers must use the\n          dualstack IP address type. The targets do not need to support IPv6 traffic. For more\n          information, see\nIP\n            address type\nin the\nUser Guide for Network Load Balancers\n.\nTo modify the supported IP address types using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the VPC endpoint service.\nChoose\nActions\n,\nModify supported IP address types\n.\nFor\nSupported IP address types\n, do one of the following:\nSelect\nIPv4\n\u00e2\u0080\u0093 Enable the endpoint service to accept\n                IPv4 requests.\nSelect\nIPv6\n\u00e2\u0080\u0093 Enable the endpoint service to accept\n                IPv6 requests.\nSelect\nIPv4\nand\nIPv6\n\u00e2\u0080\u0093 Enable the \n                endpoint service to accept both IPv4 and IPv6 requests.\nChoose\nSave changes\n.\nTo modify the supported IP address types using the command line\nmodify-vpc-endpoint-service-configuration\n(AWS CLI)\nEdit-EC2VpcEndpointServiceConfiguration\n(Tools for Windows PowerShell)\nManage tags\nYou can tag your resources to help you identify them or categorize them\n        according to your organization's needs.\nTo manage tags for your endpoint service using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the VPC endpoint service.\nChoose\nActions\n,\nManage tags\n.\nFor each tag to add, choose\nAdd new tag\nand enter the tag key\n            and tag value.\nTo remove a tag, choose\nRemove\nto the right of the \n            tag key and value.\nChoose\nSave\n.\nTo manage tags for your endpoint connections using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the VPC endpoint service and then choose the\nEndpoint connections\ntab.\nSelect the endpoint connection and then choose\nActions\n,\nManage tags\n.\nFor each tag to add, choose\nAdd new tag\nand enter the tag key\n            and tag value.\nTo remove a tag, choose\nRemove\nto the right of the \n            tag key and value.\nChoose\nSave\n.\nTo manage tags for your endpoint service permissions using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the VPC endpoint service and then choose the\nAllow principals\ntab.\nSelect the principal and then choose\nActions\n,\nManage\n              tags\n.\nFor each tag to add, choose\nAdd new tag\nand enter the tag key\n            and tag value.\nTo remove a tag, choose\nRemove\nto the right of the \n            tag key and value.\nChoose\nSave\n.\nTo add and remove tags using the command line\ncreate-tags\nand\ndelete-tags\n(AWS CLI)\nNew-EC2Tag\nand\nRemove-EC2Tag\n(Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate an endpoint service\nManage DNS names\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/manage-dns-names.html": "Manage DNS names for VPC endpoint services - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nDomain ownership verification\nGet the name and value\nAdd a TXT record to your domain's DNS server\nCheck whether the TXT record is published\nTroubleshoot domain verification issues\nManage DNS names for VPC endpoint services\nService providers can configure private DNS names for their endpoint services. When a\n      service provider uses an existing public DNS name as the private DNS name for their endpoint\n      service, then service consumers don't need to change any applications that use the existing\n      public DNS name. Before you can configure a private DNS name for your endpoint service, you\n      must prove that you own the domain by performing a domain ownership verification check.\nConsiderations\nAn endpoint service can have only one private DNS name.\nYou must not create an A record for the private DNS name, so that only servers in  \n          the service consumer VPC can resolve the private DNS name.\nPrivate DNS names are not supported for Gateway Load Balancer endpoints.\nTo verify a domain, you must have a public hostname or a public DNS provider.\nYou can verify the domain of a subdomain. For example, you can verify\nexample.com\n, instead of\na.example.com\n. As specified in\nRFC 1034\n, each\n          DNS label can have up to 63 characters and the whole domain name must not exceed\n          a total length of 255 characters.\nIf you add an additional subdomain, you must verify the subdomain, or the\n          domain. For example, let's say you had\na.example.com\n, and\n          verified\nexample.com\n. You now add\nb.example.com\nas a private DNS name. You must verify\nexample.com\nor\nb.example.com\nbefore service consumers can use the name.\nDomain ownership verification\nYour domain is associated with a set of domain name service (DNS) records that you\n        manage through your DNS provider. A TXT record is a type of DNS record that provides\n        additional information about your domain. It consists of a name and a value. As part of the\n        verification process, you must add a TXT record to the DNS server for your public\n        domain.\nDomain ownership verification is complete when we detect the existence of the\n       TXT record in your domain's DNS settings.\nAfter you add a record, you can check the status of the domain verification process\n        using the Amazon VPC console. In the navigation pane, choose\nEndpoint\n          services\n. Select the endpoint service and check the value of\nDomain\n          verification status\nin the\nDetails\ntab. If domain\n        verification is pending, wait a few minutes and refresh the screen. If needed, you can\n        initiate the verification process manually. Choose\nActions\n,\nVerify domain ownership for private DNS name\n.\nThe private DNS name is ready for use by service consumers when the verification\n        status is\nverified\n. If the verification status changes, new \n        connection requests are denied but existing connections are not affected.\nIf the verification status is\nfailed\n, see\nTroubleshoot domain verification issues\n.\nGet the name and value\nWe provide you with the name and value that you use in the TXT record. For example, \n        the information is available in the AWS Management Console. Select the endpoint service and see\nDomain verification name\nand\nDomain verification value\non the\nDetails\ntab for the endpoint service. You can also use the  \n        following\ndescribe-vpc-endpoint-service-configurations\nAWS CLI command to retrieve \n        information about the configuration of the private DNS name for the specified endpoint \n        service.\naws ec2 describe-vpc-endpoint-service-configurations \\\n    --service-ids\nvpce-svc-071afff70666e61e0\n--query ServiceConfigurations[*].PrivateDnsNameConfiguration\nThe following is example output. You'll use\nValue\nand\nName\nwhen you create the TXT record.\n[\n{\n\"State\": \"pendingVerification\",\n        \"Type\": \"TXT\",\n        \"Value\": \"vpce:l6p0ERxlTt45jevFwOCp\",\n        \"Name\": \"_6e86v84tqgqubxbwii1m\"\n    }\n]\nFor example, suppose that your domain name is\nexample.com\nand that\nValue\nand\nName\nare as shown in the preceding example output. The\n        following table is an example of the TXT record settings.\nName\nType\nValue\n_6e86v84tqgqubxbwii1m.example.com\nTXT\nvpce:l6p0ERxlTt45jevFwOCp\nWe suggest that you use\nName\nas the record subdomain because the base domain \n        name might already be in use. However, if your DNS provider does not allow DNS record names \n        to contain underscores, you can omit the \"_6e86v84tqgqubxbwii1m\" and simply use \"example.com\"\n        in the TXT record.\nAfter we verify \"_6e86v84tqgqubxbwii1m.example.com\", service consumers can use \"example.com\"\n        or a subdomain (for example, \"service.example.com\" or \"my.service.example.com\").\nAdd a TXT record to your domain's DNS server\nThe procedure for adding TXT records to your domain's DNS server depends on who provides your DNS service.\n        Your DNS provider might be Amazon Route\u00c2\u00a053 or another domain name registrar.\nCreate a record for your public hosted zone. Use the following values:\nFor\nRecord type\n, choose\nTXT\n.\nFor\nTTL (seconds)\n, enter\n1800\n.\nFor\nRouting policy\n, choose\nSimple routing\n.\nFor\nRecord name\nenter the domain or subdomain.\nFor\nValue/Route traffic to\n, enter the domain verification value.\nFor more information, see\nCreate records using the console\nin the\nAmazon Route\u00c2\u00a053 Developer Guide\n.\nGo to the website for your DNS provider and sign in to your account. Find the page\n            to update the DNS records for your domain. Add a TXT record with the name and value that\n            we provided. It can take up to 48 hours for DNS record updates to take effect, but they\n            often take effect much sooner.\nFor more specific directions, consult the documentation from your DNS provider. The \n            following table provides links to the documentation for several common DNS providers. \n            This list is not intended to be comprehensive, nor is it intended as a recommendation \n            of the products or services provided by these companies.\nDNS/Hosting provider\nDocumentation link\nGoDaddy\nAdd a TXT record\nDreamhost\nAdding custom DNS records\nCloudflare\nManage DNS records\nHostGator\nManage DNS Records with HostGator/eNom\nNamecheap\nHow do I add TXT/SPF/DKIM/DMARC records for my domain?\nNames.co.uk\nChanging your domain's DNS settings\nWix\nAdding or Updating TXT Records in Your Wix Account\nCheck whether the TXT record is published\nYou can verify that your private DNS name domain ownership verification TXT record is\n        published correctly to your DNS server using the following steps. You'll run the\nnslookup\ntool, which\n        is available for Windows and Linux.\nYou'll query the DNS servers that serve your domain because those servers contain the\n        most up-to-date information for your domain. Your domain information takes time to propagate\n        to other DNS servers.\nTo verify that your TXT record is published to your DNS server\nFind the name servers for your domain using the following command.\nnslookup -type=NS\nexample.com\nThe output lists the name servers that serve your domain. You'll query one of \n            these servers in the next step.\nVerify that the TXT record is correctly published using the following command,\n            where\nname_server\nis one of the name servers that you\n            found in the previous step.\nnslookup -type=TXT\n_6e86v84tqgqubxbwii1m.example.com\nname_server\nIn the output of the previous step, verify that the string that follows\ntext =\nmatches the TXT value.\nIn our example, if the record is correctly published, the output includes the \n            following.\n_6e86v84tqgqubxbwii1m.example.com text = \"vpce:l6p0ERxlTt45jevFwOCp\"\nTroubleshoot domain verification issues\nIf the domain verification process fails, the following information can help you \n        troubleshoot issues.\nCheck whether your DNS provider allows underscores in TXT record names. If your DNS\n            provider does not allow underscores, you can omit the domain verification name (for\n            example, \"_6e86v84tqgqubxbwii1m\") from the TXT record.\nCheck whether your DNS provider appended the domain name to the end of the TXT record. \n            Some DNS providers automatically append the name of your domain to the attribute name of \n            the TXT record. To avoid this duplication of the domain name, add a period to the end of \n            the domain name when you create the TXT record. This tells your DNS provider that it isn't\n            necessary to append the domain name to the TXT record.\nCheck whether your DNS provider modified the DNS record value to use only lowercase\n            letters. We verify your domain only when there is a verification record with an\n            attribute value that exactly matches the value that we provided. If the DNS provider\n            changed your TXT record values to use only lowercase letters, contact them for\n            assistance.\nYou might need to verify your domain more than once because you're supporting \n            multiple Regions or multiple AWS accounts. If your DNS provider doesn't allow you to \n            have more than one TXT record with the same attribute name, check whether your DNS\n            provider allows you to assign multiple attribute values to the same TXT record. \n            For example, if your DNS is managed by Amazon Route\u00c2\u00a053, you can use the following procedure.\nIn the Route\u00c2\u00a053 console, choose the TXT record that you created when you\n                verified your domain in the first Region.\nFor\nValue\n, go to the end of the existing\n                attribute value, and then press Enter.\nAdd the attribute value for the additional Region, and then save the\n                record set.\nIf your DNS provider doesn't allow you to assign multiple values to the same\n            TXT record, you can verify the domain once with the value in the attribute name\n            of the TXT record, and one other time with the value removed from the attribute\n            name. However, you can only verify the same domain two times.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConfigure an endpoint service\nReceive alerts for endpoint service events\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/create-notification-endpoint-service.html": "Receive alerts for endpoint service events - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nCreate an SNS notification\nAdd an access policy\nAdd a key policy\nReceive alerts for endpoint service events\nYou can create a notification to receive alerts for specific events related to your\n      endpoint service. For example, you can receive an email when a connection request is \n      accepted or rejected.\nTasks\nCreate an SNS notification\nAdd an access policy\nAdd a key policy\nCreate an SNS notification\nUse the following procedure to create an Amazon SNS topic for the notifications and\n        subscribe to the topic.\nTo create a notification for an endpoint service using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the endpoint service.\nFrom the\nNotifications\ntab, choose\nCreate \n            notification\n.\nFor\nNotification ARN\n, choose the ARN for the \n            SNS topic that you created.\nTo subscribe to an event, select it from\nEvents\n.\nConnect\n\u00e2\u0080\u0093 The service consumer created the interface endpoint.\n              This sends a connection request to the service provider.\nAccept\n\u00e2\u0080\u0093 The service provider accepted the connection request.\nReject\n\u00e2\u0080\u0093 The service provider rejected the connection request.\nDelete\n\u00e2\u0080\u0093 The service consumer deleted the interface endpoint.\nChoose\nCreate notification\n.\nTo create a notification for an endpoint service using the command line\ncreate-vpc-endpoint-connection-notification\n(AWS CLI)\nNew-EC2VpcEndpointConnectionNotification\n(Tools for Windows PowerShell)\nAdd an access policy\nAdd an access policy to the SNS topic that allows AWS PrivateLink to publish notifications\n        on your behalf, such as the following. For more information, see\nHow do I edit my Amazon SNS\n          topic's access policy?\nUse the\naws:SourceArn\nand\naws:SourceAccount\nglobal condition keys to protect against the\nconfused deputy problem\n.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Principal\":\n{\n\"Service\": \"vpce.amazonaws.com\"\n      },\n      \"Action\": \"SNS:Publish\",\n      \"Resource\": \"arn:aws:sns:\nregion\n:\naccount-id\n:\ntopic-name\n\",\n      \"Condition\":\n{\n\"ArnLike\":\n{\n\"aws:SourceArn\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc-endpoint-service/\nservice-id\n\"\n        },\n        \"StringEquals\":\n{\n\"aws:SourceAccount\": \"\naccount-id\n\"\n        }\n      }\n    }\n  ]\n}\nAdd a key policy\nIf you're using encrypted SNS topics, the resource policy for the KMS key must trust\n        AWS PrivateLink to call AWS KMS API operations. The following is an example key policy.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Principal\":\n{\n\"Service\": \"vpce.amazonaws.com\"\n      },\n      \"Action\": [\n        \"kms:GenerateDataKey*\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"arn:aws:kms:\nregion\n:\naccount-id\n:key/\nkey-id\n\",\n      \"Condition\":\n{\n\"ArnLike\":\n{\n\"aws:SourceArn\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc-endpoint-service/\nservice-id\n\"\n        },\n        \"StringEquals\":\n{\n\"aws:SourceAccount\": \"\naccount-id\n\"\n        }\n      }\n    }\n  ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nManage DNS names\nDelete an endpoint service\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/delete-endpoint-service.html": "Delete an endpoint service - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nDelete an endpoint service\nWhen you are finished with an endpoint service, you can delete it. You can't delete \n      an endpoint service if there are any endpoints connected to the endpoint service that \n      are in the\navailable\nor\npending-acceptance\nstate.\nDeleting an endpoint service does not delete the associated load balancer and does \n      not affect the application servers registered with the load balancer target groups.\nTo delete an endpoint service using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect the endpoint service.\nChoose\nActions\n,\nDelete endpoint services\n.\nWhen prompted for confirmation, enter\ndelete\nand\n          then choose\nDelete\n.\nTo delete an endpoint service using the command line\ndelete-vpc-endpoint-service-configurations\n(AWS CLI)\nRemove-EC2EndpointServiceConfiguration\n(Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nReceive alerts for endpoint service events\nIdentity and access management\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-endpoints-iam.html": "Identity and access management for AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nAudience\nAuthenticating with identities\nManaging access using policies\nIdentity and access management for AWS PrivateLink\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely control access\n      to AWS resources. IAM administrators control who can be\nauthenticated\n(signed in) and\nauthorized\n(have permissions) to use AWS PrivateLink resources. IAM is an AWS service that you can\n      use with no additional charge.\nContents\nAudience\nAuthenticating with identities\nManaging access using policies\nHow AWS PrivateLink works with IAM\nIdentity-based policy examples\nEndpoint policies\nAudience\nHow you use AWS Identity and Access Management (IAM) differs, depending on the work that you do in AWS PrivateLink.\nService user\n\u00e2\u0080\u0093 If you use the AWS PrivateLink service to do your job, then your administrator provides you\n         with the credentials and permissions that you need. As you use more AWS PrivateLink features to do your work, you might need additional permissions.\n         Understanding how access is managed can help you request the right permissions from your administrator.\nService administrator\n\u00e2\u0080\u0093 If you're in charge of AWS PrivateLink resources at your company, you probably have\n         full access to AWS PrivateLink. It's your job to determine which AWS PrivateLink features and resources your service users should access. You must then\n         submit requests to your IAM administrator to change the permissions of your service users. Review the information on this page to understand the\n         basic concepts of IAM.\nIAM administrator\n\u00e2\u0080\u0093 If you're an IAM administrator, you might want to learn details about how you can\n         write policies to manage access to AWS PrivateLink.\nAuthenticating with identities\nAuthentication is how you sign in to AWS using your identity credentials. You must be\nauthenticated\n(signed in to AWS) as the AWS account root user, as an\nIAM user, or by assuming an IAM role.\nYou can sign in to AWS as a federated identity by using credentials provided through an identity source.\nAWS IAM Identity Center (IAM Identity Center) users, your company's single sign-on authentication, and your Google or Facebook\ncredentials are examples of federated identities. When you sign in as a federated identity, your administrator previously set up identity federation using IAM roles. When you access AWS by using federation, you are indirectly assuming a role.\nDepending on the type of user you are, you can sign in to the AWS Management Console or the AWS access\nportal. For more information about signing in to AWS, see\nHow to sign in to your AWS account\nin the\nAWS Sign-In User Guide\n.\nIf you access AWS programmatically, AWS provides a software development kit (SDK) and a command line \ninterface (CLI) to cryptographically sign your requests by using your credentials. If you don't use AWS tools, \nyou must sign requests yourself. For more information about using the recommended method to sign requests yourself, see\nSigning AWS API requests\nin the\nIAM User Guide\n.\nRegardless of the authentication method that you use, you might be required to provide\nadditional security information. For example, AWS recommends that you use multi-factor\nauthentication (MFA) to increase the security of your account. To learn more, see\nMulti-factor authentication\nin the\nAWS IAM Identity Center User Guide\nand\nUsing multi-factor authentication (MFA) in AWS\nin the\nIAM User Guide\n.\nAWS account root user\nWhen you create an AWS account, you begin with one sign-in identity that has complete access to all AWS services\n and resources in the account. This identity is called the AWS account\nroot user\nand is accessed by\n signing in with the email address and password that you used to create the account. We \n strongly recommend that you don't use the root user for your everyday tasks. Safeguard your root user credentials and use them to\n perform the tasks that only the root user can perform. For the complete list of tasks that require you to sign in as the root user, see\nTasks that require root user credentials\nin the\nIAM User Guide\n.\nFederated identity\nAs a best practice, require human users, including users that require administrator access, to use federation with an identity provider to access AWS services by using temporary credentials.\nA\nfederated identity\nis a user from your enterprise user directory, a web identity provider, the AWS Directory Service,\nthe Identity Center directory,\nor any user that\naccesses AWS services by using credentials provided through an identity source. When federated identities access AWS accounts, they assume roles, and the roles provide temporary credentials.\nFor centralized access management, we recommend that you use AWS IAM Identity Center. You can create users and groups in IAM Identity Center, or you can connect and synchronize \nto a set of users and groups in your own identity source for use across all your AWS accounts and applications. For information \nabout IAM Identity Center, see\nWhat is IAM Identity Center?\nin the\nAWS IAM Identity Center User Guide\n.\nIAM users and groups\nAn\nIAM user\nis an identity within your AWS account that has specific permissions for a single person or application. Where possible, we recommend relying on temporary credentials instead of creating IAM users who have long-term credentials such as passwords and access keys. However, if you have specific use cases that require long-term credentials with IAM users, we recommend that you rotate access keys. For more information, see\nRotate access keys regularly for use cases that require long-term credentials\nin the\nIAM User Guide\n.\nAn\nIAM group\nis an identity that specifies a collection of IAM users.\n            You can't sign in as a group. You can use groups to specify permissions for multiple users at a time. Groups make permissions easier to manage for\n            large sets of users. For example, you could have a group named\nIAMAdmins\nand give that group permissions to administer IAM\n            resources.\nUsers are different from roles. A user is uniquely associated with one person or application, but a role is intended to be assumable by anyone\n            who needs it. Users have permanent long-term credentials, but roles provide temporary credentials. To learn more, see\nWhen to create an IAM user (instead of a role)\nin the\nIAM User Guide\n.\nIAM roles\nAn\nIAM role\nis an identity within your AWS account that\n            has specific permissions. It is similar to an IAM user, but is not associated with a specific person. You can temporarily assume an IAM role in\n            the AWS Management Console by\nswitching roles\n. You can assume a role by calling an AWS CLI\n            or AWS API operation or by using a custom URL. For more information about methods for using roles, see\nUsing IAM roles\nin the\nIAM User Guide\n.\nIAM roles with temporary credentials are useful in the following situations:\nFederated user access\n\u00e2\u0080\u0093 \n\nTo assign permissions to a federated identity, you create a role and define permissions for the role. When a federated identity authenticates, the identity is associated with the role and is granted the permissions that are defined by the role. For information about roles for federation, see\nCreating a role for a third-party Identity Provider\nin the\nIAM User Guide\n.\nIf you use IAM Identity Center, you configure a permission set. To control what your identities can access after they authenticate, IAM Identity Center correlates the permission set to a role in IAM. \nFor information about permissions sets, see\nPermission sets\nin the\nAWS IAM Identity Center User Guide\n.\nTemporary IAM user permissions\n\u00e2\u0080\u0093 An IAM user or role can assume an IAM role to temporarily take on\n            different permissions for a specific task.\nCross-account access\n\u00e2\u0080\u0093 You can use an\n                  IAM role to allow someone (a trusted principal) in a different account to access\n                  resources in your account. Roles are the primary way to grant cross-account\n                  access. However, with some AWS services, you can attach a policy directly to a\n                  resource (instead of using a role as a proxy). To learn the difference between\n                  roles and resource-based policies for cross-account access, see\nHow IAM roles\n                     differ from resource-based policies\nin the\nIAM User Guide\n.\nCross-service access\n\u00e2\u0080\u0093\n\n      Some AWS services use features in other AWS services. For example, when you make a call in a service, \n      it's common for that service to run applications in Amazon EC2 or store objects in Amazon S3. A service might do this \n      using the calling principal's permissions, using a service role, or using a service-linked role.\nPrincipal permissions\n\u00e2\u0080\u0093\n\n      When you use an IAM user or role to perform actions in AWS, you are considered a principal. Policies \n      grant permissions to a principal. When you use some services, you might perform an action that then triggers \n      another action in a different service. In this case, you must have permissions to perform both actions. To \n      see whether an action requires additional dependent actions in a policy, see\nActions, resources, and condition keys for Amazon EC2\nin the\nService Authorization Reference\n.\nService role\n\u00e2\u0080\u0093\n\n      A service role is an\nIAM role\nthat a service assumes to perform \n      actions on your behalf. An IAM administrator can create, modify, and delete a service role from within IAM. For \n      more information, see\nCreating a role to delegate permissions \n      to an AWS service\nin the\nIAM User Guide\n.\nService-linked role\n\u00e2\u0080\u0093\n\n      A service-linked role is a type of service role that is linked to an AWS service. The service can assume the role to perform an action on your behalf. \n      Service-linked roles appear in your AWS account and are owned by the service. An IAM administrator can view, \n      but not edit the permissions for service-linked roles.\nApplications running on Amazon EC2\n\u00e2\u0080\u0093\n\n      You can use an IAM role to manage temporary credentials for applications that are running on an EC2 instance and making AWS CLI or AWS API requests. \n      This is preferable to storing access keys within the EC2 instance. To assign an AWS role to an EC2 instance and make it \n      available to all of its applications, you create an instance profile that is attached to the \n      instance. An instance profile contains the role and enables programs that are running on the EC2 instance to\n      get temporary credentials. For more information, see\nUsing an IAM role to grant permissions to applications running on Amazon EC2 instances\nin the\nIAM User Guide\n.\nTo learn whether to use IAM roles or IAM users, see\nWhen to create an IAM role (instead of a\n               user)\nin the\nIAM User Guide\n.\nManaging access using policies\nYou control access in AWS by creating policies and attaching them to AWS identities or resources. A policy is an object in AWS that,\n when associated with an identity or resource, defines their permissions. AWS evaluates these policies when a principal (user, root user, or role session) makes a request. \n Permissions in the policies determine whether the request is allowed or denied. \n Most policies are stored in AWS as JSON documents. For more information about the structure and contents \n of JSON policy documents, see\nOverview of JSON policies\nin the\nIAM User Guide\n.\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nBy default, users and roles have no permissions. To grant users permission to perform actions on the resources that they need, an \nIAM administrator can create IAM policies. The administrator can then add the IAM policies to roles, and users can assume the roles.\nIAM policies define permissions for an action regardless of the method that you use to perform the operation. For example, suppose that you have a\n policy that allows the\niam:GetRole\naction. A user with that policy can get role information from the AWS Management Console, the AWS CLI, or the AWS\n API.\nIdentity-based\n               policies\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity, such as an IAM user, group of users, or role. These\n            policies control what actions users and roles can perform, on which resources, and under what conditions. To learn how to create an identity-based\n            policy, see\nCreating IAM policies\nin the\nIAM User Guide\n.\nIdentity-based policies can be further categorized as\ninline policies\nor\nmanaged\n               policies\n. Inline policies are embedded directly into a single user, group, or role. Managed policies are standalone policies that you\n            can attach to multiple users, groups, and roles in your AWS account. Managed policies include AWS managed policies and customer managed\n            policies. To learn how to choose between a managed policy or an inline policy, see\nChoosing between managed policies and inline\n               policies\nin the\nIAM User Guide\n.\nResource-based\n               policies\nResource-based policies are JSON policy documents that you attach to a resource. Examples of resource-based policies are \n         IAM\nrole trust policies\nand Amazon S3\nbucket policies\n. In services that support resource-based policies, service \n         administrators can use them to control access to a specific resource. For the resource where the policy is attached, the policy defines what actions\n            a specified principal can perform on that resource and under what conditions. You must\nspecify a principal\nin a resource-based policy. Principals \n            can include accounts, users, roles, federated users, or AWS services.\nResource-based policies are inline policies that are located in that service. You can't use AWS managed policies from IAM in a \n   resource-based policy.\nAccess control lists (ACLs)\nAccess control lists (ACLs) control which principals (account members, users, or roles) have permissions to access a resource. ACLs are\n            similar to resource-based policies, although they do not use the JSON policy document format.\nAmazon S3, AWS WAF, and Amazon VPC\n            are examples of services that support ACLs. To learn more about ACLs, see\nAccess control list (ACL)\n               overview\nin the\nAmazon Simple Storage Service Developer Guide\n.\nOther policy types\nAWS supports additional, less-common policy types. These policy types can set the maximum permissions granted to you by the more common policy\n            types.\nPermissions boundaries\n\u00e2\u0080\u0093 A permissions\n                  boundary is an advanced feature in which you set the maximum permissions that an\n                  identity-based policy can grant to an IAM entity (IAM user or role). You can\n                  set a permissions boundary for an entity. The resulting permissions are the\n                  intersection of an entity's identity-based policies and its permissions boundaries.\n                  Resource-based policies that specify the user or role in the\nPrincipal\nfield are not limited by the permissions boundary. An\n                  explicit deny in any of these policies overrides the allow. For more information\n                  about permissions boundaries, see\nPermissions boundaries for\n                     IAM entities\nin the\nIAM User Guide\n.\nService control policies (SCPs)\n\u00e2\u0080\u0093 SCPs are JSON policies that specify the maximum permissions for\n                  an organization or organizational unit (OU) in AWS Organizations. AWS Organizations is a service for grouping and centrally managing multiple AWS accounts that your business owns. If you enable all features in an organization, then you can apply service control policies (SCPs) to any or all of\n                  your accounts. The SCP limits permissions for entities in member accounts, including each AWS account root user. For more information about Organizations and\n                  SCPs, see\nHow SCPs work\nin the\nAWS Organizations User Guide\n.\nSession policies\n\u00e2\u0080\u0093 Session policies are\n                  advanced policies that you pass as a parameter when you programmatically create a\n                  temporary session for a role or federated user. The resulting session's\n                  permissions are the intersection of the user or role's identity-based policies and\n                  the session policies. Permissions can also come from a resource-based policy. An\n                  explicit deny in any of these policies overrides the allow. For more information,\n                  see\nSession\n                     policies\nin the\nIAM User Guide\n.\nMultiple policy\n               types\nWhen multiple types of policies apply to a request, the resulting permissions are more complicated to understand. To learn how AWS determines\n            whether to allow a request when multiple policy types are involved, see\nPolicy\n               evaluation logic\nin the\nIAM User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDelete an endpoint service\nHow AWS PrivateLink works with IAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/security_iam_service-with-iam.html": "How AWS PrivateLink works with IAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nIdentity-based policies\nResource-based policies\nPolicy actions\nPolicy resources\nPolicy condition keys\nACLs\nABAC\nTemporary credentials\nPrincipal permissions\nService roles\nService-linked\n                    roles\nHow AWS PrivateLink works with IAM\nBefore you use IAM to manage access to AWS PrivateLink, learn what IAM features are\n         available to use with AWS PrivateLink.\nIAM features you can use with AWS PrivateLink\nIAM feature\nAWS PrivateLink support\nIdentity-based policies\nYes\nResource-based policies\nYes\nPolicy actions\nYes\nPolicy resources\nYes\nPolicy condition keys (service-specific)\nYes\nACLs\nNo\nABAC (tags in\n                                policies)\nYes\nTemporary\n                                credentials\nYes\nPrincipal permissions\nYes\nService\n                                roles\nNo\nService-linked roles\nNo\nTo get a high-level view of how AWS PrivateLink and other AWS services work with most IAM\n            features, see\nAWS services that work with IAM\nin the\nIAM User Guide\n.\nIdentity-based policies for AWS PrivateLink\nSupports identity-based policies\nYes\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity, such as an IAM user, group of users, or role. These\n            policies control what actions users and roles can perform, on which resources, and under what conditions. To learn how to create an identity-based\n            policy, see\nCreating IAM policies\nin the\nIAM User Guide\n.\nWith IAM identity-based policies, you can specify allowed or denied actions and\n            resources as well as the conditions under which actions are allowed or denied.  You\n            can't specify the principal in an identity-based policy because it applies to the user\n            or role to which it is attached. To learn about all of the elements that you can use in a\n            JSON policy, see\nIAM JSON\n               policy elements reference\nin the\nIAM User Guide\n.\nIdentity-based policy examples for AWS PrivateLink\nTo view examples of AWS PrivateLink identity-based policies, see\nIdentity-based policy examples for AWS PrivateLink\n.\nResource-based\n                    policies within AWS PrivateLink\nSupports resource-based policies\nYes\nResource-based policies are JSON policy documents that you attach to a resource. Examples of resource-based policies are \n         IAM\nrole trust policies\nand Amazon S3\nbucket policies\n. In services that support resource-based policies, service \n         administrators can use them to control access to a specific resource. For the resource where the policy is attached, the policy defines what actions\n            a specified principal can perform on that resource and under what conditions. You must\nspecify a principal\nin a resource-based policy. Principals \n            can include accounts, users, roles, federated users, or AWS services.\nTo enable cross-account access, you can specify an entire account or IAM entities\n            in another account as the principal in a\n               resource-based policy. Adding a cross-account principal to a resource-based\n            policy is only half of establishing the trust relationship. When the principal and the\n            resource are in different AWS accounts, an IAM administrator in the trusted account \n            must also grant the principal entity (user or role) permission to access the resource. They grant \n            permission by attaching an identity-based policy to the entity. However, if a resource-based \n            policy grants access to a principal in the same account, no additional identity-based policy is \n            required. For more information, see\nHow\n               IAM roles differ from resource-based policies\nin the\nIAM User Guide\n.\nAWS PrivateLink service supports one type of resource-based policy, known as an\nendpoint policy\n. An endpoint policy controls which AWS\n                principals can use the endpoint to access the endpoint service. For more\n                information, see\nControl access to VPC endpoints using endpoint\n            policies\n.\nPolicy actions\n                    for AWS PrivateLink\nSupports policy actions\nYes\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nAction\nelement of a JSON policy describes the\n               actions that you can use to allow or deny access in a policy. Policy\n               actions usually have the same name as the associated AWS API operation. There are some exceptions, such as\npermission-only \n               actions\nthat don't have a matching API operation. There are also some operations that require multiple actions in a policy. \n               These additional actions are called\ndependent actions\n.\nInclude actions in a policy to grant permissions to perform the associated operation.\nAWS PrivateLink shares its API namespace with Amazon EC2.\n                Policy actions in AWS PrivateLink use the following prefix before the action:\nec2\nTo specify multiple actions in a single statement, separate them with commas.\n\"Action\": [\n      \"ec2:\naction1\n\",\n      \"ec2:\naction2\n\"\n]\nYou can specify multiple actions using wildcards (*). For example, to specify all\n            actions that begin with the word\nDescribe\n, include the following\n            action:\n\"Action\": \"ec2:Describe*\"\nTo see a list of AWS PrivateLink actions, see\nAWS PrivateLink actions\nin the\nAmazon EC2 API Reference\n. \n                For more information, see\nActions Defined by Amazon EC2\nin the\nService Authorization Reference\n.\nPolicy resources for AWS PrivateLink\nSupports policy resources\nYes\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nResource\nJSON policy element specifies the object or objects to which the action applies. Statements must include either a\nResource\nor a\nNotResource\nelement. As a best practice, specify a resource using its\nAmazon Resource Name (ARN)\n. You can do this for actions that support a \n                  specific resource type, known as\nresource-level permissions\n.\nFor actions that don't support resource-level permissions, such as listing operations,\n                  use a wildcard (*) to indicate that the statement applies to all resources.\n\"Resource\": \"*\"\nPolicy\n                    condition keys for AWS PrivateLink\nSupports service-specific policy condition keys\nYes\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nCondition\nelement (or\nCondition\nblock\n) lets you specify conditions in which a\n               statement is in effect. The\nCondition\nelement is optional. You can create\n               conditional expressions that use\ncondition\n                  operators\n, such as equals or less than, to match the condition in the\n               policy with values in the request.\nIf you specify multiple\nCondition\nelements in a statement, or\n               multiple keys in a single\nCondition\nelement, AWS evaluates them using\n               a logical\nAND\noperation. If you specify multiple values for a single\n               condition key, AWS evaluates the condition using a logical\nOR\noperation. All of the conditions must be met before the statement's permissions are\n               granted.\nYou can also use placeholder variables when you specify conditions. For example,\n               you can grant an IAM user permission to access a resource only if it is tagged with\n               their IAM user name. For more information, see\nIAM policy elements:\n                  variables and tags\nin the\nIAM User Guide\n.\nAWS supports global condition keys and service-specific condition keys. To see all AWS global\n               condition keys, see\nAWS global condition context keys\nin the\nIAM User Guide\n.\nThe following condition keys are specific to AWS PrivateLink:\nec2:VpceServiceName\nec2:VpceServiceOwner\nec2:VpceServicePrivateDnsName\nTo learn with which actions and resources you\n                can use a condition key, see\nActions Defined by Amazon EC2\n.\nACLs in AWS PrivateLink\nSupports ACLs\nNo\nAccess control lists (ACLs) control which principals (account members, users, or roles) have permissions to access a resource. ACLs are\n            similar to resource-based policies, although they do not use the JSON policy document format.\nABAC with AWS PrivateLink\nSupports ABAC (tags in policies)\nYes\nAttribute-based access control (ABAC) is an authorization strategy that defines permissions\n      based on attributes. In AWS, these attributes are called\ntags\n. You can attach tags to IAM entities (users\n      or roles) and to many AWS resources. Tagging entities and resources is the first step of ABAC. Then you \n      design ABAC policies to allow operations when the principal's tag matches the tag on the resource that they \n      are trying to access.\nABAC is helpful in environments that are growing rapidly and helps with situations where policy management becomes cumbersome.\nTo control access based on tags, you provide tag information in the\ncondition\n         element\nof a policy using the\naws:ResourceTag/\nkey-name\n,\naws:RequestTag/\nkey-name\n, or\naws:TagKeys\ncondition keys.\nIf a service supports all three condition keys for every resource type, then the value is\nYes\nfor the service. \n  If a service supports all three condition keys for only some resource types, then the value is\nPartial\n.\nFor more information about ABAC, see\nWhat is ABAC?\nin the\nIAM User Guide\n. To view a tutorial with steps for setting up ABAC, see\nUse attribute-based access control (ABAC)\nin the\nIAM User Guide\n.\nUsing temporary\n                    credentials with AWS PrivateLink\nSupports temporary credentials\nYes\nSome AWS services don't work when you sign in using temporary credentials. For additional \n         information, including which AWS services work with temporary credentials, see\nAWS services\n               that work with IAM\nin the\nIAM User Guide\n.\nYou are using temporary credentials if you sign in to the AWS Management Console using any method\n            except a user name and password. For example, when you access AWS using your\n            company's single sign-on (SSO) link, that process automatically creates temporary credentials.\n            You also automatically create temporary credentials when you sign in to the console as a user and\n            then switch roles. For more information about switching roles, see\nSwitching to a role\n               (console)\nin the\nIAM User Guide\n.\nYou can manually create temporary credentials using the AWS CLI or AWS API. You can\n            then use those temporary credentials to access AWS. AWS recommends that you\n            dynamically generate temporary credentials instead of using long-term access keys. For\n            more information, see\nTemporary\n               security credentials in IAM\n.\nCross-service\n                    principal permissions for AWS PrivateLink\nSupports principal permissions\nYes\nWhen you use an IAM user or role to perform actions in AWS, you are considered a principal. Policies \n      grant permissions to a principal. When you use some services, you might perform an action that then triggers \n      another action in a different service. In this case, you must have permissions to perform both actions. To \n      see whether an action requires additional dependent actions in a policy, see\nActions, resources, and condition keys for Amazon EC2\nin the\nService Authorization Reference\n.\nService roles for AWS PrivateLink\nSupports service roles\nNo\nA service role is an\nIAM role\nthat a service assumes to perform \n      actions on your behalf. An IAM administrator can create, modify, and delete a service role from within IAM. For \n      more information, see\nCreating a role to delegate permissions \n      to an AWS service\nin the\nIAM User Guide\n.\nService-linked roles\n                    for AWS PrivateLink\nSupports service-linked roles\nNo\nA service-linked role is a type of service role that is linked to an AWS service. The service can assume the role to perform an action on your behalf. \n      Service-linked roles appear in your AWS account and are owned by the service. An IAM administrator can view, \n      but not edit the permissions for service-linked roles.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIdentity and access management\nIdentity-based policy examples\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/security_iam_id-based-policy-examples.html": "Identity-based policy examples for AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nControl the use of VPC endpoints\nControl VPC endpoints creation based on the service owner\nControl the private DNS names that can be specified for VPC endpoint services\nControl the service names that can be specified for VPC endpoint services\nIdentity-based policy examples for AWS PrivateLink\nBy default, users and roles don't have permission to create or modify AWS PrivateLink\n resources. They also can't perform tasks by using the AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS API. To grant users permission to perform actions on the \n resources that they need, an IAM administrator can create IAM policies. The administrator can then add the IAM policies to roles, and users can assume the roles.\nTo learn how to create an IAM identity-based policy by using these example JSON policy\n documents, see\nCreating IAM policies\nin the\nIAM User Guide\n.\nFor details about actions and resource types defined by AWS PrivateLink, including the format of the ARNs for each of the resource types, see\nActions, resources, and condition keys for Amazon EC2\nin the\nService Authorization Reference\n.\nExamples\nControl the use of VPC endpoints\nControl VPC endpoints creation based on the service owner\nControl the private DNS names that can be specified for VPC endpoint services\nControl the service names that can be specified for VPC endpoint services\nControl the use of VPC endpoints\nBy default, users do not have permission to work with endpoints. You can create\n                an identity-based policy that grants users permission to create, modify, describe, \n                and delete endpoints. The following is an example.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\":[\n{\n\"Effect\": \"Allow\",\n            \"Action\":\"ec2:*VpcEndpoint*\",\n            \"Resource\":\"*\"\n        }\n    ]\n}\nFor information about controlling access to services using VPC endpoints, see\nControl access to VPC endpoints using endpoint\n            policies\n.\nControl VPC endpoints creation based on the service owner\nYou can use the\nec2:VpceServiceOwner\ncondition key to control what VPC endpoint\n            can be created based on who owns the service (\namazon\n,\naws-marketplace\n, or the account ID). The following example grants\n            permission to create VPC endpoints with the specified service owner. To use this\n            example, substitute the Region, the account ID, and the service owner.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateVpcEndpoint\",\n            \"Resource\": [\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc/*\",\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:security-group/*\",\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:subnet/*\",\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:route-table/*\"\n            ]\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateVpcEndpoint\",\n            \"Resource\": [\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc-endpoint/*\"\n            ],\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:VpceServiceOwner\": [\n                        \"\namazon\n\"\n                    ]\n                }\n            }\n        }\n    ]\n}\nControl the private DNS names that can be specified for VPC endpoint services\nYou can use the\nec2:VpceServicePrivateDnsName\ncondition key to control what VPC\n            endpoint service can be modified or created based on the private DNS name associated\n            with the VPC endpoint service. The following example grants permission to create a\n            VPC endpoint service with the specified private DNS name. To use this example,\n            substitute the Region, the account ID, and the private DNS name.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:ModifyVpcEndpointServiceConfiguration\",\n                \"ec2:CreateVpcEndpointServiceConfiguration\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc-endpoint-service/*\"\n            ],\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:VpceServicePrivateDnsName\": [\n                        \"\nexample.com\n\"\n                    ]\n                }\n            }\n        }\n    ]\n}\nControl the service names that can be specified for VPC endpoint services\nYou can use the\nec2:VpceServiceName\ncondition key to control what\n            VPC endpoint can be created based on the VPC endpoint service name. The following\n            example grants permission to create a VPC endpoint with the specified service name. To\n            use this example, substitute the Region, the account ID, and the service name.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateVpcEndpoint\",\n            \"Resource\": [\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc/*\",\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:security-group/*\",\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:subnet/*\",\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:route-table/*\"\n            ]\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateVpcEndpoint\",\n            \"Resource\": [\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:vpc-endpoint/*\"\n            ],\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:VpceServiceName\": [\n                        \"com.amazonaws.\nregion\n.\ns3\n\"\n                    ]\n                }\n            }\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow AWS PrivateLink works with IAM\nEndpoint policies\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-endpoints-access.html": "Control access to VPC endpoints using endpoint policies - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nConsiderations\nDefault endpoint policy\nPolicies for interface endpoints\nPrincipals for gateway endpoints\nUpdate a VPC endpoint policy\nControl access to VPC endpoints using endpoint\n            policies\nAn endpoint policy is a resource-based policy that you attach to a VPC endpoint to control\n        which AWS principals can use the endpoint to access an AWS service.\nAn endpoint policy does not override or replace identity-based policies or resource-based\n        policies. For example, if you're using an interface endpoint to connect to Amazon S3, you can \n        also use Amazon S3 bucket policies to control access to buckets from specific endpoints or \n        specific VPCs.\nContents\nConsiderations\nDefault endpoint policy\nPolicies for interface endpoints\nPrincipals for gateway endpoints\nUpdate a VPC endpoint policy\nConsiderations\nAn endpoint policy is a JSON policy document that uses the IAM policy\n                    language. It must contain a\nPrincipal\nelement. The size of an endpoint policy cannot exceed\n                    20,480 characters, including white space.\nWhen you create an interface or gateway endpoint for an AWS service, you can\n                    attach a single endpoint policy to the endpoint. You can\nupdate the endpoint policy\nat\n                    any time. If you don't attach an endpoint policy, we attach the\ndefault endpoint policy\n.\nNot all AWS services support endpoint policies. If an AWS service doesn't\n                    support endpoint policies, we allow full access to any endpoint for the service.\n                    For more information, see\nView endpoint policy support\n.\nWhen you create a VPC endpoint for an endpoint service other than an\n                    AWS service, we allow full access to the endpoint.\nDefault endpoint policy\nThe default endpoint policy grants full access to the endpoint.\n{\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"*\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nPolicies for interface endpoints\nFor example endpoint policies for AWS services, see\nAWS services that integrate with AWS PrivateLink\n. \n            The first column in the table contains links to AWS PrivateLink documentation for each\n            AWS service. If an AWS service supports endpoint policies, its documentation \n            includes example endpoint policies.\nPrincipals for gateway endpoints\nWith gateway endpoints, you must use the\naws:PrincipalArn\ncondition key\n            to grant access to a principal.\nIf you specify the principal in one of the following formats, access is granted to the\n            AWS account root user only, not all users and roles for the account.\n\"AWS\": \"\naccount_id\n\"\n\"AWS\": \"arn:aws:iam::\naccount_id\n:root\"\nIf you specify an Amazon Resource Name (ARN) for the principal, the ARN is transformed\n            to a unique principal ID when the policy is saved.\nFor example endpoint policies for gateway endpoints, see the following:\nEndpoints for Amazon S3\nEndpoints for DynamoDB\nUpdate a VPC endpoint policy\nUse the following procedure to update an endpoint policy for an AWS service. \n            After you update an endpoint policy, it can take a few minutes for the changes \n            to take effect.\nTo update an endpoint policy using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n.\nSelect the VPC endpoint.\nChoose\nActions\n,\nManage\n                    policy\n.\nChoose\nFull Access\nto allow full access to the service,\n                    or choose\nCustom\nand attach a custom policy.\nChoose\nSave\n.\nTo update an endpoint policy using the command line\nmodify-vpc-endpoint\n(AWS CLI)\nEdit-EC2VpcEndpoint\n(Tools for Windows PowerShell)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIdentity-based policy examples\nCloudWatch metrics\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/privatelink-cloudwatch-metrics.html": "CloudWatch metrics for AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nEndpoint metrics and dimensions\nEndpoint service metrics and dimensions\nView the CloudWatch metrics\nUse built-in Contributor Insights rules\nCloudWatch metrics for AWS PrivateLink\nAWS PrivateLink publishes data points to Amazon CloudWatch for your interface endpoints, Gateway Load Balancer\n        endpoints, and endpoint services. CloudWatch enables you to retrieve statistics about those data\n        points as an ordered set of time series data, known as\nmetrics\n. Think\n        of a metric as a variable to monitor, and the data points as the values of that variable\n        over time. Each data point has an associated timestamp and an optional unit of\n        measurement.\nYou can use metrics to verify that your system is performing as expected. For example, you\n        can create a CloudWatch alarm to monitor a specified metric and initiate an action (such as\n        sending a notification to an email address) if the metric goes outside what you consider an\n        acceptable range.\nMetrics are published for all interface endpoints, Gateway Load Balancer endpoints, and endpoint services.\n        They are not published for gateway endpoints. By default, AWS PrivateLink sends metrics to CloudWatch \n        in one-minute intervals, at no additional cost.\nFor more information, see the\nAmazon CloudWatch User Guide\n.\nContents\nEndpoint metrics and dimensions\nEndpoint service metrics and dimensions\nView the CloudWatch metrics\nUse built-in Contributor Insights rules\nEndpoint metrics and dimensions\nThe\nAWS/PrivateLinkEndpoints\nnamespace includes the following metrics for\n            interface endpoints and Gateway Load Balancer endpoints.\nMetric\nDescription\nActiveConnections\nThe number of concurrent active connections. This includes\n                                connections in the SYN_SENT and ESTABLISHED states.\nReporting criteria\n: The endpoint\n                                received traffic during the one-minute period.\nStatistics\n: The most useful\n                                statistics are\nAverage\n,\nMaximum\n, and\nMinimum\n.\nDimensions\nEndpoint Type\n,\nService Name\n,\nVPC Endpoint Id\n,\nVPC Id\nEndpoint Type\n,\nService Name\n,\nSubnet Id\n,\nVPC Endpoint Id\n,\nVPC Id\nBytesProcessed\nThe number of bytes exchanged between endpoints and endpoint\n                                services, aggregated in both directions. This is the number of bytes\n                                billed to the owner of the endpoint. The bill displays this value in\n                                GB.\nReporting criteria\n: The endpoint\n                                received traffic during the one-minute period.\nStatistics\n: The most useful\n                                statistics are\nAverage\n,\nSum\n,\nMaximum\n, and\nMinimum\n.\nDimensions\nEndpoint Type\n,\nService Name\n,\nVPC Endpoint Id\n,\nVPC Id\nEndpoint Type\n,\nService Name\n,\nSubnet Id\n,\nVPC Endpoint Id\n,\nVPC Id\nNewConnections\nThe number of new connections established through the\n                                endpoint.\nReporting criteria\n: The endpoint\n                                received traffic during the one-minute period.\nStatistics\n: The most useful\n                                statistics are\nAverage\n,\nSum\n,\nMaximum\n, and\nMinimum\n.\nDimensions\nEndpoint Type\n,\nService Name\n,\nVPC Endpoint Id\n,\nVPC Id\nEndpoint Type\n,\nService Name\n,\nSubnet Id\n,\nVPC Endpoint Id\n,\nVPC Id\nPacketsDropped\nThe number of packets dropped by the endpoint. This metric might\n                                not capture all packet drops. Increasing values could indicate that\n                                the endpoint or endpoint service is unhealthy.\nReporting criteria\n: The endpoint\n                                received traffic during the one-minute period.\nStatistics\n: The most useful\n                                statistics are\nAverage\n,\nSum\n, and\nMaximum\n.\nDimensions\nEndpoint Type\n,\nService Name\n,\nVPC Endpoint Id\n,\nVPC Id\nEndpoint Type\n,\nService Name\n,\nSubnet Id\n,\nVPC Endpoint Id\n,\nVPC Id\nRstPacketsReceived\nThe number of RST packets received by the endpoint. Increasing\n                                values could indicate that the endpoint service is unhealthy.\nReporting criteria\n: The endpoint\n                                received traffic during the one-minute period.\nStatistics\n: The most useful\n                                statistics are\nAverage\n,\nSum\n, and\nMaximum\n.\nDimensions\nEndpoint Type\n,\nService Name\n,\nVPC Endpoint Id\n,\nVPC Id\nEndpoint Type\n,\nService Name\n,\nSubnet Id\n,\nVPC Endpoint Id\n,\nVPC Id\nTo filter these metrics, use the following dimensions.\nDimension\nDescription\nEndpoint Type\nFilters the metric data by endpoint type (\nInterface\n|\nGatewayLoadBalancer\n).\nService Name\nFilters the metric data by service name.\nSubnet Id\nFilters the metric data by subnet.\nVPC Endpoint Id\nFilters the metric data by VPC endpoint.\nVPC Id\nFilters the metric data by VPC.\nEndpoint service metrics and dimensions\nThe\nAWS/PrivateLinkServices\nnamespace includes the following metrics\n            for endpoint services.\nMetric\nDescription\nActiveConnections\nThe maximum number of active connections from clients to targets\n                                through the endpoints. Increasing values could indicate the need to\n                                add targets to the load balancer.\nReporting criteria\n: An endpoint\n                                connected to the endpoint service sent traffic during the one-minute\n                                period.\nStatistics\n: The most useful\n                                statistics are\nAverage\nand\nMaximum\n.\nDimensions\nService Id\nAz\n,\nService Id\nLoad Balancer Arn\n,\nService Id\nAz\n,\nLoad Balancer Arn\n,\nService Id\nService Id\n,\nVPC Endpoint Id\nBytesProcessed\nThe number of bytes exchanged between endpoint services and\n                                endpoints, in both directions.\nReporting criteria\n: An endpoint\n                                connected to the endpoint service sent traffic during the one-minute\n                                period.\nStatistics\n: The most useful\n                                statistics are\nAverage\n,\nSum\n, and\nMaximum\n.\nDimensions\nService Id\nAz\n,\nService Id\nLoad Balancer Arn\n,\nService Id\nAz\n,\nLoad Balancer Arn\n,\nService Id\nService Id\n,\nVPC Endpoint Id\nEndpointsCount\nThe number of endpoints connected to the endpoint service.\nReporting criteria\n: There is a\n                                nonzero value during the five-minute period.\nStatistics\n: The most useful\n                                statistics are\nAverage\nand\nMaximum\n.\nDimensions\nService Id\nNewConnections\nThe number of new connections established from clients to targets\n                                through the endpoints. Increasing values could indicate the need to\n                                add targets to the load balancer.\nReporting criteria\n: An endpoint\n                                connected to the endpoint service sent traffic during the one-minute\n                                period.\nStatistics\n: The most useful\n                                statistics are\nAverage\n,\nSum\n, and\nMaximum\n.\nDimensions\nService Id\nAz\n,\nService Id\nLoad Balancer Arn\n,\nService Id\nAz\n,\nLoad Balancer Arn\n,\nService Id\nService Id\n,\nVPC Endpoint Id\nRstPacketsSent\nThe number of RST packets sent to endpoints by the endpoint\n                                service. Increasing values could indicate that there are unhealthy\n                                targets.\nReporting criteria\n: An endpoint\n                                connected to the endpoint service sent traffic during the one-minute\n                                period.\nStatistics\n: The most useful\n                                statistics are\nAverage\n,\nSum\n, and\nMaximum\n.\nDimensions\nService Id\nAz\n,\nService Id\nLoad Balancer Arn\n,\nService Id\nAz\n,\nLoad Balancer Arn\n,\nService Id\nService Id\n,\nVPC Endpoint Id\nTo filter these metrics, use the following dimensions.\nDimension\nDescription\nAz\nFilters the metric data by Availability Zone.\nLoad Balancer Arn\nFilters the metric data by load balancer.\nService Id\nFilters the metric data by endpoint service.\nVPC Endpoint Id\nFilters the metric data by VPC endpoint.\nView the CloudWatch metrics\nYou can view these CloudWatch metrics using the Amazon VPC console, the CloudWatch console,\n            or the AWS CLI as follows.\nTo view metrics using the Amazon VPC console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoints\n. \n                    Select your endpoint and then choose the\nMonitoring\ntab.\nIn the navigation pane, choose\nEndpoint services\n. \n                    Select your endpoint service and then choose the\nMonitoring\ntab.\nTo view metrics using the CloudWatch console\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nMetrics\n.\nSelect the\nAWS/PrivateLinkEndpoints\nnamespace.\nSelect the\nAWS/PrivateLinkServices\nnamespace.\nTo view metrics using the AWS CLI\nUse the following\nlist-metrics\ncommand to list the available metrics for interface endpoints and Gateway Load Balancer endpoints:\naws cloudwatch list-metrics --namespace AWS/PrivateLinkEndpoints\nUse the following\nlist-metrics\ncommand to list the available metrics for endpoint services:\naws cloudwatch list-metrics --namespace AWS/PrivateLinkServices\nUse built-in Contributor Insights rules\nAWS PrivateLink provides built-in Contributor Insights rules for your endpoint services \n            to help you find which endpoints are the largest contributors to each supported metric.\n            For more information, see\nContributor Insights\nin the\nAmazon CloudWatch User Guide\n.\nAWS PrivateLink provides the following rules:\nVpcEndpointService-ActiveConnectionsByEndpointId-v1\n\u00e2\u0080\u0093 Ranks endpoints by the\n                    number of active connections.\nVpcEndpointService-BytesByEndpointId-v1\n\u00e2\u0080\u0093 Ranks endpoints by the\n                    number of bytes processed.\nVpcEndpointService-NewConnectionsByEndpointId-v1\n\u00e2\u0080\u0093 Ranks endpoints by the\n                    number of new connections.\nVpcEndpointService-RstPacketsByEndpointId-v1\n\u00e2\u0080\u0093 Ranks endpoints by the\n                    number of RST packets sent to endpoints.\nBefore you can use a built-in rule, you must enable it. After you enable a rule, it starts\n            collecting contributor data. For information about the charges for Contributor Insights, see\nAmazon CloudWatch Pricing\n.\nYou must have the following permissions to use Contributor Insights:\ncloudwatch:DeleteInsightRules\n\u00e2\u0080\u0093 To delete Contributor\n                    Insights rules.\ncloudwatch:DisableInsightRules\n\u00e2\u0080\u0093 To disable Contributor\n                    Insights rules.\ncloudwatch:GetInsightRuleReport\n\u00e2\u0080\u0093 To get the data.\ncloudwatch:ListManagedInsightRules\n\u00e2\u0080\u0093 To list the available\n                    Contributor Insights rules.\ncloudwatch:PutManagedInsightRules\n\u00e2\u0080\u0093 To enable Contributor Insights rules.\nTasks\nEnable Contributor Insights rules\nDisable Contributor Insights rules\nDelete Contributor Insights rules\nEnable Contributor Insights rules\nUse the following procedures to enable the built-in rules for AWS PrivateLink using either\n                the AWS Management Console or the AWS CLI.\nTo enable the Contributor Insights rules for AWS PrivateLink using the\n                    console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect your endpoint service.\nOn the\nContributor Insights\ntab, choose\nEnable\n.\n(Optional) By default, all rules are enabled. To enable only specific\n                        rules, select the rules that should not be enabled and then choose\nActions\n,\nDisable rule\n. When\n                        prompted for confirmation, choose\nDisable\n.\nTo enable the Contributor Insights rules for AWS PrivateLink using the\n                    AWS CLI\nUse the\nlist-managed-insight-rules\ncommand as follows to enumerate the\n                        available rules. For the\n--resource-arn\noption, specify the ARN\n                        of your endpoint service.\naws cloudwatch list-managed-insight-rules --resource-arn arn:aws:ec2:\nregion\n:\naccount-id\n:vpc-endpoint-service/\nvpc-svc-0123456789EXAMPLE\nIn the output of the\nlist-managed-insight-rules\ncommand, copy the name of the template from the\nTemplateName\nfield. The following is an example of this field.\n\"TemplateName\": \"VpcEndpointService-NewConnectionsByEndpointId-v1\"\nUse the\nput-managed-insight-rules\ncommand as follows to enable the rule. You\n                        must specify the template name and the ARN of your endpoint service.\naws cloudwatch put-managed-insight-rules --managed-rules TemplateName=\nVpcEndpointService-NewConnectionsByEndpointId-v1\n, ResourceARN=arn:aws:ec2:\nregion\n:\naccount-id\n:vpc-endpoint-service/\nvpc-svc-0123456789EXAMPLE\nDisable Contributor Insights rules\nYou can disable the built-in rules for AWS PrivateLink at any time. After you\n                disable a rule, it stops collecting contributor data, but existing contributor data\n                is kept until it is 15 days old. After you disable a rule, you can enable it again\n                to resume collecting contributor data.\nTo disable the Contributor Insights rules for AWS PrivateLink using the\n                    console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nEndpoint services\n.\nSelect your endpoint service.\nOn the\nContributor Insights\ntab, choose\nDisable all\nto disable all rules. Alternatively,\n                        expand the\nRules\npanel, select the rules to disable,\n                        and then choose\nActions\n,\nDisable\n                            rule\nWhen prompted for confirmation, choose\nDisable\n.\nTo disable the Contributor Insights rules for AWS PrivateLink using the\n                    AWS CLI\nUse the\ndisable-insight-rules\ncommand to disable a rule.\nDelete Contributor Insights rules\nUse the following procedures to delete the built-in rules for AWS PrivateLink using either\n                the AWS Management Console or the AWS CLI. After you delete a rule, it stops collecting contributor data \n                and we delete the existing contributor data.\nTo delete Contributor Insights rules for AWS PrivateLink using the console\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nInsights\n,\nContributor Insights\n.\nExpand the\nRules\npanel and select the rules.\nChoose\nActions\n,\nDelete rule\n.\nWhen prompted for confirmation, choose\nDelete\n.\nTo delete Contributor Insights rules for AWS PrivateLink using the AWS CLI\nUse the\ndelete-insight-rules\ncommand to delete a rule.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nEndpoint policies\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-limits-endpoints.html": "AWS PrivateLink quotas - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nAWS PrivateLink quotas\nThe following tables list the quotas, formerly referred to as limits, for AWS PrivateLink\n    resources per Region for your account. Unless indicated otherwise, you can request an increase \n    for these quotas. For more information, see\nRequesting a quota increase\nin the\nService Quotas User Guide\n.\nIf you request a quota increase that applies per resource, we increase the quota for all\n    resources in the Region.\nName\nDefault\nAdjustable\nComments\nInterface and Gateway Load Balancer endpoints per VPC\n50\nYes\nThis is a combined quota for interface endpoints and Gateway Load Balancer endpoints\nGateway VPC endpoints per Region\n20\nYes\nYou can create up to 255 gateway endpoints per VPC\nCharacters per VPC endpoint policy\n20,480\nNo\nThe maximum size of a VPC endpoint policy, including white space\nThe following considerations apply to traffic that passes through a VPC endpoint:\nBy default, each VPC endpoint can support a bandwidth of up to 10 Gbps per Availability\n        Zone, and automatically scales up to 100 Gbps. The maximum bandwidth for a VPC endpoint,\n        when distributing the load across all Availability Zones, is the number of Availability\n        Zones multiplied by 100 Gbps. If your application needs higher throughput, contact AWS\n        support.\nThe maximum transmission unit (MTU) of a network connection is the size, in bytes, of\n        the largest permissible packet that can be passed through a VPC endpoint. The larger the\n        MTU, the more data that can be passed in a single packet. A VPC endpoint supports an MTU of\n        8500 bytes. Packets with a size larger than 8500 bytes that arrive at the VPC endpoint are\n        dropped.\nPath MTU Discovery (PMTUD) is not supported. VPC endpoints do not generate the following\n        ICMP message:\nDestination Unreachable: Fragmentation needed and Don't Fragment was\n          Set\n(Type 3, Code 4).\nVPC endpoints enforce Maximum Segment Size (MSS) clamping for all packets. For more\n        information, see\nRFC879\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCloudWatch metrics\nDocument history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/privatelink/doc-history.html": "Document history for AWS PrivateLink - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nAWS PrivateLink\nDocument history for AWS PrivateLink\nThe following table describes the releases for AWS PrivateLink.\nChange\nDescription\nDate\nDesignated IP addresses\nYou can specify the IP addresses for your endpoint network interfaces\n\t\t\t\t\twhen you create or modify your VPC endpoint.\nAugust 17, 2023\nIPv6 support\nYou can configure your Gateway Load Balancer endpoint services and Gateway Load Balancer endpoints to support \n\t\t\t\t\tboth IPv4 and IPv6 addresses or only IPv6 addresses.\nDecember 12, 2022\nContributor Insights\nYou can use built-in Contributor Insights rules to identify specific endpoints\n\t\t\t\t    that are the top contributors to the CloudWatch metrics for AWS PrivateLink.\nAugust 18, 2022\nIPv6 support\nService providers can enable their endpoint service to accept IPv6 requests,\n\t\t\t\t\teven if their backend services support only IPv4. If an endpoint service \n\t\t\t\t\taccepts IPv6 requests, service consumers can enable IPv6 support for their \n\t\t\t\t\tinterface endpoints so that they can access the endpoint service over IPv6.\nMay 11, 2022\nCloudWatch metrics\nAWS PrivateLink publishes CloudWatch metrics for your interface endpoints, \n\t\t\t\t\tGateway Load Balancer endpoints, and endpoint services.\nJanuary 27, 2022\nGateway Load Balancer endpoints\nYou can create a Gateway Load Balancer endpoint in your VPC to route traffic to a VPC endpoint\n\t\t\t\t\tservice that you've configured using a Gateway Load Balancer.\nNovember 10, 2020\nVPC endpoint policies\nYou can attach an IAM policy to an interface VPC endpoint for an AWS\n\t\t\t\t    service to control access to the service.\nMarch 23, 2020\nCondition keys for VPC endpoints and endpoint services\nYou can use EC2 condition keys to control access to VPC endpoints and endpoint\n\t\t\t\t\tservices.\nMarch 6, 2020\nTag VPC endpoints and endpoint services on creation\nYou can add tags when you create VPC endpoints and endpoint services.\nFebruary 5, 2020\nPrivate DNS names\nYou can access AWS PrivateLink based services from within your VPC\n\t\t\t\t\tusing private DNS names.\nJanuary 6, 2020\nVPC endpoint services\nYou can create your own endpoints services and enable other AWS accounts\n\t\t\t\t\tand users to connect to your service through an interface VPC endpoint.\n\t\t\t\t\tYou can offer your endpoint services for subscription in the\n\t\t\t\t    AWS Marketplace.\nNovember 28, 2017\nInterface VPC endpoints for AWS services\nYou can create an interface endpoint to connect to AWS services\n\t\t\t\t\tthat integrate with AWS PrivateLink without using an internet gateway \n\t\t\t\t\tor NAT device.\nNovember 8, 2017\nVPC endpoints for DynamoDB\nYou can create a gateway VPC endpoint to access Amazon DynamoDB from your  \n\t\t\t\t\tVPC without using an internet gateway or NAT device.\nAugust 16, 2017\nVPC endpoints for Amazon S3\nYou can create a gateway VPC endpoint to access Amazon S3 from your VPC \n\t\t\t\t\twithout using an internet gateway or NAT device.\nMay 11, 2015\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/what-is-transit-gateway.html": "What is a transit gateway? - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nTransit gateway concepts\nHow to get started with transit gateways\nWork with transit gateways\nPricing\nWhat is a transit gateway?\nA\ntransit gateway\nis a network transit hub that you can use to interconnect your\n    virtual private clouds (VPCs) and on-premises networks. As your cloud infrastructure expands\n    globally, inter-Region peering connects transit gateways together using the AWS Global Infrastructure. \n    All network traffic between AWS data centers is automatically encrypted at the physical layer.\nFor more information, see\nAWS Transit Gateway\n.\nTransit gateway concepts\nThe following are the key concepts for transit gateways:\nAttachments\n\u00e2\u0080\u0094 You can attach the\n          following:\nOne or more VPCs\nA Connect SD-WAN/third-party network appliance\nAn AWS Direct Connect gateway\nA peering connection with another transit gateway\nA VPN connection to a transit gateway\nTransit gateway Maximum Transmission Unit (MTU)\n\u00e2\u0080\u0094\n          The maximum transmission unit (MTU) of a network connection is the size, in bytes, of the\n          largest permissible packet that can be passed over the connection. The larger the MTU of a\n          connection, the more data that can be passed in a single packet. A transit gateway supports an MTU\n          of 8500 bytes for traffic between VPCs, AWS Direct Connect, Transit Gateway Connect, and\n          peering attachments. Traffic over VPN connections can have an MTU of 1500 bytes.\nTransit gateway route table\n\u00e2\u0080\u0094 A transit gateway has a\n          default route table and can optionally have additional route tables. A route table\n          includes dynamic and static routes that decide the next hop based on the destination IP\n          address of the packet. The target of these routes could be any transit gateway attachment. By\n          default, transit gateway attachments are associated with the default transit gateway route\n          table.\nAssociations\n\u00e2\u0080\u0094 Each attachment is associated with\n          exactly one route table. Each route table can be associated with zero to many\n          attachments.\nRoute propagation\n\u00e2\u0080\u0094 A VPC, VPN connection, or\n          Direct Connect gateway can dynamically propagate routes to a transit gateway route table.\n          With a Connect attachment, the routes are propagated to a transit gateway route table by default.\n          With a VPC, you must create static routes to send traffic to the transit gateway. With a VPN\n          connection, routes are propagated from the transit gateway to your on-premises router using Border\n          Gateway Protocol (BGP). With a Direct Connect gateway, allowed prefixes are originated to\n          your on-premises router using BGP. With a peering attachment, you must create a static\n          route in the transit gateway route table to point to the peering attachment.\nHow to get started with transit gateways\nUse the following resources to help you create and use a transit gateway.\nHow transit gateways work\nGetting started\nDesign best practices\nWork with transit gateways\nYou can create, access, and manage your transit gateways using any of the following interfaces:\nAWS Management Console\n\u00e2\u0080\u0094 Provides a web interface that you\n          can use to access your transit gateways.\nAWS Command Line Interface (AWS CLI)\n\u00e2\u0080\u0094 Provides\n          commands for a broad set of AWS services, including Amazon VPC, and is supported on\n                    Windows, macOS, and Linux. For more information, see\nAWS Command Line Interface\n.\nAWS SDKs\n\u00e2\u0080\u0094 Provides language-specific API\n          operations and takes care of many of the connection details, such as calculating\n          signatures, handling request retries, and handling errors. For more information, see\nAWS SDKs\n.\nQuery API\n\u00e2\u0080\u0094 Provides low-level API actions\n          that you call using HTTPS requests. Using the Query API is the most direct way to access\n          Amazon VPC, but it requires that your application handle low-level details such as generating\n          the hash to sign the request, and handling errors. For more information, see the\nAmazon EC2 API Reference\n.\nPricing\nYou are charged hourly for each attachment on a transit gateway, and you are charged for\n            the amount of traffic processed on the transit gateway. For more information, see\nAWS Transit Gateway pricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow transit gateways work\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/how-transit-gateways-work.html": "How transit gateways work - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nArchitecture diagram\nResource attachments\nEqual Cost Multipath routing\nAvailability Zones\nRouting\nHow transit gateways work\nA\ntransit gateway\nacts as a Regional virtual router for traffic flowing between\n        your virtual private clouds (VPCs) and on-premises networks. A transit gateway scales elastically\n        based on the volume of network traffic. Routing through a transit gateway operates at layer 3, where\n        the packets are sent to a specific next-hop attachment, based on their destination IP\n        addresses.\nContents\nArchitecture diagram\nResource attachments\nEqual Cost Multipath routing\nAvailability Zones\nRouting\nArchitecture diagram\nThe following diagram shows a transit gateway with three VPC attachments. The route table for each\n            of these VPCs includes the local route and routes that send traffic destined for the other\n            two VPCs to the transit gateway.\nThe following is an example of a default transit gateway route table for the attachments\n            shown in the previous diagram. The CIDR blocks for each VPC propagate to the route table.\n            Therefore, each attachment can route packets to the other two attachments.\nDestination\nTarget\nRoute type\nVPC A CIDR\nAttachment for VPC A\npropagated\nVPC B CIDR\nAttachment for VPC B\npropagated\nVPC C CIDR\nAttachment for VPC C\npropagated\nResource attachments\nA transit gateway attachment is both a source and a destination of packets. You can attach the\n            following resources to your transit gateway:\nOne or more VPCs. AWS Transit Gateway deploys an elastic network interface within VPC\n                    subnets, which is then used by the transit gateway to route traffic to and from the chosen\n                    subnets. You must have at least one subnet for each Availability Zone, which\n                    then enables traffic to reach resources in every subnet of that zone. During\n                    attachment creation, resources within a particular Availability Zone can reach a\n                    transit gateway only if a subnet is enabled within the same zone. If a subnet route table\n                    includes a route to the transit gateway, traffic is only forwarded to the transit gateway if the\n                    transit gateway has an attachment in the subnet of the same Availability Zone.\nOne or more VPN connections\nOne or more AWS Direct Connect gateways\nOne or more Transit Gateway Connect attachments\nOne or more transit gateway peering connections\nA transit gateway attachment can be both a source and a destination of packets\nEqual Cost Multipath routing\nAWS Transit Gateway supports Equal Cost Multipath (ECMP) routing for most attachments. For a\n                VPN attachment, you can enable or disable ECMP support using the console when\n                creating or modifying a transit gateway. For all other attachment types, the following ECMP\n                restrictions apply:\nVPC - VPC does not support ECMP since CIDR blocks cannot overlap. For example,\n                    you can't attach a VPC with a CIDR 10.1.0.0/16 with a second VPC using the same\n                    CIDR to a transit gateway, and then set up routing to load balance the traffic between\n                    them.\nVPN - When the\nVPN ECMP support\noption is disabled, a\n                    transit gateway uses internal metrics to determine the preferred path in the event of\n                    equal prefixes across multiple paths.  For more information on enabling or\n                    disabling ECMP for a VPN attachment, see\nTransit gateways\n.\nAWS Transit Gateway Connect - AWS Transit Gateway Connect attachments automatically support\n                    ECMP.\nAWS Direct Connect Gateway - AWS Direct Connect Gateway attachments automatically\n                    support ECMP across multiple Direct Connect Gateway attachments.\nTransit gateway peering - Transit gateway peering does not support ECMP since\n                    it neither supports dynamic routing nor can you configure the same static route\n                    against two different targets.\nNote\nBGP Multipath AS-Path Relax is not supported, so you can't use ECMP over\n                        different Autonomous System Numbers (ASNs).\nECMP is not supported between different attachment types. For example, you\n                        can't enable ECMP between a VPN and a VPC attachment. Instead, transit gateway routes\n                        are evaluated and traffic routed accordingly to the evaluated route. For\n                        more information, see\nRoute evaluation order\n.\nA single Direct Connect gateway supports ECMP across multiple transit\n                        virtual interfaces. Therefore, we recommended that you set up and use only a\n                        single Direct Connect gateway and to not set up and use multiple gateways to\n                        take advantage of ECMP. For more information about Direct Connect gateways\n                        and public virtual interfaces, see\nHow do I set up an Active/Active or Active/Passive Direct Connect\n                            connection to AWS from a public virtual interface?\n.\nAvailability Zones\nWhen you attach a VPC to a transit gateway, you must enable one or more Availability Zones to be\n            used by the transit gateway to route traffic to resources in the VPC subnets. To enable each\n            Availability Zone, you specify exactly one subnet. The transit gateway places a network interface\n            in that subnet using one IP address from the subnet. After you enable an Availability\n            Zone, traffic can be routed to all subnets in the VPC, not just the specified subnet or\n            Availability Zone. However, only resources that reside in Availability Zones where there\n            is a transit gateway attachment can reach the transit gateway.\nIf traffic is sourced from an Availability Zone that the destination attachment is not\n            present in, AWS Transit Gateway will internally route that traffic to a random Availability Zone\n            where the attachment is present. There is no additional transit gateway charge for this\n            type of cross-Availability Zone traffic.\nWe recommend that you enable multiple Availability Zones to ensure\n            availability.\nUsing appliance mode support\nIf you plan to configure a stateful network appliance in your VPC, you can enable\n                appliance mode support for the VPC attachment in which the appliance is located.\n                This ensures that the transit gateway uses the same Availability Zone for that VPC attachment\n                for the lifetime of a flow of traffic between source and destination. It also allows\n                the transit gateway to send traffic to any Availability Zone in the VPC, as long as there is a\n                subnet association in that zone. For more information, see\nExample: Appliance in a shared services\n            VPC\n.\nRouting\nYour transit gateway routes IPv4 and IPv6 packets between attachments using transit gateway route tables.\n            You can configure these route tables to propagate routes from the route tables for the\n            attached VPCs, VPN connections, and Direct Connect gateways. You can also add static\n            routes to the transit gateway route tables. When a packet comes from one attachment, it is routed\n            to another attachment using the route that matches the destination IP address.\nFor transit gateway peering attachments, only static routes are supported.\nContents\nRoute tables\nRoute table association\nRoute propagation\nRoutes for peering attachments\nRoute evaluation order\nRoute tables\nYour transit gateway automatically comes with a default route table. By default, this route\n                table is the default association route table and the default propagation route\n                table. Alternatively, if you disable route propagation and route table association,\n                AWS does not create a default route table for the transit gateway.\nYou can create additional route tables for your transit gateway. This enables you to isolate\n                subsets of attachments. Each attachment can be associated with one route table. An\n                attachment can propagate its routes to one or more route tables.\nYou can create a blackhole route in your transit gateway route table that drops traffic that\n                matches the route.\nWhen you attach a VPC to a transit gateway, you must add a route to your subnet\n                route table in order for traffic to route through the transit gateway. For more\n                information, see\nRouting for a\n                    Transit Gateway\nin the\nAmazon VPC User Guide\n.\nRoute table association\nYou can associate a transit gateway attachment with a single route table. Each route table\n                can be associated with zero to many attachments and can forward packets to other\n                attachments.\nRoute propagation\nEach attachment comes with routes that can be installed in one or more transit gateway route\n                tables. When an attachment is propagated to a transit gateway route table, these routes are\n                installed in the route table. You can't filter on advertised routes.\nFor a VPC attachment, the CIDR blocks of the VPC are propagated to the transit\n                gateway route table.\nWhen dynamic routing is used with a VPN attachment or a Direct Connect gateway\n                attachment, you can propagate the routes learned from the on-premises router through\n                BGP to any of the transit gateway route tables.\nWhen dynamic routing is used with a VPN attachment, the routes in the route table\n                associated with the VPN attachment are advertised to the customer gateway through\n                BGP.\nFor a Connect attachment, routes in the route table associated with the Connect\n                attachment are advertised to the third-party virtual appliances, such as SD-WAN\n                appliances, running in a VPC through BGP.\nFor a Direct Connect gateway attachment,\nallowed prefixes interactions\ncontrol which routes are advertised to the customer network from AWS.\nWhen a static route and a propagated route have the same destination, the static\n                route has the higher priority, so the propagated route is not included in the route\n                table. If you remove the static route, the overlapping propagated route is included\n                in the route table.\nRoutes for peering attachments\nYou can peer two transit gateways, and route traffic between them. To do this, you create a\n                peering attachment on your transit gateway, and specify the peer transit gateway with which to create\n                the peering connection. You then create a static route in your transit gateway route table to\n                route traffic to the transit gateway peering attachment. Traffic that's routed to the peer\n                transit gateway can then be routed to the VPC and VPN attachments for the peer transit gateway.\nFor more information, see\nExample: Peered transit gateways\n.\nRoute evaluation order\nTransit gateway routes are evaluated in the following order:\nThe most specific route for the destination address.\nFor routes with the same destination IP address but different targets, the\n                        route priority is as follows:\nStatic routes (for example, Site-to-Site VPN static routes)\nPrefix list referenced routes\nVPC propagated routes\nDirect Connect gateway propagated routes\nTransit Gateway Connect propagated routes\nSite-to-Site VPN propagated routes\nTransit Gateway peering propagated routes (Cloud WAN)\nTransit Gateway only shows a preferred route. A backup route will only appear in the\n                Transit Gateway route table if that route is no longer advertised. For example, if you are\n                advertising the same routes over the Direct Connect gateway and over Site-to-Site VPN. AWS Transit Gateway\n                will only show the routes received from the Direct Connect gateway route, which is\n                the preferred route. The Site-to-Site VPN, which is the backup route, will only display when\n                the Direct Connect gateway is no longer advertised.\nConsider the following VPC route table. The VPC local route has the highest\n                priority, followed by the routes that are the most specific. When a static route and\n                a propagated route have the same destination, the static route has a higher\n                priority.\nDestination\nTarget\nPriority\n10.0.0.0/16\nlocal\n1\n192.168.0.0/16\npcx-12345\n2\n172.31.0.0/16\nvgw-12345 (static) or\ntgw-12345 (static)\n2\n172.31.0.0/16\nvgw-12345 (propagated)\n3\n0.0.0.0/0\nigw-12345\n4\nConsider the following transit gateway route table. If you prefer the AWS Direct Connect gateway\n                attachment to the VPN attachment, use a BGP VPN connection and propagate the routes\n                in the transit gateway route table.\nDestination\nAttachment (Target)\nResource type\nRoute type\nPriority\n10.0.0.0/16\ntgw-attach-123 | vpc-1234\nVPC\nStatic or propagated\n1\n192.168.0.0/16\ntgw-attach-789 | vpn-5678\nVPN\nStatic\n2\n172.31.0.0/16\ntgw-attach-456 | dxgw_id\nAWS Direct Connect gateway\nPropagated\n3\n172.31.0.0/16\ntgw-attach-789 | tgw-connect-peer-123\nConnect\nPropagated\n4\n172.31.0.0/16\ntgw-attach-789 | vpn-5678\nVPN\nPropagated\n5\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWhat is a transit gateway?\nGetting started\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-getting-started.html": "Getting started with transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nPrerequisites\nStep 1: Create the transit gateway\nStep 2: Attach your VPCs to your transit gateway\nStep 3: Add routes between the transit gateway and your VPCs\nStep 4: Test the transit gateway\nStep 5: Delete the transit gateway\nGetting started with transit gateways\nThe following tasks help you become familiar with transit gateways. You will create a transit gateway and  \n    then connect two of your VPCs using the transit gateway.\nTasks\nPrerequisites\nStep 1: Create the transit gateway\nStep 2: Attach your VPCs to your transit gateway\nStep 3: Add routes between the transit gateway and your VPCs\nStep 4: Test the transit gateway\nStep 5: Delete the transit gateway\nPrerequisites\nTo demonstrate a simple example of using a transit gateway, create two VPCs in the same Region.\n          The VPCs cannot have overlapping CIDRs. Launch one Amazon EC2 instance in each VPC. For more\n          information, see\nGet started with\n            Amazon VPC\nin the\nAmazon VPC User Guide\n.\nYou cannot have identical routes pointing to two different VPCs. A  transit gateway does not\n          propagate the CIDRs of a newly attached VPC if an identical route exists in the transit gateway\n          route tables.\nVerify that you have the permissions required to work with transit gateways. For more\n          information, see\nIdentity and access management for your transit gateways\n.\nYou can't ping between hosts if you haven't added an ICMP rule to each of the host\n          security groups. For more information, see\nWork with\n            security groups\nin the\nAmazon VPC User Guide\n.\nStep 1: Create the transit gateway\nWhen you create a transit gateway, we create a default transit gateway route table and use it as the default \n      association route table and the default propagation route table.\nTo create a transit gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the Region selector, choose the Region that you used when you created the VPCs.\nOn the navigation pane, choose\nTransit Gateways\n.\nChoose\nCreate transit gateway\n.\n(Optional) For\nName tag\n, enter a name for the transit gateway. This creates\n          a tag with \"Name\" as the key and the name that you specified as the value.\n(Optional) For\nDescription\n, enter a description for the\n          transit gateway.\nFor\nAmazon side Autonomous System Number (ASN)\n, enter the\n                private ASN for your transit gateway. This should be the ASN for the AWS side of a\n          Border Gateway Protocol (BGP) session.\nThe range is from 64512 to 65534 for 16-bit ASNs.\nThe range is from 4200000000 to 4294967294 for 32-bit ASNs.\nIf you have a multi-Region deployment, we recommend that you use a unique ASN for each\n          of your transit gateways.\n(Optional) You can modify the default settings if you need to disable DNS support, or\n          if you don't want the default association route table or default propagation route\n          table.\nChoose\nCreate transit gateway\n. When the gateway is created, the\n          initial state of the transit gateway is\npending\n.\nStep 2: Attach your VPCs to your transit gateway\nWait until the transit gateway you created in the previous section shows as available before\n      proceeding with creating an attachment. Create an attachment for each VPC.\nConfirm that you have created two VPCs and launched an EC2 instance in each, as described\n      in\nPrerequisites\n.\nCreate a transit gateway attachment to a VPC\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n          Attachments\n.\nChoose\nCreate transit gateway attachment\n.\n(Optional) For\nName tag\n, enter a name for the attachment.\nFor\nTransit gateway ID\n, choose the transit gateway to use for the\n          attachment.\nFor\nAttachment type\n, choose\nVPC\n.\nChoose whether to enable\nDNS support\n. For this exercise, \n          do not enable\nIPv6 support\n.\nFor\nVPC ID\n, choose the VPC to attach to the transit gateway.\nFor\nSubnet IDs\n, select one subnet for each Availability Zone \n          to be used by the transit gateway to route traffic. You must select at least one subnet. \n          You can select only one subnet per Availability Zone.\nChoose\nCreate transit gateway attachment\n.\nEach attachment is always associated with exactly one route table. Route tables can be\n      associated with zero to many attachments. To determine the routes to configure, decide on the\n      use case for your transit gateway, and then configure the routes. For more information, see\nExample use cases for transit gateways\n.\nStep 3: Add routes between the transit gateway and your VPCs\nA route table includes dynamic and static routes that determine the next hop for\n      associated VPCs based on the destination IP address of the packet. Configure a route that has\n      a destination for non-local routes and the target of the transit gateway attachment ID. For more\n      information, see\nRouting for a transit gateway\nin the\nAmazon VPC User Guide\n.\nTo add a route to a VPC route table\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nRoute Tables\n.\nChoose the route table associated with your VPC.\nChoose the\nRoutes\ntab, then choose\nEdit\n            routes\n.\nChoose\nAdd route\n.\nIn the\nDestination\ncolumn, enter the destination IP address\n          range. For\nTarget\n, choose\nTransit Gateway\n, and\n          then choose the transit gateway ID.\nChoose\nSave changes\n.\nStep 4: Test the transit gateway\nYou can confirm that the transit gateway was successfully created by connecting to an Amazon EC2 instance\n      in each VPC, and then sending data between them, such as a ping command. For more information,\n      see\nConnect to your Linux instance\nor\nConnecting to your\n        Windows instance\n.\nStep 5: Delete the transit gateway\nWhen you no longer need a transit gateway, you can delete it.\nYou cannot delete a transit gateway that has resource attachments. If you try to delete a transit gateway with\n      attachments, you'll be prompted to first delete those attachments before you can delete the\n      transit gateway. As soon as the transit gateway is deleted, you stop incurring charges for it.\nTo delete your transit gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateways\n.\nSelect the transit gateway, and then choose\nActions\n,\nDelete\n            transit gateway\n.\nEnter\ndelete\nand choose\nDelete\n.\nThe\nState\nof the transit gateway on the\nTransit\n            gateways\npage is\nDeleting\n. Once deleted the transit gateway is\n          removed from the page.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow transit gateways work\nDesign best practices\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-best-design-practices.html": "Transit gateway design best practices - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nTransit gateway design best practices\nThe following are best practices for your transit gateway design:\nUse a separate subnet for each transit gateway VPC attachment. For each subnet, use a small CIDR, for\n\t\t\t\texample\n/28\n, so that you have more addresses for EC2 resources. When\n\t\t\t\tyou use a separate subnet, you can configure the following:\nKeep the inbound and outbound network ACLs associated with the transit gateway subnets open.\nDepending on your traffic flow, you can apply network ACLs to your workload\n\t\t\t\t\t\tsubnets.\nCreate one network ACL and associate it with all of the subnets that are\n\t\t\t\tassociated with the transit gateway. Keep the network ACL open in both the inbound and\n\t\t\t\toutbound directions.\nAssociate the same VPC route table with all of the subnets that are associated\n\t\t\t\twith the transit gateway, unless your network design requires multiple VPC route tables (for\n\t\t\t\texample, a middle-box VPC that routes traffic through multiple NAT gateways).\nUse Border Gateway Protocol (BGP) Site-to-Site VPN connections. If your customer gateway\n\t\t\t\tdevice or firewall for the connection supports multipath, enable the feature.\nEnable route propagation for AWS Direct Connect gateway attachments and BGP Site-to-Site VPN\n\t\t\t\tattachments.\nWhen migrating from VPC peering to use a transit gateway, consider the following:\nA transit gateway does not support security group referencing.\nAn MTU size mismatch between VPC peering and the transit gateway might result in\n\t\t\t\t\t\tsome packets dropping for asymmetric traffic. Update both VPCs at the same\n\t\t\t\t\t\ttime to avoid jumbo packets dropping due to size mismatches.\nYou do not need additional transit gateways for high availability, because transit gateways are highly\n\t\t\t\tavailable by design.\nLimit the number of transit gateway route tables unless your design requires multiple transit gateway\n\t\t\t\troute tables.\nFor redundancy, use a single transit gateway in each Region for disaster recovery.\nFor deployments with multiple transit gateways, we recommend that you use a unique Autonomous System\n\t\t\t\tNumber (ASN) for each of your transit gateways. You can also use inter-Region peering.\n\t\t\t\tFor more information, see\nBuilding a global network using AWS Transit Gateway Inter-Region peering\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGetting started\nExample use cases\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/TGW_Scenarios.html": "Example use cases for transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nExample use cases for transit gateways\nThe following are common use cases for transit gateways. Your transit gateways are not \n\t\tlimited to these use cases.\nExamples\nCentralized router\nIsolated VPCs\nIsolated VPCs with shared services\nPeering\nCentralized outbound routing\nAppliance VPC\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDesign best practices\nCentralized router\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-centralized-router.html": "Example: Centralized router - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nOverview\nResources\nRouting\nExample: Centralized router\nYou can configure your transit gateway as a centralized router that connects all of your VPCs,\n\t\tAWS Direct Connect, and Site-to-Site VPN connections. In this scenario, all attachments are associated\n\t\twith the transit gateway default route table and propagate to the transit gateway default\n\t\troute table. Therefore, all attachments can route packets to each other, with the transit gateway\n\t\tserving as a simple layer 3 IP router.\nContents\nOverview\nResources\nRouting\nOverview\nThe following diagram shows the key components of the configuration for this scenario. In\n            this scenario, there are three VPC attachments and one Site-to-Site VPN attachment to the transit gateway.\n            Packets from the subnets in VPC A, VPC B, and VPC C that are destined for a subnet in\n            another VPC or for the VPN connection first route through the transit gateway.\nResources\nCreate the following resources for this scenario:\nThree VPCs. For information about creating a VPC, see\nCreate a VPC\nin the\nAmazon VPC User Guide\n.\nA transit gateway. For more information, see\nCreate a transit gateway\n.\nThree VPC attachments on the transit gateway. For more information, see\nCreate a transit gateway attachment to a VPC\n.\nA Site-to-Site VPN attachment on the transit gateway. The CIDR blocks for each VPC propagate to\n    \t\t\t\tthe transit gateway route table. When the VPN connection is up, the BGP session is established and \n    \t\t\t\tthe Site-to-Site VPN CIDR propagates to the transit gateway route table and the VPC CIDRs are added to the \n    \t\t\t\tcustomer gateway BGP table. For more information, see\nCreate a transit gateway attachment to a VPN\n.\nEnsure that you review the\nrequirements for your customer gateway device\nin the\nAWS Site-to-Site VPN \n    \t\t\t\t\tUser Guide\n.\nRouting\nEach VPC has a route table and there is a route table for the transit gateway.\nVPC route tables\nEach VPC has a route table with 2 entries. The first entry is the default entry for local\n\t\t\t\tIPv4 routing in the VPC; this entry enables the instances in this VPC to communicate\n\t\t\t\twith each other. The second entry routes all other IPv4 subnet traffic to the transit gateway.\n\t\t\t\tThe following table shows the VPC A routes.\nDestination\nTarget\n10.1.0.0/16\nlocal\n0.0.0.0/0\ntgw-id\nTransit gateway route table\nThe following is an example of a default route table for the attachments shown in\n\t\t\t\tthe previous diagram, with route propagation enabled.\nDestination\nTarget\nRoute type\n10.1.0.0/16\nAttachment for VPC A\npropagated\n10.2.0.0/16\nAttachment for VPC B\npropagated\n10.3.0.0/16\nAttachment for VPC C\npropagated\n10.99.99.0/24\nAttachment for VPN connection\npropagated\nCustomer gateway BGP\n                    table\nThe customer gateway BGP table contains the following VPC CIDRs.\n10.1.0.0/16\n10.2.0.0/16\n10.3.0.0/16\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExample use cases\nIsolated VPCs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-isolated.html": "Example: Isolated VPCs - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nOverview\nResources\nRouting\nExample: Isolated VPCs\nYou can configure your transit gateway as multiple isolated routers. This is similar to using multiple\n\t\ttransit gateways, but provides more flexibility in cases where the routes and attachments might\n\t\tchange. In this scenario, each isolated router has a single route table. All attachments\n\t\tassociated with an isolated router propagate and associate with its route table. Attachments\n\t\tassociated with one isolated router can route packets to each other, but cannot route\n\t\tpackets to or receive packets from the attachments for another isolated router.\nContents\nOverview\nResources\nRouting\nOverview\nThe following diagram shows the key components of the configuration for this scenario.\n            Packets from VPC A, VPC B, and VPC C route to the transit gateway. Packets from the subnets in\n            VPC A, VPC B, and VPC C that have the internet as a destination first route through the\n            transit gateway and then route to the Site-to-Site VPN connection (if the destination is within that\n            network). Packets from one VPC that have a destination of a subnet in another VPC, for\n            example from 10.1.0.0 to 10.2.0.0, route through the transit gateway, where they are blocked\n            because there is no route for them in the transit gateway route table.\nResources\nCreate the following resources for this scenario:\nThree VPCs. For information about creating a VPC, see\nCreate a\n\t\t\t\t\tVPC\nin the\nAmazon VPC User Guide\n.\nA transit gateway. For more information, see\nCreate a transit gateway\n.\nThree attachments on the transit gateway for the three VPCs. For more information, see\nCreate a transit gateway attachment to a VPC\n.\nA Site-to-Site VPN attachment on the transit gateway. For more information, see\nCreate a transit gateway attachment to a VPN\n. Ensure that you review the\nrequirements for your\n\t\t\t\t\t\tcustomer gateway device\nin the\nAWS Site-to-Site VPN\n\t\t\t\t\t\t\tUser Guide\n.\nWhen the VPN connection is up, the BGP session is established and the VPN CIDR propagates to\n\t\t\tthe transit gateway route table and the VPC CIDRs are added to the customer gateway BGP\n\t\t\ttable.\nRouting\nEach VPC has a route table, and the transit gateway has two route tables\u00e2\u0080\u0094one for the VPCs and one for\n            the VPN connection.\nVPC A, VPC B, and VPC C route\n\t\t\t\t\ttables\nEach VPC has a route table with 2 entries. The first entry is the default entry for local\n                IPv4 routing in the VPC. This entry enables the instances in this VPC to communicate\n                with each other. The second entry routes all other IPv4 subnet traffic to the transit gateway.\n                The following table shows the VPC A routes.\nDestination\nTarget\n10.1.0.0/16\nlocal\n0.0.0.0/0\ntgw-id\nTransit gateway route\n                    tables\nThis scenario uses one route table for the VPCs and one route table for the VPN connection.\nThe VPC attachments are associated with the following route table, which has a\n                propagated route for the VPN attachment.\nDestination\nTarget\nRoute type\n10.99.99.0/24\nAttachment for VPN connection\npropagated\nThe VPN attachment is associated with the following route table, which has propagated\n                routes for each of the VPC attachments.\nDestination\nTarget\nRoute type\n10.1.0.0/16\nAttachment for VPC A\npropagated\n10.2.0.0/16\nAttachment for VPC B\npropagated\n10.3.0.0/16\nAttachment for VPC C\npropagated\nFor more information about propagating routes in a transit gateway route table, see\nPropagate a route to a transit gateway route\n                    table\n.\nCustomer gateway BGP table\nThe customer gateway BGP table contains the following VPC CIDRs.\n10.1.0.0/16\n10.2.0.0/16\n10.3.0.0/16\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCentralized router\nIsolated VPCs with shared services\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-isolated-shared.html": "Example: Isolated VPCs with shared services - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nOverview\nResources\nRouting\nExample: Isolated VPCs with shared\n            services\nYou can configure your transit gateway as multiple isolated routers that use a shared service. This is\n        similar to using multiple transit gateways, but provides more flexibility in cases where the routes\n        and attachments might change. In this scenario, each isolated router has a single route\n        table. All attachments associated with an isolated router propagate and associate with its\n        route table. Attachments associated with one isolated router can route packets to each\n        other, but cannot route packets to or receive packets from the attachments for another\n        isolated router. Attachments can route packets to or receive packets from the shared\n        services. You can use this scenario when you have groups that need to be isolated, but use a\n        shared service, for example a production system.\nContents\nOverview\nResources\nRouting\nOverview\nThe following diagram shows the key components of the configuration for this scenario.\n\t\t\tPackets from the subnets in VPC A, VPC B, and VPC C that have the internet as a\n\t\t\tdestination, first route through the transit gateway and then route to the customer gateway for\n\t\t\tSite-to-Site VPN. Packets from subnets in VPC A, VPC B, or VPC C that have a destination of a\n\t\t\tsubnet in VPC A, VPC B, or VPC C route through the transit gateway, where they are blocked because\n\t\t\tthere is no route for them in the transit gateway route table. Packets from VPC A, VPC B, and VPC\n\t\t\tC that have VPC D as the destination route through the transit gateway and then to VPC D.\nResources\nCreate the following resources for this scenario:\nFour VPCs. For information about creating a VPC, see\nCreate a\n\t\t\t\t\tVPC\nin the\nAmazon VPC User Guide\n.\nA transit gateway. For more information, see\nCreate a transit gateway\n.\nFour attachments on the transit gateway, one per VPC. For more information, see\nCreate a transit gateway attachment to a VPC\n.\nA Site-to-Site VPN attachment on the transit gateway. For more information, see\nCreate a transit gateway attachment to a VPN\n.\nEnsure that you review the\nrequirements \n\t\t\t\t\tfor your customer gateway device\nin the\nAWS Site-to-Site VPN User Guide\n.\nWhen the VPN connection is up, the BGP session is established and the VPN CIDR propagates to\n\t\t\tthe transit gateway route table and the VPC CIDRs are added to the customer gateway BGP\n\t\t\ttable.\nEach isolated VPC is associated with the isolated route table and propagated\n\t\t\t\t\tto the shared route table.\nEach shared services VPC is associated with the shared route table and\n\t\t\t\t\tpropagated to both route tables.\nRouting\nEach VPC has a route table, and the transit gateway has two route tables\u00e2\u0080\u0094one for the VPCs and\n            one for the VPN connection and shared services VPC.\nVPC A, VPC B, VPC C, and VPC D\n                    route tables\nEach VPC has a route table with two entries. The first entry is the default entry for local\n\t\t\t\trouting in the VPC; this entry enables the instances in this VPC to communicate with\n\t\t\t\teach other. The second entry routes all other IPv4 subnet traffic to the\n\t\t\t\ttransit gateway.\nDestination\nTarget\n10.1.0.0/16\nlocal\n0.0.0.0/0\ntransit gateway ID\nTransit gateway route\n                    tables\nThis scenario uses one route table for the VPCs and one route table for the VPN\n                connection.\nThe VPC A, B, and C attachments are associated with the following route table,\n                which has a propagated route for the VPN attachment and a propagated route for the\n                attachment for VPC D.\nDestination\nTarget\nRoute type\n10.99.99.0/24\nAttachment for VPN connection\npropagated\n10.4.0.0/16\nAttachment for VPC D\npropagated\nThe VPN attachment and shared services VPC (VPC D) attachments are associated with the\n\t\t\t\tfollowing route table, which has entries that point to each of the VPC attachments.\n\t\t\t\tThis enables communication to the VPCs from the VPN connection and the shared\n\t\t\t\tservices VPC.\nDestination\nTarget\nRoute type\n10.1.0.0/16\nAttachment for VPC A\npropagated\n10.2.0.0/16\nAttachment for VPC B\npropagated\n10.3.0.0/16\nAttachment for VPC C\npropagated\nFor more information, see\nPropagate a route to a transit gateway route\n                    table\n.\nCustomer gateway BGP\n                    table\nThe customer gateway BGP table contains the CIDRs for all four VPCs.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIsolated VPCs\nPeering\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-peering-scenario.html": "Example: Peered transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nOverview\nResources\nRouting\nExample: Peered transit gateways\nYou can create a transit gateway peering connection between transit gateways. You can then\n\t\troute traffic between the attachments for each of the transit gateways. In this scenario,\n\t\tVPC and VPN attachments are associated with the transit gateway default route tables, and\n\t\tthey propagate to the transit gateway default route tables. Each transit gateway route table\n\t\thas a static route that points to the transit gateway peering attachment.\nContents\nOverview\nResources\nRouting\nOverview\nThe following diagram shows the key components of the configuration for this scenario.\n            Transit gateway 1 has two VPC attachments, and transit gateway 2 has one Site-to-Site VPN\n            attachment. Packets from the subnets in VPC A and VPC B that have the internet as a\n            destination first route through transit gateway 1, then transit gateway 2, and then route to the VPN\n            connection.\nResources\nCreate the following resources for this scenario:\nTwo VPCs. For information about creating a VPC, see\nCreate a\n\t\t\t\t\tVPC\nin the\nAmazon VPC User Guide\n.\nTwo transit gateways. They can be in the same Region or in different Regions. For more information,\n\t\t\t\t\tsee\nCreate a transit gateway\n.\nTwo VPC attachments on the first transit gateway. For more information, see\nCreate a transit gateway attachment to a VPC\n.\nA Site-to-Site VPN attachment on the second transit gateway. For more information, see\nCreate a transit gateway attachment to a VPN\n. Ensure that you review the\nrequirements for your\n\t\t\t\t\t\tcustomer gateway device\nin the\nAWS Site-to-Site VPN User\n\t\t\t\t\t\tGuide\n.\nA transit gateway peering attachment between the two transit gateways. For more\n\t\t\t\t\tinformation, see\nTransit gateway peering attachments\n.\nWhen you create the VPC attachments, the CIDRs for each VPC propagate to the route\n\t\t\ttable for transit gateway 1. When the VPN connection is up, the following actions occur:\nThe BGP session is established\nThe Site-to-Site VPN CIDR propagates to the route table for transit gateway 2\nThe VPC CIDRs are added to the customer gateway BGP table\nRouting\nEach VPC has a route table and each transit gateway has a route table.\nVPC A and VPC B route\n                    tables\nEach VPC has a route table with 2 entries. The first entry is the default entry for local\n                IPv4 routing in the VPC. This default entry enables the resources in this VPC to\n                communicate with each other. The second entry routes all other IPv4 subnet traffic\n                to the transit gateway. The following table shows the VPC A routes.\nDestination\nTarget\n10.0.0.0/16\nlocal\n0.0.0.0/0\ntgw-1-id\nTransit gateway route tables\nThe following is an example of the default route table for transit gateway 1, with route\n                propagation enabled.\nDestination\nTarget\nRoute type\n10.0.0.0/16\nAttachment ID for VPC A\npropagated\n10.2.0.0/16\nAttachment ID for VPC B\npropagated\n0.0.0.0/0\nAttachment ID for peering connection\nstatic\nThe following is an example of the default route table for transit gateway 2, with route\n                propagation enabled.\nDestination\nTarget\nRoute type\n172.31.0.0/24\nAttachment ID for VPN connection\npropagated\n10.0.0.0/16\nAttachment ID for peering connection\nstatic\n10.2.0.0/16\nAttachment ID for peering connection\nstatic\nCustomer gateway BGP\n                    table\nThe customer gateway BGP table contains the following VPC CIDRs.\n10.0.0.0/16\n10.2.0.0/16\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIsolated VPCs with shared services\nCentralized outbound routing\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-nat-igw.html": "Example: Centralized outbound routing to the internet - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nOverview\nResources\nRouting\nExample: Centralized outbound routing to the\n\t\t\tinternet\nYou can configure a transit gateway to route outbound internet traffic from a VPC without an internet\n\t\tgateway to a VPC that contains a NAT gateway and an internet gateway.\nContents\nOverview\nResources\nRouting\nOverview\nThe following diagram shows the key components of the configuration for this scenario. You\n\t\t\thave applications in VPC A and VPC B that need outbound only internet access. You\n\t\t\tconfigure VPC C with a public NAT gateway and an internet gateway, and a private subnet\n\t\t\tfor the VPC attachment. Connect all VPCs to a transit gateway. Configure routing so that outbound\n\t\t\tinternet traffic from VPC A and VPC B traverses the transit gateway to VPC C. The NAT gateway in\n\t\t\tVPC C routes the traffic to the internet gateway.\nResources\nCreate the following resources for this scenario:\nThree VPCs with IP address ranges that do not overlap. For more information, \n\t\t\t\t\tsee\nCreate a\n\t\t\t\t\t\tVPC\nin the\nAmazon VPC User Guide\n.\nVPC A and VPC B each have private subnets with EC2 instances.\nVPC C has the following:\nAn internet gateway attached to the VPC. For more information, see\nCreate and attach an internet gateway\nin the\nAmazon VPC User Guide\n.\nA public subnet with a NAT gateway. For more information, see\nCreate\n\t\t\t\t\t\t\t\ta NAT gateway\nin the\nAmazon VPC User Guide\n.\nA private subnet for the transit gateway attachment. The private subnet should be in the same\n\t\t\t\t\t\t\tAvailability Zone as the public subnet.\nOne transit gateway. For more information, see\nCreate a transit gateway\n.\nThree VPC attachments on the transit gateway. The CIDR blocks for each VPC propagate to the transit gateway\n\t\t\t\t\troute table. For more information, see\nCreate a transit gateway attachment to a VPC\n.\n\t\t\t\t\tFor VPC C, you must create the attachment using the private subnet. If you\n\t\t\t\t\tcreate the attachment using the public subnet, the instance traffic is routed to\n\t\t\t\t\tthe internet gateway, but the internet gateway drops the traffic because the\n\t\t\t\t\tinstances don't have public IP addresses. By placing the attachment in the\n\t\t\t\t\tprivate subnet, the traffic is routed to the NAT gateway, and the NAT gateway\n\t\t\t\t\tsends the traffic to the internet gateway using its Elastic IP address as the\n\t\t\t\t\tsource IP address.\nRouting\nThere are route tables for each VPC and a route table for the transit gateway.\nRoute tables\nVPC A\nVPC B\nVPC C\nTransit gateway\nRoute table for VPC A\nThe following is an example route table. The first entry enables instances in the VPC to\n\t\t\t\tcommunicate with each other. The second entry routes all other IPv4 subnet traffic\n\t\t\t\tto the transit gateway.\nDestination\nTarget\nVPC A CIDR\nlocal\n0.0.0.0/0\ntransit-gateway-id\nRoute table for VPC B\nThe following is an example route table. The first entry enables the instances in the VPC\n\t\t\t\tto communicate with each other. The second entry routes all other IPv4 subnet\n\t\t\t\ttraffic to the transit gateway.\nDestination\nTarget\nVPC B CIDR\nlocal\n0.0.0.0/0\ntransit-gateway-id\nRoute tables for VPC C\nConfigure the subnet with the NAT gateway as a public subnet by adding a route to the\n\t\t\t\tinternet gateway. Leave the other subnet as a private subnet.\nThe following is an example route table for the public subnet. The first entry enables\n\t\t\t\tinstances in the VPC to communicate with each other. The second and third entries route \n\t\t\t\ttraffic for VPC A and VPC B to the transit gateway. The remaining entry routes all other IPv4 subnet \n\t\t\t\ttraffic to the internet gateway.\nDestination\nTarget\nVPC C CIDR\nlocal\nVPC A CIDR\ntransit-gateway-id\nVPC B CIDR\ntransit-gateway-id\n0.0.0.0/0\ninternet-gateway-id\nThe following is an example route table for the private subnet. \n\t\t\t\tThe first entry enables instances in the VPC to communicate with each other.\n\t\t\t\tThe second entry routes all other IPv4 subnet traffic to the NAT gateway.\nDestination\nTarget\nVPC C CIDR\nlocal\n0.0.0.0/0\nnat-gateway-id\nTransit gateway route table\nThe following is an example of the transit gateway route table.\n\t\t\t\tThe CIDR blocks for each VPC propagate to the transit gateway route table.\n\t\t\t\tThe static route sends outbound internet traffic to VPC C. \n\t\t\t\tYou can optionally prevent inter-VPC communication by adding a blackhole route for each VPC CIDR.\nCIDR\nAttachment\nRoute type\nVPC A CIDR\nAttachment for VPC A\npropagated\nVPC B CIDR\nAttachment for VPC B\npropagated\nVPC C CIDR\nAttachment for VPC C\npropagated\n0.0.0.0/0\nAttachment for VPC C\nstatic\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPeering\nAppliance VPC\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-appliance-scenario.html": "Example: Appliance in a shared services VPC - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nOverview\nStateful appliances and appliance mode\nRouting\nExample: Appliance in a shared services\n            VPC\nYou can configure an appliance (such as a security appliance) in a shared services VPC. All\n        traffic that's routed between transit gateway attachments is first inspected by the\n        appliance in the shared services VPC.\nYou must connect exactly one transit gateway to the appliance VPC to guarantee flow stickiness.\n        Connecting multiple transit gateways to a single appliance VPC does not guarantee flow stickiness\n        because the transit gateways do not share flow state information with each other.\nImportant\nTraffic in appliance mode is routed correctly as long as the source and destination\n            traffic are coming to a centralized VPC (Inspection VPC) from the same transit gateway attachment.\n            Traffic can drop if the source and destination are entering from two different transit gateway\n            attachments. Appliance mode does not apply to traffic entering the network through a\n            VPN.\nContents\nOverview\nStateful appliances and appliance mode\nRouting\nOverview\nThe following diagram shows the key components of the configuration for this scenario.\n            The transit gateway has three VPC attachments. VPC C is a shared services VPC. Traffic\n            between VPC A and VPC B is routed to the transit gateway, then routed to a security\n            appliance in VPC C for inspection before it's routed to the final destination. The\n            appliance is a stateful appliance, therefore both the request and response traffic is\n            inspected. For high availability, there is an appliance in each Availability Zone in VPC\n            C.\nYou create the following resources for this scenario:\nThree VPCs. For information about creating a VPC, see\nCreating a VPC\nin the\nAmazon Virtual Private Cloud User\n                        Guide\n.\nA transit gateway. For more information, see\nCreate a transit gateway\n.\nThree VPC attachments - one for each of the VPCs. For more information, see\nCreate a transit gateway attachment to a VPC\n.\nFor each VPC attachment, specify a subnet in each Availability Zone. For the\n                    shared services VPC, these are the subnets where traffic is routed to the VPC\n                    from the transit gateway. In the preceding example, these are subnets A and\n                    C.\nFor the VPC attachment for VPC C, enable appliance mode support so that\n                    response traffic is routed to the same Availability Zone in VPC C as the source\n                    traffic.\nThe Amazon VPC console supports appliance mode. You can also use the Amazon VPC API, an\n                    AWS SDK, the AWS CLI to enable appliance mode, or AWS CloudFormation. For example, add\n--options ApplianceModeSupport=enable\nto the\ncreate-transit-gateway-vpc-attachment\nor\nmodify-transit-gateway-vpc-attachment\ncommand.\nNote\nFlow stickiness in appliance mode is guaranteed only for source and destination\n                traffic that originate towards the Inspection VPC.\nStateful appliances and appliance mode\nWhen appliance mode is enabled, a transit gateway selects a single network interface in the\n            appliance VPC, using a flow hash algorithm, to send traffic to for the life of the\n            flow. The transit gateway uses the same network interface for the return traffic. This ensures\n            that bidirectional traffic is routed symmetrically\u00e2\u0080\u0094it's routed through the\n            same Availability Zone in the VPC attachment for the life of the flow. If you have\n            multiple transit gateways in your architecture, each transit gateway maintains its own session affinity,\n            and each transit gateway can select a different network interface.\nIf your VPC attachments span multiple Availability Zones and you require traffic \n            between source and destination hosts to be routed through the same appliance for stateful \n            inspection, enable appliance mode support for the VPC attachment in which the appliance \n            is located.\nFor more information, see\nCentralized inspection architecture\nin the AWS blog.\nBehavior when appliance mode is not enabled\nWhen appliance mode is not enabled, a transit gateway attempts to keep traffic routed between VPC \n                attachments in the originating Availability Zone until it reaches its destination.\n                Traffic crosses Availability Zones between attachments only if there is an Availability \n                Zone failure or if there are no subnets associated with a VPC attachment in that \n                Availability Zone.\nThe following diagram shows a traffic flow when appliance mode support is not\n            enabled. The response traffic that originates from Availability Zone 2 in VPC B is\n            routed by the transit gateway to the same Availability Zone in VPC C. The traffic is\n            therefore dropped, because the appliance in Availability Zone 2 is not aware of the\n            original request from the source in VPC A.\nRouting\nEach VPC has one or more route tables and the transit gateway has two route tables.\nVPC route tables\nVPC A and VPC B\nVPCs A and B have route tables with 2 entries. The first entry is the default entry for\n                local IPv4 routing in the VPC. This default entry enables the resources in this VPC\n                to communicate with each other. The second entry routes all other IPv4 subnet\n                traffic to the transit gateway. The following is the route table for VPC A.\nDestination\nTarget\n10.0.0.0/16\nlocal\n0.0.0.0/0\ntgw-id\nVPC C\nThe shared services VPC (VPC C) has different route tables for each subnet. Subnet\n                A is used by the transit gateway (you specify this subnet when you create the VPC\n                attachment). The route table for subnet A routes all traffic to the appliance in\n                subnet B.\nDestination\nTarget\n192.168.0.0/16\nlocal\n0.0.0.0/0\nappliance-eni-id\nThe route table for subnet B (which contains the appliance) routes the traffic\n                back to the transit gateway.\nDestination\nTarget\n192.168.0.0/16\nlocal\n0.0.0.0/0\ntgw-id\nTransit gateway route tables\nThis transit gateway uses one route table for VPC A and VPC B, and one route table for the\n                shared services VPC (VPC C).\nThe VPC A and VPC B attachments are associated with the following route table. The\n                route table routes all traffic to VPC C.\nDestination\nTarget\nRoute type\n0.0.0.0/0\nAttachment ID for VPC C\nstatic\nThe VPC C attachment is associated with the following route table. It routes traffic to\n                VPC A and VPC B.\nDestination\nTarget\nRoute type\n10.0.0.0/16\nAttachment ID for VPC A\npropagated\n10.1.0.0/16\nAttachment ID for VPC B\npropagated\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCentralized outbound routing\nWork with transit gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/working-with-transit-gateways.html": "Work with transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nWork with transit gateways\nYou can work with transit gateways using the Amazon VPC console or the AWS CLI.\nContents\nTransit gateways\nTransit gateway attachments to a VPC\nTransit gateway VPN attachments\nTransit gateway attachments to a Direct Connect gateway\nTransit gateway peering attachments\nTransit Gateway Connect attachments and Transit Gateway Connect peers\nTransit gateway route tables\nTransit gateway policy tables\nMulticast on transit gateways\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAppliance VPC\nTransit gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-transit-gateways.html": "Transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nCreate a transit gateway\nView your transit gateways\nAdd or edit tags for a transit gateway\nModify a transit gateway\nShare a transit gateway\nAccept a resource share\nAccept a shared attachment\nDelete a transit gateway\nTransit gateways\nA transit gateway enables you to attach VPCs and VPN connections and route traffic between\n            them. A transit gateway works across AWS accounts, and you can use AWS RAM to share your transit gateway \n            with other accounts. After you share a transit gateway with another AWS account, the account \n            owner can attach their VPCs to your transit gateway. A user from either account can delete the \n            attachment at any time.\nYou can enable multicast on a transit gateway, and then create a transit gateway multicast domain that\n            allows multicast traffic to be sent from your multicast source to multicast group\n            members over VPC attachments that you associate with the domain.\nEach VPC or VPN attachment is associated with a single route table. That route table\n            decides the next hop for the traffic coming from that resource attachment. A route table\n            inside the transit gateway allows for both IPv4 or IPv6 CIDRs and targets. The targets are VPCs\n            and VPN connections. When you attach a VPC or create a VPN connection on a transit gateway, the\n            attachment is associated with the default route table of the transit gateway.\nYou can create additional route tables inside the transit gateway, and change the VPC or VPN\n            association to these route tables. This enables you to segment your network. For\n            example, you can associate development VPCs with one route table and production VPCs\n            with a different route table. This enables you to create isolated networks inside a\n            transit gateway similar to virtual routing and forwarding (VRFs) in traditional networks.\nTransit gateways support dynamic and static routing between attached VPCs and VPN\n            connections. You can enable or disable route propagation for each attachment. Transit\n            gateway peering attachments support static routing only.\nYou can optionally associate one or more IPv4 or IPv6 CIDR blocks with your transit\n            gateway. You specify an IP address from the CIDR block when you establish a\n            Transit Gateway Connect peer for a\nTransit Gateway Connect attachment\n.  \n            You can associate any public or private IP address range, except for addresses in\n            the\n169.254.0.0/16\nrange, and ranges that\n            overlap with addresses for your VPC attachments and on-premises networks. For more\n            information about IPv4 and IPv6 CIDR blocks, see\nVPCs and subnets\nin\n            the\nAmazon VPC User Guide\n.\nTasks\nCreate a transit gateway\nView your transit gateways\nAdd or edit tags for a transit gateway\nModify a transit gateway\nShare a transit gateway\nAccept a resource share\nAccept a shared attachment\nDelete a transit gateway\nCreate a transit gateway\nWhen you create a transit gateway, we create a default transit gateway route table and use it as the\n                default association route table and the default propagation route table. If you\n                choose not to create the default transit gateway route table, you can create one later on. For\n                more information about routes and route tables, see\nRouting\n.\nTo create a transit gateway using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit\n                        Gateways\n.\nChoose\nCreate transit gateway\n.\nFor\nName tag\n, optionally enter a name for the transit gateway.\n                        A name tag can make it easier to identify a specific gateway from the list\n                        of gateways. When you add a\nName tag\n, a tag is created\n                        with a key of\nName\nand with a value equal\n                        to the value you enter.\nFor\nDescription\n, optionally enter a description for\n                        the transit gateway.\nFor\nAmazon side Autonomous System Number (ASN)\n, either leave the default value\n                        to use the default ASN or enter the private ASN\n                        for your transit gateway. This should be the ASN for the AWS side of a Border Gateway\n                        Protocol (BGP) session.\nThe range is 64512 to 65534 for 16-bit ASNs.\nThe range is 4200000000 to 4294967294 for 32-bit ASNs.\nIf you have a multi-Region deployment, we recommend that you use a unique\n                        ASN for each of your transit gateways.\nFor\nDNS support\n, select this option \n                        if you need the VPC to resolve public IPv4 DNS host names to private IPv4\n                        addresses when queried from instances in another VPC attached to the\n                        transit gateway.\nFor\nVPN ECMP support\n, select this option if you need Equal Cost Multipath (ECMP)\n                        routing support between VPN tunnels. If connections advertise the same\n                        CIDRs, the traffic is distributed equally between them.\nWhen you select this option, the advertised BGP ASN, the BGP attributes\n                        such as the AS-path, and the communities for preference must be the\n                        same.\nNote\nTo use ECMP, you must create a VPN connection that uses dynamic routing.\n                        VPN connections that use static routing do not support ECMP.\nFor\nDefault route table association\n, select this option to automatically associate transit gateway attachments\n                        with the default route table for the transit gateway.\nFor\nDefault route table propagation\n, select this option to automatically propagate transit gateway attachments\n                        to the default route table for the transit gateway.\n(Optional) To use the transit gateway as a router for multicast traffic, select\nMulticast support\n.\nFor\nAuto accept shared attachments\n, select this option to automatically accept cross-account\n                        attachments.\n(Optional) For\nTransit gateway CIDR blocks\n, specify\n                        one or more IPv4 or IPv6 CIDR blocks for your transit gateway.\nYou can specify a size /24 CIDR block or larger (for example, /23 or /22)\n                        for IPv4, or a size /64 CIDR block or larger (for example, /63 or /62) for\n                        IPv6. You can associate any public or private IP address range, except for\n                        addresses in the 169.254.0.0/16 range, and ranges that overlap with the\n                        addresses for your VPC attachments and on-premises networks.\nChoose\nCreate transit gateway\n.\nTo create a transit gateway using the AWS CLI\nUse the\ncreate-transit-gateway\ncommand.\nView your transit gateways\nTo view your transit gateways using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateways\n. The\n                        details for the transit gateway are displayed below the list of gateways on the\n                        page.\nTo view your transit gateways using the AWS CLI\nUse the\ndescribe-transit-gateways\ncommand.\nAdd or edit tags for a transit gateway\nAdd tags to your resources to help organize and identify them, such as by purpose,\n                owner, or environment. You can add multiple tags to each transit gateway. Tag keys must be\n                unique for each transit gateway. If you add a tag with a key that is already associated with\n                the transit gateway, it updates the value of that tag. For more information, see\nTagging your Amazon EC2\n                Resources\n.\nAdd tags to a transit gateway using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit\n                        Gateways\n.\nChoose the transit gateway for which to add or edit tags.\nChoose the\nTags\ntab in the lower part of the\n                        page.\nChoose\nManage tags\n.\nChoose\nAdd new tag\n.\nEnter a\nKey\nand\nValue\nfor the\n                        tag.\nChoose\nSave\n.\nModify a transit gateway\nYou can modify the configuration options for your transit gateway. When you modify a\n                transit gateway, the modified options are applied to new transit gateway attachments\n                only. Your existing transit gateway attachments are not modified and do not see any\n                service interruption.\nYou cannot modify a transit gateway that has been shared with you.\nYou cannot remove a CIDR block for the transit gateway if any of the IP addresses\n                are currently used for a\nConnect peer\n.\nTo modify a transit gateway\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit\n                     Gateways\n.\nChoose the transit gateway to modify.\nChoose\nActions\n,\nModify transit\n                            gateway\n.\nModify the options as needed, and choose\nModify transit\n                            gateway\n.\nTo modify your transit gateway using the AWS CLI\nUse the\nmodify-transit-gateway\ncommand.\nShare a transit gateway\nYou can use AWS RAM to\nshare a transit gateway\nacross accounts or\n                across your organization in AWS Organizations. Use the following procedure to share a transit gateway\n                that you own.\nYou must enable resource sharing from the management account for your organization.\n                For information about enabling resource sharing, see\nEnable Sharing with AWS Organizations\nin the\nAWS RAM User Guide\n.\nTo share a transit gateway\nOpen the AWS RAM console at\nhttps://console.aws.amazon.com/ram/\n.\nChoose\nCreate a resource share\n.\nUnder\nName\n, type a descriptive name for the resource\n                        share.\nFor\nSelect resource type\n, choose\nTransit\n                            Gateways\n. Select the transit gateway.\n(Optional) For\nPrincipals\n, add principals to the\n                        resource share. For each AWS account, OU, or organization, specify its ID\n                        and choose\nAdd\n.\nFor\nAllow external accounts\n, choose whether to allow\n                        sharing for this resource with AWS accounts that are external to your\n                        organization.\n(Optional) Under\nTags\n, type a tag key and tag value\n                        pair for each tag. These tags are applied to the resource share but not to\n                        the transit gateway.\nChoose\nCreate resource share\n.\nAccept a resource share\nIf you were added to a resource share, you receive an invitation to join the\n                resource share. You must accept the resource share before you can access the shared\n                resources.\nTo accept a resource share\nOpen the AWS RAM console at\nhttps://console.aws.amazon.com/ram/\n.\nOn the navigation pane, choose\nShared with me\n,\nResource shares\n.\nSelect the resource share.\nChoose\nAccept resource share\n.\nTo view the shared transit gateway, open the\nTransit Gateways\npage in the Amazon VPC console.\nAccept a shared attachment\nIf you didn't enable the\nAuto accept shared attachments\nfunctionality when you created your transit gateway, you must manually accept cross-account\n                (shared) attachments.\nTo manually accept a shared attachment\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n                            Attachments\n.\nSelect the transit gateway attachment that's pending acceptance.\nChoose\nActions\n,\nAccept transit gateway\n                            attachment\n.\nTo accept a shared attachment using the AWS CLI\nUse the\naccept-transit-gateway-vpc-attachment\ncommand.\nDelete a transit gateway\nYou can't delete a transit gateway with existing attachments. You need to delete all\n                attachments before you can delete a transit gateway.\nTo delete a transit gateway using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nChoose the transit gateway to delete.\nChoose\nActions\n,\nDelete transit\n                            gateway\n. Enter\ndelete\nand choose\nDelete\nto confirm the deletion.\nTo delete a transit gateway using the AWS CLI\nUse the\ndelete-transit-gateway\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWork with transit gateways\nVPC attachments\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-vpc-attachments.html": "Transit gateway attachments to a VPC - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nVPC attachment lifecycle\nCreate a transit gateway attachment to a VPC\nModify your VPC attachment\nModify your VPC attachment tags\nView your VPC attachments\nDelete a VPC attachment\nTroubleshoot VPC attachments\nTransit gateway attachments to a VPC\nWhen you attach a VPC to a transit gateway, you must specify one subnet from each Availability Zone \n   to be used by the transit gateway to route traffic. Specifying one subnet from an Availability Zone enables \n   traffic to reach resources in every subnet in that Availability Zone.\nLimits\nWhen you attach a VPC to a transit gateway, any resources in Availability Zones where\n                    there is no transit gateway attachment cannot reach the transit gateway. If there is a route to the\n                    transit gateway in a subnet route table, traffic is forwarded to the transit gateway only when the\n                    transit gateway has an attachment in a subnet in the same Availability Zone.\nThe resources in a VPC attached to a transit gateway cannot access the security groups\n                    of a different VPC that is also attached to the same transit gateway.\nA transit gateway does not support DNS resolution for custom DNS names of attached VPCs\n                    set up using private hosted zones in Amazon Route\u00c2\u00a053. To configure name resolution for\n                    private hosted zones for all VPCs attached to a transit gateway, see\nCentralized DNS management of hybrid cloud with Amazon Route\u00c2\u00a053 and AWS Transit\n                        Gateway\n.\nA transit gateway doesn't support routing between VPCs with identical CIDRs. If you\n                    attach a VPC to a transit gateway and its CIDR is identical to the CIDR of another VPC\n                    that's already attached to the transit gateway, the routes for the newly attached VPC\n                    aren't propagated to the transit gateway route table.\nYou can't create an attachment for a VPC subnet that resides in a Local Zone.\n                    However, you can configure your network so that subnets in the Local Zone can\n                    connect to a transit gateway through the parent Availability Zone. For more information,\n                    see\nConnect\n                        Local Zone subnets to a transit gateway\n.\nYou can't create a transit gateway attachment using IPv6-only subnets. Transit gateway\n                    attachment subnets must also support IPv4 addresses.\nA transit gateway must have at least one VPC attachment before that transit gateway can be added\n                    to a route table.\nContents\nVPC attachment lifecycle\nCreate a transit gateway attachment to a VPC\nModify your VPC attachment\nModify your VPC attachment tags\nView your VPC attachments\nDelete a VPC attachment\nTroubleshoot VPC attachment\n\t\t\tcreation\nVPC attachment lifecycle\nA VPC attachment goes through various stages, starting when the request is\n                initiated. At each stage, there may be actions that you can take, and at the end of\n                its lifecycle, the VPC attachment remains visible in the Amazon Virtual Private Cloud Console\n                and in API or command line output, for a period of time.\nThe following diagram shows the states an attachment can go through in a single\n                account configuration, or a cross-account configuration that has\nAuto\n                    accept shared attachments\nturned on.\nPending\n: A request for a VPC attachment has been\n                        initiated and is in the provisioning process. At this stage, the attachment\n                        can fail, or can go to\navailable\n.\nFailing\n: A request for a VPC attachment is failing.\n                        At this stage, the VPC attachment goes to\nfailed\n.\nFailed\n: The request for the VPC attachment has failed.\n                        While in this state, it cannot be deleted. The failed VPC attachment remains\n                        visible for 2 hours, and then is no longer visible.\nAvailable\n: The VPC attachment is available, and traffic\n                        can flow between the VPC and the transit gateway. At this stage, the attachment can go\n                        to\nmodifying\n, or go to\ndeleting\n.\nDeleting\n: A VPC attachment that is in the\n                        process of being deleted. At this stage, the attachment can go to\ndeleted\n.\nDeleted\n: An\navailable\nVPC attachment has\n                        been deleted. While in this state, the VPC attachment cannot be modified.\n                        The VPC attachment remains visible for 2 hours, and then is no longer\n                        visible.\nModifying\n: A request has been made to modify the\n                        properties of the VPC attachment. At this stage, the attachment can go to\navailable\n, or go to\nrolling back\n.\nRolling back\n: The VPC attachment modification request\n                        cannot be completed, and the system is undoing any changes that were made.\n                        At this stage, the attachment can go to\navailable\n.\nThe following diagram shows the states an attachment can go through in a\n                cross-account configuration that has\nAuto accept shared\n                    attachments\nturned off.\nPending-acceptance\n: The VPC attachment request is\n                        awaiting acceptance. At this stage, the attachment can go to\npending\n, to\nrejecting\n, or to\ndeleting\n.\nRejecting\n: A VPC attachment that is in\n                        the process of being rejected. At this stage, the attachment can go to\nrejected\n.\nRejected\n: A\npending acceptance\nVPC\n                        attachment has been rejected. While in this state, the VPC attachment cannot\n                        be modified. The VPC attachment remains visible for 2 hours, and then is no\n                        longer visible.\nPending\n: The VPC attachment has been accepted and is\n                        in the provisioning process. At this stage, the attachment can fail, or can\n                        go to\navailable\n.\nFailing\n: A request for a VPC attachment is failing.\n                        At this stage, the VPC attachment goes to\nfailed\n.\nFailed\n: The request for the VPC attachment has\n                        failed. While in this state, it cannot be deleted. The failed VPC attachment\n                        remains visible for 2 hours, and then is no longer visible.\nAvailable\n: The VPC attachment is available, and\n                        traffic can flow between the VPC and the transit gateway. At this stage, the\n                        attachment can go to\nmodifying\n, or go to\ndeleting\n.\nDeleting\n: A VPC attachment that is in the\n                        process of being deleted. At this stage, the attachment can go to\ndeleted\n.\nDeleted\n: An\navailable\nor\npending\n                            acceptance\nVPC attachment has been deleted. While in this state,\n                        the VPC attachment cannot be modified. The VPC attachment remains visible 2\n                        hours, and then is no longer visible.\nModifying\n: A request has been made to modify the\n                        properties of the VPC attachment. At this stage, the attachment can go to\navailable\n, or go to\nrolling back\n.\nRolling back\n: The VPC attachment modification request\n                        cannot be completed, and the system is undoing any changes that were made.\n                        At this stage, the attachment can go to\navailable\n.\nCreate a transit gateway attachment to a VPC\nTo create a VPC attachment using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n      Attachments\n.\nChoose\nCreate transit gateway attachment\n.\nFor\nName tag\n, optionally enter a name for the transit gateway attachment.\nFor\nTransit gateway ID\n, choose the transit gateway for the attachment. You can\n                        choose a transit gateway that you own or a transit gateway that was shared with you.\nFor\nAttachment type\n, choose\nVPC\n.\nChoose whether to enable\nDNS Support\nand\nIPv6\n      Support\n.\nFor\nVPC ID\n, choose the VPC to attach to the transit gateway.\nThis VPC must have at least one subnet associated with it.\nFor\nSubnet IDs\n, select one subnet for each Availability Zone\n       to be used by the transit gateway to route traffic. You must select at least one subnet. You can \n       select only one subnet per Availability Zone.\nChoose\nCreate transit gateway attachment\n.\nTo create a VPC attachment using the AWS CLI\nUse the\ncreate-transit-gateway-vpc-attachment\ncommand.\nModify your VPC attachment\nTo modify your VPC attachments using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n           Attachments\n.\nSelect the VPC attachment, and then choose\nActions\n,\nModify transit gateway attachment\n.\nTo enable DNS support, select\nDNS support\n.\nTo add a subnet to the attachment, next to the subnet, select the box.\nAdding or modifying a VPC attachment subnet might impact data traffic\n                        while the attachment is in a modifying state.\nChoose\nModify transit gateway attachment\n.\nTo modify your VPC attachments using the AWS CLI\nUse the\nmodify-transit-gateway-vpc-attachment\ncommand.\nModify your VPC attachment tags\nTo modify your VPC attachment tags using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n           Attachments\n.\nSelect the VPC attachment, and then choose\nActions\n,\nManage tags\n.\n[Add a tag] Choose\nAdd new tag\nand do the following:\nFor\nKey\n, enter the key name.\nFor\nValue\n, enter the key value.\n[Remove a tag] Next to the tag, choose\nRemove\n.\nChoose\nSave\n.\nVPC attachment tags can only be modified using the console.\nView your VPC attachments\nTo view your VPC attachments using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n       Attachments\n.\nIn the\nResource type\ncolumn, look for\nVPC\n.\n                        These are the VPC attachments.\nChoose an attachment to view its details.\nTo view your VPC attachments using the AWS CLI\nUse the\ndescribe-transit-gateway-vpc-attachments\ncommand.\nDelete a VPC attachment\nTo delete a VPC attachment using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n       Attachments\n.\nSelect the VPC attachment.\nChoose\nActions\n,\nDelete transit gateway\n                            attachment\n.\nWhen prompted, enter\ndelete\nand choose\nDelete\n.\nTo delete a VPC attachment using the AWS CLI\nUse the\ndelete-transit-gateway-vpc-attachment\ncommand.\nTroubleshoot VPC attachment\n\t\t\tcreation\nThe following topic can help you troubleshoot problems that you might have when you create\n\t\ta VPC attachment.\nProblem\nThe VPC attachment failed.\nCause\nThe cause might be one of the following:\nThe user that is creating the VPC attachment does not have correct permissions to\n\t\t\t\tcreate service-linked role.\nThere is a throttling issue because of too many IAM requests, for example you are using\n\t\t\t\tAWS CloudFormation to create permissions and roles.\nThe account has the service-linked role, and the service-linked role has been\n\t\t\t\tmodified.\nThe transit gateway is not in the\navailable\nstate.\nSolution\nDepending on the cause, try the following:\nVerify that the user has the correct permissions to create service-linked roles.\n\t\t\t\tFor more information, see\nService-linked role permissions\nin the\nIAM User Guide\n. After the user has the permissions, create the VPC\n\t\t\t\tattachment.\nCreate the VPC attachment manually through the console or API. For more information, see\nCreate a transit gateway attachment to a VPC\n.\nVerify that the service-linked role has the correct permissions. For more information, see\nTransit gateway service-linked role\n.\nVerify that the transit gateway is in the\navailable\nstate. For more\n\t\t\t\tinformation, see\nView your transit gateways\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTransit gateways\nVPN attachments\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-vpn-attachments.html": "Transit gateway VPN attachments - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nCreate a transit gateway attachment to a VPN\nView your VPN attachments\nTransit gateway VPN attachments\nTo attach a VPN connection to your transit gateway, you must specify the customer gateway. For more\n            information about the requirements for a customer gateway device, see\nRequirements for your customer\n                gateway device\nin the\nAWS Site-to-Site VPN User\n                Guide\n.\nFor static VPNs, add the static routes to the transit gateway route table.\nCreate a transit gateway attachment to a VPN\nTo create a VPN attachment using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n       Attachments\n.\nChoose\nCreate transit gateway attachment\n.\nFor\nTransit gateway ID\n, choose the transit gateway for the attachment. You\n                        can choose a transit gateway that you own.\nFor\nAttachment type\n, choose\nVPN\n.\nFor\nCustomer Gateway\n, do one of the following:\nTo use an existing customer gateway, choose\nExisting\n, and\n         then select the gateway to use.\nIf your customer gateway is behind a network address translation (NAT) device\n         that's enabled for NAT traversal (NAT-T), use the public IP address of your NAT\n         device, and adjust your firewall rules to unblock UDP port 4500.\nTo create a customer gateway, choose\nNew\n, then for\nIP Address\n, type a static public IP address and\nBGP ASN\n.\nFor\nRouting options\n, choose whether to use\nDynamic\nor\nStatic\n. For\n                                more information, see\nSite-to-Site VPN Routing Options\nin the\nAWS Site-to-Site VPN User Guide\n.\nFor\nTunnel Options\n, enter the CIDR ranges and pre-shared keys\n                        for your tunnel. For more information, see\nSite-to-Site VPN architectures\n.\nChoose\nCreate transit gateway attachment\n.\nTo create a VPN attachment using the AWS CLI\nUse the\ncreate-vpn-connection\ncommand.\nView your VPN attachments\nTo view your VPN attachments using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n            Attachments\n.\nIn the\nResource type\ncolumn, look for\nVPN\n. These are the VPN attachments.\nChoose an attachment to view its details or to add tags.\nTo view your VPN attachments using the AWS CLI\nUse the\ndescribe-transit-gateway-attachments\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVPC attachments\nAttachments to a Direct Connect gateway\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-dcg-attachments.html": "Transit gateway attachments to a Direct Connect gateway - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nTransit gateway attachments to a Direct Connect gateway\nAttach a transit gateway to a Direct Connect gateway using a transit virtual interface. This\n    configuration offers the following benefits. You can:\nManage a single connection for multiple VPCs or VPNs that are in the same Region.\nAdvertise prefixes from on-premises to AWS and from AWS to on-premises.\nThe following diagram illustrates how the Direct Connect gateway enables you to create a\n    single connection to your Direct Connect connection that all of your VPCs can use.\nThe solution involves the following components:\nA transit gateway.\nA Direct Connect gateway.\nAn association between the Direct Connect gateway and the transit gateway.\nA transit virtual interface that is attached to the Direct Connect gateway.\nFor information about configuring Direct Connect gateways with transit gateways, see\nTransit gateway\n            associations\nin the\nAWS Direct Connect User\n        Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVPN attachments\nPeering attachments\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-peering.html": "Transit gateway peering attachments - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nCreate a peering attachment\nAccept or reject a peering attachment request\nAdd a route to the transit gateway route table\nView your transit gateway peering connection\n                attachments\nDelete a peering attachment\nOpt-in AWS Region considerations\nTransit gateway peering attachments\nYou can peer both intra-Region and inter-Region transit gateways, and\n        route traffic between them, which includes IPv4 and IPv6 traffic. To do this, create a\n        peering attachment on your transit gateway, and specify a transit gateway. The peer transit gateway can be in your account\n        or a different AWS account.\nAfter you create a peering attachment request, the owner of the peer transit gateway (also\n        referred to as the\naccepter transit gateway\n) must accept the request.\n        To route traffic between the transit gateways, add a static route to the transit gateway route table that points\n        to the transit gateway peering attachment.\nWe recommend using unique ASNs for each peered transit gateway to take advantage of future route\n        propagation capabilities.\nTransit gateway peering does not support resolving public or private IPv4 DNS host names\n        to private IPv4 addresses across VPCs on either side of the transit gateway peering\n        attachment using the Amazon Route\u00c2\u00a053 Resolver in another Region. For more information\n        about the Route\u00c2\u00a053 Resolver, see\nWhat is Route\u00c2\u00a053 Resolver?\nin the\nAmazon Route\u00c2\u00a053 Developer Guide\n.\nInter-Region gateway peering uses the same network infrastructure as VPC\n        peering. Therefore traffic is encrypted using AES-256 encryption at the virtual network\n        layer as it travels between Regions. Traffic is also encrypted using AES-256 encryption at\n        the physical layer when it traverses network links that are outside of the physical control\n        of AWS. As a result, traffic is double encrypted on network links outside the physical\n        control of AWS. Within the same Region, traffic is encrypted at the physical layer only\n        when it traverses network links that are outside of the physical control of AWS.\nFor information about which Regions support transit gateway peering attachments, see\nAWS Transit Gateways FAQs\n.\nCreate a peering attachment\nBefore you begin, ensure that you have the ID of the transit gateway that you want to attach.\n             If the transit gateway is in another AWS account, ensure that you have the AWS account ID of the\n            owner of the transit gateway.\nAfter you create the peering attachment, the owner of the accepter transit gateway must accept\n            the attachment request.\nTo create a peering attachment using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n                        Attachments\n.\nChoose\nCreate transit gateway attachment\n.\nFor\nTransit gateway ID\n, choose the transit gateway for the\n                    attachment. You can choose a transit gateway that you own or a transit gateway that was shared with\n                    you.\nFor\nAttachment type\n, choose\nPeering\n                        Connection\n.\nOptionally enter a name tag for the attachment.\nFor\nAccount\n, do one of the following:\nIf the transit gateway is in your account, choose\nMy\n                                account\n.\nIf the transit gateway is in different AWS account, choose\nOther\n                                account\n. For\nAccount ID\n, enter the\n                            AWS account ID.\nFor\nRegion\n, choose the Region that the transit gateway is located\n                    in.\nFor\nTransit gateway (accepter)\n, enter the ID of the\n                    transit gateway that you want to attach.\nChoose\nCreate transit gateway attachment\n.\nTo create a peering attachment using the AWS CLI\nUse the\ncreate-transit-gateway-peering-attachment\ncommand.\nAccept or reject a peering attachment request\nTo activate the peering attachment, the owner of the accepter transit gateway must\n            accept the peering attachment request. This is required even if both transit gateways\n            are in the same account. The peering attachment must be in the\npendingAcceptance\nstate. Accept the peering attachment request from the\n            Region that the accepter transit gateway is located in.\nAlternatively, you can reject any peering connection request that you've received\n            that's in the\npendingAcceptance\nstate. You must reject the request from the\n            Region that the accepter transit gateway is located in.\nTo accept a peering attachment request using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n                        Attachments\n.\nSelect the transit gateway peering attachment that's pending acceptance.\nChoose\nActions\n,\nAccept transit gateway\n                        attachment\n.\nAdd the static route to the transit gateway route table. For more information, see\nCreate a static route\n.\nTo reject a peering attachment request using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n                        Attachments\n.\nSelect the transit gateway peering attachment that's pending acceptance.\nChoose\nActions\n,\nReject transit gateway\n                        attachment\n.\nTo accept or reject a peering attachment using the AWS CLI\nUse the\naccept-transit-gateway-peering-attachment\nand\nreject-transit-gateway-peering-attachment\ncommands.\nAdd a route to the transit gateway route table\nTo route traffic between the peered transit gateways, you must add a static route to\n            the transit gateway route table that points to the transit gateway peering attachment.\n            The owner of the accepter transit gateway must also add a static route to their transit gateway's\n            route table.\nTo create a static route using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n                        Tables\n.\nSelect the route table for which to create a route.\nChoose\nActions\n,\nCreate static\n                    route\n.\nOn the\nCreate static route\npage, enter the CIDR block for\n                    which to create the route. For example, specify the CIDR block of a VPC that's\n                    attached to the peer transit gateway.\nChoose the peering attachment for the route.\nChoose\nCreate static route\n.\nTo create a static route using the AWS CLI\nUse the\ncreate-transit-gateway-route\ncommand.\nImportant\nAfter you create the route, associate the transit gateway route table with the transit gateway peering\n            attachment. For more information, see\nAssociate a transit gateway route table\n.\nView your transit gateway peering connection\n                attachments\nYou can view your transit gateway peering attachments and information about\n            them.\nTo view your peering attachments using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n                        Attachments\n.\nIn the\nResource type\ncolumn, look for\nPeering\n. These are the peering attachments.\nChoose an attachment to view its details.\nTo view your transit gateway peering attachments using the AWS CLI\nUse the\ndescribe-transit-gateway-peering-attachments\ncommand.\nDelete a peering attachment\nYou can delete a transit gateway peering attachment. The owner of either of the transit\n            gateways can delete the attachment.\nTo delete a peering attachment using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n                        Attachments\n.\nSelect the transit gateway peering attachment.\nChoose\nActions\n,\nDelete transit gateway\n                        attachment\n.\nEnter\ndelete\nand choose\nDelete\n.\nTo delete a peering attachment using the AWS CLI\nUse the\ndelete-transit-gateway-peering-attachment\ncommand.\nOpt-in AWS Region considerations\nYou can peer transit gateways across opt-in Region boundaries. For information about these\n             Regions, and how to opt in, see\nManaging AWS Regions\nin the\nAmazon Web Services General Reference\n. Take the following into\n             consideration when you use transit gateway peering in these Regions:\nYou can peer into an opt-in Region as long as the account that accepts the\n                     peering attachment has opted into that Region.\nRegardless of the Region opt-in status, AWS shares the following account data\n                     with the account that accepts the peering attachment:\nAWS account ID\nTransit gateway ID\nRegion code\nWhen you delete the transit gateway attachment, the above account data is\n                     deleted.\nWe recommend that you delete the transit gateway peering attachment before you opt out\n                     of the Region. If you do not delete the peering attachment, traffic might\n                     continue to go over the attachment and you continue to incur charges. If you do\n                     not delete the attachment, you can opt back in, and then delete the\n                     attachment.\nIn general, the transit gateway has a sender pays model. By using a transit gateway\n                     peering attachment across an opt in boundary, you might incur charges in a\n                     Region accepting the attachment, including those Regions you have not opted\n                     into. For more information, see\nAWS Transit Gateway Pricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAttachments to a Direct Connect gateway\nConnect attachments and Connect peers\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-connect.html": "Transit Gateway Connect attachments and Transit Gateway Connect peers - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nConnect peers\nRequirements and considerations\nCreate a Connect attachment\nCreate a Connect peer (GRE tunnel)\nView your Connect attachments and\n                Connect peers\nModify your Connect attachment and\n                Connect peer tags\nDelete a Connect peer\nDelete a Connect attachment\nTransit Gateway Connect attachments and Transit Gateway Connect peers\nYou can create a\nTransit Gateway Connect attachment\nto\n        establish a connection between a transit gateway and third-party virtual appliances (such as SD-WAN\n        appliances) running in a VPC. A Connect attachment supports the Generic Routing\n        Encapsulation (GRE) tunnel protocol for high performance, and Border Gateway Protocol (BGP)\n        for dynamic routing. After you create a Connect attachment, you can create one or more GRE\n        tunnels (also referred to as\nTransit Gateway Connect peers\n) on the Connect attachment\n        to connect the transit gateway and the third-party appliance. You establish two BGP sessions over the\n        GRE tunnel to exchange routing information.\nImportant\nA Transit Gateway Connect peer consists of two BGP peering sessions terminating on AWS-managed\n            infrastructure. The two BGP peering sessions provide routing plane redundancy, ensuring\n            that losing one BGP peering session does not impact your routing operation. The routing\n            information received from both BGP sessions is accumulated for the given\n            Connect peer. The two BGP peering sessions also protect against any AWS\n            infrastructure operations such as routine maintenance, patching, hardware upgrades, and\n            replacements. If your Connect peer is operating without the recommended dual BGP\n            peering session configured for redundancy, it might experience a momentary loss of\n            connectivity during AWS infrastructure operations. We strongly recommend that you\n            configure both the BGP peering sessions on your Connect peer. If you have\n            configured multiple Connect peers to support high availability on the appliance\n            side, we recommend that you configure both the BGP peering sessions on each of your\n            Connect peers.\nA Connect attachment uses an existing VPC or Direct Connect attachment as the underlying\n        transport mechanism. This is referred to as the\ntransport attachment\n.\n        The transit gateway identifies matched GRE packets from the third-party appliance as traffic from the\n        Connect attachment. It treats any other packets, including GRE packets with incorrect\n        source or destination information, as traffic from the transport attachment.\nNote\nTo use a Direct Connect attachment as a transport mechanism, you'll first need to integrate\n            Direct Connect with AWS Transit Gateway. For the steps to create this integration, see\nIntegrate SD-WAN devices with AWS Transit Gateway and AWS Direct Connect\n.\nContents\nConnect peers\nRequirements and considerations\nCreate a Connect attachment\nCreate a Connect peer (GRE tunnel)\nView your Connect attachments and\n                Connect peers\nModify your Connect attachment and\n                Connect peer tags\nDelete a Connect peer\nDelete a Connect attachment\nConnect peers\nA Connect peer (GRE tunnel) consists of the following components.\nInside CIDR blocks (BGP addresses)\nThe inside IP addresses that are used for BGP peering. You must specify a /29\n                        CIDR block from the\n169.254.0.0/16\nrange for IPv4. You can\n                        optionally specify a /125 CIDR block from the\nfd00::/8\nrange\n                        for IPv6. The following CIDR blocks are reserved and cannot be used:\n169.254.0.0/29\n169.254.1.0/29\n169.254.2.0/29\n169.254.3.0/29\n169.254.4.0/29\n169.254.5.0/29\n169.254.169.248/29\nYou must configure the first address from the IPv4 range on the appliance\n                        as the BGP IP address. When you use IPv6, if your inside CIDR block is\n                        fd00::/125, then you must configure the first address in this range\n                        (fd00::1) on the tunnel interface of the appliance.\nThe BGP addresses must be unique across all tunnels on a transit gateway.\nPeer IP address\nThe peer IP address (GRE outer IP address) on the appliance side of the\n                        Connect peer. This can be any IP address. The IP address can be an IPv4 or\n                        IPv6 address, but it must be the same IP address family as the transit gateway\n                        address.\nTransit gateway address\nThe peer IP address (GRE outer IP address) on the transit gateway side of the\n                        Connect peer. The IP address must be specified from the transit gateway CIDR block,\n                        and must be unique across Connect attachments on the transit gateway. If you don't\n                        specify an IP address, we use the first available address from the transit gateway\n                        CIDR block.\nYou can add a transit gateway CIDR block when you\ncreate\nor\nmodify\na\n                        transit gateway.\nThe IP address can be an IPv4 or IPv6 address, but it must be the same IP\n                        address family as the peer IP address.\nThe peer IP address and transit gateway address are used to uniquely identify the GRE tunnel. You\n            can reuse either address across multiple tunnels, but not both in the same\n            tunnel.\nTransit Gateway Connect for the BGP peering only supports Multiprotocol BGP (MP-BGP), where\n            IPv4 Unicast addressing is required to also establish a BGP session for IPv6 Unicast.\n            You can use both IPv4 and IPv6 addresses for the GRE outer IP addresses.\nThe following example shows a Connect attachment between a transit gateway and an appliance in a\n            VPC.\nDiagram component\nDescription\nVPC attachment\nConnect attachment\nGRE tunnel (Connect peer)\nBGP peering session\nIn the preceding example, a Connect attachment is created on an existing VPC\n            attachment (the transport attachment). A Connect peer is created on the\n            Connect attachment to establish a connection to an appliance in the VPC. The transit gateway\n            address is\n192.0.2.1\n, and the range of BGP addresses is\n169.254.6.0/29\n. The first IP address in the range\n                (\n169.254.6.1\n) is configured on the appliance as the peer BGP IP\n            address.\nThe subnet route table for VPC C has a route that points traffic destined for the transit gateway\n            CIDR block to the transit gateway.\nDestination\nTarget\n172.31.0.0/16\nLocal\n192.0.2.0/24\ntgw-id\nRequirements and considerations\nThe following are the requirements and considerations for a Connect attachment.\nFor information about what Regions support Connect attachments, see the\nAWS Transit Gateways FAQ\n.\nThe third-party appliance must be configured to send and receive traffic over\n                    a GRE tunnel to and from the transit gateway using the Connect attachment.\nThe third-party appliance must be configured to use BGP for dynamic route\n                    updates and health checks.\nThe following types of BGP are supported:\nExterior BGP (eBGP): Used for connecting to routers that are in a\n                            different autonomous system than the transit gateway. If you use eBGP, you must\n                            configure ebgp-multihop with a time-to-live (TTL) value of 2.\nInterior BGP (iBGP):  Used for connecting to routers that are in the\n                            same autonomous system as the transit gateway. The transit gateway will not\n                            install routes from an iBGP peer (third-party appliance), unless the\n                            routes are originated from an eBGP peer and should have next-hop-self\n                            configured. The routes advertised by third-party appliance over the iBGP\n                            peering must have an ASN.\nMP-BGP (multiprotocol extensions for BGP): Used for supporting\n                            multiple protocol types, such as IPv4 and IPv6 address families.\nThe default BGP keep-alive timeout is 10 seconds and the default hold timer is\n                    30 seconds.\nIPv6 BGP peering is not supported; only IPv4-based BGP peering is supported. \n                    IPv6 prefixes are exchanged over IPv4 BGP peering using MP-BGP.\nBidirectional Forwarding Detection (BFD) is not supported.\nBGP graceful restart is not supported.\nWhen you create a transit gateway peer, if you do not specify a peer ASN number, we pick\n                    the transit gateway ASN number. This means that your appliance and transit gateway will be in the\n                    same autonomous system doing iBGP.\nA Connect peer using the BGP AS-PATH attribute is the\n                    preferred route when you have two Connect peers.\nTo use equal-cost multi-path (ECMP) routing between multiple appliances, you\n                    must configure the appliance to advertise the same prefixes to the transit gateway with\n                    the same BGP AS-PATH attribute. For the transit gateway to choose all of the available\n                    ECMP paths, the AS-PATH and Autonomous System Number (ASN) must match. The transit gateway\n                    can use ECMP between Connect peers for the same Connect attachment or between\n                    Connect attachments on the same transit gateway. The transit gateway cannot use ECMP between both\n                    of the redundant BGP peerings a single peer establishes to it.\nWith a Connect attachment, the routes are propagated to a transit gateway\n                    route table by default.\nStatic routes are not supported.\nEnsure that your third-party appliance external interface (tunnel source)\n                    Maximum Transmission Unit (MTU) either\nmatches the MTU of the GRE tunnel interface, or\nshould be greater than that of the GRE tunnel interface.\nCreate a Connect attachment\nTo create a Connect attachment, you must specify an existing attachment as the\n            transport attachment. You can specify a VPC attachment or a Direct Connect attachment as\n            the transport attachment.\nTo create a Connect attachment using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit gateway\n                        attachments\n.\nChoose\nCreate transit gateway attachment\n.\n(Optional) For\nName tag\n, specify a name tag for the attachment.\nFor\nTransit gateway ID\n, choose the transit gateway for the\n                    attachment.\nFor\nAttachment type\n, choose\nConnect\n.\nFor\nTransport attachment ID\n, choose the ID of an existing\n                    attachment (the transport attachment).\nChoose\nCreate transit gateway attachment\n.\nTo create a Connect attachment using the AWS CLI\nUse the\ncreate-transit-gateway-connect\ncommand.\nCreate a Connect peer (GRE tunnel)\nYou can create a Connect peer (GRE tunnel) for an existing Connect attachment.\n            Before you begin, ensure that you have configured a transit gateway CIDR block. You can configure\n            a transit gateway CIDR block when you\ncreate\nor\nmodify\na transit gateway.\nWhen you create the Connect peer, you must specify the GRE outer IP address on the\n            appliance side of the Connect peer.\nTo create a Connect peer using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit gateway\n                        attachments\n.\nSelect the Connect attachment, and choose\nActions\n,\nCreate connect peer\n.\n(Optional) For\nName tag\n, specify a name tag for the Connect peer.\n(Optional) For\nTransit gateway GRE Address\n, specify the\n                    GRE outer IP address for the transit gateway. By default, the first available address from\n                    the transit gateway CIDR block is used.\nFor\nPeer GRE address\n, specify the GRE outer IP address\n                    for the appliance side of the Connect peer.\nFor\nBGP Inside CIDR blocks IPv4\n, specify the range of\n                    inside IPv4 addresses that are used for BGP peering. Specify a /29 CIDR block\n                    from the\n169.254.0.0/16\nrange.\n(Optional) For\nBGP Inside CIDR blocks IPv6\n, specify the\n                    range of inside IPv6 addresses that are used for BGP peering. Specify a /125\n                    CIDR block from the\nfd00::/8\nrange.\n(Optional) For\nPeer ASN\n, specify the Border Gateway\n                    Protocol (BGP) Autonomous System Number (ASN) for the appliance. You can use an\n                    existing ASN assigned to your network. If you do not have one, you can use a\n                    private ASN in the 64512\u00e2\u0080\u009365534 (16-bit ASN) or 4200000000\u00e2\u0080\u00934294967294\n                        (32-bit ASN) range.\nThe default is the same ASN as the transit gateway. If you configure the\nPeer ASN\nto be different than the transit gateway ASN (eBGP), you\n                    must configure ebgp-multihop with a time-to-live (TTL) value of 2.\nChoose\nCreate connect peer\n.\nTo create a Connect peer using the AWS CLI\nUse the\ncreate-transit-gateway-connect-peer\ncommand.\nView your Connect attachments and\n                Connect peers\nYou can view your Connect attachments and Connect peers.\nTo view your Connect attachments and Connect peers using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit gateway\n                        attachments\n.\nSelect the Connect attachment.\nTo view the Connect peers for the attachment, choose the\nConnect\n                        Peers\ntab.\nTo view your Connect attachments and Connect peers using the AWS CLI\nUse the\ndescribe-transit-gateway-connects\nand\ndescribe-transit-gateway-connect-peers\ncommands.\nModify your Connect attachment and\n                Connect peer tags\nYou can modify the tags for your Connect attachment.\nTo modify your Connect attachment tags using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit Gateway\n                        Attachments\n.\nSelect the Connect attachment, and then choose\nActions\n,\nManage tags\n.\nTo add a tag, choose\nAdd new tag\nand specify the key\n                    name and key value.\nTo remove a tag, choose\nRemove\n.\nChoose\nSave\n.\nYou can modify the tags for your Connect peer.\nTo modify your Connect peer tags using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit Gateway\n                        Attachments\n.\nSelect the Connect attachment, and then choose\nConnect\n                        peers\n.\nSelect the Connect peer and then choose\nActions\n,\nManage tags\n.\nTo add a tag, choose\nAdd new tag\nand specify the key\n                    name and key value.\nTo remove a tag, choose\nRemove\n.\nChoose\nSave\n.\nTo modify your Connect attachment and Connect peer tags using the\n                AWS CLI\nUse the\ncreate-tags\nand\ndelete-tags\ncommands.\nDelete a Connect peer\nIf you no longer need a Connect peer, you can delete it.\nTo delete a Connect peer using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit gateway\n                        attachments\n.\nSelect the Connect attachment.\nIn the\nConnect Peers\ntab, select the Connect peer and\n                    choose\nActions\n,\nDelete connect\n                    peer\n.\nTo delete a Connect peer using the AWS CLI\nUse the\ndelete-transit-gateway-connect-peer\ncommand.\nDelete a Connect attachment\nIf you no longer need a Connect attachment, you can delete it. You must first\n            delete any Connect peers for the attachment.\nTo delete a Connect attachment using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit gateway\n                    attachments\n.\nSelect the Connect attachment, and choose\nActions\n,\nDelete transit gateway attachment\n.\nEnter\ndelete\nand choose\nDelete\n.\nTo delete a Connect attachment using the AWS CLI\nUse the\ndelete-transit-gateway-connect\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPeering attachments\nTransit gateway route tables\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-route-tables.html": "Transit gateway route tables - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nCreate a transit gateway route table\nView transit gateway route tables\nAssociate a transit gateway route table\nDelete an association for a transit gateway\n                    route table\nPropagate a route to a transit gateway route\n                    table\nDisable route propagation\nCreate a static route\nDelete a static route\nReplace a static route\nExport route tables to Amazon S3\nDelete a transit gateway route table\nTransit gateway route tables\nUse transit gateway route tables to configure routing for your transit gateway attachments.\nCreate a transit gateway route table\nTo create a transit gateway route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n       Tables\n.\nChoose\nCreate transit gateway route table\n.\n(Optional) For\nName tag\n, type a name for the transit gateway route table. \n        This creates a tag with the tag key \"Name\", where the tag value is the name that you\n        specify.\nFor\nTransit gateway ID\n, select the transit gateway for the route\n                        table.\nChoose\nCreate transit gateway route table\n.\nTo create a transit gateway route table using the AWS CLI\nUse the\ncreate-transit-gateway-route-table\ncommand.\nView transit gateway route tables\nTo view your transit gateway route tables using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n                      Tables\n.\n(Optional) To find a specific route table or set of tables, enter all or part \n                      of the name, keyword, or attribute in the filter field.\nSelect the check box for a route table, or choose its ID, to display\n                        information about its associations, propagations, routes, and tags.\nTo view your transit gateway route tables using the AWS CLI\nUse the\ndescribe-transit-gateway-route-tables\ncommand.\nTo view the routes for a transit gateway route table using the AWS CLI\nUse the\nsearch-transit-gateway-routes\ncommand.\nTo view the route propagations for a transit gateway route table using the AWS CLI\nUse the\nget-transit-gateway-route-table-propagations\ncommand.\nTo view the associations for a transit gateway route table using the AWS CLI\nUse the\nget-transit-gateway-route-table-associations\ncommand.\nAssociate a transit gateway route table\nYou can associate a transit gateway route table with a transit gateway attachment.\nTo associate a transit gateway route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n       Tables\n.\nSelect the route table.\nIn the lower part of the page, choose the\nAssociations\ntab.\nChoose\nCreate association\n.\nChoose the attachment to associate and then choose\nCreate association\n.\nTo associate a transit gateway route table using the AWS CLI\nUse the\nassociate-transit-gateway-route-table\ncommand.\nDelete an association for a transit gateway\n                    route table\nYou can disassociate a transit gateway route table from a transit gateway attachment.\nTo disassociate a transit gateway route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n       Tables\n.\nSelect the route table.\nIn the lower part of the page, choose the\nAssociations\ntab.\nChoose the attachment to disassociate and then choose\nDelete association\n.\nWhen prompted for confirmation, choose\nDelete association\n.\nTo disassociate a transit gateway route table using the AWS CLI\nUse the\ndisassociate-transit-gateway-route-table\ncommand.\nPropagate a route to a transit gateway route\n                    table\nUse route propagation to add a route from an attachment to a route table.\nTo propagate a route to a transit gateway attachment route table\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n            Tables\n.\nSelect the route table for which to create a propagation.\nChoose\nActions\n,\nCreate\n            propagation\n.\nOn the\nCreate propagation\npage, choose the attachment.\nChoose\nCreate propagation\n.\nTo enable route propagation using the AWS CLI\nUse the\nenable-transit-gateway-route-table-propagation\ncommand.\nDisable route propagation\nRemove a propagated route from a route table attachment.\nTo disable route propagation using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n            Tables\n.\nSelect the route table to delete the propagation from.\nOn the lower part of the page, choose the\nPropagations\ntab.\nSelect the attachment and then choose\nDelete propagation\n.\nWhen prompted for confirmation, choose\nDelete propagation\n.\nTo disable route propagation using the AWS CLI\nUse the\ndisable-transit-gateway-route-table-propagation\ncommand.\nCreate a static route\nYou can create a static route for a VPC, VPN, or transit gateway peering\n              attachment, or you can create a blackhole route that drops traffic that matches the\n              route.\nStatic routes in a transit gateway route table that target a VPN attachment are not\n              filtered by the Site-to-Site VPN. This might allow unintended outbound traffic flow when\n              using a BGP-based VPN.\nTo create a static route using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n                      Tables\n.\nSelect the route table for which to create a route.\nChoose\nActions\n,\nCreate static\n                            route\n.\nOn the\nCreate static route\npage, enter the CIDR block\n                        for which to create the route, and then choose\nActive\n.\nChoose the attachment for the route.\nChoose\nCreate static route\n.\nTo create a blackhole route using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n                  Tables\n.\nSelect the route table for which to create a route.\nChoose\nActions\n,\nCreate static\n                        route\n.\nOn the\nCreate static route\npage, enter the CIDR block for\n                        which to create the route, and then choose\nBlackhole\n.\nChoose\nCreate static route\n.\nTo create a static route or blackhole route using the AWS CLI\nUse the\ncreate-transit-gateway-route\ncommand.\nDelete a static route\nYou can delete static routes from a transit gateway route table.\nTo delete a static route using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n                  Tables\n.\nSelect the route table for which to delete the route, and choose\nRoutes\n.\nChoose the route to delete.\nChoose\nDelete static route\n.\nIn the confirmation box, choose\nDelete static route\n.\nTo delete a static route using the AWS CLI\nUse the\ndelete-transit-gateway-route\ncommand.\nReplace a static route\nYou can replace a static route in a transit gateway route table with a different static\n                route.\nTo replace a static route using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n                      Tables\n.\nChoose the route that you want to replace in the route table.\nIn the details section, choose the\nRoutes\ntab.\nChoose\nActions\n,\nReplace static\n                            route\n.\nFor the\nType\n, choose either\nActive\nor\nBlackhole\n.\nFrom the\nChoose attachment\ndrop-down, choose the transit gateway\n                        that will replace the current one in the route table.\nChoose\nReplace static route\n.\nTo replace a static route using the AWS CLI\nUse the\nreplace-transit-gateway-route\ncommand.\nExport route tables to Amazon S3\nYou can export the routes in your transit gateway route tables to an Amazon S3 bucket. The\n                routes are saved to the specified Amazon S3 bucket in a JSON file.\nTo export transit gateway route tables using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n       Tables\n.\nChoose the route table that includes the routes to export.\nChoose\nActions\n,\nExport routes\n.\nOn the\nExport routes\npage, for\nS3 bucket\n       name\n, type the name of the S3 bucket.\nTo filter the routes exported, specify filter parameters in the\nFilters\nsection of the page.\nChoose\nExport routes\n.\nTo access the exported routes, open the Amazon S3 console at\nhttps://console.aws.amazon.com/s3/\n, and navigate\n           to the bucket that you specified. The file name includes the AWS account ID, AWS\n                Region, route table ID, and a timestamp. Select the file and choose\nDownload\n. The following is an example of a JSON file that\n                contains information about two propagated routes for VPC attachments.\n{\n\"filter\": [\n{\n\"name\": \"route-search.subnet-of-match\",\n      \"values\": [\n        \"0.0.0.0/0\",\n        \"::/0\"\n      ]\n    }\n  ],\n  \"routes\": [\n{\n\"destinationCidrBlock\": \"10.0.0.0/16\",\n      \"transitGatewayAttachments\": [\n{\n\"resourceId\": \"vpc-0123456abcd123456\",\n          \"transitGatewayAttachmentId\": \"tgw-attach-1122334455aabbcc1\",\n          \"resourceType\": \"vpc\"\n        }\n      ],\n      \"type\": \"propagated\",\n      \"state\": \"active\"\n    },\n{\n\"destinationCidrBlock\": \"10.2.0.0/16\",\n      \"transitGatewayAttachments\": [\n{\n\"resourceId\": \"vpc-abcabc123123abca\",\n          \"transitGatewayAttachmentId\": \"tgw-attach-6677889900aabbcc7\",\n          \"resourceType\": \"vpc\"\n        }\n      ],\n      \"type\": \"propagated\",\n      \"state\": \"active\"\n    }\n  ]\n}\nDelete a transit gateway route table\nTo delete a transit gateway route table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Route\n       Tables\n.\nSelect the route table to delete.\nChoose\nActions\n,\nDelete transit gateway route\n                            table\n.\nEnter\ndelete\nand choose\nDelete\nto confirm the deletion.\nTo delete a transit gateway route table using the AWS CLI\nUse the\ndelete-transit-gateway-route-table\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConnect attachments and Connect peers\nPrefix list references\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-prefix-lists.html": "Prefix list references - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nCreate a prefix list reference\nView prefix list references\nModify a prefix list reference\nDelete a prefix list reference\nPrefix list references\nYou can reference a\nprefix list\nin your transit gateway route table. A\n        prefix list is a set of one or more CIDR block entries that you define and manage. You can\n        use a prefix list to simplify the management of the IP addresses that you reference in your\n        resources to route network traffic. For example, if you frequently specify the same\n        destination CIDRs across multiple transit gateway route tables, you can manage those CIDRs\n        in a single prefix list, instead of repeatedly referencing the same CIDRs in each route\n        table. If you need to remove a destination CIDR block, you can remove its entry from the\n        prefix list instead of removing the route from every affected route table.\nWhen you create a prefix list reference in your transit gateway route table, each entry in\n        the prefix list is represented as a route in your transit gateway route table.\nFor more information about prefix lists, see\nPrefix lists\nin the\nAmazon VPC User Guide\n.\nCreate a prefix list reference\nYou can create a reference to a prefix list in your transit gateway route table.\nTo create a prefix list reference using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit Gateway Route\n                    Tables\n.\nSelect the transit gateway route table.\nChoose\nActions\n,\nCreate prefix list\n                        reference\n.\nFor\nPrefix list ID\n, choose the ID of the prefix\n                    list.\nFor\nType\n, choose if traffic to this prefix list should be\n                    allowed (\nActive\n) or dropped\n                    (\nBlackhole\n).\nFor\nTransit gateway attachment ID\n, choose the ID of the\n                    attachment to which to route traffic.\nChoose\nCreate prefix list reference\n.\nTo create a prefix list reference using the AWS CLI\nUse the\ncreate-transit-gateway-prefix-list-reference\ncommand.\nView prefix list references\nYou can view the prefix list references in your transit gateway route table. You can\n            also view each entry in the prefix list as an individual route in your transit gateway\n            route table. The route type for a prefix list route is\npropagated\n.\nTo view a prefix list reference using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit Gateway Route\n                        Tables\n.\nSelect the transit gateway route table.\nIn the lower pane, choose\nPrefix list references\n. The\n                    prefix list references are listed.\nChoose\nRoutes\n. Each prefix list entry is listed as a\n                    route in the route table.\nTo view a prefix list reference using the AWS CLI\nUse the\nget-transit-gateway-prefix-list-references\ncommand.\nModify a prefix list reference\nYou can modify a prefix list reference by changing the attachment that the traffic is\n            routed to, or indicating whether to drop traffic that matches the route.\nYou cannot modify the individual routes for a prefix list in the\nRoutes\ntab. To modify the entries in the prefix list, use the\nManaged Prefix Lists\nscreen. For more information, see\nModifying a\n                prefix list\nin the\nAmazon VPC User Guide\n.\nTo modify a prefix list reference using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit Gateway Route\n                        Tables\n.\nSelect the transit gateway route table.\nIn the lower pane, choose\nPrefix list references\n.\nChoose the prefix list reference, and choose\nModify\n                        references\n.\nFor\nType\n, choose if traffic to this prefix list should\n                    be allowed (\nActive\n) or dropped\n                        (\nBlackhole\n).\nFor\nTransit gateway attachment ID\n, choose the ID of the\n                    attachment to which to route traffic.\nChoose\nModify prefix list reference\n.\nTo modify a prefix list reference using the AWS CLI\nUse the\nmodify-transit-gateway-prefix-list-reference\ncommand.\nDelete a prefix list reference\nIf you no longer need a prefix list reference, you can delete it from your transit\n            gateway route table. Deleting the reference does not delete the prefix list.\nTo delete a prefix list reference using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit Gateway Route\n                        Tables\n.\nSelect the transit gateway route table.\nChoose the prefix list reference, and choose\nDelete\n                        references\n.\nChoose\nDelete references\n.\nTo delete a prefix list reference using the AWS CLI\nUse the\ndelete-transit-gateway-prefix-list-reference\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTransit gateway route tables\nTransit gateway policy tables\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-policy-tables.html": "Transit gateway policy tables - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nCreate a transit gateway policy\n                    table\nDelete a transit gateway policy\n                    table\nTransit gateway policy tables\nTransit gateway dynamic routing uses policy tables to route network traffic for\n            AWS Cloud WAN. The table contains policy rules for matching network traffic by policy\n            attributes, and then maps the traffic that matches the rule to a target route table.\nYou can use dynamic routing for transit gateways to automatically exchange routing and\n            reachability information with peered transit gateway types. Unlike with a static route, traffic\n            can be routed along a different path based on network conditions, such as path failures\n            or congestion. Dynamic routing also adds an extra layer of security in that it's easier\n            to re-route traffic in the event of a network breach or incursion.\nNote\nTransit gateway policy tables are currently only supported in Cloud WAN when\n                creating a transit gateway peering connection. When creating a peering connection, you can\n                associate that table with the connection. The association then populates the table\n                automatically with the policy rules.\nFor more information about peering connections in Cloud WAN, see\nPeerings\nin the\nAWS Cloud WAN User Guide\n.\nCreate a transit gateway policy\n                    table\nTo create a transit gateway policy table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit gateway policy\n                            table\n.\nChoose\nCreate transit gateway policy table\n.\n(Optional) For\nName tag\n, enter a name for the transit\n                        gateway policy table. This creates a tag, where the tag value is the name\n                        that you specify.\nFor Transit gateway ID, select the transit gateway for the policy table.\nChoose\nCreate transit gateway policy table\n.\nTo create a transit gateway policy table using the AWS CLI\nUse the\ncreate-transit-gateway-policy-table\ncommand.\nDelete a transit gateway policy\n                    table\nDelete a transit gateway policy table. When a table is deleted, all policy rules within that\n                table are deleted.\nTo delete a transit gateway policy table using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit gateway policy\n                            tables\n.\nChoose the transit gateway policy table to delete.\nChoose\nActions\n, and then choose\nDelete\n                            policy table\n.\nConfirm that you want to delete the table.\nTo delete a transit gateway policy table using the AWS CLI\nUse the\ndelete-transit-gateway-policy-table\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPrefix list references\nMulticast on transit gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-multicast-overview.html": "Multicast on transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nMulticast concepts\nConsiderations\nMulticast with Windows Server\nMulticast on transit gateways\nMulticast is a communication protocol used for delivering a single stream of data to\n    multiple receiving computers simultaneously. Transit Gateway supports routing multicast traffic\n    between subnets of attached VPCs, and it serves as a multicast router for instances sending\n    traffic destined for multiple receiving instances.\nMulticast concepts\nThe following are the key concepts for multicast:\nMulticast domain\n\u00e2\u0080\u0094 Allows segmentation of a\n          multicast network into different domains, and makes the transit gateway act as multiple multicast\n          routers. You define multicast domain membership at the subnet level.\nMulticast group\n\u00e2\u0080\u0094 Identifies a set of hosts that\n          will send and receive the same multicast traffic. A multicast group is identified by a\n          group IP address. Multicast group membership is defined by individual elastic network\n          interfaces attached to EC2 instances.\nInternet Group Management Protocol (IGMP)\n\u00e2\u0080\u0094 An\n          internet protocol that allows hosts and routers to dynamically manage multicast group\n          membership. An IGMP multicast domain contains hosts that use the IGMP protocol to join,\n          leave, and send messages. AWS supports the IGMPv2 protocol and both IGMP and static\n          (API-based) group membership multicast domains.\nMulticast source\n\u00e2\u0080\u0094 An elastic network interface\n          associated with a supported EC2 instance that is statically configured to send multicast\n          traffic. A multicast source only applies to static source configurations.\nA static source multicast domain contains hosts that do not use the IGMP protocol to\n          join, leave, and send messages. You use the AWS CLI to add a source and group members. The\n          statically-added source sends multicast traffic and the members receive multicast\n          traffic.\nMulticast group member\n\u00e2\u0080\u0094 An elastic network\n          interface associated with a supported EC2 instance that receives multicast traffic. A\n          multicast group has multiple group members. In a static source group membership\n          configuration, multicast group members can only receive traffic. In an IGMP group\n          configuration, members can both send and receive traffic.\nConsiderations\nFor information about supported Regions, see\nAWS Transit Gateway FAQs\n.\nYou must create a new transit gateway to support multicast.\nMulticast group membership is managed using the Amazon Virtual Private Cloud Console or the\n          AWS CLI, or IGMP.\nA subnet can only be in one multicast domain.\nIf you use a non-Nitro instance, you must disable the\nSource/Dest\ncheck. For information about disabling the check, see\nChanging the source or\n            destination checking\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nA non-Nitro instance cannot be a multicast sender.\nMulticast routing is not supported over AWS Direct Connect, Site-to-Site VPN, peering attachments, or\n          transit gateway Connect attachments.\nA transit gateway does not support fragmentation of multicast packets. Fragmented multicast\n          packets are dropped. For more information, see\nMTU\n.\nAt startup, an IGMP host sends multiple IGMP JOIN messages to join a\n          multicast group (typically 2 to 3 retries). In the unlikely event that all the IGMP\n          JOIN messages get lost, the host will not become part of transit gateway multicast\n          group. In such a scenario you will need to re-trigger the IGMP JOIN message\n          from the host using application specific methods.\nA group membership starts with the receipt of IGMPv2 JOIN message by the \n          transit gateway and ends with the receipt of the IGMPv2 LEAVE message. The transit gateway keeps \n          track of hosts that successfully joined the group. As a cloud multicast router, transit gateway issues \n          an IGMPv2 QUERY message to all members every two minutes. Each member sends \n          an IGMPv2 JOIN message in response, which is how the members renew their \n          membership. If a member fails to reply to three consecutive queries, the transit gateway removes this \n          membership from all joined groups. However, it continues sending queries to this member for \n          12 hours before permanently removing the member from its to-be-queried list. An explicit \n          IGMPv2 LEAVE message immediately and permanently removes the host from any \n          further multicast processing.\nThe transit gateway keeps track of hosts that successfully joined the group. In the event of a\n          transit gateway outage, the transit gateway continues to send multicast data to the host for seven minutes (420\n          seconds) after the last successful IGMP JOIN message. The transit gateway continues to\n          send membership queries to the host for up to 12 hours or until it receives a  IGMP\n          LEAVE message from the host.\nThe transit gateway sends membership query packets to all the IGMP members  so that it can track\n          multicast group membership.  The source IP of these IGMP query packets is 0.0.0.0/32, and\n          the destination IP is 224.0.0.1/32 and the protocol is 2. Your security group\n          configuration on the IGMP hosts (instances), and any ACLs configuration on the host\n          subnets must allow these IGMP protocol messages.\nWhen the multicast source and destination are in the same VPC, you cannot use\n          security group referencing to set the destination security group to accept traffic from\n          the source's security group.\nFor static multicast groups and sources, Amazon VPC Transit Gateways automatically remove static\n          groups and sources for ENIs that no longer exist. This is performed by periodically\n          assuming the\nTransit Gateway service-linked\n            role\nto describe ENIs in the account.\nMulticast with Windows Server\nYou'll need to perform additional steps when setting up multicast to work with transit gateways on\n      Windows Server 2019 or 2022. Using PowerShell, run the following commands:\nChange Windows Server to use IGMPv2 instead of IGMPv3 for the TCP/IP stack:\nPS C:\\> New-ItemProperty -Path\n          HKLM:\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters -Name IGMPVersion\n          -PropertyType DWord -Value 3\nWindows Firewall drops most UDP traffic by default. You'll first need to check which\n          connection profile is being used for multicast:\nPS C:\\> Get-NetConnectionProfile | Select-Object NetworkCategory\n\nNetworkCategory\n---------------\n         Public\nUpdate the connection profile from the previous step to allow access to the required\n          UDP port(s):\nPS C:\\> Set-NetFirewallProfile -Profile Public -Enabled False\nReboot the EC2 instance.\nTest your multicast application to ensure traffic is flowing as expected.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTransit gateway policy tables\nMulticast routing\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/how-multicast-works.html": "Multicast routing - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nNetwork ACLs\nSecurity groups\nMulticast routing\nWhen you enable multicast on a transit gateway, it acts as a multicast router. When you add a subnet\n        to a multicast domain, we send all multicast traffic to the transit gateway that is associated with\n        that multicast domain.\nNetwork ACLs\nNetwork ACL rules operate at the subnet level. They apply to multicast traffic,\n            because transit gateways reside outside of the subnet. For more information, see\nNetwork ACLs\nin the\nAmazon VPC User Guide\n.\nFor Internet Group Management Protocol (IGMP) multicast traffic, the following are the\n            minimum inbound rules. The remote host is the host sending the multicast traffic.\nType\nProtocol\nSource\nDescription\nCustom Protocol\nIGMP(2)\n0.0.0.0/32\nIGMP query\nCustom UDP Protocol\nUDP\nRemote host IP address\nInbound multicast traffic\nThe following are the minimum outbound rules for IGMP.\nType\nProtocol\nDestination\nDescription\nCustom Protocol\nIGMP(2)\n224.0.0.2/32\nIGMP leave\nCustom Protocol\nIGMP(2)\nMulticast group IP address\nIGMP join\nCustom UDP Protocol\nUDP\nMulticast group IP address\nOutbound multicast traffic\nSecurity groups\nSecurity group rules operate at the instance level. They can be applied to both\n            inbound and outbound multicast traffic. The behavior is the same as with unicast\n            traffic. For all group member instances, you must allow inbound traffic from the group\n            source. For more information, see\nSecurity groups\nin the\nAmazon VPC User Guide\n.\nFor IGMP multicast traffic, you must have the following inbound rules at a minimum.\n            The remote host is the host sending the multicast traffic. You can't specify a security\n            group as the source of the UDP inbound rule.\nType\nProtocol\nSource\nDescription\nCustom Protocol\n2\n0.0.0.0/32\nIGMP query\nCustom UDP Protocol\nUDP\nRemote host IP address\nInbound multicast traffic\nFor IGMP multicast traffic, you must have the following outbound rules at a\n            minimum.\nType\nProtocol\nDestination\nDescription\nCustom Protocol\n2\n224.0.0.2/32\nIGMP leave\nCustom Protocol\n2\nMulticast group IP address\nIGMP join\nCustom UDP Protocol\nUDP\nMulticast group IP address\nOutbound multicast traffic\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMulticast on transit gateways\nWorking with multicast\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/working-with-multicast.html": "Multicast on transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nMulticast concepts\nConsiderations\nMulticast with Windows Server\nMulticast on transit gateways\nMulticast is a communication protocol used for delivering a single stream of data to\n    multiple receiving computers simultaneously. Transit Gateway supports routing multicast traffic\n    between subnets of attached VPCs, and it serves as a multicast router for instances sending\n    traffic destined for multiple receiving instances.\nMulticast concepts\nThe following are the key concepts for multicast:\nMulticast domain\n\u00e2\u0080\u0094 Allows segmentation of a\n          multicast network into different domains, and makes the transit gateway act as multiple multicast\n          routers. You define multicast domain membership at the subnet level.\nMulticast group\n\u00e2\u0080\u0094 Identifies a set of hosts that\n          will send and receive the same multicast traffic. A multicast group is identified by a\n          group IP address. Multicast group membership is defined by individual elastic network\n          interfaces attached to EC2 instances.\nInternet Group Management Protocol (IGMP)\n\u00e2\u0080\u0094 An\n          internet protocol that allows hosts and routers to dynamically manage multicast group\n          membership. An IGMP multicast domain contains hosts that use the IGMP protocol to join,\n          leave, and send messages. AWS supports the IGMPv2 protocol and both IGMP and static\n          (API-based) group membership multicast domains.\nMulticast source\n\u00e2\u0080\u0094 An elastic network interface\n          associated with a supported EC2 instance that is statically configured to send multicast\n          traffic. A multicast source only applies to static source configurations.\nA static source multicast domain contains hosts that do not use the IGMP protocol to\n          join, leave, and send messages. You use the AWS CLI to add a source and group members. The\n          statically-added source sends multicast traffic and the members receive multicast\n          traffic.\nMulticast group member\n\u00e2\u0080\u0094 An elastic network\n          interface associated with a supported EC2 instance that receives multicast traffic. A\n          multicast group has multiple group members. In a static source group membership\n          configuration, multicast group members can only receive traffic. In an IGMP group\n          configuration, members can both send and receive traffic.\nConsiderations\nFor information about supported Regions, see\nAWS Transit Gateway FAQs\n.\nYou must create a new transit gateway to support multicast.\nMulticast group membership is managed using the Amazon Virtual Private Cloud Console or the\n          AWS CLI, or IGMP.\nA subnet can only be in one multicast domain.\nIf you use a non-Nitro instance, you must disable the\nSource/Dest\ncheck. For information about disabling the check, see\nChanging the source or\n            destination checking\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nA non-Nitro instance cannot be a multicast sender.\nMulticast routing is not supported over AWS Direct Connect, Site-to-Site VPN, peering attachments, or\n          transit gateway Connect attachments.\nA transit gateway does not support fragmentation of multicast packets. Fragmented multicast\n          packets are dropped. For more information, see\nMTU\n.\nAt startup, an IGMP host sends multiple IGMP JOIN messages to join a\n          multicast group (typically 2 to 3 retries). In the unlikely event that all the IGMP\n          JOIN messages get lost, the host will not become part of transit gateway multicast\n          group. In such a scenario you will need to re-trigger the IGMP JOIN message\n          from the host using application specific methods.\nA group membership starts with the receipt of IGMPv2 JOIN message by the \n          transit gateway and ends with the receipt of the IGMPv2 LEAVE message. The transit gateway keeps \n          track of hosts that successfully joined the group. As a cloud multicast router, transit gateway issues \n          an IGMPv2 QUERY message to all members every two minutes. Each member sends \n          an IGMPv2 JOIN message in response, which is how the members renew their \n          membership. If a member fails to reply to three consecutive queries, the transit gateway removes this \n          membership from all joined groups. However, it continues sending queries to this member for \n          12 hours before permanently removing the member from its to-be-queried list. An explicit \n          IGMPv2 LEAVE message immediately and permanently removes the host from any \n          further multicast processing.\nThe transit gateway keeps track of hosts that successfully joined the group. In the event of a\n          transit gateway outage, the transit gateway continues to send multicast data to the host for seven minutes (420\n          seconds) after the last successful IGMP JOIN message. The transit gateway continues to\n          send membership queries to the host for up to 12 hours or until it receives a  IGMP\n          LEAVE message from the host.\nThe transit gateway sends membership query packets to all the IGMP members  so that it can track\n          multicast group membership.  The source IP of these IGMP query packets is 0.0.0.0/32, and\n          the destination IP is 224.0.0.1/32 and the protocol is 2. Your security group\n          configuration on the IGMP hosts (instances), and any ACLs configuration on the host\n          subnets must allow these IGMP protocol messages.\nWhen the multicast source and destination are in the same VPC, you cannot use\n          security group referencing to set the destination security group to accept traffic from\n          the source's security group.\nFor static multicast groups and sources, Amazon VPC Transit Gateways automatically remove static\n          groups and sources for ENIs that no longer exist. This is performed by periodically\n          assuming the\nTransit Gateway service-linked\n            role\nto describe ENIs in the account.\nMulticast with Windows Server\nYou'll need to perform additional steps when setting up multicast to work with transit gateways on\n      Windows Server 2019 or 2022. Using PowerShell, run the following commands:\nChange Windows Server to use IGMPv2 instead of IGMPv3 for the TCP/IP stack:\nPS C:\\> New-ItemProperty -Path\n          HKLM:\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters -Name IGMPVersion\n          -PropertyType DWord -Value 3\nWindows Firewall drops most UDP traffic by default. You'll first need to check which\n          connection profile is being used for multicast:\nPS C:\\> Get-NetConnectionProfile | Select-Object NetworkCategory\n\nNetworkCategory\n---------------\n         Public\nUpdate the connection profile from the previous step to allow access to the required\n          UDP port(s):\nPS C:\\> Set-NetFirewallProfile -Profile Public -Enabled False\nReboot the EC2 instance.\nTest your multicast application to ensure traffic is flowing as expected.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTransit gateway policy tables\nMulticast routing\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/manage-domain.html": "Managing multicast domains - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nCreating an IGMP multicast domain\nCreating a static source multicast domain\nAssociating VPC attachments and subnets with\n          a multicast domain\nViewing your multicast domain\n          associations\nDisassociating subnets from a multicast domain\nAdding tags to a multicast domain\nDeleting a multicast domain\nManaging multicast domains\nTo begin using multicast with a transit gateway, create a multicast domain, and then\n      associate subnets with the domain.\nContents\nCreating an IGMP multicast domain\nCreating a static source multicast domain\nAssociating VPC attachments and subnets with\n          a multicast domain\nViewing your multicast domain\n          associations\nDisassociating subnets from a multicast domain\nAdding tags to a multicast domain\nDeleting a multicast domain\nCreating an IGMP multicast domain\nIf you have not already done so, review the available multicast domain attributes. For\n        more information, see\nWorking with multicast\n.\nConsole\nTo create an IGMP  multicast domain using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway\n                   Multicast\n.\nChoose\nCreate transit gateway multicast domain\n.\nFor\nName tag\n, enter a name for the domain.\nFor\nTransit gateway ID\n, choose the transit gateway that processes the\n                   multicast traffic.\nFor\nIGMPv2 support\n, select the check box.\nFor\nStatic sources support\n, clear the check box.\nTo automatically accept cross-account subnet associations for this multicast\n                   domain, select\nAuto accept shared associations\n.\nChoose\nCreate transit gateway multicast domain\n.\nCommand line\nTo create an IGMP multicast domain using the AWS CLI\nUse the\ncreate-transit-gateway-multicast-domain\ncommand.\naws ec2 create-transit-gateway-multicast-domain --transit-gateway-id\ntgw-0xexampleid12345\n--options StaticSourcesSupport=disable,Igmpv2Support=enable\nCreating a static source multicast domain\nIf you have not already done so, review the available multicast domain attributes. For\n        more information, see\nWorking with multicast\n.\nConsole\nTo create a static multicast domain using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Multicast\n.\nChoose\nCreate transit gateway multicast domain\n.\nFor\nName tag\n, enter a name to identify the domain.\nFor\nTransit gateway ID\n, choose the transit gateway that processes the\n                  multicast traffic.\nFor\nIGMPv2 support\n, clear the check box.\nFor\nStatic sources support\n, select the check box.\nTo automatically accept cross-account subnet associations for this multicast\n                  domain, select\nAuto accept shared associations\n.\nChoose\nCreate transit gateway multicast domain\n.\nCommand line\nTo create a static multicast domain using the AWS CLI\nUse the\ncreate-transit-gateway-multicast-domain\ncommand.\naws ec2 create-transit-gateway-multicast-domain --transit-gateway-id\ntgw-0xexampleid12345\n--options StaticSourcesSupport=enable,Igmpv2Support=disable\nAssociating VPC attachments and subnets with\n          a multicast domain\nUse the following procedure to associate a VPC attachment with a multicast domain. When\n        you create an association, you can then select the subnets to include in the multicast\n        domain.\nBefore you begin, you must create a VPC attachment on your transit gateway. For more\n            information, see\nTransit gateway attachments to a VPC\n.\nConsole\nTo associate VPC attachments with a  multicast domain using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Multicast\n.\nSelect the multicast domain, and then choose\nActions\n,\nCreate association\n.\nFor\nChoose attachment to associate\n, select the transit gateway attachment.\nFor\nChoose subnets to associate\n, select the subnets to include in\n            the multicast domain.\nChoose\nCreate association\n.\nCommand line\nTo associate VPC attachments with a multicast domain using the AWS CLI\nUse the\nassociate-transit-gateway-multicast-domain\ncommand.\nViewing your multicast domain\n          associations\nYou can view your multicast domains to verify that they are available, and that\n        they contain the appropriate subnets and attachments.\nConsole\nTo view a multicast domain using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Multicast\n.\nSelect the multicast domain.\nChoose the\nAssociations\ntab.\nCommand line\nTo view a multicast domain using the AWS CLI\nUse the\ndescribe-transit-gateway-multicast-domains\ncommand.\nDisassociating subnets from a multicast domain\nUse the following procedure to disassociate subnets from a multicast domain.\nConsole\nTo disassociate subnets using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Multicast\n.\nSelect the multicast domain.\nChoose the\nAssociations\ntab.\nSelect the subnet, and then choose\nActions\n,\nDelete \n                  association\n.\nCommand line\nTo disassociate subnets using the AWS CLI\nUse the\ndisassociate-transit-gateway-multicast-domain\ncommand.\nAdding tags to a multicast domain\nAdd tags to your resources to help organize and identify them, such as by purpose, owner,\n        or environment. You can add multiple tags to each multicast domain. Tag keys must\n        be unique for each multicast domain. If you add a tag with a key that is already\n        associated with the multicast domain, it updates the value of that tag. For more\n        information, see\nTagging your Amazon EC2\n          Resources\n.\nConsole\nTo add tags to a multicast domain using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Multicast\n.\nSelect the multicast domain.\nChoose\nActions\n,\nManage tags\n.\nFor each tag, choose\nAdd new tag\nand enter a\nKey\nand\nValue\nfor the tag.\nChoose\nSave\n.\nCommand line\nTo add tags to a multicast domain using the AWS CLI\nUse the\ncreate-tags\ncommand.\nDeleting a multicast domain\nUse the following procedure to delete a multicast domain.\nConsole\nTo delete a multicast domain using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Multicast\n.\nSelect the multicast domain, and then choose\nActions\n,\nDelete multicast domain\n.\nWhen prompted for confirmation, enter\ndelete\nand then \n                  choose\nDelete\n.\nCommand line\nTo delete a multicast domain using the AWS CLI\nUse the\ndelete-transit-gateway-multicast-domain\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWorking with multicast\nManaging multicast groups\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/manage-multicast-group.html": "Managing multicast groups - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nRegistering sources with a multicast\n          group\nRegistering members with a multicast\n          group\nDeregistering sources from a multicast group\nDeregistering members from a multicast\n          group\nViewing your multicast groups\nManaging multicast groups\nContents\nRegistering sources with a multicast\n          group\nRegistering members with a multicast\n          group\nDeregistering sources from a multicast group\nDeregistering members from a multicast\n          group\nViewing your multicast groups\nRegistering sources with a multicast\n          group\nNote\nThis procedure is only required when you have set the\nStatic sources\n            support\nattribute to\nenable\n.\nUse the following procedure to register sources with a multicast group. The source is the\n        network interface that sends multicast traffic.\nYou need the following information before you add a source:\nThe ID of the multicast domain\nThe IDs of the sources' network interfaces\nThe multicast group IP address\nConsole\nTo register sources using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Multicast\n.\nSelect the multicast domain, and then choose\nActions\n,\nAdd group sources\n.\nFor\nGroup IP address\n, enter either the IPv4 CIDR block or IPv6\n                  CIDR block to assign to the multicast domain.\nUnder\nChoose network interfaces\n, select the multicast senders'\n                  network interfaces.\nChoose\nAdd sources\n.\nCommand line\nTo register sources using the AWS CLI\nUse the\nregister-transit-gateway-multicast-group-sources\ncommand.\nRegistering members with a multicast\n          group\nUse the following procedure to register group members with a multicast group.\nYou need the following information before you add members:\nThe ID of the multicast domain\nThe IDs of the group members' network interfaces\nThe multicast group IP address\nConsole\nTo register members using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Multicast\n.\nSelect the multicast domain, and then choose\nActions\n,\nAdd group members\n.\nFor\nGroup IP address\n, enter either the IPv4 CIDR block or IPv6\n                  CIDR block to assign to the multicast domain.\nUnder\nChoose network interfaces\n, select the multicast receivers'\n                  network interfaces.\nChoose\nAdd members\n.\nCommand line\nTo register members using the AWS CLI\nUse the\nregister-transit-gateway-multicast-group-members\ncommand.\nDeregistering sources from a multicast group\nYou don't need to follow this procedure unless you manually added a source to the\n        multicast group.\nConsole\nTo remove a source using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Multicast\n.\nSelect the multicast domain.\nChoose the\nGroups\ntab.\nSelect the sources, and then choose\nRemove source\n.\nCommand line\nTo remove a source using the AWS CLI\nUse the\nderegister-transit-gateway-multicast-group-sources\ncommand.\nDeregistering members from a multicast\n          group\nYou don't need to follow this procedure unless you manually added a member to the\n        multicast group.\nConsole\nTo deregister members using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Multicast\n.\nSelect the multicast domain.\nChoose the\nGroups\ntab.\nSelect the members, and then choose\nRemove member\n.\nCommand line\nTo deregister members using the AWS CLI\nUse the\nderegister-transit-gateway-multicast-group-members\ncommand.\nViewing your multicast groups\nYou can view information about your multicast groups to verify that members were\n        discovered using the IGMPv2 protocol.\nMember type\n(in the console), or\nMemberType\n(in the AWS CLI) displays IGMP when AWS discovered members with the\n        protocol.\nConsole\nTo view multicast groups using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nOn the navigation pane, choose\nTransit Gateway Multicast\n.\nSelect the multicast domain.\nChoose the\nGroups\ntab.\nCommand line\nTo view multicast groups  using the AWS CLI\nUse the\nsearch-transit-gateway-multicast-groups\ncommand.\nThe following example shows that the IGMP protocol discovered multicast group\n              members.\naws ec2 search-transit-gateway-multicast-groups --transit-gateway-multicast-domain\ntgw-mcast-domain-000fb24d04EXAMPLE\n{\n\"MulticastGroups\": [\n{\n\"GroupIpAddress\": \"224.0.1.0\",\n            \"TransitGatewayAttachmentId\": \"tgw-attach-0372e72386EXAMPLE\",\n            \"SubnetId\": \"subnet-0187aff814EXAMPLE\",\n            \"ResourceId\": \"vpc-0065acced4EXAMPLE\",\n            \"ResourceType\": \"vpc\",\n            \"NetworkInterfaceId\": \"eni-03847706f6EXAMPLE\",\n            \"MemberType\": \"igmp\"\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nManaging multicast domains\nWorking with shared multicast domains\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/multicast-sharing.html": "Working with shared multicast domains - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nPrerequisites for sharing a multicast domain\nRelated services\nSharing across Availability Zones\nSharing a multicast domain\nUnsharing a shared multicast domain\nIdentifying a shared multicast domain\nShared multicast domain permissions\nBilling and metering\nQuotas\nWorking with shared multicast domains\nWith multicast domain sharing, multicast domain owners can share the domain with other AWS\n\t\taccounts inside its organization or across organizations in AWS Organizations. As the multicast\n\t\tdomain owner, you can create and manage the multicast domain centrally. Consumers can\n\t\tperform the following operations on a shared multicast domain:\nRegister and deregister group members or group sources in the multicast\n\t\t\t\tdomain\nAssociate a subnet with the multicast domain, and disassociate subnets from the multicast\n\t\t\t\tdomain\nA multicast domain owner can share a multicast domain with:\nAWS accounts inside its organization or across organizations in AWS Organizations\nAn organizational unit inside its organization in AWS Organizations\nIts entire organization in AWS Organizations\nAWS accounts outside of  AWS Organizations.\nTo share a multicast domain with an AWS account outside of your Organization, you must\n\t\t\t\tcreate a resource share using AWS Resource Access Manager, and then choose\nAllow\n\t\t\t\t\tsharing with anyone\nwhen selecting the Principals to share the\n\t\t\t\tmulticast domain with. For more information on creating a resource share, see\nCreating a resource share in AWS RAM\nin the\nAWS RAM User Guide\nContents\nPrerequisites for sharing a multicast domain\nRelated services\nSharing across Availability Zones\nSharing a multicast domain\nUnsharing a shared multicast domain\nIdentifying a shared multicast domain\nShared multicast domain permissions\nBilling and metering\nQuotas\nPrerequisites for sharing a multicast domain\nTo share a multicast domain, you must own it in your AWS account. You cannot share a multicast domain \n\t\t\t\t\tthat has been shared with you.\nTo share a multicast domain with your organization or an organizational unit in AWS Organizations, you \n\t\t\t\t\tmust enable sharing with AWS Organizations. For more information, see\nEnable Sharing with AWS Organizations\nin the\nAWS RAM User Guide\n.\nRelated services\nMulticast domain sharing integrates with AWS Resource Access Manager (AWS RAM). AWS RAM is a service that enables\n\t\t\tyou to share your AWS resources with any AWS account or through AWS Organizations. With\n\t\t\tAWS RAM, you share resources that you own by creating a\nresource\n\t\t\t\tshare\n. A resource share specifies the resources to share, and the\n\t\t\tconsumers with whom to share them. Consumers can be individual AWS accounts, or\n\t\t\torganizational units or an entire organization in AWS Organizations.\nFor more information about AWS RAM, see the\nAWS RAM User Guide\n.\nSharing across Availability Zones\nTo ensure that resources are distributed across the Availability Zones for a Region, we independently map \n\t\t\tAvailability Zones to names for each account. This could lead to Availability Zone naming differences\n\t\t\tacross accounts. For example, the Availability Zone\nus-east-1a\nfor your AWS account \n\t\t\tmight not have the same location as\nus-east-1a\nfor another AWS account.\nTo identify the location of your multicast domain relative to your accounts, you must use the\nAvailability Zone ID\n(AZ ID). The AZ ID is a unique and consistent identifier for an \n\t\t\tAvailability Zone across all AWS accounts. For example,\nuse1-az1\nis an AZ ID for the\nus-east-1\nRegion and it is the same location in every AWS account.\nTo view the AZ IDs for the Availability Zones in your account\nOpen the AWS RAM console at\nhttps://console.aws.amazon.com/ram\n.\nThe AZ IDs for the current Region are displayed in the\nYour AZ ID\npanel on the right-hand side of the screen.\nSharing a multicast domain\nWhen an owner shares a multicast domain with a consumer, the consumer can do the\n\t\t\tfollowing:\nRegister and deregister group members or group sources\nAssociate and disassociate subnets\nTo share a multicast domain, you must add it to a resource share. A resource share is an AWS RAM\n\t\t\tresource that lets you share your resources across AWS accounts. A resource share\n\t\t\tspecifies the resources to share, and the consumers with whom they are shared. When you\n\t\t\tshare a multicast domain using the Amazon Virtual Private Cloud Console, you add it to an existing\n\t\t\tresource share. To add the multicast domain to a new resource share, you must first create the\n\t\t\tresource share using the\nAWS RAM\n\t\t\tconsole\n.\nIf you are part of an organization in AWS Organizations and sharing within your organization is enabled, \n\t\t\tconsumers in your organization are automatically granted access to the shared multicast domain. Otherwise, \n\t\t\tconsumers receive an invitation to join the resource share and are granted access to the shared \n\t\t\tmulticast domain after accepting the invitation.\nYou can share a multicast domain that you own using the *Amazon Virtual Private Cloud Console console, AWS RAM console, or the \n\t\t\tAWS CLI.\nTo share a multicast domain that you own using the *Amazon Virtual Private Cloud Console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nMulticast Domains\n.\nSelect your multicast domain, and then choose\nActions\n,\nShare multicast domain\n.\nSelect your resource share and choose\nShare multicast\n\t\t\t\t\t\tdomain\n.\nTo share a multicast domain that you own using the AWS RAM console\nSee\nCreating a Resource Share\nin the\nAWS RAM User Guide\n.\nTo share a multicast domain that you own using the AWS CLI\nUse the\ncreate-resource-share\ncommand.\nUnsharing a shared multicast domain\nWhen a shared multicast domain is unshared, the following happens to consumer multicast\n\t\t\tdomain resources:\nConsumer subnets are disassociated from the multicast domain. The subnets\n\t\t\t\t\tremain in the consumer account.\nConsumer group sources and group members are disassociated from the multicast\n\t\t\t\t\tdomain, and then deleted from the consumer account.\nTo unshare a multicast domain, you must remove it from the resource share. You can do\n\t\t\tthis from the AWS RAM console or the AWS CLI.\nTo unshare a shared multicast domain that you own, you must remove it from the resource share. You\n\t\t\tcan do this using the *Amazon Virtual Private Cloud Console, AWS RAM console, or the AWS CLI.\nTo unshare a shared multicast domain that you own using the *Amazon Virtual Private Cloud Console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nMulticast Domains\n.\nSelect your multicast domain, and then choose\nActions\n,\nStop sharing\n.\nTo unshare a shared multicast domain that you own using the AWS RAM console\nSee\nUpdating a Resource Share\nin the\nAWS RAM User Guide\n.\nTo unshare a shared multicast domain that you own using the AWS CLI\nUse the\ndisassociate-resource-share\ncommand.\nIdentifying a shared multicast domain\nOwners and consumers can identify shared multicast domains using the *Amazon Virtual Private Cloud Console and AWS CLI\nTo identify a shared multicast domain using the *Amazon Virtual Private Cloud Console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nMulticast Domains\n.\nSelect your multicast domain.\nOn the\nTransit Multicast Domain Details\npage, view the\nOwner ID\nto identify the AWS account ID of\n\t\t\t\t\tthe multicast domain.\nTo identify a shared multicast domain using the AWS CLI\nUse the\ndescribe-transit-gateway-multicast-domains\ncommand. The command returns\n\t\t\t\tthe multicast domains that you own and multicast domains that are shared with you.\nOwnerId\nshows the AWS account ID of the multicast domain owner.\nShared multicast domain permissions\nPermissions for owners\nOwners are responsible for managing the multicast domain and the members and attachments\n\t\t\t\tthat they register or associate with the domain. Owners can change or revoke shared\n\t\t\t\taccess at any time. They can use AWS Organizations to view, modify, and delete\n\t\t\t\tresources that consumers create on shared multicast domains.\nPermissions for consumers\nConsumers can perform the following operations on shared multicast domains in the same way\n\t\t\t\tthat they would on multicast domains that they created:\nRegister and deregister group members or group sources in the multicast\n\t\t\t\t\t\tdomain\nAssociate a subnet with the multicast domain, and disassociate subnets from the multicast\n\t\t\t\t\t\tdomain\nConsumers are responsible for managing the resources that they create on the shared\n\t\t\t\tmulticast domain.\nCustomers cannot view or modify resources owned by other consumers or by the\n\t\t\t\tmulticast domain owner, and they cannot modify multicast domains that are shared\n\t\t\t\twith them.\nBilling and metering\nThere are no additional charges for sharing multicast domains for either the owner, or\n\t\t\tconsumers.\nQuotas\nA shared multicast domain counts toward the owner's and consumer's multicast domain\n\t\t\tquotas.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nManaging multicast groups\nShare your transit gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-share.html": "Transit gateway sharing considerations - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nUnshare a transit gateway\nShared subnets\nTransit gateway sharing considerations\nYou can use AWS Resource Access Manager (RAM) to share a transit gateway for VPC attachments across\n    accounts or across your organization in AWS Organizations. RAM must be enabled and resources shared with\n    an organization. For more information, see\nEnable\n      resource sharing with AWS Organizations\nin the\nAWS RAM User Guide\n.\nTake the following into account when you want to share a transit gateway.\nAn AWS Site-to-Site VPN attachment must be created in the same AWS account that owns the\n        transit gateway.\nAn attachment to a Direct Connect gateway uses a transit gateway association and can be\n        in the same AWS account as the Direct Connect gateway, or a different one from the Direct\n        Connect gateway.\nBy default, users do not have permission to create or modify AWS RAM resources. To allow users\n    to create or modify resources and perform tasks, you must create IAM policies that grant\n    permission to use specific resources and API actions. You then attach those policies to the IAM\n    users or groups that require those permissions.\nOnly the resource owner can perform the following operations:\nCreate a resource share.\nUpdate a resource share.\nView a resource share.\nView the resources that are shared by your account, across all resource shares.\nView the principals with whom you are sharing your resources, across all resource\n        shares. Viewing the principals with whom you are sharing enables you to determine who has\n        access to your shared resources.\nDelete a resource share.\nRun all transit gateway, transit gateway attachment, and transit gateway route tables APIs.\nYou can perform the following operations on resources that are shared with you:\nAccept, or reject a resource share invitation.\nView a resource share.\nView the shared resources that you can access.\nView a list of all the principals that are sharing resources with you. You can see which\n        resources and resource shares they have shared with you.\nCan run the\nDescribeTransitGateways\nAPI.\nRun the APIs that create and describe attachments, for example\nCreateTransitGatewayVpcAttachment\nand\nDescribeTransitGatewayVpcAttachments\n, in their VPCs.\nLeave a resource share.\nWhen a transit gateway is shared with you, you cannot create, modify, or delete its transit gateway route\n    tables, or its transit gateway route table propagations and associations.\nWhen you create a transit gateway, the transit gateway, is created in the Availability Zone that is mapped to\n    your account and is independent from other accounts. When the transit gateway and the attachment entities\n    are in different accounts, use the Availability Zone ID to uniquely and consistently identify\n    the Availability Zone. For example, use1-az1 is an AZ ID for the us-east-1 Region and maps to\n    the same location in every AWS account.\nUnshare a transit gateway\nWhen the share owner unshares the transit gateway, the following rules apply:\nThe transit gateway attachment remains functional.\nThe shared account can not describe the transit gateway.\nThe transit gateway owner, and the share owner can delete the transit gateway attachment.\nWhen a transit gateway is unshared with another AWS account, or if the AWS account that the\n      transit gateway is shared with is removed from the organization, the transit gateway itself won't be\n      impacted.\nShared subnets\nA VPC owner can attach a transit gateway to a shared VPC subnet. Participants cannot. The traffic from\n      participant\u00e2\u0080\u0099s resources can use the attachments depending on the routes set up on the shared VPC subnet by the VPC owner.\nFor more information, see\nShare your VPC with other accounts\nin the\nAmazon VPC User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWorking with shared multicast domains\nTransit Gateway Flow Logs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-flow-logs.html": "Logging network traffic using Transit Gateway Flow Logs - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nTransit Gateway Flow Log records\nTransit Gateway Flow Logs pricing\nLogging network traffic using Transit Gateway Flow Logs\nTransit Gateway Flow Logs is a feature that enables you to capture information about the\n        IP traffic going to and from your transit gateways. Flow log data can be published to Amazon CloudWatch Logs, Amazon S3,\n        or Kinesis Data Firehose. After you create a flow log, you can retrieve and view its data in the chosen\n        destination. Flow log data is collected outside of the path of your network traffic, and\n        therefore does not affect network throughput or latency. You can create or delete flow logs\n        without any risk of impact to network performance. Transit Gateway Flow Logs capture\n        information related only to transit gateways, described in\nTransit Gateway Flow Log records\n. If you\n        want to capture information about IP traffic going to and from network interfaces in your\n        VPCs, use VPC Flow Logs. See\nLogging IP traffic using VPC Flow Logs\nin the\nAmazon VPC User Guide\nfor more information.\nNote\nTo create a transit gateway flow log, you must either be the owner of the transit gateway, or if you are\n            not the owner, the transit gateway  owner must give you permission.\nFlow log data for a monitored transit gateway is recorded as\nflow log records\n,\n        which are log events consisting of fields that describe the traffic flow. For more\n        information, see\nTransit Gateway Flow Log records\n.\nTo create a flow log, you specify:\nThe resource for which to create the flow log\nThe destinations to which you want to publish the flow log data\nAfter you create a flow log, it can take several minutes to begin collecting and\n        publishing data to the chosen destinations. Flow logs do not capture real-time log streams\n        for your transit gateways. For more information, see\nCreate a flow log\n.\nYou can apply tags to your flow logs. Each tag consists of a key and an optional value,\n        both of which you define. Tags can help you organize your flow logs, for example by purpose\n        or owner.\nIf you no longer require a flow log, you can delete it. Deleting a flow log disables the\n        flow log service for the resource, and no new flow log records are created or published to\n        CloudWatch Logs or Amazon S3. Deleting the flow log does not delete any existing flow log records or log\n        streams (for CloudWatch Logs) or log file objects (for Amazon S3) for a transit gateway. To delete an existing log\n        stream, use the CloudWatch Logs console. To delete existing log file objects, use the Amazon S3 console.\n        After you've deleted a flow log, it can take several minutes to stop collecting data. For\n        more information, see\nDelete a flow log\n.\nContents\nTransit Gateway Flow Log records\nTransit Gateway Flow Logs pricing\nCreate a flow log that publishes to CloudWatch Logs\nCreate a flow log that publishes to Amazon S3\nPublish flow logs to Kinesis Data Firehose\nWork with Transit Gateway Flow Logs\nTransit Gateway Flow Log records\nA flow log record represents a network flow in your transit gateway. Each record is a string\n            with fields separated by spaces. A record includes values for the different components\n            of the traffic flow, for example, the source, destination, and protocol.\nWhen you create a flow log, you can use the default format for the flow log record, or\n            you can specify a custom format.\nContents\nDefault format\nCustom format\nAvailable fields\nDefault format\nWith the default format, the flow log records includes all version 2 to version 6\n                fields, in the order shown in the\navailable\n                    fields\ntable. You cannot customize or change the default format. To\n                capture additional fields or a different subset of fields, specify a custom format\n                instead.\nCustom format\nWith a custom format, you specify which fields are included in the flow log\n                records and in which order. This enables you to create flow logs that are specific\n                to your needs, and to omit fields that are not relevant. Using a custom format can\n                reduce the need for separate processes to extract specific information from the\n                published flow logs. You can specify any number of the available flow log fields,\n                but you must specify at least one.\nAvailable fields\nThe following table describes all of the available fields for a transit gateway flow log\n                record. The\nVersion\ncolumn indicates which version\n                the field was introduced in.\nWhen publishing flow log data to Amazon S3, the data type for the fields depends on the\n                flow log format. If the format is plain text, all fields are of type\n                    STRING. If the format is Parquet, see the table for the field\n                data types.\nIf a field is not applicable or could not be computed for a specific record, the\n                record displays a '-' symbol for that entry. Metadata fields that do not come\n                directly from the packet header are best effort approximations, and their values\n                might be missing or inaccurate.\nField\nDescription\nVersion\nversion\nIndicates the version in which the field was introduced. The\n                                    default format includes all version 2 fields, in the same order\n                                    that they appear in the table.\nParquet data type:\nINT_32\n2\nresource-type\nThe type of resource on which the subscription is created.\n                                    This can be TransitGateway or\n                                        TransitGatewayAttachment.\nParquet data type:\nSTRING\n6\naccount-id\nThe AWS account ID of the owner of the source transit gateway.\nParquet data type:\nSTRING\n2\ntgw-id\nThe ID of the transit gateway for which traffic is being\n                                        recorded.\nParquet data type:\nSTRING\n6\ntgw-attachment-id\nThe ID of the transit gateway attachment for which traffic is being\n                                        recorded.\nParquet data type:\nSTRING\n6\ntgw-src-vpc-account-id\nThe AWS account ID for the source VPC traffic.\nParquet data type:\nSTRING\n6\ntgw-dst-vpc-account-id\nThe AWS account ID for the destination VPC traffic.\nParquet data type:\nSTRING\n6\ntgw-src-vpc-id\nThe ID of the source VPC for the transit gateway\nParquet data type:\nSTRING\n6\ntgw-dst-vpc-id\nThe ID of the destination VPC for the transit gateway.\nParquet data type:\nSTRING\n6\ntgw-src-subnet-id\nThe ID of the subnet for the transit gateway source traffic.\nParquet data type:\nSTRING\n6\ntgw-dst-subnet-id\nThe ID of the subnet for the transit gateway destination traffic.\nParquet data type:\nSTRING\n6\ntgw-src-eni\nThe ID of the source transit gateway attachment ENI for the flow.\nParquet data type:\nSTRING\n6\ntgw-dst-eni\nThe ID of the destination transit gateway attachment ENI for the\n                                        flow.\nParquet data\n                                        type:\nSTRING\n6\ntgw-src-az-id\nThe ID of the Availability Zone that contains the source transit gateway\n                                    for which traffic is recorded. If the traffic is from a\n                                    sublocation, the record displays a '-' symbol for this\n                                    field.\nParquet data type:\nSTRING\n6\ntgw-dst-az-id\nThe ID of the Availability Zone that contains the destination\n                                    transit gateway for which traffic is recorded.\nParquet data type:\nSTRING\n6\ntgw-pair-attachment-id\nDepending on the flow direction, this is either the egress or\n                                    ingress attachment ID of the flow.\nParquet data type:\nSTRING\n6\nsrcaddr\nThe source address for incoming traffic.\nParquet data type:\nSTRING\n2\ndstaddr\nThe destination address for outgoing traffic.\nParquet data type:\nSTRING\n2\nsrcport\nThe source port of the traffic.\nParquet data type:\nINT_32\n2\ndstport\nThe destination port of the traffic.\nParquet data type:\nINT_32\n2\nprotocol\nThe IANA protocol number of the traffic. For more information,\n                                    see\nAssigned Internet Protocol Numbers\n.\nParquet data type:\nINT_64\n2\npackets\nThe number of packets transferred during the flow.\nParquet data type:\nINT_64\n2\nbytes\nThe number of bytes transferred during the flow.\nParquet data type:\nINT_64\n2\nstart\nThe time, in Unix seconds, when the first packet of the flow\n                                    was received within the aggregation interval. This might be up\n                                    to 60 seconds after the packet was transmitted or received on\n                                    the transit gateway.\nParquet data type:\nINT_64\n2\nend\nThe time, in Unix seconds, when the last packet of the flow\n                                    was received within the aggregation interval. This might be up\n                                    to 60 seconds after the packet was transmitted or received on\n                                    the transit gateway.\nParquet data type:\nINT_64\n2\nlog-status\nThe status of the flow log:\nOK \u00e2\u0080\u0094 Data is logging normally to the chosen\n                                            destinations.\nNODATA \u00e2\u0080\u0094 There was no network traffic to or from the\n                                            network interface during the aggregation interval.\nSKIPDATA \u00e2\u0080\u0094 Some flow log records were skipped during\n                                            the aggregation interval. This might be because of an\n                                            internal capacity constraint, or an internal\n                                            error.\nParquet data type:\nSTRING\n2\ntype\nThe type of traffic. Possible values are IPv4 | IPv6 | EFA.\n                                    For more information, see\nElastic Fabric\n                                        Adapter\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nParquet data type:\nSTRING\n3\npackets-lost-no-route\nThe packets lost due to no route being specified.\nParquet data type:\nINT_64\n6\npackets-lost-blackhole\nThe packets lost due to a black hole.\nParquet data type:\nINT_64\n6\npackets-lost-mtu-exceeded\nThe packets lost due to the size exceeding the MTU.\nParquet data type:\nINT_64\n6\npackets-lost-ttl-expired\nThe packets lost due to the expiration of time-to-live.\nParquet data type:\nINT_64\n6\ntcp-flags\nThe bitmask value for the following TCP flags:\nFIN \u00e2\u0080\u0094 1\nSYN \u00e2\u0080\u0094 2\nRST \u00e2\u0080\u0094 4\nPSH \u00e2\u0080\u0094 8\nACK \u00e2\u0080\u0094 16\nSYN-ACK \u00e2\u0080\u0094 18\nURG \u00e2\u0080\u0094 32\nImportant\nWhen a flow log entry consists of only ACK packets, the\n                                        flag value is 0, not 16.\nFor general information about TCP flags (such as the meaning\n                                    of flags like FIN, SYN, and ACK), see\nTCP segment structure\non Wikipedia.\nTCP flags can be OR-ed during the aggregation interval. For\n                                    short connections, the flags might be set on the same line in\n                                    the flow log record, for example, 19 for SYN-ACK and FIN, and 3\n                                    for SYN and FIN.\nParquet data type:\nINT_32\n3\nregion\nThe Region that contains the transit gateway where traffic is recorded.\nParquet data type:\nSTRING\n4\nflow-direction\nThe direction of the flow with respect to the interface where\n                                    traffic is captured. The possible values are:\n                                        ingress | egress.\nParquet data type:\nSTRING\n5\npkt-src-aws-service\nThe name of the subset of\nIP address\n                                        ranges\nfor the srcaddr if the source IP address is\n                                    for an AWS service. The possible values are:\n                                        AMAZON | AMAZON_APPFLOW |\n                                        AMAZON_CONNECT | API_GATEWAY |\n                                        CHIME_MEETINGS |\n                                        CHIME_VOICECONNECTOR | CLOUD9\n                                    | CLOUDFRONT | CODEBUILD |\n                                        DYNAMODB | EBS |\n                                        EC2 | EC2_INSTANCE_CONNECT |\n                                        GLOBALACCELERATOR |\n                                        KINESIS_VIDEO_STREAMS |\n                                        ROUTE53 | ROUTE53_HEALTHCHECKS\n                                    | ROUTE53_HEALTHCHECKS_PUBLISHING |\n                                        ROUTE53_RESOLVER | S3 |\n                                        WORKSPACES_GATEWAYS.\nParquet data type:\nSTRING\n5\npkt-dst-aws-service\nThe name of the subset of IP address ranges for the dstaddr\n                                    field, if the destination IP address is for an AWS service. For\n                                    a list of possible values, see the\n                                        pkt-src-aws-service field.\nParquet data type:\nSTRING\n5\nTransit Gateway Flow Logs pricing\nData ingestion and storage charges for vended logs apply when you publish transit gateway flow\n            logs. For more information about pricing when publishing vended logs, open\nAmazon CloudWatch Pricing\n,\n            and then under\nPaid tier\n, select\nLogs\nand find\nVended Logs\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nShare your transit gateways\nPublish to CloudWatch Logs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/flow-logs-cwl.html": "Create a flow log that publishes to CloudWatch Logs - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nIAM roles for publishing flow logs to\n                    CloudWatch Logs\nPermissions for IAM users to pass a\n                    role\nCreate a flow log that publishes to\n                    CloudWatch Logs\nProcess flow log records in CloudWatch Logs\nCreate a flow log that publishes to CloudWatch Logs\nFlow logs can publish flow log data directly to Amazon CloudWatch.\nWhen published to CloudWatch Logs, the flow log data is published to a log group, and each transit gateway\n            has a unique log stream in the log group. Log streams contain flow log records. You can\n            create multiple flow logs that publish data to the same log group. If the same transit gateway is\n            present in one or more flow logs in the same log group, it has one combined log stream.\n            If you've specified that one flow log should capture rejected traffic, and the other\n            flow log should capture accepted traffic, then the combined log stream captures all\n            traffic.\nData ingestion and archival charges for vended logs apply when you publish flow logs\n            to CloudWatch Logs. For more information, see\nAmazon CloudWatch Pricing\n.\nIn CloudWatch Logs, the\ntimestamp\nfield corresponds to the start time\n            that's captured in the flow log record. The\ningestionTime\nfield\n            provides the date and time when the flow log record was received by CloudWatch Logs. The timestamp\n            is later than the end time that's captured in the flow log\n            record.\nFor more information about CloudWatch Logs, see\nLogs sent to CloudWatch Logs\nin the\nAmazon CloudWatch Logs User\n                Guide\n.\nContents\nIAM roles for publishing flow logs to\n                    CloudWatch Logs\nPermissions for IAM users to pass a\n                    role\nCreate a flow log that publishes to\n                    CloudWatch Logs\nProcess flow log records in CloudWatch Logs\nIAM roles for publishing flow logs to\n                    CloudWatch Logs\nThe IAM role that's associated with your flow log must have sufficient\n                permissions to publish flow logs to the specified log group in CloudWatch Logs. The IAM role\n                must belong to your AWS account.\nThe IAM policy that's attached to your IAM role must include at least the\n                following permissions.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogGroups\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\nAlso ensure that your role has a trust relationship that allows the flow logs\n                service to assume the role.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Principal\":\n{\n\"Service\": \"vpc-flow-logs.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nWe recommend that you use the\naws:SourceAccount\nand\naws:SourceArn\ncondition keys to protect yourself against\nthe confused deputy problem\n.\n                For example, you could add the following condition block to the previous trust\n                policy. The source account is the owner of the flow log and the source ARN is the\n                flow log ARN. If you don't know the flow log ID, you can replace that portion of the\n                ARN with a wildcard (*) and then update the policy after you create the flow\n                log.\n\"Condition\":\n{\n\"StringEquals\":\n{\n\"aws:SourceAccount\": \"\naccount_id\n\"\n    },\n    \"ArnLike\":\n{\n\"aws:SourceArn\": \"arn:aws:ec2:\nregion\n:\naccount_id\n:vpc-flow-log/\nflow-log-id\n\"\n    }\n}\nCreate or update an IAM role for flow\n                        logs\nYou can update an existing role or use the following procedure to create a new\n                    role for use with flow logs.\nTo create an IAM role for flow logs\nOpen the IAM console at\nhttps://console.aws.amazon.com/iam/\n.\nIn the navigation pane, choose\nRoles\n,\nCreate role\n.\nFor\nSelect type of trusted entity\n, choose\nAWS service\n. For\nUse\n                                case\n, choose\nEC2\n. Choose\nNext\n.\nOn the\nAdd permissions\npage, choose\nNext: Tags\nand optionally add tags. Choose\nNext\n.\nOn the Name, revew, and create page enter a name for your role and\n                            optionally provide a\nDescription\n. Choose\nCreate role\n.\nChoose the name of your role. For\nAdd\n                            permissions\n, choose\nCreate inline\n                            policy\n, and then choose the\nJSON\ntab.\nCopy the first policy from\nIAM roles for publishing flow logs to\n                    CloudWatch Logs\nand paste it in the window. Choose\nReview policy\n.\nEnter a name for your policy, and choose\nCreate\n                                policy\n.\nSelect the name of your role. For\nTrust\n                                relationships\n, choose\nEdit trust\n                                relationship\n. In the existing policy document, change the\n                            service from\nec2.amazonaws.com\nto\nvpc-flow-logs.amazonaws.com\n. Choose\nUpdate\n                                Trust Policy\n.\nOn the\nSummary\npage, note the ARN for your role.\n                            You need this ARN when you create your flow log.\nPermissions for IAM users to pass a\n                    role\nUsers must also have permissions to use the\niam:PassRole\naction for\n                the IAM role that's associated with the flow log.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\"iam:PassRole\"],\n      \"Resource\": \"arn:aws:iam::\naccount-id\n:role/\nflow-log-role-name\n\"\n    }\n  ]\n}\nCreate a flow log that publishes to\n                    CloudWatch Logs\nYou can create flow logs for transit gateways. If you perform these steps as an IAM user,\n                ensure that you have permissions to use the\niam:PassRole\naction. For\n                more information, see\nPermissions for IAM users to pass a\n                    role\n.\nTo create a transit gateway flow log using the console\nSign in to the AWS Management Console and open the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit gateways\n.\nSelect the check boxes for one or more transit gateways and choose\nActions\n,\nCreate flow\n                        log\n.\nFor\nDestination\n, choose\nSend to CloudWatch\n                            Logs\n.\nFor\nDestination log group\n, choose the name of a\n                        current destination log group.\nNote\nIf the destination log group does not yet exist, entering a new name\n                            in this field will create a new destination log group.\nFor\nIAM role\n, specify the name of the role that has\n                        permissions to publish logs to CloudWatch Logs.\nFor\nLog record format\n, select the format for the flow\n                        log record.\nTo use the default format, choose\nAWS default\n                                    format\n.\nTo use a custom format, choose\nCustom format\nand then select fields from\nLog format\n.\n(Optional) Choose\nAdd new tag\nto apply tags to the\n                        flow log.\nChoose\nCreate flow log\n.\nTo create a flow log using the command line\nUse one of the following commands.\ncreate-flow-logs\n(AWS CLI)\nNew-EC2FlowLogs\n(AWS Tools for Windows PowerShell)\nCreateFlowLogs\n(Amazon EC2 Query API)\nThe following AWS CLI example creates a flow log that captures transit gateway information.\n                The flow logs are delivered to a log group in CloudWatch Logs called\nmy-flow-logs\n, in account 123456789101, using the IAM role\npublishFlowLogs\n.\naws ec2 create-flow-logs --resource-type TransitGateway --resource-ids tgw-1a2b3c4d --log-group-name my-flow-logs --deliver-logs-permission-arn arn:aws:iam::123456789101:role/publishFlowLogs\nProcess flow log records in CloudWatch Logs\nYou can work with flow log records as you would with any other log events\n                collected by CloudWatch Logs. For more information about monitoring log data and metric\n                filters, see\nSearching and Filtering\n                    Log Data\nin the\nAmazon CloudWatch User Guide\n.\nExample: Create a CloudWatch metric\n                        filter and alarm for a flow log\nIn this example, you have a flow log for\neni-1a2b3c4d\n. You want\n                    to create an alarm that alerts you if there have been 10 or more rejected\n                    attempts to connect to your instance over TCP port 22 (SSH) within a 1-hour time\n                    period. First, you must create a metric filter that matches the pattern of the\n                    traffic for which to create the alarm. Then, you can create an alarm for the\n                    metric filter.\nTo create a metric filter for rejected SSH traffic and create an alarm\n                        for the filter\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nLogs\n,\nLog groups\n.\nSelect the check box for the log group, and then choose\nActions\n,\nCreate metric\n                                filter\n.\nFor\nFilter Pattern\n, enter the following.\n[version, resource_type, account_id,tgw_id=\"tgw-123abc456bca\u00e2\u0080\u009d, tgw_attachment_id, tgw_src_vpc_account_id, tgw_dst_vpc_account_id, tgw_src_vpc_id, tgw_dst_vpc_id, tgw_src_subnet_id, tgw_dst_subnet_id, tgw_src_eni, tgw_dst_eni, tgw_src_az_id, tgw_dst_az_id, tgw_pair_attachment_id, srcaddr= \"10.0.0.1\", dstaddr, srcport=\u00e2\u0080\u009c80\u00e2\u0080\u009d, dstport, protocol=\u00e2\u0080\u009c6\u00e2\u0080\u009d, packets, bytes,start,end, log_status, type,packets_lost_no_route, packets_lost_blackhole, packets_lost_mtu_exceeded, packets_lost_ttl_expired, tcp_flags,region, flow_direction, pkt_src_aws_service, pkt_dst_aws_service]\nFor\nSelect log data to test\n, select the log\n                            stream for your transit gateway. (Optional) To view the lines of log data that\n                            match the filter pattern, choose\nTest pattern\n. When\n                            you're ready, choose\nNext\n.\nEnter a filter name, metric namespace, and metric name. Set the metric\n                            value to\n1\n. When you're done, choose\nNext\nand then choose\nCreate metric\n                                filter\n.\nIn the navigation pane, choose\nAlarms\n,\nAll alarms\n.\nChoose\nCreate alarm\n.\nChoose the namespace for the metric filter that you created.\nIt can take a few minutes for a new metric to display in the\n                            console.\nSelect the metric name that you created, and then choose\nSelect metric\n.\nConfigure the alarm as follows, and then choose\nNext\n:\nFor\nStatistic\n, choose\nSum\n. This ensure that you capture the\n                                    total number of data points for the specified time\n                                    period.\nFor\nPeriod\n, choose\n1\n                                        hour\n.\nFor\nWhenever\n, choose\nGreater/Equal\nand enter\n10\nfor the threshold.\nFor\nAdditional configuration\n,\nDatapoints to alarm\n, leave the default\n                                    of\n1\n.\nFor\nNotification\n, select an existing SNS topic,\n                            or choose\nCreate new topic\nto create a new one.\n                            Choose\nNext\n.\nEnter a name and description for the alarm and choose\nNext\n.\nWhen you are done configuring the alarm, choose\nCreate\n                                alarm\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTransit Gateway Flow Logs\nPublish to Amazon S3\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/flow-logs-s3.html": "Create a flow log that publishes to Amazon S3 - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nFlow log files\nIAM policy for IAM principals that publish\n                    flow logs to Amazon S3\nAmazon S3 bucket permissions for flow\n                    logs\nRequired key policy for use with\n                    SSE-KMS\nAmazon S3 log file permissions\nCreate a flow log that publishes to\n                    Amazon S3\nProcess flow log records in Amazon S3\nCreate a flow log that publishes to Amazon S3\nFlow logs can publish flow log data to Amazon S3.\nWhen publishing to Amazon S3, flow log data is published to an existing Amazon S3 bucket that\n            you specify. Flow log records for all of the monitored transit gateways are published to a series\n            of log file objects that are stored in the bucket.\nData ingestion and archival charges for vended logs apply when you publish flow logs\n            to Amazon S3. For more information, see\nAmazon CloudWatch Pricing\n.\nTo create an Amazon S3 bucket for use with flow logs, see\nCreate a bucket\nin the\nAmazon Simple Storage Service User Guide\n.\nFor more information about multiple account logging, see\nCentral Logging\nin the\n            AWS Solutions Library.\nFor more information about CloudWatch Logs, see\nLogs sent to Amazon S3\nin the\nAmazon CloudWatch Logs User\n            Guide\n.\nContents\nFlow log files\nIAM policy for IAM principals that publish\n                    flow logs to Amazon S3\nAmazon S3 bucket permissions for flow\n                    logs\nRequired key policy for use with\n                    SSE-KMS\nAmazon S3 log file permissions\nCreate a flow log that publishes to\n                    Amazon S3\nProcess flow log records in Amazon S3\nFlow log files\nVPC Flow Logs is a feature that collects flow log records, consolidates them into\n                log files, and then publishes the log files to the Amazon S3 bucket at 5-minute\n                intervals. Each log file contains flow log records for the IP traffic recorded in\n                the previous five minutes.\nThe maximum file size for a log file is 75 MB. If the log file reaches the file\n                size limit within the 5-minute period, the flow log stops adding flow log records to\n                it. Then it publishes the flow log to the Amazon S3 bucket, and creates a new log\n                file.\nIn Amazon S3, the\nLast modified\nfield for the flow log file\n                indicates the date and time when the file was uploaded to the Amazon S3 bucket. This is\n                later than the timestamp in the file name, and differs by the amount of time taken\n                to upload the file to the Amazon S3 bucket.\nLog file format\nYou can specify one of the following formats for the log files. Each file is\n                    compressed into a single Gzip file.\nText\n\u00e2\u0080\u0093 Plain text. This is the\n                        default format.\nParquet\n\u00e2\u0080\u0093 Apache Parquet is a\n                        columnar data format. Queries on data in Parquet format are 10 to 100 times\n                        faster compared to queries on data in plain text. Data in Parquet format\n                        with Gzip compression takes 20 percent less storage space than plain text\n                        with Gzip compression.\nLog file options\nYou can optionally specify the following options.\nHive-compatible S3 prefixes\n\u00e2\u0080\u0093\n                        Enable Hive-compatible prefixes instead of importing partitions into your\n                        Hive-compatible tools. Before you run queries, use the\nMSCK REPAIR\n                            TABLE\ncommand.\nHourly partitions\n\u00e2\u0080\u0093 If you have a\n                        large volume of logs and typically target queries to a specific hour, you\n                        can get faster results and save on query costs by partitioning logs on an\n                        hourly basis.\nLog file S3 bucket structure\nLog files are saved to the specified Amazon S3 bucket using a folder structure that\n                    is based on the flow log's ID, Region, creation date, and destination\n                    options.\nBy default, the files are delivered to the following location.\nbucket-and-optional-prefix\n/AWSLogs/\naccount_id\n/vpcflowlogs/\nregion\n/\nyear\n/\nmonth\n/\nday\n/\nIf you enable Hive-compatible S3 prefixes, the files are delivered to the\n                following location.\nbucket-and-optional-prefix\n/AWSLogs/aws-account-id=\naccount_id\n/service=vpcflowlogs/aws-region=\nregion\n/year=\nyear\n/month=\nmonth\n/day=\nday\n/\nIf you enable hourly partitions, the files are delivered to the following\n                location.\nbucket-and-optional-prefix\n/AWSLogs/\naccount_id\n/vpcflowlogs/\nregion\n/\nyear\n/\nmonth\n/\nday\n/\nhour\n/\nIf you enable Hive-compatible partitions and partition the flow log per hour, the\n                files are delivered to the following location.\nbucket-and-optional-prefix\n/AWSLogs/aws-account-id=\naccount_id\n/service=vpcflowlogs/aws-region=\nregion\n/year=\nyear\n/month=\nmonth\n/day=\nday\n/hour=\nhour\n/\nLog file names\nThe file name of a log file is based on the flow log ID, Region, and creation\n                    date and time. File names use the following format.\naws_account_id\n_vpcflowlogs_\nregion\n_\nflow_log_id\n_\nYYYYMMDD\nT\nHHmm\nZ_\nhash\n.log.gz\nThe following is an example of a log file for a flow log created by AWS account\n                    123456789012, for a resource in the us-east-1\n                Region, on June 20, 2018 at 16:20 UTC. The file\n                contains the flow log records with an end time between 16:20:00 and\n                    16:24:59.\n123456789012_vpcflowlogs_us-east-1_fl-1234abcd_20180620T1620Z_fe123456.log.gz\nIAM policy for IAM principals that publish\n                    flow logs to Amazon S3\nThe IAM principal that creates the flow log must have the following permissions,\n                which are required to publish flow logs to the destination Amazon S3 bucket.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogDelivery\",\n        \"logs:DeleteLogDelivery\"\n        ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\nAmazon S3 bucket permissions for flow\n                    logs\nBy default, Amazon S3 buckets and the objects they contain are private. Only the bucket\n                owner can access the bucket and the objects stored in it. However, the bucket owner\n                can grant access to other resources and users by writing an access policy.\nIf the user creating the flow log owns the bucket and has\nPutBucketPolicy\nand\nGetBucketPolicy\npermissions for\n                the bucket, we automatically attach the following policy to the bucket. This policy\n                overwrites any existing policy attached to the bucket.\nOtherwise, the bucket owner must add this policy to the bucket, specifying the\n                AWS account ID of the flow log creator, or flow log creation fails. For more\n                information, see\nUsing bucket\n                    policies\nin the\nAmazon Simple Storage Service User Guide\n.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Sid\": \"AWSLogDeliveryWrite\",\n            \"Effect\": \"Allow\",\n            \"Principal\":\n{\n\"Service\": \"delivery.logs.amazonaws.com\"},\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": \"\nmy-s3-arn\n\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"s3:x-amz-acl\": \"bucket-owner-full-control\",\n                    \"aws:SourceAccount\":\naccount_id\n},\n                \"ArnLike\":\n{\n\"aws:SourceArn\": \"arn:aws:logs:\nregion\n:\naccount_id\n:*\"\n                }\n            }\n        },\n{\n\"Sid\": \"AWSLogDeliveryCheck\",\n            \"Effect\": \"Allow\",\n            \"Principal\":\n{\n\"Service\": \"delivery.logs.amazonaws.com\"},\n            \"Action\": [\"s3:GetBucketAcl\", \"s3:ListBucket\"],\n            \"Resource\": \"arn:aws:s3:::\nbucket_name\n\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"aws:SourceAccount\":\naccount_id\n},\n                \"ArnLike\":\n{\n\"aws:SourceArn\": \"arn:aws:logs:\nregion\n:\naccount_id\n:*\"\n                }\n            }\n        }\n    ]\n}\nThe ARN that you specify for\nmy-s3-arn\ndepends on\n                whether you use Hive-compatible S3 prefixes.\nDefault prefixes\narn:aws:s3:::\nbucket_name\n/\noptional_folder\n/AWSLogs/\naccount_id\n/*\nHive-compatible S3 prefixes\narn:aws:s3:::\nbucket_name\n/\noptional_folder\n/AWSLogs/aws-account-id=\naccount_id\n/*\nAs a best practice, we recommend that you grant these permissions to the log\n                delivery service principal instead of individual AWS account ARNs. It is also a\n                best practice to use the\naws:SourceAccount\nand\naws:SourceArn\ncondition keys to protect against\nthe confused deputy problem\n.\n                The source account is the owner of the flow log and the source ARN is the wildcard\n                (*) ARN of the logs service.\nRequired key policy for use with\n                    SSE-KMS\nYou can protect the data in your Amazon S3 bucket by enabling either Server-Side\n                Encryption with Amazon S3-Managed Keys (SSE-S3) or Server-Side Encryption with KMS Keys\n                (SSE-KMS). For more information, see\nProtecting data using\n                    server-side encryption\nin the\nAmazon S3 User\n                Guide\n.\nWith SSE-KMS, you can use either an AWS managed key or a customer managed key.\n                With an AWS managed key, you can't use cross-account delivery. Flow logs are\n                delivered from the log delivery account, so you must grant access for cross-account\n                delivery. To grant cross-account access to your S3 bucket, use a customer managed\n                key and specify the Amazon Resource Name (ARN) of the customer managed key when you\n                enable bucket encryption. For more information, see\nSpecifying\n                    server-side encryption with AWS KMS\nin the\nAmazon S3 User\n                    Guide\n.\nWhen you use SSE-KMS with a customer managed key, you must add the following to\n                the key policy for your key (not the bucket policy for your S3 bucket), so that VPC\n                Flow Logs can write to your S3 bucket.\n{\n\"Sid\": \"Allow Transit Gateway Flow Logs to use the key\",\n    \"Effect\": \"Allow\",\n    \"Principal\":\n{\n\"Service\": [\n            \"delivery.logs.amazonaws.com\"\n        ]\n    },\n   \"Action\": [\n       \"kms:Encrypt\",\n       \"kms:Decrypt\",\n       \"kms:ReEncrypt*\",\n       \"kms:GenerateDataKey*\",\n       \"kms:DescribeKey\"\n    ],\n    \"Resource\": \"*\"\n}\nAmazon S3 log file permissions\nIn addition to the required bucket policies, Amazon S3 uses access control lists (ACLs)\n                to manage access to the log files created by a flow log. By default, the bucket\n                owner has\nFULL_CONTROL\npermissions on each log file. The log delivery\n                owner, if different from the bucket owner, has no permissions. The log delivery\n                account has\nREAD\nand\nWRITE\npermissions. For more\n                information, see\nAccess Control List\n                    (ACL) Overview\nin the\nAmazon Simple Storage Service User Guide\n.\nCreate a flow log that publishes to\n                    Amazon S3\nAfter you have created and configured your Amazon S3 bucket, you can create flow logs\n                for transit gateways.\nTo create a transit gateway flow log that publishes to Amazon S3 using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit gateways\nor\nTransit gateway attachments\n.\nSelect the checkboxes for one or more transit gateways or transit gateway attachments.\nChoose\nActions\n,\nCreate flow\n                        log\n.\nConfigure the flow log settings. For more information, see\nTo configure flow log\n                        settings\n.\nTo configure flow log settings using the console\nFor\nDestination\n, choose\nSend to an S3\n                            bucket\n.\nFor\nS3 bucket ARN\n, specify the Amazon Resource Name\n                        (ARN) of an existing Amazon S3 bucket. You can optionally include a subfolder.\n                        For example, to specify a subfolder named\nmy-logs\nin a\n                        bucket named\nmy-bucket\n, use the following ARN:\narn:aws::s3:::my-bucket/my-logs/\nThe bucket cannot use\nAWSLogs\nas a subfolder name, as this is\n                        a reserved term.\nIf you own the bucket, we automatically create a resource policy and\n                        attach it to the bucket. For more information, see\nAmazon S3 bucket permissions for flow\n                    logs\n.\nFor\nLog record format\n, specify the format for the\n                        flow log record.\nTo use the default flow log record format, choose\nAWS\n                                    default format\n.\nTo create a custom format, choose\nCustom\n                                    format\n. For\nLog format\n, choose\n                                the fields to include in the flow log record.\nFor\nLog file format\n, specify the format for the log\n                        file.\nText\n\u00e2\u0080\u0093 Plain text. This is the default\n                                format.\nParquet\n\u00e2\u0080\u0093 Apache Parquet is a columnar\n                                data format. Queries on data in Parquet format are 10 to 100 times\n                                faster compared to queries on data in plain text. Data in Parquet\n                                format with Gzip compression takes 20 percent less storage space\n                                than plain text with Gzip compression.\n(Optional) To use Hive-compatible S3 prefixes, choose\nHive-compatible S3 prefix\n,\nEnable\n.\n(Optional) To partition your flow logs per hour, choose\nEvery 1\n                            hour (60 mins)\n.\n(Optional) To add a tag to the flow log, choose\nAdd new\n                            tag\nand specify the tag key and value.\nChoose\nCreate flow log\n.\nTo create a flow log that publishes to Amazon S3 using a command line tool\nUse one of the following commands.\ncreate-flow-logs\n(AWS CLI)\nNew-EC2FlowLogs\n(AWS Tools for Windows PowerShell)\nCreateFlowLogs\n(Amazon EC2 Query API)\nThe following AWS CLI example creates a flow log that captures all transit gateway traffic for VPC\ntgw-00112233344556677\nand delivers the flow logs to an Amazon S3 bucket\n            called\nflow-log-bucket\n. The\n--log-format\nparameter specifies a\n            custom format for the flow log records.\naws ec2 create-flow-logs --resource-type TransitGateway --resource-ids tgw-00112233344556677 --log-destination-type s3 --log-destination arn:aws:s3:::flow-log-bucket/my-custom-flow-logs/'\nProcess flow log records in Amazon S3\nThe log files are compressed. If you open the log files using the Amazon S3 console,\n                they are decompressed and the flow log records are displayed. If you download the\n                files, you must decompress them to view the flow log records.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPublish to CloudWatch Logs\nPublish to Kinesis Data Firehose\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/flow-logs-kinesis.html": "Publish flow logs to Kinesis Data Firehose - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nIAM roles for cross account delivery\nCreate a  flow log that\n                    publishes to Kinesis Data Firehose\nPublish flow logs to Kinesis Data Firehose\nTopics\nIAM roles for cross account delivery\nCreate a flow log that publishes to Kinesis Data Firehose\nFlow logs can publish flow log data directly to Kinesis Data Firehose. You can choose to publish flow\n            logs to the same account as the resource monitor or to a different account.\nPrerequisities\nWhen publishing to Kinesis Data Firehose, flow log data is published to a Kinesis Data Firehose delivery stream, in\n            plain text format.  You must first have created a Kinesis Data Firehose delivery stream. For the steps to\n            create a delivery stream, see\nCreating an Amazon Kinesis Data Firehose Delivery Stream\nin the\nAmazon Kinesis Data Firehose Developer Guide\n.\nPricing\nStandard ingestion and delivery charges apply. For more information, open\nAmazon CloudWatch Pricing\n,\n            select\nLogs\nand find\nVended\n                Logs\n.\nIAM roles for cross account delivery\nWhen you publish to Kinesis Data Firehose, you can choose a delivery stream that's in the same\n                account as the resource to monitor (the source account), or in a different account\n                (the destination account). To enable cross account delivery of flow logs toKinesis Data Firehose, you\n                must create an IAM role in the source account and an IAM role in the destination\n                account.\nRoles\nSource account role\nDestination account role\nSource account role\nIn the source account, create a role that grants the following permissions. In\n                    this example, the name of the role is\nmySourceRole\n, but you can\n                    choose a different name for this role. The last statement allows the role in the\n                    destination account to assume this role. The condition statements ensure that\n                    this role is passed only to the log delivery service, and only when monitoring\n                    the specified resource. When you create your policy, specify the VPCs, network\n                    interfaces, or subnets that you're monitoring with the condition key\niam:AssociatedResourceARN\n.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"iam:PassRole\",\n      \"Resource\": \"arn:aws:iam::source-account:role/mySourceRole\",\n      \"Condition\":\n{\n\"StringEquals\":\n{\n\"iam:PassedToService\": \"delivery.logs.amazonaws.com\"\n          },\n          \"StringLike\":\n{\n\"iam:AssociatedResourceARN\": [\n                  \"arn:aws:ec2:region:source-account:transit-gateway/tgw-0fb8421e2da853bf\"\n              ]\n          }\n      }\n    },\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n          \"logs:CreateLogDelivery\",\n          \"logs:DeleteLogDelivery\",\n          \"logs:ListLogDeliveries\",\n          \"logs:GetLogDelivery\"\n      ],\n      \"Resource\": \"*\"\n    },\n{\n\"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Resource\": \"arn:aws:iam::destination-account:role/AWSLogDeliveryFirehoseCrossAccountRole\"      \n    }\n  ]\n}\nEnsure that this role has the following trust policy, which allows the log delivery service to assume the role.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Principal\":\n{\n\"Service\": \"delivery.logs.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nFrom the source account, use the following procedure to create the role.\nTo create the source account role\nSign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/iam/\n.\nIn the navigation pane, choose\nPolicies\n.\nChoose\nCreate policy\n.\nOn the Create policy page, do the following:\nChoose\nJSON\n.\nReplace the contents of this window with the permissions\n                                    policy at the start of this section.\nChoose\nNext: Tags\nand\nNext:\n                                        Review\n.\nEnter a name for your policy and an optional description, and\n                                    then choose\nCreate policy\n.\nIn the navigation pane, choose\nRoles\n.\nChoose\nCreate role\n.\nFor the\nTrusted entity type\n, choose\nCustom\n                                trust policy\n. For\nCustom trust\n                                policy\n, replace\n\"Principal\":\n{\n},\nwith the\n                            following, which specifies the log delivery service. Choose\nNext\n.\n\"Principal\":\n{\n\"Service\": \"delivery.logs.amazonaws.com\"\n},\nOn the\nAdd permissions\npage, select the checkbox for the\n                            policy that you created earlier in this procedure, and then choose\nNext\n..\nEnter a name for your role and optionally provide a description.\nChoose\nCreate role\n.\nDestination account role\nIn the destination account, create a role with a name that starts with\nAWSLogsDeliveryFirehoseCrossAccountRole\n. This role must\n                    grant the following permissions.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n          \"iam:CreateServiceLinkedRole\",\n          \"firehose:TagDeliveryStream\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\nEnsure that this role has the following trust policy, which allows the role\n                    that you created in the source account to assume this role.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Principal\":\n{\n\"AWS\": \"arn:aws:iam::source-account:role/mySourceRole\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nFrom the destination account, use the following procedure to create the\n                    role.\nTo create the destination account role\nSign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/iam/\n.\nIn the navigation pane, choose\nPolicies\n.\nChoose\nCreate policy\n.\nOn the Create policy page, do the following:\nChoose\nJSON\n.\nReplace the contents of this window with the permissions\n                                    policy at the start of this section.\nChoose\nNext: Tags\nand\nNext:\n                                    Review\n.\nEnter a name for your policy that starts with\nAWSLogDeliveryFirehoseCrossAccountRole\n,\n                                    and then choose\nCreate policy\n.\nIn the navigation pane, choose\nRoles\n.\nChoose\nCreate role\n.\nFor the\nTrusted entity type\n, choose\nCustom\n                            trust policy\n. For\nCustom trust\n                                policy\n, replace\n\"Principal\":\n{\n},\nwith the\n                            following, which specifies the log delivery service. Choose\nNext\n.\n\"Principal\":\n{\n\"AWS\": \"arn:aws:iam::source-account:role/mySourceRole\"\n},\nOn the\nAdd permissions\npage, select the checkbox for the\n                            policy that you created earlier in this procedure, and then choose\nNext\n..\nEnter a name for your role and optionally provide a description.\nChoose\nCreate role\n.\nCreate a flow log that publishes to Kinesis Data Firehose\nTo create a transit gateway flow log that publishes to Kinesis Data Firehose using the console\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit gateways\nor\nTransit gateway attachments\n.\nSelect the checkboxes for one or more transit gateways or transit gateway attachments.\nChoose\nActions\n,\nCreate flow\n                    log\n.\nFor\nDestination\nchoose Send to a\nFirehose\n                        Delivery System\n.\nFor the\nFirehose Delivery Stream ARN\n, choose the ARN of a\n                    delivery stream you created where the flow log is to be published.\nFor\nLog record format\n, specify the format for the flow\n                    log record.\nTo use the default flow log record format, choose\nAWS\n                                default format\n.\nTo create a custom format, choose\nCustom format\n.\n                            For\nLog format\n, choose the fields to include in the\n                            flow log record.\n(Optional) To add a tag to the flow log, choose\nAdd new\n                        tag\nand specify the tag key and value.\nChoose\nCreate flow log\n.\nTo create a flow log that publishes to Kinesis Data Firehose using the command line tool\nUse one of the following commands:\ncreate-flow-logs\n(AWS CLI)\nNew-EC2FlowLogs\n(AWS Tools for Windows PowerShell)\nCreateFlowLogs\n(Amazon EC2 Query API)\nThe following AWS CLI example creates a flow log that captures transit gateway\n            information and delivers the flow log to the specified Kinesis Data Firehose delivery\n            stream.\naws ec2 create-flow-logs \\ \n                --resource-type TransitGateway \\ \n                --resource-ids tgw-1a2b3c4d \\ \n                --log-destination-type kinesis-data-firehose \\\n                --log-destination arn:aws:firehose:us-east-1:123456789012:deliverystream:flowlogs_stream\nThe following AWS CLI example creates a flow log that captures transit gateway information\n                and delivers the flow log to a different Kinesis Data Firehose delivery stream from the source\n                account.\naws ec2 create-flow-logs  \\\n  --resource-type TransitGateway \\\n  --resource-ids gw-1a2b3c4d \\\n  --log-destination-type kinesis-data-firehose \\\n  --log-destination arn:aws:firehose:us-east-1:123456789012:deliverystream:flowlogs_stream \\\n  --deliver-logs-permission-arn arn:aws:iam::source-account:role/mySourceRole \\ \n  --deliver-cross-account-role arn:aws:iam::destination-account:role/AWSLogDeliveryFirehoseCrossAccountRole\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPublish to Amazon S3\nWork with flow logs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/working-with-flow-logs.html": "Work with Transit Gateway Flow Logs - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nControl the use of flow logs\nCreate a flow log\nView flow logs\nAdd or remove tags for flow logs\nView flow log records\nSearch flow log records\nDelete a flow log\nAPI and CLI overview and limitations\nWork with Transit Gateway Flow Logs\nYou can work with  Transit Gateway Flow Logs using the Amazon EC2, Amazon VPC, CloudWatch, and Amazon S3 consoles.\nTasks\nControl the use of flow logs\nCreate a flow log\nView flow logs\nAdd or remove tags for flow logs\nView flow log records\nSearch flow log records\nDelete a flow log\nAPI and CLI overview and limitations\nControl the use of flow logs\nBy default, users do not have permission to work with flow logs. You can create a\n                user policy that grants users the permissions to create, describe, and delete flow\n                logs. For more information, see\nGranting IAM Users Required Permissions for Amazon EC2 Resources\nin the\nAmazon EC2 API Reference\n.\nThe following is an example policy that grants users full permissions to create,\n                describe, and delete flow logs.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\": [\n{\n\"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteFlowLogs\",\n        \"ec2:CreateFlowLogs\",\n        \"ec2:DescribeFlowLogs\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\nSome additional IAM role and permission configuration is required, depending on\n                whether you're publishing to CloudWatch Logs or Amazon S3. For more information, see\nCreate a flow log that publishes to CloudWatch Logs\nand\nCreate a flow log that publishes to Amazon S3\n.\nCreate a flow log\nYou can create flow logs for your transit gateways that can publish data to CloudWatch Logs, Amazon S3, or\n                Kinesis Data Firehose.\nFor more information, see  the following:\nCreate a flow log that publishes to\n                    CloudWatch Logs\nCreate a flow log that publishes to\n                    Amazon S3\nCreate a flow log that publishes to Kinesis Data Firehose\nView flow logs\nYou can view information about your flow logs in the Amazon VPC console by viewing the\nFlow Logs\ntab for a specific resource. When you select the\n                resource, all of the flow logs for that resource are listed. The information\n                displayed includes the ID of the flow log, the flow log configuration, and\n                information about the status of the flow log.\nTo view information about flow logs for transit gateways\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit gateways\nor\nTransit gateway attachments\n.\nSelect a transit gateway or transit gateway attachment and choose\nFlow\n                            Logs\n. Information about the flow logs is displayed on the\n                        tab. The\nDestination type\ncolumn indicates the\n                        destination to which the flow logs are published.\nAdd or remove tags for flow logs\nYou can add or remove tags for a flow log in the Amazon EC2 and Amazon VPC consoles.\nTo add or remove tags for a transit gateway flow log\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit gateways\nor\nTransit gateway attachments\n.\nSelect a transit gateway or transit gateway attachment\nChoose\nManage tags\nfor the required flow log.\nTo add a new tag, choose\nCreate Tag\n. To remove a tag,\n                        choose the delete button (x).\nChoose\nSave\n.\nView flow log records\nYou can view your flow log records using the CloudWatch Logs console or Amazon S3 console,\n                depending on the chosen destination type. It might take a few minutes after you've\n                created your flow log for it to be visible in the console.\nTo view flow log records published to CloudWatch Logs\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nLogs\n, and select the\n                        log group that contains your flow log. A list of log streams for each transit gateway\n                        is displayed.\nSelect the log stream that contains the ID of the transit gateway that you want to\n                        view the flow log records for. For more information, see\nTransit Gateway Flow Log records\n.\nTo view flow log records published to Amazon S3\nOpen the Amazon S3 console at\nhttps://console.aws.amazon.com/s3/\n.\nFor\nBucket name\n, select the bucket to which the flow\n                        logs are published.\nFor\nName\n, select the check box next to the log file.\n                        On the object overview panel, choose\nDownload\n.\nSearch flow log records\nYou can search your flow log records that are published to CloudWatch Logs by using the\n                CloudWatch Logs console. You can use\nmetric filters\nto filter flow log records. Flow log records are space\n                delimited.\nTo search flow log records using the CloudWatch Logs console\nOpen the CloudWatch console at\nhttps://console.aws.amazon.com/cloudwatch/\n.\nIn the navigation pane, choose\nLogs\n, and then choose\nLog groups\n.\nSelect the log group that contains your flow log. A list of log streams\n                        for each transit gateway is displayed.\nSelect the individual log stream if you know the transit gateway that you are\n                        searching for. Alternatively, choose\nSearch Log Group\nto search the entire log group. This might take some time if there are many\n                        transit gateways in your log group, or depending on the time range that you\n                        select.\nFor\nFilter events\n, enter the following string. This\n                        assumes that the flow log record uses the\ndefault format\n.\n[version, resource_type, account_id,tgw_id, tgw_attachment_id, tgw_src_vpc_account_id, tgw_dst_vpc_account_id, tgw_src_vpc_id, tgw_dst_vpc_id, tgw_src_subnet_id, tgw_dst_subnet_id, tgw_src_eni, tgw_dst_eni, tgw_src_az_id, tgw_dst_az_id, tgw_pair_attachment_id, srcaddr, dstaddr, srcport, dstport, protocol, packets, bytes,start,end, log_status, type,packets_lost_no_route, packets_lost_blackhole, packets_lost_mtu_exceeded, packets_lost_ttl_expired, tcp_flags,region, flow_direction, pkt_src_aws_service, pkt_dst_aws_service]\nModify the filter as needed by specifying values for the fields. The\n                        following examples filter by specific source IP addresses.\n[version, resource_type, account_id,tgw_id, tgw_attachment_id, tgw_src_vpc_account_id, tgw_dst_vpc_account_id, tgw_src_vpc_id, tgw_dst_vpc_id, tgw_src_subnet_id, tgw_dst_subnet_id, tgw_src_eni, tgw_dst_eni, tgw_src_az_id, tgw_dst_az_id, tgw_pair_attachment_id, srcaddr= 10.0.0.1, dstaddr, srcport, dstport, protocol, packets, bytes,start,end, log_status, type,packets_lost_no_route, packets_lost_blackhole, packets_lost_mtu_exceeded, packets_lost_ttl_expired, tcp_flags,region, flow_direction, pkt_src_aws_service, pkt_dst_aws_service]\n[version, resource_type, account_id,tgw_id, tgw_attachment_id, tgw_src_vpc_account_id, tgw_dst_vpc_account_id, tgw_src_vpc_id, tgw_dst_vpc_id, tgw_src_subnet_id, tgw_dst_subnet_id, tgw_src_eni, tgw_dst_eni, tgw_src_az_id, tgw_dst_az_id, tgw_pair_attachment_id, srcaddr= 10.0.2.*, dstaddr, srcport, dstport, protocol, packets, bytes,start,end, log_status, type,packets_lost_no_route, packets_lost_blackhole, packets_lost_mtu_exceeded, packets_lost_ttl_expired, tcp_flags,region, flow_direction, pkt_src_aws_service, pkt_dst_aws_service]\nThe following example filters by transit gateway ID tgw-123abc456bca, destination\n                        port, and number of bytes.\n[version, resource_type, account_id,tgw_id=tgw-123abc456bca, tgw_attachment_id, tgw_src_vpc_account_id, tgw_dst_vpc_account_id, tgw_src_vpc_id, tgw_dst_vpc_id, tgw_src_subnet_id, tgw_dst_subnet_id, tgw_src_eni, tgw_dst_eni, tgw_src_az_id, tgw_dst_az_id, tgw_pair_attachment_id, srcaddr, dstaddr, srcport, dstport = 80 || dstport = 8080, protocol, packets, bytes >= 500,start,end, log_status, type,packets_lost_no_route, packets_lost_blackhole, packets_lost_mtu_exceeded, packets_lost_ttl_expired, tcp_flags,region, flow_direction, pkt_src_aws_service, pkt_dst_aws_service]\nDelete a flow log\nYou can delete a transit gateway flow log using the Amazon VPC console.\nThese\n                procedures disable the flow log service for a resource. Deleting a flow log does not\n                delete the existing log streams from CloudWatch Logs or log files from Amazon S3. Existing flow log\n                data must be deleted using the respective service's console. In addition, deleting a\n                flow log that publishes to Amazon S3 does not remove the bucket policies and log file\n                access control lists (ACLs).\nTo delete a transit gateway flow log\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nTransit\n                        gateways\n.\nChoose a\nTransit gateway ID\n.\nIn the Flow logs section, choose the flow logs that you want to\n                        delete.\nChoose\nActions\n, and then choose\nDelete flow\n                            logs\n.\nConfirm that you want to delete the flow by choosing\nDelete\n.\nAPI and CLI overview and limitations\nYou can perform the tasks described on this page using the command line or API.\nThe following limitations apply when using the\nCreateFlowLogs\nAPI\n                or the\ncreate-flow-logs\nCLI:\n--resource-ids\nhas a maximum constraint of 25\nTransitGateway\nor\nTransitGatewayAttachment\nresource types.\n--traffic-type\nis not a required field by default. An error\n                        is returned if you provide this for transit gateway resource types. This limit applies\n                        only to transit gateway resource types.\n--max-aggregation-interval\nhas a default value of\n60\n, and is the only accepted value for transit gateway resource\n                        types. An error is returned if you try to pass any other value. This limit\n                        applies only to transit gateway resource types.\n--resource-type\nsupports two new resource types,\nTransitGateway\nand\nTransitGatewayAttachment\n.\n--log-format\nincludes all log fields for transit gateway resource types\n                        if you do not set which fields you want to include. This applies only to\n                        transit gateway resource types.\nCreate a flow log\ncreate-flow-logs\n(AWS CLI)\nNew-EC2FlowLog\n(AWS Tools for Windows PowerShell)\nCreateFlowLogs\n(Amazon EC2 Query API)\nDescribe your flow logs\ndescribe-flow-logs\n(AWS CLI)\nGet-EC2FlowLog\n(AWS Tools for Windows PowerShell)\nDescribeFlowLogs\n(Amazon EC2 Query API)\nView your flow log records (log events)\nget-log-events\n(AWS CLI)\nGet-CWLLogEvent\n(AWS Tools for Windows PowerShell)\nGetLogEvents\n(CloudWatch\n                        API)\nDelete a flow log\ndelete-flow-logs\n(AWS CLI)\nRemove-EC2FlowLog\n(AWS Tools for Windows PowerShell)\nDeleteFlowLogs\n(Amazon EC2 Query API)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPublish to Kinesis Data Firehose\nMonitor your transit gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-monitoring.html": "Monitor your transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nMonitor your transit gateways\nYou can use the following features to monitor your transit gateways, analyze traffic patterns, \n        and troubleshoot issues with your transit gateways.\nCloudWatch metrics\nYou can use Amazon CloudWatch to retrieve statistics about data points for your transit gateways\n                    as an ordered set of time series data, known as\nmetrics\n.\n                    You can use these metrics to verify that your system is performing as expected.\n                    For more information, see\nCloudWatch metrics for your transit\n                gateways\n.\nTransit Gateway Flow Logs\nYou can use Transit Gateway Flow Logs to capture detailed information about\n                    the network traffic on your transit gateways. For more information, see\nTransit Gateway Flow Logs\n.\nVPC Flow Logs\nYou can use VPC Flow Logs to capture detailed information about the traffic going to\n                    and from the VPCs that are attached to your transit gateways. For more information, see\nVPC Flow Logs\nin the\nAmazon VPC User Guide\n.\nCloudTrail logs\nYou can use AWS CloudTrail to capture detailed information about the calls made to the transit gateway  \n                    API and store them as log files in Amazon S3. You can use these CloudTrail logs to determine which\n                    calls were made, the source IP address where the call came from, who made the call, when the \n                    call was made, and so on. For more information, see\nLogging API calls for your transit\n                gateway using AWS CloudTrail\n.\nCloudWatch Events using Network Manager\nYou can use AWS Network Manager to forward events to CloudWatch, and then route those\n                    events to target functions or streams. Network Manager generates events for topology\n                    changes, routing updates, and status updates, all of which can be used to alert\n                    you to changes in your transit gateways. For more information, see\nMonitoring your\n                        global network with CloudWatch Events\nin the\nAWS Global\n                        Networks for Transit Gateways User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWork with flow logs\nCloudWatch metrics\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-cloudwatch-metrics.html": "CloudWatch metrics for your transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nTransit gateway metrics\nMetric dimensions for transit gateways\nCloudWatch metrics for your transit\n                gateways\nAmazon VPC publishes data points to Amazon CloudWatch for your transit gateways and transit gateway attachments. CloudWatch\n            enables you to retrieve statistics about those data points as an ordered set of time\n            series data, known as\nmetrics\n. Think of a metric as a variable to\n            monitor, and the data points as the values of that variable over time. Each data point\n            has an associated timestamp and an optional unit of measurement.\nYou can use metrics to verify that your system is performing as expected. For example, \n        \tyou can create a CloudWatch alarm to monitor a specified metric and initiate an action (such as \n        \tsending a notification to an email address) if the metric goes outside what you consider \n        \tan acceptable range.\nAmazon VPC measures and sends its metrics to CloudWatch in 60-second intervals.\nFor more information, see the\nAmazon CloudWatch User Guide\n.\nContents\nTransit gateway metrics\nMetric dimensions for transit gateways\nTransit gateway metrics\nThe\nAWS/TransitGateway\nnamespace includes the following metrics.\nMetric\nDescription\nBytesDropCountBlackhole\nThe number of bytes dropped because they matched a\nblackhole\nroute.\nBytesDropCountNoRoute\nThe number of bytes dropped because they did not match a route.\nBytesIn\nThe number of bytes received by the transit gateway.\nBytesOut\nThe number of bytes sent from the transit gateway.\nPacketsIn\nThe number of packets received by the transit gateway.\nPacketsOut\nThe number of packets sent by the transit gateway.\nPacketDropCountBlackhole\nThe number of packets dropped because they matched a\nblackhole\nroute.\nPacketDropCountNoRoute\nThe number of packets dropped because they did not match a route.\nAttachment-level metrics\nThe following metrics are available for transit gateway attachments. All attachment metrics are published to the transit gateway owner's account. Individual\n                    attachment metrics are also published to the attachment owner's account. The\n                    attachment owner can view only the metrics for their own attachment. For more\n                    information on the supported attachment types, see\nResource attachments\n.\nMetric\nDescription\nBytesDropCountBlackhole\nThe number of bytes dropped because they matched a\nblackhole\nroute on the transit gateway\n                                    attachment.\nBytesDropCountNoRoute\nThe number of bytes dropped because they did not match a\n                                    route on the transit gateway attachment.\nBytesIn\nThe number of bytes received by the transit gateway from the\n                                        attachment.\nBytesOut\nThe number of bytes sent from the transit gateway to the\n                                        attachment.\nPacketsIn\nThe number of packets received by the transit gateway from the\n                                        attachment.\nPacketsOut\nThe number of packets sent by the transit gateway to the\n                                        attachment.\nPacketDropCountBlackhole\nThe number of packets dropped because they matched a\nblackhole\nroute on the transit gateway\n                                        attachment.\nPacketDropCountNoRoute\nThe number of packets dropped because they did not match a\n                                        route on the transit gateway attachment.\nMetric dimensions for transit gateways\nTo filter the metrics for your transit gateways, use the following dimensions.\nDimension\nDescription\nTransitGateway\nFilters the metric data by transit gateway.\nTransitGatewayAttachment\nFilters the metric data by transit gateway attachment.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMonitor your transit gateways\nCloudTrail logs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-cloudtrail-logs.html": "Logging API calls for your transit gateway using AWS CloudTrail - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nTransit gateway information in CloudTrail\nUnderstanding transit gateway log file entries\nLogging API calls for your transit\n                gateway using AWS CloudTrail\nAWS CloudTrail is a service that provides a record of actions taken by a user, role, or an\n            AWS service. CloudTrail captures all transit gateway API calls as events. The calls captured include\n            calls from the AWS Management Console and code calls to the transit gateway API operations. If you create a\n            trail, you can enable continuous delivery of CloudTrail events to an Amazon S3 bucket, including\n            events for transit gateways. If you don't configure a trail, you can still view the most recent\n            events in the CloudTrail console in\nEvent history\n. Using the information\n            collected by CloudTrail, you can determine what request was made to the transit gateway API, the IP\n            address from which the request was made, who made the request, when it was made, and\n            additional details.\nFor more information about transit gateway APIs, see\nAWS Transit Gateway actions\nin\n            the\nAmazon EC2 API Reference\n.\nFor more information about CloudTrail, see the\nAWS CloudTrail User Guide\n.\nTransit gateway information in CloudTrail\nCloudTrail is enabled on your AWS account when you create the account. When activity occurs through\n\t            the transit gateway API, that activity is recorded in a CloudTrail event along with other AWS service events\n\t            in\nEvent history\n. You can view, search, and download recent events in your \n\t            AWS account. For more information, see\nViewing Events with CloudTrail Event History\n.\nFor an ongoing record of events in your AWS account, including events for the transit gateway\n                API, create a trail. A\ntrail\nenables CloudTrail to deliver log files\n                to an Amazon S3 bucket. By default, when you create a trail in the console, the trail\n                applies to all Regions. The trail logs events from all Regions in the AWS\n                partition and delivers the log files to the Amazon S3 bucket that you specify.\n                Additionally, you can configure other AWS services to further analyze and act upon\n                the event data collected in CloudTrail logs. For more information, see the\n                following:\nOverview for Creating a Trail\nCloudTrail Supported Services and Integrations\nConfiguring Amazon SNS Notifications for CloudTrail\nReceiving CloudTrail Log Files from\n\t                    Multiple Regions\nand\nReceiving \n\t                    CloudTrail Log Files from Multiple Accounts\nAll calls to transit gateway actions are logged by CloudTrail. For example, calls to the\nCreateTransitGateway\naction generates entries in the CloudTrail log files.\nEvery event or log entry contains information about who generated the request. The\n\t            identity information helps you determine the following:\nWhether the request was made with root or AWS Identity and Access Management user credentials.\nWhether the request was made with temporary security credentials for a role or\n\t                    federated user.\nWhether the request was made by another AWS service.\nFor more information, see the\nCloudTrail \n\t            userIdentity Element\n.\nUnderstanding transit gateway log file entries\nA trail is a configuration that enables delivery of events as log files to an Amazon S3 bucket\n\t            that you specify. CloudTrail log files contain one or more log entries. An event represents a single\n\t            request from any source and includes information about the requested action, the date and time\n\t            of the action, request parameters, and so on. CloudTrail log files aren't an ordered stack trace of\n\t            the public API calls, so they don't appear in any specific order.\nThe log files include events for all API calls for your AWS account, not just\n                transit gateway API calls. You can locate calls to the transit gateway API by checking for\neventSource\nelements with the value\nec2.amazonaws.com\n.\n                To view a record for a specific action, such as\nCreateTransitGateway\n,\n                check for\neventName\nelements with the action name.\nThe following are example CloudTrail log records for the transit gateway API for a user who created a\n                transit gateway using the console. You can identify the console using the\nuserAgent\nelement. You can identify the requested API call using\n                the\neventName\nelements. Information about the user (\nAlice\n)\n                can be found in the\nuserIdentity\nelement.\nExample: CreateTransitGateway\n{\n\"eventVersion\": \"1.05\",\n    \"userIdentity\":\n{\n\"type\": \"IAMUser\",\n        \"principalId\": \"123456789012\",\n        \"arn\": \"arn:aws:iam::123456789012:user/Alice\",\n        \"accountId\": \"123456789012\",\n        \"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n        \"userName\": \"Alice\"\n    },\n    \"eventTime\": \"2018-11-15T05:25:50Z\",\n    \"eventSource\": \"ec2.amazonaws.com\",\n    \"eventName\": \"CreateTransitGateway\",\n    \"awsRegion\": \"us-west-2\",\n    \"sourceIPAddress\": \"198.51.100.1\",\n    \"userAgent\": \"console.ec2.amazonaws.com\",\n    \"requestParameters\":\n{\n\"CreateTransitGatewayRequest\":\n{\n\"Options\":\n{\n\"DefaultRouteTablePropagation\": \"enable\",\n                \"AutoAcceptSharedAttachments\": \"disable\",\n                \"DefaultRouteTableAssociation\": \"enable\",\n                \"VpnEcmpSupport\": \"enable\",\n                \"DnsSupport\": \"enable\"\n            },\n            \"TagSpecification\":\n{\n\"ResourceType\": \"transit-gateway\",\n                \"tag\": 1,\n                \"Tag\":\n{\n\"Value\": \"my-tgw\",\n                    \"tag\": 1,\n                    \"Key\": \"Name\"\n                }\n            }\n        }\n    },\n    \"responseElements\":\n{\n\"CreateTransitGatewayResponse\":\n{\n\"xmlns\": \"http://ec2.amazonaws.com/doc/2016-11-15/\",\n            \"requestId\": \"a07c1edf-c201-4e44-bffb-3ce90EXAMPLE\",\n            \"transitGateway\":\n{\n\"tagSet\":\n{\n\"item\":\n{\n\"value\": \"my-tgw\",\n                        \"key\": \"Name\"\n                    }\n                },\n                \"creationTime\": \"2018-11-15T05:25:50.000Z\",\n                \"transitGatewayId\": \"tgw-0a13743bd6c1f5fcb\",\n                \"options\":\n{\n\"propagationDefaultRouteTableId\": \"tgw-rtb-0123cd602be10b00a\",\n                    \"amazonSideAsn\": 64512,\n                    \"defaultRouteTablePropagation\": \"enable\",\n                    \"vpnEcmpSupport\": \"enable\",\n                    \"autoAcceptSharedAttachments\": \"disable\",\n                    \"defaultRouteTableAssociation\": \"enable\",\n                    \"dnsSupport\": \"enable\",\n                    \"associationDefaultRouteTableId\": \"tgw-rtb-0123cd602be10b00a\"\n                },\n                \"state\": \"pending\",\n                \"ownerId\": 123456789012\n            }\n        }\n    },\n    \"requestID\": \"a07c1edf-c201-4e44-bffb-3ce90EXAMPLE\",\n    \"eventID\": \"e8fa575f-4964-4ab9-8ca4-6b5b4EXAMPLE\",\n    \"eventType\": \"AwsApiCall\",\n    \"recipientAccountId\": \"123456789012\"\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCloudWatch metrics\nIdentity and access management\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-authentication-access-control.html": "Identity and access management for your transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nExample policies to manage transit gateways\nExample policies to manage AWS Network Manager\nIdentity and access management for your transit gateways\nAWS uses security credentials to identify you and to grant you access to your AWS\n        resources. You can use features of AWS Identity and Access Management (IAM) to allow other users, services, and\n        applications to use your AWS resources fully or in a limited way, without sharing your\n        security credentials.\nBy default, IAM users don't have permission to create, view, or modify AWS resources.\n        To allow a user to access resources such as a transit gateway, and to perform tasks, you must create\n        an IAM policy that grants the user permission to use the specific resources and API\n        actions they'll need, then attach the policy to the group to which that user belongs. When\n        you attach a policy to a user or group of users, it allows or denies the users permission to\n        perform the specified tasks on the specified resources.\nTo work with a transit gateway, one of the following AWS managed policies might meet your needs:\nAmazonEC2FullAccess\nAmazonEC2ReadOnlyAccess\nPowerUserAccess\nReadOnlyAccess\nExample policies to manage transit gateways\nThe following are example IAM policies for working with transit gateways.\nCreate a transit gateway with required tags\nThe following example enables users to create transit gateway. The\naws:RequestTag\ncondition key requires users to tag the transit\n                gateway with the tag\nstack=prod\n. The\naws:TagKeys\ncondition\n                key uses the\nForAllValues\nmodifier to indicate that only the key\nstack\nis allowed in the request (no other tags can be specified).\n                If users don't pass this specific tag when they create the transit gateway, or if\n                they don't specify tags at all, the request fails.\nThe second statement uses the\nec2:CreateAction\ncondition key to allow\n            users to create tags only in the context of\nCreateTransitGateway\n.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Sid\": \"AllowCreateTaggedTGWs\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateTransitGateway\",\n            \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:transit-gateway/*\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"aws:RequestTag/stack\": \"prod\"\n                },\n                \"ForAllValues:StringEquals\":\n{\n\"aws:TagKeys\": [\n                        \"stack\"\n                    ]\n                }\n            }\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:transit-gateway/*\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:CreateAction\": \"CreateTransitGateway\"\n                }\n            }\n        }\n    ]\n}\nWorking with transit gateway route tables\nThe following example enables users to create and delete transit gateway route\n                tables for a specific transit gateway only (\ntgw-11223344556677889\n).\n                Users can also create and replace routes in any transit gateway route table, but\n                only for attachments that have the tag\nnetwork=new-york-office\n.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DeleteTransitGatewayRouteTable\",\n                \"ec2:CreateTransitGatewayRouteTable\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:\nregion\n:\naccount-id\n:transit-gateway/tgw-\n11223344556677889\n\",\n                \"arn:aws:ec2:*:*:transit-gateway-route-table/*\"\n            ]\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTransitGatewayRoute\",\n                \"ec2:ReplaceTransitGatewayRoute\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:transit-gateway-attachment/*\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"ec2:ResourceTag/network\": \"new-york-office\"\n                }\n            }\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTransitGatewayRoute\",\n                \"ec2:ReplaceTransitGatewayRoute\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:transit-gateway-route-table/*\"\n        }\n    ]\n}\nExample policies to manage AWS Network Manager\nFor example policies, see\nExample policies to manage Network Manager\nin the\nAWS Global Networks for Transit Gateways User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCloudTrail logs\nService-linked roles\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/service-linked-roles.html": "Use service-linked roles for your transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nTransit gateway\nUse service-linked roles for your transit gateways\nAmazon VPC uses service-linked roles for the permissions that it requires to call other AWS\n            services on your behalf. For more information, see\nUsing service-linked\n                roles\nin the\nIAM User Guide\n.\nTransit gateway service-linked role\nAmazon VPC uses service-linked roles for the permissions that it requires to call other AWS\n                services on your behalf when you work with a transit gateway.\nPermissions granted by the service-linked\n                    role\nAmazon VPC uses the service-linked role named\nAWSServiceRoleForVPCTransitGateway\nto call the following actions on your behalf when you work with a transit gateway:\nec2:CreateNetworkInterface\nec2:DescribeNetworkInterfaces\nec2:ModifyNetworkInterfaceAttribute\nec2:DeleteNetworkInterface\nec2:CreateNetworkInterfacePermission\nec2:AssignIpv6Addresses\nec2:UnAssignIpv6Addresses\nThe\nAWSServiceRoleForVPCTransitGateway\nrole trusts the \n                     following services to assume the role:\ntransitgateway.amazonaws.com\nAWSServiceRoleForVPCTransitGateway\nuses the managed policy\nAWSVPCTransitGatewayServiceRolePolicy\n.\nYou must configure permissions to allow an IAM entity (such as a user, group, or role)\n                    to create, edit, or delete a service-linked role. For more information, see\nService-linked role permissions\nin the\nIAM User Guide\n.\nCreate the service-linked role\nYou don't need to manually create the\nAWSServiceRoleForVPCTransitGateway\nrole. \n                    Amazon VPC creates this role for you when you attach a VPC in your account to a transit gateway.\nFor Amazon VPC to create a service-linked role on your behalf, you must have the\n                    required permissions. For more information, see\nService-linked role permissions\nin the\nIAM User Guide\n.\nEdit the service-linked role\nYou can edit the description of\nAWSServiceRoleForVPCTransitGateway\nusing IAM. For more\n                    information, see\nEditing a service-linked role\nin the\nIAM User Guide\n.\nDelete the service-linked role\nIf you no longer need to use transit gateways, we recommend that you delete\nAWSServiceRoleForVPCTransitGateway\n.\nYou can delete this service-linked role only after you delete all transit gateway VPC attachments in \n                    your AWS account. This ensures that you can't inadvertently remove permission to access your \n                    VPC attachments.\nYou can use the IAM console, the IAM CLI, or the IAM API to delete\n                    service-linked roles. For more information, see\nDeleting a service-linked role\nin the\nIAM User Guide\n.\nAfter you delete\nAWSServiceRoleForVPCTransitGateway\n, Amazon VPC creates \n                    the role again if you attach a VPC in your account to a transit gateway.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIdentity and access management\nAWS managed policies\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/security-iam-awsmanpol.html": "AWS managed policies for transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nAWSVPCTransitGatewayServiceRolePolicy\nPolicy updates\nAWS managed policies for transit gateways\nAn AWS managed policy is a standalone policy that is created and administered by AWS. AWS managed policies are designed \n  to provide permissions for many common use cases so that you can start assigning permissions to users, groups, and roles.\nKeep in mind that AWS managed policies might not grant least-privilege permissions for your specific use cases because \n  they're available for all AWS customers to use. We recommend that you reduce permissions further by defining\ncustomer managed policies\nthat are specific to your use cases.\nYou cannot change the permissions defined in AWS managed policies. If AWS updates the permissions defined in an AWS \n  managed policy, the update affects all principal identities (users, groups, and roles) that the policy is attached to. AWS is \n  most likely to update an AWS managed policy when a new AWS service is launched or new API operations become available for\n  existing services.\nFor more information, see\nAWS managed policies\nin the\nIAM User Guide\n.\nTo work with a transit gateway, one of the following AWS managed policies might meet your needs:\nAmazonEC2FullAccess\nAmazonEC2ReadOnlyAccess\nPowerUserAccess\nReadOnlyAccess\nAWS managed policy: AWSVPCTransitGatewayServiceRolePolicy\nThis policy is attached to the role\nAWSServiceRoleForVPCTransitGateway\n.\n          This allows Amazon VPC to create and manage resources for your transit gateway attachments.\nTo view the permissions for this policy, see\nAWSVPCTransitGatewayServiceRolePolicy\nin the\nAWS Managed Policy Reference\n.\nTransit gateway updates to AWS managed policies\nView details about updates to AWS managed policies for transit gateways since Amazon VPC\n         began tracking these changes in March 2021.\nChange\nDescription\nDate\nAmazon VPC started tracking changes\nAmazon VPC started tracking changes to its AWS managed policies.\nMarch 1, 2021\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nService-linked roles\nNetwork ACLs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-nacls.html": "How Network ACLs work with transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nSame subnet for EC2 instances and transit gateway association\nDifferent subnets for EC2 instances and transit gateway association\nBest Practices\nHow Network ACLs work with transit gateways\nA network access control list (NACL) is an optional layer of security.\nNetwork\n\t\taccess control list (NACL) rules are applied differently, depending on the scenario:\nSame subnet for EC2 instances and transit gateway association\nDifferent subnets for EC2 instances and transit gateway association\nSame subnet for EC2 instances and transit gateway association\nConsider a configuration where you have EC2 instances and a transit gateway association \n\t\t\tin the same subnet. The same network ACL is used for both the traffic from the EC2 \n\t\t\tinstances to the transit gateway and traffic from the transit gateway to the instances.\nNACL rules are applied as follows for traffic from instances to the transit gateway:\nOutbound rules use the destination IP address for evaluation.\nInbound rules use the source IP address for evaluation.\nNACL rules are applied as follows for traffic from the transit gateway to the instances:\nOutbound rules are not evaluated.\nInbound rules are not evaluated.\nDifferent subnets for EC2 instances and transit gateway association\nConsider a configuration where you have EC2 instances in one subnet and a transit gateway\n\t\t\tassociation in a different subnet, and each subnet is associated with a different \n\t\t\tnetwork ACL.\nNetwork ACL rules are applied as follows for the EC2 instance subnet:\nOutbound rules use the destination IP address to evaluate traffic from the instances\n\t\t\t\t\tto the transit gateway.\nInbound rules use the source IP address to evaluate traffic from the transit gateway to the instances.\nNACL rules are applied as follows for the transit gateway subnet:\nOutbound rules use the destination IP address to evaluate traffic from the transit gateway to the instances.\nOutbound rules are not used to evaluate traffic from the instances\n\t\t\t\t\tto the transit gateway.\nInbound rules use the source IP address to evaluate traffic from the instances\n\t\t\t\t\tto the transit gateway.\nInbound rules are not used to evaluate traffic from the transit gateway to the instances.\nBest Practices\nUse a separate subnet for each transit gateway VPC attachment. For each subnet, use a\n\t\t\tsmall CIDR, for example /28, so that you have more addresses for EC2 resources. When you\n\t\t\tuse a separate subnet, you can configure the following:\nKeep the inbound and outbound NACL that is associated with the transit gateway subnets open.\nDepending on your traffic flow, you can apply NACLs to your workload\n\t\t\t\t\tsubnets.\nFor more information about how VPC attachments work, see\nResource attachments\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS managed policies\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-quotas.html": "Quotas for your transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nGeneral\nRouting\nTransit gateway attachments\nBandwidth\nAWS Direct Connect gateways\nMTU\nMulticast\nNetwork Manager\nAdditional quota resources\nQuotas for your transit gateways\nYour AWS account has the following quotas (previously referred to as\nlimits\n) related to transit gateways. Unless otherwise noted, each quota\n        is Region-specific.\nThe Service Quotas console provides information about the quotas for your account. You can use\n        the Service Quotas console to view default quotas and\nrequest quota increases\nfor\n        adjustable quotas. For more information, see\nRequesting a quota\n            increase\nin the\nService Quotas User Guide\n.\nIf an adjustable quota is not yet available in Service Quotas, you can open a support case.\nGeneral\nName\nDefault\nAdjustable\nTransit gateways per account\n5\nYes\nCIDR blocks per transit gateway\n5\nNo\nThe CIDR blocks are used in the\nTransit Gateway Connect attachments and Transit Gateway Connect peers\nfeature.\nRouting\nName\nDefault\nAdjustable\nTransit gateway route tables per transit gateway\n20\nYes\nTotal combined routes (dynamic and static) across all route tables\n                            for a single transit gateway\n10,000\nYes\nDynamic routes advertised from a virtual router appliance to a Connect peer\n1,000\nYes\nRoutes advertised from a Connect peer on a transit gateway to a virtual router\n                            appliance\n5,000\nNo\nStatic routes for a prefix to a single attachment\n1\nNo\nAdvertised routes come from the route table that's associated with the Connect attachment.\nTransit gateway attachments\nA transit gateway cannot have more than one VPC attachment to the same VPC.\nName\nDefault\nAdjustable\nAttachments per transit gateway\n5,000\nNo\nTransit gateways per VPC\n5\nNo\nPeering attachments per transit gateway\n50\nYes\nPending peering attachments per transit gateway\n10\nYes\nPeering attachments within one transit gateway or between two transit gateways\n1\nNo\nConnect peers (GRE tunnels) per Connect attachment\n4\nNo\nBandwidth\nThere are many factors that can affect realized bandwidth through a Site-to-Site VPN connection,\n            including but not limited to: packet size, traffic mix (TCP/UDP), shaping or throttling\n            policies on intermediate networks, internet weather, and specific application\n            requirements. For VPC attachments, AWS Direct Connect gateways, or peered transit gateway attachments, we\n            will attempt to provide additional bandwidth beyond the default value.\nName\nDefault\nAdjustable\nBandwidth per VPC attachment per Availability Zone\nUp to 100 Gbps\nContact your Solutions Architect (SA) or Technical Account Manager\n                            (TAM) for further assistance.\nPackets per second per transit gateway VPC attachment per Availability\n                            Zone\nUp to 7,500,000\nContact your Solutions Architect (SA) or Technical Account Manager\n                            (TAM) for further assistance.\nBandwidth for AWS Direct Connect gateway or peered transit gateway connection\n                            per available Availability Zone in the Region\nUp to 100 Gbps\nContact your Solutions Architect (SA) or Technical Account Manager\n                            (TAM) for further assistance.\nPackets per second per transit gateway attachment (AWS Direct Connect and\n                            peering attachments) per available Availability Zone in the Region\nUp to 7,500,000\nContact your Solutions Architect (SA) or Technical Account Manager\n                            (TAM) for further assistance.\nMaximum bandwidth per VPN tunnel\nUp to 1.25 Gbps\nNo\nMaximum packets per second per VPN tunnel\nUp to 140,000\nNo\nMaximum bandwidth per Connect peer (GRE tunnel) per Connect attachment\nUp to 5 Gbps\nNo\nMaximum packets per second per Connect peer\nUp to 300,000\nNo\nYou can use equal-cost multipath routing (ECMP) to get\n            higher VPN bandwidth by aggregating multiple VPN tunnels. To use ECMP, the VPN\n            connection must be configured for dynamic routing. ECMP is not supported on VPN\n            connections that use static routing.\nYou can create up to 4 Connect peers per Connect\n            attachment (up to 20 Gbps in total bandwidth per Connect attachment), as long\n            as the underlying transport (VPC or AWS Direct Connect) attachment supports the required\n            bandwidth. You can use ECMP to get higher bandwidth by scaling horizontally\n            across multiple Connect peers of the same Connect attachment or across\n            multiple Connect attachments on the same transit gateway. The transit gateway cannot use ECMP\n            between the BGP peerings of the same Connect peer.\nAWS Direct Connect gateways\nName\nDefault\nAdjustable\nAWS Direct Connect gateways per transit gateway\n20\nNo\nTransit gateways per AWS Direct Connect gateway\n6\nNo\nMTU\nThe maximum transmission unit (MTU) of a network connection is the size, in\n                    bytes, of the largest permissible packet that can be passed over the connection.\n                    The larger the MTU of a connection, the more data that can be passed in a single\n                    packet. A transit gateway supports an MTU of 8500 bytes for traffic between VPCs,\n                    AWS Direct Connect, Transit Gateway Connect, and peering attachments. Traffic over VPN\n                    connections can have an MTU of 1500 bytes.\nWhen migrating from VPC peering to use a transit gateway, an MTU size mismatch between\n                    VPC peering and the transit gateway might result in some asymmetric traffic packets\n                    dropping. Update both VPCs at the same time to avoid jumbo packets dropping due\n                    to a size mismatch.\nPackets with a size larger than 8500 bytes that arrive at the transit gateway are\n                    dropped.\nThe transit gateway does not generate the FRAG_NEEDED for ICMPv4 packet, or the Packet\n                    Too Big (PTB) for ICMPv6 packet. Therefore, the  Path MTU Discovery (PMTUD) is\n                    not supported.\nThe transit gateway enforces Maximum Segment Size (MSS) clamping for all packets. For\n                    more information, see\nRFC879\n.\nFor details about Site-to-Site VPN quotas for MTU, see\nMaximum transmission unit (MTU)\nin the\nAWS Site-to-Site VPN User Guide\n.\nMulticast\nName\nDefault\nAdjustable\nMulticast domains per transit gateway\n20\nYes\nMulticast network interfaces per transit gateway\n10,000\nYes\nMulticast domain associations per VPC\n20\nYes\nSources per transit gateway multicast group\n1\nYes\nStatic and IGMPv2 multicast group members and sources per\n                                transit gateway\n10,000\nNo\nStatic and IGMPv2 multicast group members per transit gateway multicast\n                            group\n100\nNo\nMaximum multicast throughput per flow\n1 Gbps\nNo\nMaximum aggregate multicast throughput per Availability Zone\n20 Gbps\nNo\nAWS Network Manager\nName\nDefault\nAdjustable\nGlobal networks per AWS account\n5\nYes\nDevices per global network\n200\nYes\nLinks per global network\n200\nYes\nSites per global network\n200\nYes\nConnections per global network\n500\nNo\nAdditional quota resources\nFor more information, see the following:\nSite-to-Site VPN quotas\nin the\nAWS Site-to-Site VPN User Guide\nAmazon VPC quotas\nin the\nAmazon VPC User Guide\nAWS Direct Connect \n                    quotas\nin the\nAWS Direct Connect User Guide\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nNetwork ACLs\nDocument history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/tgw/doc-history.html": "Document history for transit gateways - Amazon VPC\nAWS\nDocumentation\nAmazon VPC\nAWS Transit Gateway\nDocument history for transit gateways\nThe following table describes the releases for transit gateways.\nChange\nDescription\nDate\nAWS Transit Gateway Quotas\nBandwidth limits were added.\nAugust 14, 2023\nAWS Transit Gateway Flow Logs\nTransit Gateways now support Transit Gateway Flow Logs, allowing you to monitor and log network traffic between transit gateways.\nJuly 14, 2022\nTransit gateway policy tables\nUse policy tables to set up dynamic routing for transit gateways for automatically exchanging routing and reachability information with peered transit gateway types.\nJuly 13, 2022\nNetwork Manager User Guide\nNetwork Manager was created as a standalone guide, and is no longer included as part of the\nAWS Transit Gateway User Guide\n.\nDecember 2, 2021\nPeering attachments\nYou can create a peering connection with a transit gateway in the same Region.\nDecember 1, 2021\nTransit Gateway Connect\nYou can establish a connection between a transit gateway and third-party\n                    virtual appliances running in a VPC.\nDecember 10, 2020\nAppliance mode\nYou can enable appliance mode on a VPC attachment to ensure that bidirectional\n                    traffic flows through the same Availability Zone for the attachment.\nOctober 29, 2020\nPrefix list references\nYou can reference a prefix list in your transit gateway route table.\nAugust 24, 2020\nModify transit gateway\nYou can modify the configuration options for your transit gateway.\nAugust 24, 2020\nCloudWatch metrics for transit gateway attachments\nYou can view CloudWatch metrics for individual transit gateway attachments.\nJuly 6, 2020\nNetwork Manager Route Analyzer\nYou can analyze the routes in your transit gateway route tables in your global\n                    network.\nMay 4, 2020\nPeering attachments\nYou can create a peering connection with a transit gateway in another\n                    Region.\nDecember 3, 2019\nMulticast support\nTransit Gateway supports routing multicast traffic between subnets of attached\n                    VPCs and serves as a multicast router for instances sending traffic destined for\n                    multiple receiving instances.\nDecember 3, 2019\nAWS Network Manager\nYou can visualize and monitor your global networks that are built around\n                    transit gateways.\nDecember 3, 2019\nAWS Direct Connect support\nYou can use an AWS Direct Connect gateway to connect your AWS Direct Connect connection over a\n                    transit virtual interface to the VPCs or VPNs attached to your transit\n                    gateway.\nMarch 27, 2019\nInitial release\nThis release introduces transit gateways.\nNovember 26, 2018\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/what-it-is-ipam.html": "What is IPAM? - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nWhat is IPAM?\nAmazon VPC IP Address Manager (IPAM) is a VPC feature that makes it easier for you to plan, track, and monitor IP addresses for your AWS workloads. \n        You can use IPAM automated workflows to more efficiently manage IP addresses.\nYou can use IPAM to do the following:\nOrganize IP address space into routing and security domains\nMonitor IP address space that's in use and monitor resources that are using space against\n                business rules\nView the history of IP address assignments in your organization\nAutomatically allocate CIDRs to VPCs using specific business rules\nTroubleshoot network connectivity issues\nEnable cross-region and cross-account sharing of your Bring Your Own IP (BYOIP) addresses\nProvision Amazon-provided contiguous IPv6 CIDR blocks to pools for VPC\n                creation\nThis guide consists of the following sections:\nHow IPAM works\n: IPAM concepts and\n                terminology.\nGetting started with IPAM\n: Steps to enable\n                company-wide IP address management with AWS Organizations, create an IPAM, and\n                plan IP address usage.\nManaging IP address space in IPAM\n: Steps to\n                manage your IPAM, scopes, pools, and allocations.\nTracking IP address usage in IPAM\n: Steps\n                to monitor and track IP address usage with IPAM.\nTutorials for Amazon VPC IP Address Manager\n: Detailed step-by-step\n                tutorials for creating an IPAM and pools, allocating VPC CIDRs, and bringing your\n                own public IP address CIDRs to IPAM.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow IPAM works\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/how-it-works-ipam.html": "How IPAM works - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nHow IPAM works\nThis topic explains some of the key concepts to help you get started with IPAM.\nThe following diagram shows an IPAM pool hierarchy for multiple AWS Regions within a\n    top-level IPAM pool. Each AWS Regional pool has two IPAM development pools within it, one pool\n    for pre-production and one pool production resources. For more information about IPAM concepts, see the descriptions below the diagram.\nTo use Amazon VPC IP Address Manager, you first create an IPAM.\nWhen you create the IPAM, you choose which AWS Region to create it in. When you create an\n    IPAM, AWS VPC IPAM automatically creates two scopes for the IPAM. The scopes, together with\n    pools and allocations, are key components of your IPAM.\nA\nscope\nis the highest-level container within IPAM. An\n        IPAM contains two default scopes. Each scope represents the IP space for a single network.\n        The\nprivate scope\nis intended for all private space. The\npublic scope\nis intended for all public space. Scopes\n        enable you to reuse IP addresses across multiple unconnected networks without causing IP\n        address overlap or conflict. Within a scope, you create IPAM pools.\nA\npool\nis a collection of contiguous IP address ranges\n        (or CIDRs). IPAM pools enable you to organize your IP addresses according to your routing\n        and security needs. You can have multiple pools within a top-level pool. For example, if you\n        have separate routing and security needs for development and production applications, you\n        can create a pool for each. Within IPAM pools, you allocate CIDRs to AWS resources.\nAn\nallocation\nis a CIDR assignment from an IPAM pool to\n        another resource or IPAM pool. When you create a VPC and choose an IPAM pool for the VPC\u00e2\u0080\u0099s\n        CIDR, the CIDR is allocated from the CIDR provisioned to the IPAM pool. You can monitor and manage the allocation\n        with IPAM.\nIPAM can manage and monitor private IPv4 CIDRs, public IPv4/IPv6 CIDRs that you own, and\n    Amazon-owned public IPv6 space.\nTo get started and create an IPAM, see\nGetting started with IPAM\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWhat is IPAM?\nGetting started with IPAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/access-ipam.html": "Access IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nAccess IPAM\nAs with other AWS services, you can create, access, and manage your IPAM using the following methods:\nAWS Management Console\n: Provides a web interface that you\n                can use to create and manage your IPAM. See\nhttps://console.aws.amazon.com/ipam/\n.\nAWS Command Line Interface (AWS CLI)\n: Provides commands\n                for a broad set of AWS services, including Amazon VPC. The AWS CLI is supported on\n                Windows, macOS, and Linux. To get the AWS CLI, see\nAWS Command Line Interface\n.\nAWS SDKs\n: Provide language-specific APIs. The AWS SDKs\n                take care of many of the connection details, such as calculating signatures,\n                handling request retries, and handling errors. For more information, see\nAWS SDKs\n.\nQuery API\n: Provides low-level API actions that you call using\n                HTTPS requests. Using the Query API is the most direct way to access IPAM. However,\n                it requires your application to handle low-level details such as generating the hash\n                to sign the request, and handling errors. For more information, see Amazon IPAM\n                actions in the\nAmazon EC2 API Reference\n.\nThis guide primarily focuses on using the AWS Management Console to create, access, and\n        manage your IPAM. In each description of how to complete a process in the console, we\n        include links to the AWS CLI documentation that shows you how to do the same thing by\n        using the AWS CLI.\nIf you are a first-time user of IPAM, review\nHow IPAM works\nto learn about the role of IPAM in Amazon VPC and then\n            continue with the instructions in\nConfigure permissions for your IPAM\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGetting started with IPAM\nConfigure permissions for your IPAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/choose-single-user-or-orgs-ipam.html": "Configure permissions for your IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nConfigure permissions for your IPAM\nBefore you begin using IPAM, you must choose one of the options in this section to enable\n        IPAM to monitor CIDRs associated with EC2 networking resources and store metrics:\nTo enable IPAM to integrate with AWS Organizations to enable the Amazon VPC\n                IPAM service to manage and monitor networking resources created by all AWS\n                Organizations member accounts, see\nIntegrate IPAM with accounts in an AWS Organization\n.\nAfter you integrate with with AWS Organizations, to integrate IPAM with accounts outside of your organization, see\nIntegrate IPAM with accounts outside of your organization\n.\nTo use a single AWS account with IPAM and enable the Amazon VPC IPAM service to\n                manage and monitor the networking resources you create with the single account, see\nUse IPAM with a single account\n.\nIf you do not choose one of these options, you can still create IPAM resources, such as\n        pools, but you won't see metrics in your dashboard and you will not be able to monitor the\n        status of resources.\nContents\nIntegrate IPAM with accounts in an AWS Organization\nIntegrate IPAM with accounts outside of your organization\nUse IPAM with a single account\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAccess IPAM\nIntegrate IPAM with accounts in an AWS Organization\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/enable-integ-ipam.html": "Integrate IPAM with accounts in an AWS Organization - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nIntegrate IPAM with accounts in an AWS Organization\nOptionally, you can follow the steps in this section to integrate IPAM with AWS\n        Organizations and delegate a member account as the IPAM account.\nThe IPAM account is responsible for creating an IPAM and using it to manage and\n        monitor IP address usage.\nIntegrating IPAM with AWS Organizations and delegating an IPAM admin has the following\n        benefits:\nShare your IPAM pools with your organization\n: When you\n                delegate an IPAM account, IPAM enables other AWS Organizations member\n                accounts in the organization to allocate CIDRs from IPAM pools that are shared using\n                AWS Resource Access Manager (RAM). For more information on setting up an\n                organization, see\nWhat is AWS\n                    Organizations?\nin the\nAWS Organizations User\n                    Guide\n.\nMonitor IP address usage in your organization\n: When you\n                delegate an IPAM account, you give IPAM permission to monitor IP usage across\n                all of your accounts. As a result, IPAM automatically imports CIDRs that are used by\n                existing VPCs across other AWS Organizations member accounts into IPAM.\nIf you do not delegate an AWS Organizations member account as an IPAM account,\n        IPAM will monitor resources only in the AWS account that you use to create the IPAM.\nImportant\nYou must enable integration with AWS Organizations by using IPAM in the AWS management console or the\nenable-ipam-organization-admin-account\nAWS CLI command. This ensures that the\nAWSServiceRoleForIPAM\nservice-linked role is created. If you enable trusted access with AWS Organizations by using the \n                    AWS Organizations console or the\nregister-delegated-administrator\nAWS CLI command, \n                    the\nAWSServiceRoleForIPAM\nservice-linked role isn't created, and you can't manage or monitor resources within your \n                    organization.\nNote\nWhen integrating with AWS Organizations:\nIPAM charges you for each active IP address that \n                it monitors in your organization's member accounts. For more information about pricing, see\nIPAM pricing\n.\nYou must have an account in AWS Organizations and a management account set up with one or\n                more member accounts. For more information about account types, see\nTerminology and\n                    concepts\nin the\nAWS Organizations User Guide\n. For\n                more information on setting up an organization, see\nGetting started with AWS\n                    Organizations\n.\nThe IPAM account must be an AWS Organizations member account. You cannot use the AWS\n                Organizations management account as the IPAM account.\nThe IPAM account must use an IAM role that has an IAM policy attached to it that permits the\niam:CreateServiceLinkedRole\naction. When you create the IPAM, you\n                    automatically create the AWSServiceRoleForIPAM service-linked role.\nThe user associated with the AWS Organizations management account must use an IAM role\n                    that has the following IAM policy actions attached:\nec2:EnableIpamOrganizationAdminAccount\norganizations:EnableAwsServiceAccess\norganizations:RegisterDelegatedAdministrator\niam:CreateServiceLinkedRole\nFor more information on creating IAM roles, see\nCreating a role to delegate permissions to an IAM user\nin the\nIAM User Guide\n.\nAWS Management Console\nTo select an IPAM account\nUsing the AWS Organizations management account, open the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the AWS Management Console, choose the AWS Region in which you want to work with IPAM.\nIn the navigation pane, choose\nOrganization settings\n.\nThe\nDelegate\noption is only available if you've\n                            logged in to the console as the AWS Organizations management account.\n                            Choose\nDelegate\n.\nEnter the AWS account ID for an IPAM account. The IPAM\n                            administrator must be an AWS Organizations member account.\nChoose\nSave changes\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nTo delegate an IPAM admin account using AWS CLI, use the following command:\nenable-ipam-organization-admin-account\nWhen you delegate an Organizations member account as an IPAM account, IPAM\n        automatically creates a service-linked IAM role in all member accounts in your organization.\n        IPAM monitors the IP address usage in these accounts by assuming the service-linked IAM role\n        in each member account, discovering the resources and their CIDRs, and integrating them with\n        IPAM. The resources within all member accounts will be discoverable by IPAM regardless of\n        their Organizational Unit. If there are member accounts that have created a VPC, for\n        example, you\u00e2\u0080\u0099ll see the VPC and its CIDR in the Resources section of the IPAM\n        console.\nImportant\nThe role of the AWS Organizations management account that delegated the IPAM admin is now complete. To\n            continue using IPAM, the IPAM admin account must log into Amazon VPC IPAM and create an\n            IPAM.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConfigure permissions for your IPAM\nIntegrate IPAM with accounts outside of your organization\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/enable-integ-ipam-outside-org.html": "Integrate IPAM with accounts outside of your organization - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nIntegrate IPAM with accounts outside of your organization\nThis section describes how to integrate your IPAM with AWS  accounts outside of your organization. To complete steps in this section, you must have already completed the steps in\nIntegrate IPAM with accounts in an AWS Organization\nand delegated an IPAM account.\nIntegrating IPAM with AWS  accounts outside of your organization enables you to do the following:\nManage IP addresses outside of your organization from a single IPAM account.\nShare IPAM pools with third-party services hosted by other AWS  accounts in other AWS Organizations.\nAfter you integrate IPAM with AWS  accounts outside of your organization, you can share an IPAM pool directly with the desired accounts of other organizations.\nContents\nConsiderations and limitations\nProcess overview\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIntegrate IPAM with accounts in an AWS Organization\nConsiderations and limitations\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/enable-integ-ipam-outside-org-considerations.html": "Considerations and limitations - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nConsiderations and limitations\nThis section contains considerations and limitations for integrating IPAM with accounts outside of your organization:\nWhen you share a resource discovery with another account, the only data that is exchanged is IP address and account status monitoring data. You can view this data before sharing using the\nget-ipam-discovered-resource-cidrs\nand\nget-ipam-discovered-accounts\nCLI commands or\nGetIpamDiscoveredResourceCidrs\nand\nGetIpamDiscoveredAccounts\nAPIs. For resource discoveries that monitor resources across an organization, no organization data (such as the names of Organizational Units in your organization) are shared.\nWhen you create a resource discovery, the resource discovery monitors all visible resources in the owner account. If the owner account is a third-party service AWS account that creates resources for multiple of their own customers, those resources will be discovered by the resource discovery. If the third-party AWS service account shares the resource discovery with an end-user AWS account, the end-user will have visibility into the resources of the other customers of the third-party AWS service. For that reason, the third-party AWS service should exercise caution creating and sharing resource discoveries or use a separate AWS account for each customer.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIntegrate IPAM with accounts outside of your organization\nProcess overview\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/enable-integ-ipam-outside-org-process.html": "Process overview - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nProcess overview\nThis section explains how to integrate your IPAM with AWS accounts outside of your organization. It refers to topics that are covered in other sections of this guide. Keep this page visible, and open the topics linked below in a new window so that you can return to this page for guidance.\nWhen you integrate IPAM with AWS accounts outside of your organization, there are 4 AWS accounts involved in the process:\nPrimary Org Owner\n- The AWS Organizations management account for\n                    organization 1.\nPrimary Org IPAM Account\n- The IPAM delegated administrator\n                    account for organization 1.\nSecondary Org Owner\n- The AWS Organizations management account for\n                    organization 2.\nSecondary Org Admin Account\n- The IPAM delegated\n                    administrator account for organization 2.\nSteps\nPrimary Org Owner delegates a member of their organization as the Primary Org IPAM Account (see\nIntegrate IPAM with accounts in an AWS Organization\n).\nPrimary Org IPAM Account creates an IPAM (see\nCreate an IPAM\n).\nSecondary Org Owner delegates a member of their organization as the Secondary Org Admin\n                    Account (see\nIntegrate IPAM with accounts in an AWS Organization\n).\nSecondary Org Admin Account creates a resource discovery and shares it with the Primary Org\n                    IPAM Account using AWS RAM (see\nCreate a resource discovery\nand\nShare a resource discovery\n). The resource discovery must be created in the same home Region as the\n                    Primary Org IPAM.\nPrimary Org IPAM Account accepts the resource share invitation using AWS RAM (see\nAccepting and rejecting resource share invitations\nin the\nAWS RAM User Guide\n).\nPrimary Org IPAM Account associates the resource discovery with their IPAM (see\nAssociate a resource discovery with an IPAM\n).\nPrimary Org IPAM Account can now monitor and/or manage IPAM resources created by the accounts in Secondary Org.\n(Optional) Primary Org IPAM Account shares IPAM pools with member accounts in Secondary Org (see\nShare an IPAM pool using AWS RAM\n).\n(Optional) If Primary Org IPAM Account wants to stop discovering resources in Secondary Org, it can disassociate the resource discovery from the IPAM (see\nDisassociate a resource discovery\n).\n(Optional) If the Secondary Org Admin Account wants to stop participating in the Primary Org\u00e2\u0080\u0099s\n                    IPAM, they can unshare the shared resource discovery (see\nUpdate a\n                        resource share in AWS RAM\nin the\nAWS RAM User\n                    Guide\n) or delete the resource discovery (see\nDelete a resource discovery\n).\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConsiderations and limitations\nUse IPAM with a single account\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/enable-single-user-ipam.html": "Use IPAM with a single account - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nUse IPAM with a single account\nIf you choose not to\nIntegrate IPAM with accounts in an AWS Organization\n, you can use IPAM with a single AWS account.\nWhen you create an IPAM in the next section, a service-linked\n        role is automatically created for the Amazon VPC IPAM service in AWS Identity and Access Management. IPAM uses the\n        service-linked role to monitor and store metrics for CIDRs associated with EC2 networking\n        resources. For more information on the service-linked role and how IPAM uses it, see\nService-linked roles for IPAM\n.\nImportant\nIf you use IPAM with a single AWS account, you must ensure that the AWS account\n            you use to create the IPAM uses a IAM role with a policy attached to it that permits the\niam:CreateServiceLinkedRole\naction. When you create the IPAM, you\n            automatically create the AWSServiceRoleForIPAM service-linked role. For more information\n            on managing IAM policies, see\nEditing IAM policies\nin\n            the\nIAM User Guide\n.\nOnce the single AWS account has permission to create the IPAM service-linked role, go to\nCreate an IPAM\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nProcess overview\nCreate an IPAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/create-ipam.html": "Create an IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nCreate an IPAM\nFollow the steps in this section to create your IPAM. If you have delegated an IPAM\n        administrator, these steps should be completed by the IPAM account.\nImportant\nWhen you create an IPAM, you will be asked to allow IPAM to replicate data from source\n            accounts into an IPAM delegate account. To integrate IPAM with AWS Organizations, IPAM\n            needs your permission to replicate resource and IP usage details across accounts (from\n            member accounts to the delegated IPAM member account) and across AWS Regions (from\n            operating Regions to the home Region of your IPAM). For single account IPAM users, IPAM\n            needs your permission to replicate resource and IP usage details across operating\n            Regions to the home Region of your IPAM.\nWhen you create the IPAM, you choose the AWS Regions where the IPAM is allowed to manage\n        IP address CIDRs. These AWS Regions are called\noperating\n            Regions\n. IPAM discovers and monitors resources only in the AWS Regions that\n        you select as operating Regions. IPAM doesn't store any data outside of the operating\n        Regions that you select.\nThe following example hierarchy shows how the AWS Regions that you assign when you\n        create the IPAM will impact the Regions that will be available for pools that you create\n        later.\nIPAM operating in AWS Region 1 and AWS Region 2\nPrivate scope\nTop-level IPAM pool\nRegional IPAM pool in\nAWS Region\n                                            2\nDevelopment pool\nAllocation for a VPC in\nAWS Region 2\nYou can only create one IPAM. For more information about increasing quotas related to\n        IPAM, see\nQuotas for your IPAM\n.\nAWS Management Console\nTo create an IPAM\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the AWS Management Console, choose the AWS Region in which you\n                            want to create the IPAM. Create the IPAM in your main Region of\n                            operations.\nOn the service home page, choose\nCreate IPAM\n.\nSelect\nAllow Amazon VPC IP Address Manager to\n                                replicate data from source account(s) into the IPAM delegate\n                                account\n. If you do not select this option, you cannot\n                            create an IPAM.\nChoose an\nIPAM tier\n. For more information about\n                            the features available in each tier and the costs associated with the\n                            tiers, see\nAmazon VPC\n                                pricing > IPAM tab\n.\nUnder\nOperating regions\n, select the AWS Regions\n                            in which this IPAM can manage and discover resources. The AWS Region\n                            in which you are creating your IPAM is selected as one of the operating\n                            Regions by default. For example, if you\u00e2\u0080\u0099re creating this IPAM in AWS\n                            Region\nus-east-1\nbut you want to create Regional IPAM pools later that\n                            provide CIDRs to VPCs in\nus-west-2\n, select\nus-west-2\nhere. If you forget\n                            an operating Region, you can return at a later time and edit your IPAM\n                            settings.\nNote\nIf you are creating an IPAM in the Free Tier, you can select multiple operating Regions for\n                                your IPAM, but the only IPAM feature that will be available across\n                                operating Regions is\nPublic\n                                    IP insights\n. You cannot use other features in the Free\n                                Tier, like BYOIP, across the IPAM's operating Regions. You can only\n                                use them in the IPAM's home Region. To use all IPAM features across\n                                operating Regions,\ncreate an IPAM in\n                                    the Advanced Tier\n.\nChoose\nCreate IPAM\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to create, modify, and view details related to your IPAM:\nCreate the IPAM:\ncreate-ipam\nView the IPAM that you've created:\ndescribe-ipams\nView the scopes that are created automatically:\ndescribe-ipam-scopes\nModify an existing IPAM:\nmodify-ipam\nWhen you have completed these steps, IPAM has done the following:\nCreated your IPAM. You can see the IPAM and the currently selected operating Regions by\n                choosing IPAMs in the left navigation pane of the console.\nCreated one private and one public scope. You can see the scopes by choosing\nScopes\nin the navigation pane. For more information about\n                scopes, see\nHow IPAM works\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nUse IPAM with a single account\nPlan for IP address provisioning\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/planning-ipam.html": "Plan for IP address provisioning - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nPlan for IP address provisioning\nFollow the steps in this section to plan for IP address provisioning by using IPAM pools. If\n    you have configured an IPAM account, these steps should be completed by that account.\nImportant\nTo use IPAM pools across AWS accounts, you must integrate IPAM with AWS Organizations \n    or some features may not work properly. For more information, \n    see\nIntegrate IPAM with accounts in an AWS Organization\n.\nIn IPAM, a pool is a collection of contiguous IP address ranges (or CIDRs). Pools enable you\n    to organize your IP addresses according to your routing and security needs. You can create pools\n    for AWS Regions outside of your IPAM Region. For example, if you have separate routing and\n    security needs for development and production applications, you can create a pool for\n    each.\nIn the first step in this section, you\u00e2\u0080\u0099ll create a top-level pool. Then, you\u00e2\u0080\u0099ll create a\n    Regional pool within the top-level pool. Within the Regional pool, you can create additional\n    pools as needed, such as a production and development environment pools. By default, you can\n    create pools up to a depth of 10. For information on IPAM quotas, see\nQuotas for your IPAM\n.\nNote\nThe terms\nprovision\nand\nallocate\nare used throughout this user guide and the IPAM console.\nProvision\nis used when you add a CIDR to an IPAM pool.\nAllocate\nis used when you associate a CIDR from an IPAM pool with a\n    resource.\nThe following is an example hierarchy of the pool structure that you will create by\n    completing the steps in this section:\nIPAM operating in AWS Region 1 and AWS Region 2\nPrivate scope\nTop-level pool\nRegional pool in AWS Region 1\nDevelopment pool\nAllocation for a VPC\nThis structure serves as an example of how you might want to use IPAM, but you can use IPAM\n    to suit the needs of your organization. For more information on best practices, see\nAmazon VPC\n      IP Address Manager Best Practices\n.\nIf you are creating a single IPAM pool, complete the steps in\nCreate a top-level IPv4 pool\nand then skip to\nAllocate CIDRs\n.\nContents\nExample IPAM pool plans\nCreate IPv4 pools\nCreate IPv6 pools\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate an IPAM\nExample IPAM pool plans\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/planning-examples-ipam.html": "Example IPAM pool plans - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nIPv4 pools in multiple AWS Regions\nIPv4 pools for multiple lines of business\nIPv6 pools in an AWS Region\nSubnet pools for multiple lines of business\nExample IPAM pool plans\nYou can use IPAM\n        to suit the needs of your organization. This section provides examples of how you might organize your IP addresses.\nIPv4 pools in multiple AWS Regions\nThe following example shows an IPAM pool hierarchy for multiple AWS Regions within a\n            top-level pool. Each AWS Regional pool has two IPAM development pools within it, one\n            pool for development resources and one pool for production resources.\nIPv4 pools for multiple lines of business\nThe following example shows an IPAM pool hierarchy for multiple lines of business within a top-level\n            pool. Each pool for each line of business contains three AWS Regional pools. Each\n            Regional pool has two IPAM development pools within it, one pool for pre-production resources and\n            one pool for production resources.\nIPv6 pools in an AWS Region\nThe following example shows an IPAM IPv6 pool hierarchy for multiple lines of business\n            within a Regional pool. Each Regional pool has three IPAM pools within it, one pool for\n            sandbox resources, one pool for development resources, and one pool for production\n            resources.\nSubnet pools for multiple lines of business\nThe following example shows a resource planning pool hierarchy for multiple lines of business\n            and dev/ prod subnet pools. For more information on subnet IP address space planning using IPAM, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPlan for IP address provisioning\nCreate IPv4 pools\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/intro-create-ipv4-pools.html": "Create IPv4 pools - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nCreate IPv4 pools\nFollow the steps in this section to create an IPv4 IPAM pool hierarchy.\nThe following example shows the hierarchy of the pool structure that you can create with\n        instructions in this guide. In this section, you are creating an IPv4 IPAM\n        pool hierarchy:\nIPAM operating in AWS Region 1 and AWS Region 2\nPrivate scope\nTop-level pool (10.0.0.0/8)\nRegional pool in AWS Region 2 (10.0.0.0/16)\nDevelopment pool (10.0.0.0/24)\nAllocation for a VPC (10.0.0.0/25)\nIn the preceding example, the CIDRs that are used are examples only. They illustrate that\n        each pool within the top-level pool is provisioned with a portion of the top-level\n        CIDR.\nContents\nCreate a top-level IPv4 pool\nCreate a Regional IPv4 pool\nCreate a development IPv4 pool\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExample IPAM pool plans\nCreate a top-level IPv4 pool\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/create-top-ipam.html": "Create a top-level IPv4 pool - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nCreate a top-level IPv4 pool\nFollow the steps in this section to create an IPv4 top-level IPAM pool. When you create\n        the pool, you provision a CIDR for the pool to use. You then assign that space to an\n        allocation. An allocation is a CIDR assignment from an IPAM pool to another IPAM pool or to\n        a resource.\nThe following example shows the hierarchy of the pool structure that you can create with\n        instructions in this guide. At this step, you are creating the top-level IPAM pool:\nIPAM operating in AWS Region 1 and AWS Region 2\nPrivate scope\nTop-level pool\n                                (10.0.0.0/8)\nRegional pool in AWS Region 1 (10.0.0.0/16)\nDevelopment pool for non-production VPCs\n                                                (10.0.0.0/24)\nAllocation for a VPC (10.0.0.0/25)\nIn the preceding example, the CIDRs that are used are examples only. They illustrate that\n        each pool within the top-level pool is provisioned with a portion of the top-level\n        CIDR.\nWhen you create an IPAM pool, you can configure rules for the allocations that are made within the IPAM pool.\nAllocation rules enable you to configure the following:\nWhether IPAM should automatically import CIDRs into the IPAM pool if it finds them within this\n                pool's CIDR range\nThe required netmask length for allocations within the pool\nThe required tags for resources within the pool\nThe required locale for resources within the pool. The locale is the AWS Region\n                where an IPAM pool is available for allocations.\nAllocation rules determine whether resources are compliant or noncompliant. For additional\n        information about compliance, see\nMonitor CIDR usage by resource\n.\nImportant\nThere is an additional implicit rule that is not displayed in the allocation rules. If the\n            resource is in an IPAM pool that is a shared resource in AWS Resource Access Manager\n            (RAM), the resource owner must be configured as a principal in AWS RAM. For more\n            information about sharing pools with RAM, see\nShare an IPAM pool using AWS RAM\n.\nThe following example shows how you might use allocation rules to control access to an\n        IPAM pool:\nWhen you create your pools based on routing and security needs, you might want to allow only\n            certain resources to use a pool. In such cases, you can set an allocation rule stating\n            that any resource that wants a CIDR from this pool must have a tag that matches the\n            allocation rule tag requirements. For example, you could set an allocation rule stating\n            that only VPCs with the tag\nprod\ncan get CIDRs from\n            an IPAM pool. You could also set a rule stating that CIDRs allocated from this pool can\n            be no larger than /24. In this case, a resource could still be created using a CIDR\n            larger than /24 from this pool if the space is available, but because doing so violates\n            an allocation rule on the pool, IPAM flags this resource as noncompliant.\nImportant\nThis topic covers how to create a top-level IPv4 pool with an IP address range provided by\n                AWS. If you want to bring your own IPv4 address range to AWS (BYOIP), there are\n                prerequisites. For more information, see\nTutorial: Bring your IP addresses to IPAM\n.\nAWS Management Console\nTo create a pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose\nCreate pool\n.\nUnder\nIPAM scope\n, choose the private scope you\n                            want to use. For more information about scopes, see\nHow IPAM works\n.\nBy default, when you create a pool, the default private scope is\n                            selected. Pools in the private scope must be IPv4 pools. Pools in the public scope can be IPv4 or IPv6 pools. \n                            The public scope is intended for all\n                            public space.\n(Optional) Add a\nName tag\nfor the pool and a description for the pool.\nUnder\nSource\n, choose\nIPAM\n                                scope\n.\nUnder\nAddress family\n, choose\nIPv4\n.\nUnder\nResource planning\n, leave\nPlan IP\n                                space within the scope\nselected. For more information\n                            about using this option to plan for subnet IP space within a VPC, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\nFor the\nLocale\n, choose\nNone\n.\n                            You will set the locale on the Regional pool.\nThe locale is the AWS Region where you want this IPAM pool to be available for allocations. For example, you can only allocate a CIDR for a VPC from an IPAM pool that shares a locale with the VPC\u00e2\u0080\u0099s Region. Note that when you have chosen a locale for a pool, you cannot modify it. If the home Region of the IPAM is unavailable due to an outage and the pool has a locale different than the home Region of the IPAM, the pool can still be used to allocate IP addresses.\n(Optional) You can create a pool without a CIDR, but you won\u00e2\u0080\u0099t be able\n                            to use the pool for allocations until you\u00e2\u0080\u0099ve provisioned a CIDR for it.\n                            To provision a CIDR, choose\nAdd new CIDR\n. Enter an\n                            IPv4 CIDR to provision for the pool. If you want to bring your own IPv4\n                            or IPv6 IP address range to AWS there are prerequisites. For more\n                            information, see\nTutorial: Bring your IP addresses to IPAM\n.\nChoose optional allocation rules for this pool:\nAutomatically import discovered resources\n: This option is not available if the\nLocale\nis set to\nNone\n. If selected, IPAM will continuously look for resources within the CIDR range of this pool \n                            and automatically import them as allocations into your IPAM. Note the following:\nThe CIDRs that will be allocated for\n                                    these resources must not already be allocated to other resources in order for the import to succeed.\nIPAM will import \n                                    a CIDR regardless of its compliance with the pool's allocation rules, so a resource might be imported and subsequently \n                                    marked as noncompliant.\nIf IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only.\nIf IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only.\nWarning\nAfter you create an IPAM, when you create a VPC,\n                                                choose the IPAM-allocated CIDR block option. If you\n                                                do not, the CIDR you choose for your VPC may overlap with an IPAM CIDR allocation.\nIf you have a VPC already\n                                                allocated in an IPAM pool, a VPC with an overlapping CIDR cannot be automatically imported. For\n                                                example, if you have a VPC with a 10.0.0.0/26 CIDR allocated\n                                                in an IPAM pool, a VPC with a 10.0.0.0/23 CIDR (that would\n                                                cover the 10.0.0.0/26 CIDR) cannot be\n                                                  imported.\nIt takes some time for existing VPC CIDR allocations to be auto-imported into IPAM.\nMinimum netmask length\n: The minimum netmask length required for \n                            CIDR allocations in this IPAM pool to be compliant and the largest size CIDR block that can be allocated from the pool. The minimum netmask length must be less than the maximum \n                            netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses \n                            are  0 - 128.\nDefault netmask length\n: A default netmask length for\n                                    allocations added to this pool. For example, if the CIDR that's\n                                    provisioned to this pool is\n10.0.0.0/8\nand you enter\n16\nhere, any new\n                                    allocations in this pool will default to a netmask length of\n                                        /16.\nMaximum netmask length\n: The maximum netmask length that will\n                                    be required for CIDR allocations in this pool. This value\n                                    dictates the smallest size CIDR block that can be allocated from\n                                    the pool.\nTagging requirements\n: The tags that are required for\n                                    resources to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the \n                                    allocation tagging rules are changed on the pool, the resource may be marked as noncompliant.\nLocale\n: The locale that will be required for\n                                resources that use CIDRs from this pool. Automatically imported resources\n                                that do not have this locale will be marked noncompliant. Resources that are not\n                                automatically imported into the pool will not be allowed to allocate space from\n                                the pool unless they are in this locale.\n(Optional) Choose\nTags\nfor the pool.\nChoose\nCreate pool\n.\nSee\nCreate a Regional IPv4 pool\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to create or edit a top-level pool in your IPAM:\nCreate a pool:\ncreate-ipam-pool\n.\nEdit the pool after you create it to modify the allocation rules:\nmodify-ipam-pool\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate IPv4 pools\nCreate a Regional IPv4 pool\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/create-reg-ipam.html": "Create a Regional IPv4 pool - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nCreate a Regional IPv4 pool\nFollow the steps in this section to create a Regional pool within your top-level pool. If\n        you need only a top-level pool, and don't need additional Regional and development pools,\n        skip to\nAllocate CIDRs\n.\nThe following example shows the hierarchy of the pool structure that you create by\n        following the instructions in this guide. At this step, you are creating the Regional IPAM\n        pool:\nIPAM operating in AWS Region 1 and AWS Region 2\nPrivate scope\nTop-level pool (10.0.0.0/8)\nRegional pool in AWS Region 1\n                                            (10.0.0.0/16)\nDevelopment pool for non-production VPCs\n                                                (10.0.0.0/24)\nAllocation for a VPC (10.0.0.0/25)\nIn the preceding example, the CIDRs that are used are examples only. They illustrate that\n        each pool within the top-level pool is provisioned with a portion of the top-level\n        CIDR.\nAWS Management Console\nTo create a Regional pool within a top-level pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose\nCreate pool\n.\nUnder\nIPAM scope\n, choose the\n                            same scope that you used when you created the top-level pool. For more\n                            information about scopes, see\nHow IPAM works\n.\n(Optional) Add a\nName tag\nfor the pool and a description for the pool.\nUnder\nSource\n, choose\nIPAM\n                                pool\n. Then choose the top-level pool that you created in\n                            the previous section.\nUnder\nResource planning\n, leave\nPlan IP\n                            space within the scope\nselected. For more information\n                            about using this option to plan for subnet IP space within a VPC, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\nChoose the locale for the pool. Choosing a locale ensures there are no cross-region dependencies between your pool and the resources allocating from it. The available options come from the\n                            operating Regions that you chose when you created your IPAM.\nThe locale is the AWS Region where you want this IPAM pool to be available for allocations. For example, you can only allocate a CIDR for a VPC from an IPAM pool that shares a locale with the VPC\u00e2\u0080\u0099s Region. Note that when you have chosen a locale for a pool, you cannot modify it. If the home Region of the IPAM is unavailable due to an outage and the pool has a locale different than the home Region of the IPAM, the pool can still be used to allocate IP addresses.\nNote\nIf you are creating a pool in the Free Tier, you can only choose the locale that matches the\n                                home Region of your IPAM. To use all IPAM features across locales,\nupgrade to the Advanced\n                                    Tier\n.\n(Optional) Choose a CIDR to provision for the pool. You can create a pool without a CIDR, but you won\u00e2\u0080\u0099t be able to use the pool \n                            for allocations until you\u00e2\u0080\u0099ve provisioned a CIDR for it. You can add CIDRs to a pool at any time by editing the pool.\nYou have the same allocation rule options here as you did when you\n                            created the top-level pool. See\nCreate a top-level IPv4 pool\nfor an explanation of the options\n                            that are available when you create pools. The allocation rules for the\n                            Regional pool are not inherited from the top-level pool. If you do not\n                            apply any rules here, there will be no allocation rules set for the\n                            pool.\n(Optional) Choose\nTags\nfor the pool.\nWhen you\u00e2\u0080\u0099ve finished configuring your pool, choose\nCreate\n                                pool\n.\nSee\nCreate a development IPv4 pool\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to create a Regional pool in your\n                    IPAM:\nGet the ID of the scope that you want to create the pool in:\ndescribe-ipam-scopes\nGet the ID of the pool that you want to create the pool in:\ndescribe-ipam-pools\nCreate the pool:\ncreate-ipam-pool\nView the new pool:\ndescribe-ipam-pools\nRepeat these steps to create additional pools within the top-level pool, as needed.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a top-level IPv4 pool\nCreate a development IPv4 pool\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/create-dev-ipam.html": "Create a development IPv4 pool - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nCreate a development IPv4 pool\nFollow the steps in this section to create a development pool within your Regional pool.\n        If you need only a top-level and Regional pool, and don't need development pools, skip to\nAllocate CIDRs\n.\nThe following example shows the hierarchy of the pool structure that you can create with\n        the instructions in this guide. At this step, you are creating a development IPAM\n        pool:\nIPAM operating in AWS Region 1 and AWS Region 2\nPrivate scope\nTop-level pool (10.0.0.0/8)\nRegional pool in AWS Region 1 (10.0.0.0/16)\nDevelopment pool for\n                                                  non-production VPCs\n                                                (10.0.0.0/24)\nAllocation for a VPC (10.0.1.0/25)\nIn the preceding example, the CIDRs that are used are examples only. They illustrate that\n        each pool within the top-level pool is provisioned with a portion of the top-level\n        CIDR.\nAWS Management Console\nTo create a development pool within a Regional pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose\nCreate pool\n.\nUnder\nIPAM scope\n, choose the\n                            same scope that you used when you created the top-level and Regional pools. \n                            For more information about scopes, see\nHow IPAM works\n.\n(Optional) Add a\nName tag\nfor the pool and a description for the pool.\nUnder\nSource\n, choose\nIPAM pool\n. Then choose the Regional\n                                pool.\nUnder\nResource planning\n, leave\nPlan IP\n                            space within the scope\nselected. For more information\n                            about using this option to plan for subnet IP space within a VPC, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\n(Optional) Choose a CIDR to provision for the pool. You can only provision a CIDR\n                            that was provisioned to the top-level pool. You can create a pool\n                            without a CIDR, but you won\u00e2\u0080\u0099t be able to use the pool for allocations\n                            until you\u00e2\u0080\u0099ve provisioned a CIDR for it. You can add CIDRs to a pool at\n                            any time by editing the pool.\nYou have the same allocation rule options here as you did when you\n                            created the top-level and Regional pool. See\nCreate a top-level IPv4 pool\nfor an\n                            explanation of the options that are available when you create pools. The\n                            allocation rules for the pool are not inherited from the pool above it\n                            in the hierarchy. If you do not apply any rules here, no allocation\n                            rules will be set for the pool.\n(Optional) Choose\nTags\nfor the pool.\nWhen you\u00e2\u0080\u0099ve finished configuring your pool, choose\nCreate\n                                pool\n.\nSee\nAllocate CIDRs\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation. The\n                    documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to create a Regional pool in your IPAM:\nGet the ID of the scope that you want to create the pool in:\ndescribe-ipam-scopes\nGet the ID of the pool that you want to create the pool in:\ndescribe-ipam-pools\nCreate the pool:\ncreate-ipam-pool\nView the new pool:\ndescribe-ipam-pools\nRepeat these steps to create additional development pools within the Regional pool, as\n        needed.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a Regional IPv4 pool\nCreate IPv6 pools\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/intro-create-ipv6-pools.html": "Create IPv6 pools - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nCreate IPv6 pools\nFollow the steps in this section to create an IPAM IPv6 pool hierarchy. When you create\n        the pool, you can provision a CIDR for the pool to use. The pool assigns space within that\n        CIDR to allocations within the pool. An allocation is a CIDR assignment from an IPAM pool to\n        another resource or IPAM pool.\nThe following example shows the hierarchy of the pool structure that you can create with\n        instructions in this guide. In this section, you are creating an IPv6 IPAM\n        pool hierarchy:\nIPAM operating in AWS Region 1 and AWS Region 2\nPublic scope\nRegional pool in AWS Region 1 (2001:db8::/52)\nDevelopment pool (2001:db8::/54)\nAllocation for a VPC (2001:db8::/56)\nContents\nCreate a Regional IPv6 pool\nCreate a development IPv6 pool\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a development IPv4 pool\nCreate a Regional IPv6 pool\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/create-ipv6-reg-pool.html": "Create a Regional IPv6 pool - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nCreate a Regional IPv6 pool\nFollow the steps in this section to create an IPv6 regional IPAM pool. When you provision\n        an Amazon-provided IPv6 CIDR block to a pool, it must be provisioned to a pool with a locale\n        (AWS Region) selected. When you create the pool, you can provision a CIDR for the pool to\n        use or add it later. You then assign that space to an allocation. An allocation is a CIDR\n        assignment from an IPAM pool to another IPAM pool or to a resource.\nThe following example shows the hierarchy of the pool structure that you can create with\n        instructions in this guide. At this step, you are creating the IPv6 regional IPAM pool:\nIPAM operating in AWS Region 1 and AWS Region 2\nPublic scope\nRegional pool in AWS Region 1 (2001:db8::/52)\nDevelopment pool (2001:db8::/54)\nAllocation for a VPC (2001:db8::/56)\nIn the preceding example, the CIDRs that are used are examples only. They illustrate that\n        each pool within the IPv6 regional pool is provisioned with a portion of the IPv6 regional\n        CIDR.\nWhen you create an IPAM pool, you can configure rules for the allocations that are made within the IPAM pool.\nAllocation rules enable you to configure the following:\nThe required netmask length for allocations within the pool\nThe required tags for resources within the pool\nThe required locale for resources within the pool. The locale is the AWS Region\n                where an IPAM pool is available for allocations.\nAllocation rules determine whether resources are compliant or noncompliant. For additional\n        information about compliance, see\nMonitor CIDR usage by resource\n.\nImportant\nThere is an additional implicit rule that is not displayed in the allocation rules. If the\n        resource is in an IPAM pool that is a shared resource in AWS Resource Access Manager\n        (RAM), the resource owner must be configured as a principal in AWS RAM. For more\n        information about sharing pools with RAM, see\nShare an IPAM pool using AWS RAM\n.\nThe following example shows how you might use allocation rules to control access to an\n        IPAM pool:\nWhen you create your pools based on routing and security needs, you might want to allow only\n            certain resources to use a pool. In such cases, you can set an allocation rule stating\n            that any resource that wants a CIDR from this pool must have a tag that matches the\n            allocation rule tag requirements. For example, you could set an allocation rule stating\n            that only VPCs with the tag\nprod\ncan get CIDRs from\n            an IPAM pool.\nImportant\nThis topic covers how to create an IPv6 regional pool with either an IP address range provided\n                by AWS. If you want to bring your own IPv4 or IPv6 IP address ranges to AWS\n                (BYOIP), there are prerequisites. For more information, see\nTutorial: Bring your IP addresses to IPAM\n.\nAWS Management Console\nTo create a pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose\nCreate pool\n.\nUnder\nIPAM scope\n, choose the public scope. For\n                            more information about scopes, see\nHow IPAM works\n.\nBy default, when you create a pool, the default private scope is\n                            selected. Pools in the private scope must be IPv4 pools. Pools in the public scope can be IPv4 or IPv6 pools. The public scope is intended for\n                            all space that can be or is currently advertised by AWS to the\n                            internet.\n(Optional) Add a\nName tag\nfor the pool and a description for the pool.\nUnder\nSource\n, choose\nIPAM\n                                scope\n.\nFor\nAddress family\n, select\nIPv6\n. The toggle\nAllow CIDRs in\n                                    this pool to be publicly advertisable\nappears. By default, all CIDRs in this pool will be publicly advertisable. You cannot enable or disable this option.\nUnder\nResource planning\n, leave\nPlan IP\n                            space within the scope\nselected. For more information\n                            about using this option to plan for subnet IP space within a VPC, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\nChoose the\nLocale\nfor the pool. When you provision an Amazon-provided IPv6 CIDR block to a pool, it must be provisioned to a pool with a locale (AWS Region) selected. Choosing a locale\n                            ensures there are no cross-region dependencies between your pool and the\n                            resources allocating from it. The available options come from the\n                            operating Regions that you chose for the IPAM when you created it. You can add additional operating Regions at any time.\nThe locale is the AWS Region where you want this IPAM pool to be available for allocations. For example, you can only allocate a CIDR for a VPC from an IPAM pool that shares a locale with the VPC\u00e2\u0080\u0099s Region. Note that when you have chosen a locale for a pool, you cannot modify it. If the home Region of the IPAM is unavailable due to an outage and the pool has a locale different than the home Region of the IPAM, the pool can still be used to allocate IP addresses.\nNote\nIf you are creating a pool in the Free Tier, you can only choose the locale that matches the\n                            home Region of your IPAM. To use all IPAM features across locales,\nupgrade to the Advanced\n                                Tier\n.\nUnder\nService\n, choose\nEC2\n                                (EIP/VPC)\n. The service you select determines the AWS\n                            service where the CIDR will be advertisable. Currently, the only option\n                            is\nEC2 (EIP/VPC)\n, which means that the CIDRs\n                            allocated from this pool will be advertisable for the Amazon EC2 service\n                            (for Elastic IP addresses) and the Amazon VPC service (for CIDRs\n                            associated with VPCs).\nUnder\nPublic IP source\noption, choose\nAmazon owned\nto have AWS provide an IPv6\n                            address range for this pool. As noted at the top of this page, this\n                            topic covers how to create an IPv6 regional pool with an IP address\n                            range provided by AWS. If you want to bring your own IPv4 or IPv6\n                            address range to AWS (BYOIP), there are prerequisites. For more\n                            information, see\nTutorial: Bring your IP addresses to IPAM\n.\nFor pools in the public scope that use the public IP source BYOIP, you\n                            can control if AWS can publicly advertise the CIDRs in this pool with\nAllow CIDRs in this pool to be publicly\n                                advertisable\n. By default this option is enabled. Disable\n                            this option if you don't want to allow AWS to publicly advertise CIDRs\n                            in this pool.\n(Optional) You can create a pool without a CIDR, but you won\u00e2\u0080\u0099t be able\n                            to use the pool for allocations until you've provisioned a CIDR for it.\n                            To provision a CIDR, choose\nAdd Amazon-owned CIDR\nand choose the netmask size between /40 and /52 for the CIDR.\nNote\nNote the following:\nBy default, you can add one Amazon-provided IPv6 CIDR block to the Regional pool. For\n                                        information on increasing the default limit, see\nQuotas for your IPAM\n.\nWhen you choose a netmask length in the dropdown menu, you see the netmask length as well as\n                                        the number of /56 CIDRs that the netmask represents.\nChoose optional allocation rules for this pool:\nMinimum netmask length\n: The minimum netmask length required\n                                    for CIDR allocations in this IPAM pool to be compliant and the\n                                    largest size CIDR block that can be allocated from the pool. The\n                                    minimum netmask length must be less than the maximum netmask\n                                    length. Possible netmask lengths for IPv6 addresses are 0 - 128.\nDefault netmask length\n: A default netmask length for\n                                    allocations added to this pool. For example, if the CIDR that's\n                                    provisioned to this pool is\n2001:db8::/52\nand you enter 56 here, any new\n                                    allocations in this pool will default to a netmask length of\n                                    /56.\nMaximum netmask length\n: The maximum netmask length that will\n                                    be required for CIDR allocations in this pool. This value\n                                    dictates the smallest size CIDR block that can be allocated from\n                                    the pool. For example, if you enter /56 here, the smallest\n                                    netmask length that can be allocated for CIDRs from this pool is\n                                    /56.\nTagging requirements\n: The tags that are required for\n                                resources to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the \n                                allocation tagging rules are changed on the pool, the resource may be marked as noncompliant.\nLocale\n: The locale that will be required for\n                                    resources that use CIDRs from this pool. Automatically imported resources\n                                    that do not have this locale will be marked noncompliant. Resources that are not\n                                    automatically imported into the pool will not be allowed to allocate space from\n                                    the pool unless they are in this locale.\n(Optional) Choose\nTags\nfor the pool.\nChoose\nCreate pool\n.\nSee\nCreate a development IPv6 pool\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to create or edit an IPv6 regional pool in your IPAM:\nCreate a pool:\ncreate-ipam-pool\n.\nEdit the pool after you create it to modify the allocation rules:\nmodify-ipam-pool\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate IPv6 pools\nCreate a development IPv6 pool\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/create-ipv6-dev-pool.html": "Create a development IPv6 pool - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nCreate a development IPv6 pool\nFollow the steps in this section to create a development pool within your IPv6 Regional\n        pool. If you only need a Regional pool and don't need development pools, skip to\nAllocate CIDRs\n.\nThe following example shows the hierarchy of the pool structure that you can create with\n        the instructions in this guide. At this step, you are creating a development IPAM\n        pool:\nIPAM operating in AWS Region 1 and AWS Region 2\nPublic scope\nRegional pool in AWS Region 1 (2001:db8::/52)\nDevelopment pool\n                                            (2001:db8::/54)\nAllocation for a VPC (2001:db8::/56)\nIn the preceding example, the CIDRs that are used are examples only. They illustrate that\n        each pool within the top-level pool is provisioned with a portion of the top-level\n        CIDR.\nAWS Management Console\nTo create a development pool within an IPv6 Regional pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose\nCreate pool\n.\nUnder\nIPAM scope\n, choose the  public scope. For\n                            more information about scopes, see\nHow IPAM works\n.\nBy default, when you create a pool, the default private scope is\n                            selected. Pools in the private scope must be IPv4 pools. Pools in the\n                            public scope can be IPv4 or IPv6 pools. The public scope is intended for\n                            all space that can be or is currently advertised by AWS to the\n                            internet.\n(Optional) Add a\nName tag\nfor the pool and a description for the pool.\nUnder\nSource\n, choose\nIPAM\n                            pool\n. Then, under\nSource pool\n, choose the IPv6 Regional\n                            pool.\nUnder\nResource planning\n, leave\nPlan IP\n                            space within the scope\nselected. For more information\n                            about using this option to plan for subnet IP space within a VPC, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\n(Optional) Choose a CIDR to provision for the pool. You can only provision a CIDR\n                            that was provisioned to the top-level pool. You can create a pool\n                            without a CIDR, but you won\u00e2\u0080\u0099t be able to use the pool for allocations\n                            until you\u00e2\u0080\u0099ve provisioned a CIDR for it. You can add CIDRs to a pool at\n                            any time by editing the pool.\nYou have the same allocation rule options here as you did when you\n                            created the IPv6 Regional pool. See\nCreate a Regional IPv6 pool\nfor an explanation of the options\n                            that are available when you create pools. The allocation rules for the\n                            pool are not inherited from the pool above it in the hierarchy. If you\n                            do not apply any rules here, no allocation rules will be set for the\n                            pool.\n(Optional) Choose\nTags\nfor the pool.\nWhen you\u00e2\u0080\u0099ve finished configuring your pool, choose\nCreate\n                            pool\n.\nSee\nAllocate CIDRs\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation. The\n                    documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to create an IPv6 Regional pool in your\n                    IPAM:\nGet the ID of the scope that you want to create the pool in:\ndescribe-ipam-scopes\nGet the ID of the pool that you want to create the pool in:\ndescribe-ipam-pools\nCreate the pool:\ncreate-ipam-pool\nView the new pool:\ndescribe-ipam-pools\nRepeat these steps to create additional development pools within the IPv6 Regional pool,\n        as needed.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a Regional IPv6 pool\nAllocate CIDRs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/allocate-cidrs-ipam.html": "Allocate CIDRs - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nAllocate CIDRs\nFollow the steps in this section to allocate a CIDR from an IPAM pool to a resource.\nNote\nThe terms\nprovision\nand\nallocate\nare used throughout this user guide and the IPAM console.\nProvision\nis used when you add a CIDR to an IPAM pool.\nAllocate\nis used when you associate a CIDR from an IPAM pool with a\n      resource.\nYou can allocate CIDRs from an IPAM pool in the following ways:\nUse an AWS service that's integrated with IPAM, such as Amazon VPC, and select the option\n        to use an IPAM pool for the CIDR. IPAM automatically creates the allocation in the pool for\n        you.\nManually allocate a CIDR within an IPAM pool to reserve it for later use with an AWS service that's integrated with IPAM, such as Amazon VPC.\nThis section walks you through both options: how to use the AWS services integrated with\n    IPAM to provision an IPAM pool CIDR, and how to manually reserve IP address space.\nContents\nCreate a VPC that uses an IPAM pool CIDR\nManually allocate a CIDR to a pool to reserve IP address space\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a development IPv6 pool\nCreate a VPC that uses an IPAM pool CIDR\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/create-vpc-ipam.html": "Create a VPC that uses an IPAM pool CIDR - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nCreate a VPC that uses an IPAM pool CIDR\nFollow the steps in\nCreating\n        a VPC\nin the\nAmazon VPC User Guide\n. When you reach the step to\n      choose a CIDR for the VPC, you will have an option to use a CIDR from an IPAM pool.\nIf you choose the option to use an IPAM pool when you create the VPC, AWS allocates a\n      CIDR in the IPAM pool. You can view the allocation in IPAM by choosing a pool in the content\n      pane of the IPAM console and viewing the Resources tab for the pool.\nNote\nFor complete instructions using the AWS CLI, including creating a VPC, see the\nTutorials for Amazon VPC IP Address Manager\nsection.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAllocate CIDRs\nManually allocate a CIDR to a pool to reserve IP address space\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/manually-allocate-ipam.html": "Manually allocate a CIDR to a pool to reserve IP address space - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nManually allocate a CIDR to a pool to reserve IP address space\nFollow the steps in this section to manually allocate a CIDR to a pool. You might do this\n      in order to reserve a CIDR within an IPAM pool for later use. You can also reserve space in\n      your IPAM pool to represent an on-premises network. IPAM will manage that reservation for you and indicate if any CIDRs overlap with your on-premises IP space.\nAWS Management Console\nTo manually allocate a CIDR\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, the default private scope is selected. If you don\u00e2\u0080\u0099t want to use the default \n                private scope, from the dropdown menu at the top of the content pane, choose the scope you want to use. For more information about scopes, see\nHow IPAM works\n.\nIn the content pane, choose a pool.\nChoose\nActions\n>\nCreate custom\n                  allocation\n.\nChoose whether to add a specific CIDR to allocate (for example,\n10.0.0.0/24\nfor IPv4 or\n2001:db8::/52\nfor IPv6) or add a\n                CIDR by size by choosing the netmask length only (for example,\n/24\nfor\n                IPv4 or\n/52\nfor IPv6).\nChoose\nAllocate\n.\nYou can view the allocation in IPAM by choosing\nPools\nin the navigation pane, choosing a pool, and viewing the\nAllocations\ntab for the pool.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation. The\n            documentation provides detailed descriptions of the options that you can use when you\n            run the commands.\nUse the following AWS CLI commands to manually allocate a CIDR to a pool:\nGet the ID of the IPAM pool that you want to create the allocation in:\ndescribe-ipam-pools\n.\nCreate the allocation:\nallocate-ipam-pool-cidr\n.\nView the allocation:\nget-ipam-pool-allocations\n.\nTo release a manually allocated CIDR, see\nRelease an allocation\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a VPC that uses an IPAM pool CIDR\nManaging IP address space in IPAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/managing-ip-space-ipam.html": "Managing IP address space in IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nManaging IP address space in IPAM\nThe tasks in this section are optional. If you want to complete the tasks in this\n        section, and you have delegated an IPAM account, the tasks should be completed by the IPAM\n        administrator.\nFollow the steps in this section to manage your IP address space in IPAM.\nContents\nEnforce IPAM use for VPC creation\nShare an IPAM pool using AWS RAM\nProvision CIDRs to a pool\nDeprovision CIDRs from a pool\nEdit a pool\nDelete a pool\nWork with resource discoveries\nCreate additional scopes\nMove VPC CIDRs between scopes\nChange the monitoring state of VPC CIDRs\nDelete a scope\nRelease an allocation\nModify an IPAM\nDelete an IPAM\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nManually allocate a CIDR to a pool to reserve IP address space\nEnforce IPAM use for VPC creation\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/scp-ipam.html": "Enforce IPAM use for VPC creation - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nEnforce IPAM when creating VPCs\nEnforce an IPAM pool when creating VPCs\nEnforce IPAM for all but a given list of\n                OUs\nEnforce IPAM use for VPC creation\nNote\nThis section is only applicable to you if you've enabled IPAM to integrate with AWS Organizations. For more information, see\nIntegrate IPAM with accounts in an AWS Organization\n.\nThis section describes how to create a service control policy in AWS Organizations that requires members in your organization to use IPAM when they create a VPC. Service control policies (SCPs) are a type of organization policy\n        that enable you to manage permissions in your organization. For more information, see\nService control policies\nin the\nAWS Organizations User\n                Guide\n.\nEnforce IPAM when creating VPCs\nFollow the steps in this section to require members in your organization to use IPAM when creating VPCs.\nTo create an SCP and restrict VPC creation to IPAM\nFollow the steps in\nCreating an SCP\nin the\nAWS Organizations User Guide\nand enter the following text in the JSON editor:\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Deny\",\n        \"Action\": [\"ec2:CreateVpc\", \"ec2:AssociateVpcCidrBlock\"],\n        \"Resource\": \"arn:aws:ec2:*:*:vpc/*\",\n        \"Condition\":\n{\n\"Null\":\n{\n\"ec2:Ipv4IpamPoolId\": \"true\"\n            }\n        }\n     }]\n}\nAttach the policy to one or more organizational units in your organization. For more information, see\nAttaching and detaching service control policies\nin the\nAWS Organizations User Guide\n.\nEnforce an IPAM pool when creating VPCs\nFollow the steps in this section to require members in your organization to use a specific IPAM pool when creating VPCs.\nTo create an SCP and restrict VPC creation to an IPAM pool\nFollow the steps in\nCreating an SCP\nin the\nAWS Organizations User Guide\nand enter the following text in the JSON editor:\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Deny\",\n        \"Action\": [\"ec2:CreateVpc\", \"ec2:AssociateVpcCidrBlock\"],\n        \"Resource\": \"arn:aws:ec2:*:*:vpc/*\",\n        \"Condition\":\n{\n\"StringNotEquals\":\n{\n\"ec2:Ipv4IpamPoolId\": \"ipam-pool-0123456789abcdefg\"\n            }\n          }\n    }]\n}\nChange the\nipam-pool-0123456789abcdefg\nexample value to the IPv4 pool ID you would\n                like to restrict users to.\nAttach the policy to one or more organizational units in your organization. For more information, see\nAttaching and detaching service control policies\nin the\nAWS Organizations User Guide\n.\nEnforce IPAM for all but a given list of\n                OUs\nFollow the steps in this section to enforce IPAM for all but a given list of\n            Organizational Units (OUs). The policy described in this section requires OUs in the\n            organization\nexcept\nfor\nthe OUs that you specify in\naws:PrincipalOrgPaths\nto use IPAM to create and expand VPCs. The listed\n            OUs can either use IPAM when creating VPCs or specify an IP address range\n            manually.\nTo create an SCP and enforce IPAM for all but a given list of OUs\nFollow the steps in\nCreating an SCP\nin the\nAWS Organizations User Guide\nand\n                    enter the following text in the JSON editor:\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Deny\",\n\t    \"Action\": [\"ec2:CreateVpc\", \"ec2:AssociateVpcCidrBlock\"],\n\t    \"Resource\": \"arn:aws:ec2:*:*:vpc/*\",\n\t    \"Condition\":\n{\n\"Null\":\n{\n\"ec2:Ipv4IpamPoolId\": \"true\"\n                },\n\t        \"ForAllValues:StringNotLike\":\n{\n\"aws:PrincipalOrgPaths\": [\n\t                \"o-a1b2c3d4e5/r-ab12/ou-ab12-11111111/ou-ab12-22222222/\",\n\t                \"o-a1b2c3d4e5/r-ab12/ou-ab13-22222222/ou-ab13-33333333/\"\n\t            ]\n                }\n            }\n     }]\n}\nRemove the example values (like\no-a1b2c3d4e5/r-ab12/ou-ab12-11111111/ou-ab12-22222222/\n) and add\n                    the AWS Organizations entity paths of the OUs that you want to have the option\n                    (but not require) to use IPAM. For more information about entity path, see\nUnderstand the AWS Organizations entity path\nand\naws:PrincipalOrgPaths\nin the\nAWS Identity and Access Management User\n                        Guide\n.\nAttach the policy to your organization root. For more information, see\nAttaching and detaching service control policies\nin the\nAWS Organizations User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nManaging IP address space in IPAM\nShare an IPAM pool using AWS RAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/share-pool-ipam.html": "Share an IPAM pool using AWS RAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nShare an IPAM pool using AWS RAM\nFollow the steps in this section to share an IPAM pool using AWS Resource Access Manager\n        (RAM). When you share an IPAM pool with RAM, \u00e2\u0080\u009cprincipals\u00e2\u0080\u009d can allocate CIDRs from the pool\n        to AWS resources, such as VPCs, from their respective accounts. A principal is a concept\n        in RAM that means any AWS account, IAM role or organizational unit in AWS Organizations.\n        For more information, see\nSharing\n            your AWS resources\nin the\nAWS RAM User\n            Guide\n.\nNote\nYou can only share an IPAM pool with AWS RAM if you've integrated IPAM with AWS Organizations. For \n            more information, see\nIntegrate IPAM with accounts in an AWS Organization\n. You cannot share an \n            IPAM pool with AWS RAM if you are a single account IPAM user.\nYou must enable resource sharing with AWS Organizations in AWS RAM. For \n            more information, see\nEnable resource sharing within AWS Organizations\nin the\nAWS RAM User Guide\n.\nRAM sharing is only available in the home AWS Region of your IPAM. You must create the share in\n                the AWS Region that the IPAM is in, not in the Region of the IPAM pool.\nThe account that creates and deletes IPAM pool resource shares must have the\n                    following permissions in the IAM policy attached to their IAM role:\nec2:PutResourcePolicy\nec2:DeleteResourcePolicy\nYou can add multiple IPAM pools to a RAM share.\nAWS Management Console\nTo share an IPAM pool using RAM\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, the default private scope is selected. If you don\u00e2\u0080\u0099t want to use the default \n                            private scope, from the dropdown menu at the top of the content pane, choose the scope you want to use. For more information about scopes, see\nHow IPAM works\n.\nIn the content pane, choose the pool you want to share and choose\nActions\n>\nView details\n.\nUnder\nResource sharing\n, choose\nCreate resource share\n. As a result, the AWS RAM console opens. You'll create the shared pool in AWS RAM.\nChoose\nCreate a resource share\n.\nAdd a\nName\nfor the shared resource.\nUnder\nSelect resource type\n, select IPAM pools and choose\n                            one or more IPAM pools.\nChoose\nNext\n.\nChoose one of the permissions for the resource share:\nAWSRAMDefaultPermissionsIpamPool\n: Choose this permission to\n                                    allow principals to view the CIDRs and allocations in the shared\n                                    IPAM pool and allocate/release CIDRs in the pool.\nAWSRAMPermissionIpamPoolByoipCidrImport\n: Choose this\n                                    permission to allow principals to import BYOIP CIDRs into the shared IPAM pool. You will \n                                    need this permission only if you have existing BYOIP CIDRs and you want to import them to IPAM and \n                                    share them with principals. For additional information on BYOIP CIDRs to IPAM, \n                                    see\nTutorial: Transfer a BYOIP IPv4 CIDR to IPAM\n.\nChoose the principals that are allowed to access this resource. If principals will be importing existing BYOIP CIDRs \n                            to this shared IPAM pool, add the BYOIP CIDR owner account as principal.\nReview the resource share options and the principals you\u00e2\u0080\u0099ll be sharing with and choose\nCreate\n.\nCommand line\nThe command(s) in this section link to the AWS CLI Reference documentation. There you\u00e2\u0080\u0099ll find detailed descriptions \n                    of the options you can use when you run the command(s).\nUse the following AWS CLI commands to share an IPAM pool using RAM:\nGet the ARN of the IPAM:\ndescribe-ipam-pools\nCreate the resource share:\ncreate-resource-share\nView the resource share:\nget-resource-shares\nAs a result of creating the resource share in RAM, other principals can now allocate CIDRs\n        to resources using the IPAM pool. For information on monitoring resources \n        created by principals, see\nMonitor CIDR usage by resource\n. For more information\n        on how to create a VPC and allocate a CIDR from a shared IPAM pool, see\nCreating a VPC\nin the\nAmazon VPC User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nEnforce IPAM use for VPC creation\nProvision CIDRs to a pool\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/prov-cidr-ipam.html": "Provision CIDRs to a pool - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nProvision CIDRs to a pool\nFollow the steps in this section to provision CIDRs to a pool. If you already provisioned\n        a CIDR when you created the pool, you might need to provision additional CIDRs if a pool is\n        nearing full allocation. To monitor pool usage, see\nMonitor CIDR usage with the IPAM dashboard\n.\nNote\nThe terms\nprovision\nand\nallocate\nare used throughout this user guide and the IPAM console.\nProvision\nis used when you add a CIDR to an IPAM\n            pool.\nAllocate\nis used when you associate a CIDR from\n            an IPAM pool with a VPC or Elastic IP address.\nAWS Management Console\nTo provision CIDRs to a pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, the default private scope is selected. If you don\u00e2\u0080\u0099t want to use the default \n                            private scope, from the dropdown menu at the top of the content pane, choose the scope you want to use. For more information about scopes, see\nHow IPAM works\n.\nIn the content pane, choose the pool that you want to add a CIDR\n                            to.\nChoose\nActions\n>\nProvision\n                                CIDRs\n.\nEnter the CIDR that you want to add, and then choose\nAdd new\n                            CIDR\nfor additional CIDRs.\nNote\nBy default, you can add one Amazon-provided IPv6 CIDR\n                                        block to a Regional pool. For information on increasing the\n                                        default limit, see\nQuotas for your IPAM\n.\nThe CIDR you want to provision must be available in the scope.\nIf you are provisioning CIDRs to a pool within a pool, then the CIDR space you want to\n                                    provision must be available in the pool.\nChoose\nRequest provisioning\n.\nYou can view the CIDR in IPAM by choosing\nPools\nin the navigation pane, choosing a pool, and viewing the CIDRs tab for\n                            the pool.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to provision CIDRs to a pool:\nGet the ID of an IPAM pool:\ndescribe-ipam-pools\nGet the CIDRs that are provisioned to the pool:\nget-ipam-pool-cidrs\nProvision a new CIDR to the pool:\nprovision-ipam-pool-cidr\nGet the CIDRs that are provisioned to the pool and view the new CIDR:\nget-ipam-pool-cidrs\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nShare an IPAM pool using AWS RAM\nDeprovision CIDRs from a pool\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/depro-pool-cidr-ipam.html": "Deprovision CIDRs from a pool - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nDeprovision CIDRs from a pool\nFollow the steps in this section to deprovision CIDRs from an IPAM pool. \n        When you deprovision all pool CIDRs, the pool can no longer be used for allocations. \n        You must first provision a new CIDR to the pool before you can use the pool for allocations.\nImportant\nYou cannot deprovision the CIDR if there are allocations in the pool. To remove allocations, \n        see\nRelease an allocation\n.\nAWS Management Console\nTo deprovision a pool CIDR\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nFrom the dropdown menu at the top of the content pane, choose the\n                            scope that you want to use. For more information about scopes, see\nHow IPAM works\n.\nIn the content pane, choose the pool whose CIDRs you want to deprovision.\nChoose the\nCIDRs\ntab.\nSelect one or more CIDRs and choose\nDeprovision CIDRs\n.\nChoose\nDeprovision CIDR\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to deprovision a pool CIDR:\nGet an IPAM pool ID:\ndescribe-ipam-pools\nView your current CIDRs for the pool:\nget-ipam-pool-cidrs\nDeprovision CIDRs:\ndeprovision-ipam-pool-cidr\nView your updated CIDRs:\nget-ipam-pool-cidrs\nTo provision a new CIDR to the pool, see Deprovision CIDRs from a pool. If you want to delete the pool, see\nDelete a pool\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nProvision CIDRs to a pool\nEdit a pool\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/mod-pool-ipam.html": "Edit a pool - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nEdit a pool\nFollow the steps in this section to edit an IPAM pool. You may want to edit a pool to\n        change the allocation rules in the pool. For more information about allocation rules, see\nCreate a top-level IPv4 pool\n.\nAWS Management Console\nTo edit a pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, the default private scope is selected. If you don\u00e2\u0080\u0099t want to use the default \n                        private scope, from the dropdown menu at the top of the content pane, choose the scope you want to use. For more information about scopes, see\nHow IPAM works\nIn the content pane, choose the pool whose CIDR you want to\n                            edit.\nChoose\nActions\n>\nEdit\n.\nMake any changes you need to the pools. For information about pool\n                            configuration options, see\nCreate a top-level IPv4 pool\n.\nChoose\nUpdate\n.\nCommand line\nUse the following AWS CLI commands to edit a pool:\nGet an IPAM pool ID:\ndescribe-ipam-pools\nModify the pool:\nmodify-ipam-pool\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDeprovision CIDRs from a pool\nDelete a pool\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/delete-pool-ipam.html": "Delete a pool - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nDelete a pool\nFollow the steps in this section to delete an IPAM pool.\nImportant\nYou cannot delete an IP address pool if there are allocations in it. \n        You must first release the allocations \n        and\nDeprovision CIDRs from a pool\nbefore you can delete the pool.\nAWS Management Console\nTo delete a pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nFrom the dropdown menu at the top of the content pane, choose the\n                            scope that you want to use. For more information about scopes, see\nHow IPAM works\n.\nIn the content pane, choose the pool whose CIDR you want to delete.\nChoose\nActions\n>\nDelete\n                            pool\n.\nEnter\ndelete\nand then choose\nDelete\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to delete a pool:\nView pools and get an IPAM pool ID:\ndescribe-ipam-pools\nDelete a pool:\ndelete-ipam-pool\nView your pools:\ndescribe-ipam-pools\nTo create a new pool, see\nCreate a top-level IPv4 pool\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nEdit a pool\nWork with resource discoveries\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/res-disc-work-with.html": "Work with resource discoveries - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nWork with resource discoveries\nA resource discovery is an IPAM component that enables IPAM to manage and monitor resources that belong to the owning account. A resource discovery is created by default when you create an IPAM. You can also create a resource discovery independently of an IPAM and integrate it with an IPAM owned by another account or organization. If the resource discovery owner is the delegated administrator of an organization, IPAM will monitor resources for all members of the organization.\nNote\nCreating, sharing, and associating resource discoveries is part of the process of integrating\n        IPAM with accounts outside of your organizations (see\nIntegrate IPAM with accounts outside of your organization\n). If you are not creating\n        an IPAM and integrating it with accounts outside your organization, you do not need to create, share, or associate resource discoveries.\nContents\nCreate a resource discovery\nView resource discovery details\nShare a resource discovery\nAssociate a resource discovery with an IPAM\nDisassociate a resource discovery\nDelete a resource discovery\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDelete a pool\nCreate a resource discovery\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/res-disc-work-with-create.html": "Create a resource discovery - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nCreate a resource discovery\nThis section describes how to create a resource discovery. A resource discovery is\n            created by default when you create an IPAM. The default quota for resource discoveries per Region is 1. For more information about IPAM quotas, see\nQuotas for your IPAM\n.\nNote\nCreating, sharing, and associating resource discoveries is part of the process of integrating\n                IPAM with accounts outside of your organizations (see\nIntegrate IPAM with accounts outside of your organization\n). If you are not creating\n                    an IPAM and integrating it with accounts outside your organization, you do not need to create, share, or associate resource discoveries.\nIf you are integrating an IPAM with accounts outside of your organizations, this is a\n            required step that must be completed by the\nSecondary Org Admin\n                Account\n. For more information about the roles involved in this process,\n            see\nProcess overview\n.\nAWS Management Console\nTo create a resource discovery\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nResource discoveries\n.\nChoose\nCreate resource discovery\n.\nSelect\nAllow Amazon VPC IP Address Manager to replicate data from source account(s) into the IPAM delegate account\n. If you do not select this option, you cannot create a resource discovery.\n(Optional) Add a\nName\ntag to the resource discovery. A tag is a label that you assign to an AWS resource. Each tag consists of a key and an optional value. You can use tags to search and filter your resources or track your AWS costs.\n(Optional) Add a description.\nUnder\nOperating regions\n, select the AWS Regions in which resources will be discovered. The current Region will automatically be set as one of the operating Regions. If you\u00e2\u0080\u0099re creating the resource discovery so that you can share it with an IPAM in operating Region\nus-east-1\n, make sure you select\nus-east-1\nhere. If you forget an operating Region, you can return at a later time and edit your resource discovery settings.\nNote\nIn most cases, the resource discovery should have the same operating Regions as the IPAM or you will only get resource discovery in that one Region.\n(Optional) Choose any additional\nTags\nfor the pool.\nChoose\nCreate\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                        The documentation provides detailed descriptions of the options that you can use\n                        when you run the commands.\nCreate a resource discovery:\ncreate-ipam-resource-discovery\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWork with resource discoveries\nView resource discovery details\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/res-disc-work-with-view.html": "View resource discovery details - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nView resource discovery details\nThis section describes how to view the details for a resource discovery. These include\n            the resource CIDRs and discovery statuses of accounts monitored under your resource\n            discovery.\nAWS Management Console\nTo view resource discovery details\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nResource discoveries\n.\nChoose a resource discovery.\nUnder\nResource discovery details\n, view details related to the resource discovery, such as Default, which indicates whether the resource discovery is the default. The default resource discovery is the resource discovery automatically created when you create an IPAM.\nIn the tabs, view the details of a resource discovery:\nDiscovered resources\n- Resources monitored under a resource\n                                        discovery. IPAM monitors CIDRs from the following resource\n                                        types VPCs, Public IPv4 pools, VPC subnets, and Elastic IP\n                                        addresses.\nName (Resource ID)\n\u00e2\u0080\u0093 Resource discovery ID.\nIP usage\n\u00e2\u0080\u0093 The percentage of IP address space in use. To\n                                                convert the decimal to a percentage, multiply the\n                                                decimal by 100. Note the following \u00e2\u0080\u0093\nFor resources that are VPCs, this is the percentage of IP address space in the VPC that's taken up by subnet CIDRs.\nFor resources that are subnets, if the subnet has an IPv4 CIDR provisioned to it, this is the percentage of IPv4 address space in the subnet that's in use. If the subnet has an IPv6 CIDR provisioned to it, the percentage of IPv6 address space in use is not represented. The percentage of IPv6 address space in use cannot currently be calculated.\nFor resources that are public IPv4 pools, this is the percentage of IP address space in the\n                                                  pool that's been allocated to Elastic IP addresses\n                                                  (EIPs).\nCIDR\n\u00e2\u0080\u0093 Resource CIDR.\nRegion\n\u00e2\u0080\u0093 Resource Region.\nOwner ID\n\u00e2\u0080\u0093 Resource owner ID.\nSample time\n\u00e2\u0080\u0093 The last successful resource discovery\n                                                time.\nDiscovered accounts\n: AWS accounts being monitored under a resource discovery. If you have integrated IPAM with AWS Organizations, all accounts in the organization are discovered accounts.\nAccount ID\n\u00e2\u0080\u0093 The account ID.\nRegion\n\u00e2\u0080\u0093 The AWS Region that the account information is\n                                                returned from.\nLast attempted discovery time\n\u00e2\u0080\u0093 The last attempted resource\n                                                discovery time.\nLast successful discovery time\n\u00e2\u0080\u0093 The last successful resource\n                                                discovery time.\nStatus\n\u00e2\u0080\u0093 Resource discovery failure reason.\nOperating regions\n\u00e2\u0080\u0093 The operating Regions for the resource\n                                        discovery.\nResource sharing\n\u00e2\u0080\u0093 If the resource discovery has been shared,\n                                        the resource share ARN is listed.\nResource share ARN\n\u00e2\u0080\u0093 Resource share ARN.\nStatus\n\u00e2\u0080\u0093 The current status of the resource share. Possible\n                                                values are:\nActive\n\u00e2\u0080\u0093 Resource share is active and available for\n                                                  use.\nDeleted\n\u00e2\u0080\u0093 Resource share is deleted and is no longer\n                                                  available for use.\nPending\n\u00e2\u0080\u0093 An invitation to accept the resource share is\n                                                  waiting for a response.\nCreated at\n\u00e2\u0080\u0093 When the resource share was created.\nTags\n\u00e2\u0080\u0093 A tag is a label that you assign to an AWS resource.\n                                        Each tag consists of a key and an optional value. You can\n                                        use tags to search and filter your resources or track your\n                                        AWS costs.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                        The documentation provides detailed descriptions of the options that you can use\n                        when you run the commands.\nView resource discovery details:\ndescribe-ipam-resource-discovery\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a resource discovery\nShare a resource discovery\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/res-disc-work-with-share.html": "Share a resource discovery - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nShare a resource discovery\nFollow the steps in this section to share a resource discovery using AWS Resource Access Manager. For more information about AWS RAM, see\nSharing your AWS resources\nin the\nAWS RAM User Guide\n.\nNote\nCreating, sharing, and associating resource discoveries is part of the process of integrating\n            IPAM with accounts outside of your organizations (see\nIntegrate IPAM with accounts outside of your organization\n). If you are not creating\n            an IPAM and integrating it with accounts outside your organization, you do not need to create, share, or associate resource discoveries.\nWhen you create an IPAM that monitors accounts outside your organization, the\n            Secondary Org Admin Account shares their resource discovery with the Primary Org IPAM\n            Account using AWS RAM. You must first share a resource discovery with the Primary Org IPAM\n            Account before the Primary Org IPAM Account can associate the resource discovery with\n            their IPAM. For more information about the roles involved in this process, see\nProcess overview\n.\nNote\nWhen you create a resource share using AWS RAM to share a resource discovery, you must create the resource share in the home Region of the Primary Org IPAM.\nThe account that creates and deletes a resource share for a resource discovery must have the\n                        following permissions in their IAM policy:\nec2:PutResourcePolicy\nec2:DeleteResourcePolicy\nIf you are integrating an IPAM with accounts outside of your organizations, this is a\n            required step that must be completed by the\nSecondary Org Admin\n                Account\n.\nAWS Management Console\nTo share a resource discovery\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nResource discoveries\n.\nChoose the\nResource sharing\ntab.\nChoose\nCreate resource share\n. The AWS RAM console opens, which is where you will create the resource share.\nIn the AWS RAM console, choose\nSettings\n.\nChoose\nEnable sharing with AWS Organizations\n, and then choose\nSave settings\n.\nChoose\nCreate a resource share\n.\nAdd a\nName\nfor the shared resource.\nUnder\nSelect resource type\n, select\nIPAM Resource Discovery\n, and choose the resource discovery.\nChoose\nNext\n.\nUnder\nAssociate permissions\n, you can view the default permission that will be enabled for principals that are granted access to this resource share:\nAWSRAMPermissionIpamResourceDiscovery\nActions allowed by this permission:\nec2:AssociateIpamResourceDiscovery\nec2:GetIpamDiscoveredAccounts\nec2:GetIpamDiscoveredPublicAddresses\nec2:GetIpamDiscoveredResourceCidrs\nSpecify the principals that are allowed access to the shared resource. For\nPrincipals\n, choose the Primary Org IPAM Account, and then choose\nAdd\n.\nChoose\nNext\n.\nReview the resource share options and the principals that you\u00e2\u0080\u0099ll be sharing with. Then choose\nCreate resource share\n.\nAfter a resource discovery is shared, it must be accepted by the Primary Org IPAM Account and\n                                then associated with an IPAM by the Primary Org IPAM Account. For\n                                more information, see\nAssociate a resource discovery with an IPAM\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nCreate the resource share:\ncreate-resource-share\nView the resource share:\nget-resource-shares\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nView resource discovery details\nAssociate a resource discovery with an IPAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/res-disc-work-with-associate.html": "Associate a resource discovery with an IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nAssociate a resource discovery with an IPAM\nThis section describes how to associate a resource discovery with an IPAM. When you\n            associate a resource discovery with an IPAM, the IPAM monitors all resources CIDRs and\n            accounts discovered under the resource discovery. When you create an IPAM, a default\n            resource discovery is created for your IPAM and automatically associated with your\n            IPAM.\nThe default quota for resource discovery associations is 5. For more information (including how to adjust this quota), see\nQuotas for your IPAM\n.\nNote\nCreating, sharing, and associating resource discoveries is part of the process of integrating\n            IPAM with accounts outside of your organizations (see\nIntegrate IPAM with accounts outside of your organization\n). If you are not creating\n            an IPAM and integrating it with accounts outside your organization, you do not need to create, share, or associate resource discoveries.\nIf you are integrating an IPAM with accounts outside of your organizations, this is a\n            required step that must be completed by the\nPrimary Org IPAM\n                Account\n. For more information about the roles involved in this process,\n            see\nProcess overview\n.\nAWS Management Console\nTo associate a resource discovery\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nIPAMs\n.\nSelect\nAssociated discoveries\n, and then choose\nAssociate resource discoveries\n.\nUnder\nIPAM resource discoveries\n, choose a resource discovery that\u00e2\u0080\u0099s been shared with you by the\nSecondary Org Admin Account\n.\nChoose\nAssociate\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nAssociate a resource discovery:\nassociate-ipam-resource-discovery\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nShare a resource discovery\nDisassociate a resource discovery\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/res-disc-work-with-disassociate.html": "Disassociate a resource discovery - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nDisassociate a resource discovery\nThis section describes how to disassociate a resource discovery from an IPAM. When you\n            disassociate a resource discovery from an IPAM, the IPAM no longer monitors all\n            resources CIDRs and accounts discovered under the resource discovery.\nNote\nYou cannot disassociate a default resource discovery association. A default resource discovery\n                association is one that is created automatically when you create an IPAM. The\n                default resource discovery association is deleted, however, if you delete the\n                IPAM.\nThis step must be completed by the\nPrimary Org IPAM Account\n. For more information about the roles involved in this process, see\nProcess overview\n.\nAWS Management Console\nTo disassociate a resource discovery\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nIPAMs\n.\nSelect\nAssociated discoveries,\nand then choose\nDisassociate resource discoveries\n.\nUnder\nIPAM resource discoveries\n, choose a resource discovery that\u00e2\u0080\u0099s been shared with you by the\nSecondary Org Admin Account\n.\nChoose\nDisassociate\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nTo disassociate a resource discovery:\ndisassociate-ipam-resource-discovery\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAssociate a resource discovery with an IPAM\nDelete a resource discovery\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/res-disc-work-with-delete.html": "Delete a resource discovery - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nDelete a resource discovery\nThis section describes how to delete a resource discovery.\nNote\nYou cannot delete a default resource discovery. A default resource discovery is one that is\n                created automatically when you create an IPAM. The default resource discovery is\n                deleted, however, if you delete the IPAM.\nThis step must be completed by the\nSecondary Org Admin\n                Account\n. For more information about the roles involved in this process,\n            see\nProcess overview\n.\nAWS Management Console\nTo delete a resource discovery\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nResource discoveries\n.\nSelect a resource discovery and choose\nActions\n>\nDelete resource discovery\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                        The documentation provides detailed descriptions of the options that you can use\n                        when you run the commands.\nTo delete a resource discovery:\ndelete-ipam-resource-discovery\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDisassociate a resource discovery\nCreate additional scopes\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/add-scope-ipam.html": "Create additional scopes - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nCreate additional scopes\nFollow the steps in this section to create an additional scope.\nA scope is the highest-level container within IPAM. When you create an IPAM, IPAM creates two default scopes for you. Each scope represents the IP space for a single network. The private scope is intended for all private space. The public scope is intended for all public space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.\nWhen you create an IPAM, default scopes (one private and one public) are created for you.\n        You can create additional private scopes. You cannot create additional public scopes.\nYou can create additional private scopes if you require support for multiple disconnected\n        private networks. Additional private scopes allow you to create pools and manage resources\n        that use the same IP space.\nImportant\nIf IPAM discovers resources with private IPv4 CIDRs, the resource CIDRs are imported\n            into the default private scope and do not appear in any additional private scopes you\n            create. You can move CIDRs from the default private scope to another private scope. For\n            information, see\nMove VPC CIDRs between scopes\n.\nAWS Management Console\nTo create an additional private scope\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nScopes\n.\nChoose\nCreate scope\n.\nChoose the IPAM that you want to add the scope to.\nAdd a description for the scope.\nChoose\nCreate scope\n.\nYou can view the scope in IPAM by choosing\nScopes\nin the navigation pane.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to create an additional private scope:\nView your current scopes:\ndescribe-ipam-scopes\nCreate a new private scope:\ncreate-ipam-scope\nView your current scopes to view the new scope:\ndescribe-ipam-scopes\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDelete a resource discovery\nMove VPC CIDRs between scopes\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/move-resource-ipam.html": "Move VPC CIDRs between scopes - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nMove VPC CIDRs between scopes\nFollow the steps in this section to move a VPC CIDR from one scope to another.\nImportant\nYou can only move VPC CIDRs. When you move a VPC CIDR, the VPC's subnet CIDRs are\n                moved automatically as well.\nYou can only move VPC CIDRs from one private scope to another. You cannot move VPC CIDRs out of a public scope to a private scope or from a private scope to a public scope.\nThe same AWS account must own both scopes.\nIf a VPC CIDR is currently allocated from a pool in a private scope, the move request succeeds, but the VPC CIDR will not be moved until you release the VPC CIDR allocation from the current pool. For information on releasing an allocation, see\nRelease an allocation\n.\nAWS Management Console\nTo move a CIDR allocated to a VPC\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nResources\n.\nFrom the dropdown menu at the top of the content pane, choose the scope you want to use.\nIn the content pane, choose a VPC and view the details of the VPC.\nUnder\nVPC CIDRs\n, select one of the CIDRs allocated to the resource and choose\nActions\n>\nMove CIDR to different scope\n.\nSelect the scope you want to move the VPC CIDR to.\nChoose\nMove CIDR to different scope\n.\nCommand line\nUse the following AWS CLI commands to move a VPC CIDR:\nGet a VPC CIDR in current scope:\nget-ipam-resource-cidrs\nMove a VPC CIDR:\nmodify-ipam-resource-cidr\nGet a VPC CIDR in the other scope:\nget-ipam-resource-cidrs\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate additional scopes\nChange the monitoring state of VPC CIDRs\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/change-monitoring-state-ipam.html": "Change the monitoring state of VPC CIDRs - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nChange the monitoring state of VPC CIDRs\nFollow the steps in this section to change the monitoring state of a VPC CIDR. You may want to change a VPC CIDR from monitored to ignored\n        if you do not want IPAM to manage or monitor the VPC and allow the CIDR allocated to the VPC to be available for use. You may want to change \n        a VPC CIDR from ignored to monitored if you want IPAM to manage and monitor the VPC CIDR.\nNote\nYou cannot ignore VPC CIDRs in the public scope.\nIf a CIDR is ignored, you are still charged for the active IP addresses in the CIDR. For more information, see\nPricing for IPAM\n.\nIf a CIDR is ignored, you can still view the history of IP addresses in the CIDR. For more information, see\nView IP address history\n.\nYou can change the monitoring state of a VPC CIDR to monitored or ignored:\nMonitored\n: The VPC CIDR has been detected by IPAM and is being monitored for overlap with other CIDRs and allocation rule compliance.\nIgnored\n: The VPC CIDR has been chosen to be exempt from monitoring. \n                Ignored VPC CIDRs are not evaluated for overlap with other CIDRs or Allocation rule compliance. Once a VPC CIDR is chosen to be ignored, \n                any space allocated to it from an IPAM pool is returned to the pool and the VPC CIDR will not be imported again via auto-import \n                (if the auto-import Allocation rule is set on the pool).\nAWS Management Console\nTo change the monitoring status of a CIDR allocated to a VPC\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nResources\n.\nFrom the dropdown menu at the top of the content pane, choose the private scope you want to use.\nIn the content pane, choose the VPC and view the details of the VPC.\nUnder\nVPC CIDRs\n, select one of the CIDRs\n                            allocated to the VPC and choose\nActions\n>\nMark as ignored\nor\nUnmark as\n                                ignored\n.\nChoose\nMark as ignored\nor\nUnmark as ignored\n.\nCommand line\nUse the following AWS CLI commands to change the monitoring state of a VPC CIDR:\nGet a scope ID:\ndescribe-ipam-scopes\nView the current monitoring state for the VPC CIDR:\nget-ipam-resource-cidrs\nChange the state of the VPC CIDR:\nmodify-ipam-resource-cidr\nView the new monitoring state for the VPC CIDR:\nget-ipam-resource-cidrs\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMove VPC CIDRs between scopes\nDelete a scope\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/delete-scope-ipam.html": "Delete a scope - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nDelete a scope\nFollow the steps in this section to delete an IPAM scope.\nImportant\nYou can't delete a scope if either of the following is true:\nThe scope is a default scope. When you create an IPAM, two default scopes (one public, one\n                    private) are created automatically, and cannot be deleted. To see if a scope is\n                    a default scope, view the\nScope type\nin the details of the\n                    scope.\nThere are one or more pools in the scope. \n            You must first\nDelete a pool\nbefore you can delete the scope.\nAWS Management Console\nTo delete a scope\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nScopes\n.\nIn the content pane, choose the scope that you want to delete.\nChoose\nActions\n>\nDelete scope\n.\nEnter\ndelete\nand then choose\nDelete\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to delete a scope:\nView scopes:\ndescribe-ipam-scopes\nDelete a scope:\ndelete-ipam-scope\nView updated scopes:\ndescribe-ipam-scopes\nTo create a new scope, see\nCreate additional scopes\n. To delete the IPAM, see\nDelete an IPAM\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nChange the monitoring state of VPC CIDRs\nRelease an allocation\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/release-alloc-ipam.html": "Release an allocation - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nRelease an allocation\nFollow the steps in this section to release a CIDR allocation from an IPAM pool. An\n        allocation is a CIDR assignment from an IPAM pool to another resource or IPAM pool.\nIf you are planning to delete a pool, you might need to release a pool allocation. You cannot delete pools if the pools have CIDRs provisioned, and you cannot deprovision CIDRs if the CIDRs are allocated to resources.\nNote\nTo release a manual allocation, use the steps in this section or call the\nReleaseIpamPoolAllocation API\n.\nTo release an allocation in a private scope, you must ignore or delete the\n                    resource CIDR. For more information, see\nChange the monitoring state of VPC CIDRs\n. After some time, Amazon VPC\n                    IPAM will automatically release the allocation on your behalf.\nExample\nIf you have a VPC CIDR in a private scope, to release the allocation you\n                        must either ignore or delete \n                        the VPC CIDR. After some time, Amazon VPC IPAM will automatically release\n                        the VPC CIDR allocation from the IPAM pool.\nTo release an allocation in a public scope, you must delete the resource CIDR. You cannot\n                    ignore public resource CIDRs. For more information, see\nCleanup\nin\nBring your own public IPv4 CIDR to IPAM using only the AWS CLI\nor\nCleanup\nin\nBring your own IPv6 CIDR to IPAM using only the AWS CLI\n. After some time, Amazon VPC\n                    IPAM will automatically release the allocation on your behalf.\nFor Amazon VPC IPAM to release allocations on your behalf, all account permissions must be properly configured for either\nsingle-account use\nor\nmulti-account use\n.\nWhen you release a CIDR that\u00e2\u0080\u0099s managed by your IPAM, Amazon VPC IPAM recycles the CIDR\n        back into an IPAM pool. It takes a few minutes for the CIDR to become available for future\n        allocations. For more information about pools and allocations, see\nHow IPAM works\n.\nAWS Management Console\nTo release a pool allocation\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nFrom the dropdown menu at the top of the content pane, choose the\n                            scope you want to use. For more information about scopes, see\nHow IPAM works\n.\nIn the content pane, choose the pool that the allocation is in.\nChoose the\nAllocations\ntab.\nSelect one or more allocations. You can identify allocations by their\nResource type\n:\ncustom\n: A custom allocation.\nvpc\n: A VPC allocation.\nipam-pool\n: An IPAM pool allocation.\nec2-public-ipv4-pool\n: A public IPv4 pool allocation.\nChoose\nActions\n>\nRelease custom allocation\n.\nChoose\nDeallocate CIDR\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to release a pool allocation:\nGet an IPAM pool ID:\ndescribe-ipam-pools\nView your current allocations in the pool:\nget-ipam-pool-allocations\nRelease an allocation:\nrelease-ipam-pool-allocation\nView your updated allocations:\nget-ipam-pool-allocations\nTo add a new allocation, see\nAllocate CIDRs\n. To delete the pool after releasing allocations,\n        you must first\nDeprovision CIDRs from a pool\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDelete a scope\nModify an IPAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/delete-ipam.html": "Delete an IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nDelete an IPAM\nFollow the steps in this section to delete an IPAM. For information on increasing the\n        default number of IPAMs you can have rather than deleting an existing IPAM, see\nQuotas for your IPAM\n.\nImportant\nDeleting an IPAM removes all\n        monitored data associated with the IPAM including the historical data for CIDRs.\nAWS Management Console\nTo delete an IPAM\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nIPAMs\n.\nIn the content pane, select your IPAM.\nChoose\nActions\n>\nDelete\n                            IPAM\n.\nDo one of the following:\nChoose\nCascade delete\nto delete the IPAM, private scopes, pools in private scopes, and\n                                any allocations in the pools in private scopes. You cannot delete the IPAM with this option if there is a pool in your public scope. If you use this option, IPAM does the following:\nDeallocates any CIDRs allocated to VPC resources (such as VPCs) in pools in private scopes.\nNote\nNo VPC resources are deleted as a result of enabling this option. The CIDR associated with the resource will no longer be allocated from an IPAM pool, but the CIDR itself will remain unchanged.\nDeprovisions all IPv4 CIDRs provisioned to IPAM pools in private scopes.\nDeletes all IPAM pools in private scopes.\nDeletes all non-default private scopes in the IPAM.\nDeletes the default public and private scopes and the IPAM.\nIf you don't choose the\nCascade delete\ncheckbox, before you can delete an IPAM, you must do the following:\nRelease allocations within the IPAM pools. For more information, see\nRelease an allocation\n.\nDeprovision CIDRs provisioned to pools within the IPAM. For more information, see\nDeprovision CIDRs from a pool\n.\nDelete any additional non-default scopes. For more information, see\nDelete a scope\n.\nDelete your IPAM pools. For more information, see\nDelete a pool\n.\nEnter\ndelete\nand then choose\nDelete\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to delete an IPAM:\nView current IPAMs:\ndescribe-ipams\nDelete an IPAM:\ndelete-ipam\nView your updated IPAMs:\ndescribe-ipams\nTo create a new IPAM, see\nCreate an IPAM\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nModify an IPAM\nTracking IP address usage in IPAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tracking-ip-addresses-ipam.html": "Tracking IP address usage in IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nTracking IP address usage in IPAM\nThe tasks described in this section are optional. If you want to complete the tasks in\n        this section, and you have delegated an IPAM account, the tasks should be completed by\n        the IPAM account.\nFollow the steps in this section to track IP address usage with IPAM.\nContents\nMonitor CIDR usage with the IPAM dashboard\nMonitor CIDR usage by resource\nMonitor IPAM with Amazon CloudWatch\nView IP address history\nView public IP insights\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDelete an IPAM\nMonitor CIDR usage with the IPAM dashboard\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/monitor-cidr-usage-ipam.html": "Monitor CIDR usage with the IPAM dashboard - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nMonitor CIDR usage with the IPAM dashboard\nFollow the steps in this section to access the IPAM dashboard and view the status of all\n        CIDRs within a particular IPAM scope.\nAWS Management Console\nTo monitor CIDR usage using the IPAM dashboard\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nDashboard\n.\nBy default, when you view the dashboard, the default private scope is\n                            selected. If you don\u00e2\u0080\u0099t want to use the default private scope, from the\n                            dropdown menu at the top of the content pane, choose the scope you want\n                            to use. For more information about scopes, see\nHow IPAM works\n.\nThe dashboard presents an overview of your IPAM pools and CIDRs within a scope. You can add, remove, resize, and move widgets to customize the dashboard.\nScope\n: The details for this\n                                    scope. A scope is the highest-level container within IPAM. \n                                    An IPAM contains two default scopes, one private and one public. Each scope represents the IP \n                                    space for a single network. You may have multiple private scopes, but you can only have one public scope.\nScope ID\n: The ID for\n                                            this scope.\nScope type\n: The type\n                                            of scope.\nIPAM ID\n: The ID of\n                                            the IPAM that the scope is in.\nIPAM pools in this\n                                                scope\n: The ID of the IPAM that the scope\n                                            is in.\nView networking resources in\n                                            this scope\n: Takes you to the\nResources\nsection\n                                            of the IPAM console.\nSearch the history of an IP\n                                            address in this scope\n: Takes you to the\nSearch\n                                            IP history\nsection of the IPAM console.\nResource CIDR types\n: The\n                                    types of resource CIDRs in the scope.\nSubnet\n: The number of\n                                            CIDRs for subnets.\nVPC\n: The number of\n                                            CIDRs for VPCs.\nEIPs\n: The number of\n                                            CIDRs for Elastic IP addresses.\nPublic IPv4 pools\n:\n                                            The number of CIDRs for public IPv4 pools.\nManagement state\n: The\n                                    management state of the CIDRs.\nUnmanaged CIDRs\n: The number\n                                            of resource CIDRs for unmanaged resources in this scope.\nIgnored CIDRs\n: The number of\n                                            resource CIDRs that you have chosen to be exempt from monitoring\n                                            with IPAM in the scope. IPAM does not evaluate ignored resources\n                                            for overlap or compliance within a scope. When a resource is\n                                            chosen to be ignored, any space that's allocated to it from an\n                                            IPAM pool is returned to the pool, and the resource will not be\n                                            imported again through automatic import (if the automatic import\n                                            allocation rule is set on the pool).\nManaged CIDRs\n: The\n                                            number of resource CIDRs for manageable resources (VPCs\n                                            or public IPv4 pools) that are allocated from an IPAM\n                                            pool in the scope.\nOverlapping resource CIDRs\n:\n                                    The number of overlapping and nonoverlapping CIDRs. Overlapping\n                                    CIDRs can lead to incorrect routing in your VPCs.\nOverlapping CIDRs\n:\n                                            The number of CIDRs that currently overlap within the\n                                            IPAM pools in this scope. Overlapping CIDRs can lead to\n                                            incorrect routing in your VPCs.\nNonoverlapping CIDRs\n:\n                                            The number of resource CIDRs that do not overlap within\n                                            the IPAM pools in this scope.\nCompliant resource CIDRs\n: The\n                                    number of compliant resource CIDRs.\nCompliant CIDRs\n: The number\n                                            of resource CIDRs that comply with the allocation rules for IPAM\n                                            pools in the scope.\nNoncompliant CIDRs\n:\n                                            The number of resource CIDRs that do not comply with the\n                                            allocation rules for the IPAM pools in the scope.\nOverlap status\n: The number of\n                                    CIDRs that overlap over time.\nOverlappingResourceCidrs\n: The number of\n                                            CIDRs that overlap within the IPAM pools in this scope.\n                                            Overlapping CIDRs can lead to incorrect routing in your\n                                            VPCs.\nCompliance status\n: The number\n                                    of CIDRs that comply versus do not comply with the allocation\n                                    rules for IPAM pools in the scope over time.\nCompliantResourceCidrs\n: The number of\n                                            resource CIDRs that comply with the allocation\n                                            rules.\nNoncompliantResourceCidrs\n: The number of\n                                            resource CIDRs that do not comply with the allocation\n                                            rules.\nVPC utilization\n: VPCs (IPv4 and IPv6) with the highest or lowest IP utilization. You can use this information to configure Amazon CloudWatch alarms to be alerted if an IP utilization threshold is breached. For more information, see\nResource utilization metrics\n.\nSubnet utilization\n: Subnets (IPv4 only) with the highest or lowest IP utilization. You can use this information to decide if you want to keep or delete resources that are underutilized. For more information, see\nResource utilization metrics\n.\nVPCs with highest IPs\n                                        allocated\n: The VPCs that have the highest\n                                    percentage of IP address space allocated to subnets. This is\n                                    useful to show you if you need to provision additional IP\n                                    address space to the VPCs.\nSubnets with highest IPs\n                                        allocated\n: The subnets that have the highest\n                                    percentage of IP address space allocated to resources. This is\n                                    useful to show you if you need to provision additional IP\n                                    address space to the subnets.\nPool assignment\n: The percentage of IP space that has been\n                                    assigned to resources and manual allocations in the scope over\n                                    time.\nPool allocation\n: The percentage of a pool's IP space that has\n                                    been allocated to other pools in the scope over time.\nCommand line\nThe information displayed in the dashboard comes from metrics stored in Amazon\n                    CloudWatch. For more information about the metrics stored in Amazon CloudWatch, see\nMonitor IPAM with Amazon CloudWatch\n. \n                    Use the Amazon CloudWatch options in the\nAWS CLI Reference\nto view metrics for allocations in your IPAM\n                    pools and scopes.\nIf you find that the CIDR that's provisioned for a pool is almost fully allocated, you\n        might need to provision additional CIDRs. For more information, see\nProvision CIDRs to a pool\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTracking IP address usage in IPAM\nMonitor CIDR usage by resource\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/monitor-cidr-compliance-ipam.html": "Monitor CIDR usage by resource - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nMonitor CIDR usage by resource\nIn IPAM, a resource is an AWS service entity that is assigned an IP address or CIDR\n        block. IPAM manages some resources, but only monitors other resources.\nManaged resource\n: A managed resource has a CIDR\n                allocated from an IPAM pool. IPAM monitors the CIDR for potential IP address overlap\n                with other CIDRs in the pool, and monitors the CIDR\u00e2\u0080\u0099s compliance with a pool\u00e2\u0080\u0099s\n                allocation rules. IPAM supports managing the following type of resources:\nVPCs\nPublic IPv4 pools\nImportant\nPublic IPv4 pools and IPAM pools are managed by distinct resources in AWS. Public IPv4 pools are single account resources \n                        that enable you to convert your publicly-owned CIDRs to Elastic IP addresses. IPAM pools can be used to allocate your public space \n                        to public IPv4 pools.\nMonitored resource\n: If a resource is monitored by\n                IPAM, the resource has been detected by IPAM and you can view details about the\n                resource\u00e2\u0080\u0099s CIDR when you use\nget-ipam-resource-cidrs\nwith the AWS CLI, or\n                when you view\nResources\nin the navigation pane. IPAM supports\n                monitoring the following resources:\nVPCs\nPublic IPv4 pools\nVPC subnets\nElastic IP addresses\nThe following steps show you how to monitor CIDR usage and allocation rule compliance by\n        resource.\nAWS Management Console\nTo monitor CIDR usage by resource\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nResources\n.\nFrom the dropdown menu at the top of the content pane, choose the\n                            scope that you want to use. For more information about scopes, see\nHow IPAM works\n.\nUse the resource CIDR map to view available, allocated, and\n                            overlapping IP address space in a scope:\nAvailable\n: An IP address range is available for allocation.\nCompliant and nonoverlapping\n: An IP address range is\n                                    allocated to a resource managed by IPAM.\nOccupied\n: An IP address range is allocated to a resource.\nOverlapping\n: An IP address range has been allocated to\n                                    multiple resources and is overlapping.\nNoncompliant\n: An IP address\n                                    range is not compliant. There is a resource using the IP address\n                                    range that is not compliant with the allocation rules set up for\n                                    the pool.\nIn the CIDR map, choose an IP address block at the bottom of the map\n                            to view the resources in smaller CIDR blocks. Choose an IP address block\n                            at the top of the map to view the resources in larger CIDR\n                            blocks.\nIn the table, you can view the following details about resources in the scope:\nName (Resource ID)\n: The name\n                                    and resource ID of the resource.\nCIDR\n: The CIDR associated\n                                    with the resource.\nManagement state\n: The state\n                                    of the resource.\nManaged\n: The resource\n                                            has a CIDR allocated from an IPAM pool and is being\n                                            monitored by IPAM for potential CIDR overlap and\n                                            compliance with pool allocation rules.\nUnmanaged\n: The\n                                            resource does not have a CIDR allocated from an IPAM\n                                            pool and is not being monitored by IPAM for potential\n                                            CIDR compliance with pool allocation rules. The CIDR is\n                                            monitored for overlap.\nIgnored\n: The resource\n                                            has been chosen to be exempt from monitoring. Ignored\n                                            resources are not evaluated for overlap or allocation\n                                            rule compliance. When a resource is chosen to be\n                                            ignored, any space allocated to it from an IPAM pool is\n                                            returned to the pool and the resource will not be\n                                            imported again through automatic import (if the\n                                            automatic import allocation rule is set on the\n                                            pool).\n-\n: This resource is\n                                            not one of the types of resources that IPAM can manage.\nCompliance status\n: The\n                                    compliance status of the CIDR.\nCompliant\n: A managed\n                                            resource complies with the allocation rules of the IPAM\n                                            pool.\nNoncompliant\n: The\n                                            resource CIDR does not comply with one or more of the\n                                            allocation rules of the IPAM pool.\nIf a VPC has a CIDR that does not meet the netmask\n                                                length parameters of the IPAM pool, or if the\n                                                resource is not in the same AWS Region as the IPAM\n                                                pool, it will be flagged as noncompliant.\nUnmanaged\n: The\n                                            resource does not have a CIDR allocated from an IPAM\n                                            pool and is not being monitored by IPAM for potential\n                                            CIDR compliance with pool allocation rules. The CIDR is\n                                            monitored for overlap.\nIgnored\n: The resource\n                                            has been chosen to be exempt from monitoring. Ignored\n                                            resources are not evaluated for overlap or allocation\n                                            rule compliance. When a resource is chosen to be\n                                            ignored, any space allocated to it from an IPAM pool is\n                                            returned to the pool and the resource will not be\n                                            imported again through automatic import (if the\n                                            automatic import allocation rule is set on the\n                                            pool).\n-\n: This resource is\n                                            not one of the types of resources that IPAM can manage.\nOverlap status\n: The overlap\n                                    status of CIDR.\nNonoverlapping\n: The\n                                            resource CIDR does not overlap with another CIDR in the\n                                            same scope.\nOverlapping\n: The\n                                            resource CIDR overlaps with another CIDR in the same\n                                            scope. Note that if a resource CIDR is overlapping, it\n                                            could be overlapping with a manual allocation.\nIgnored\n: The resource\n                                            has been chosen to be exempt from monitoring. IPAM does\n                                            not evaluate ignored resources for overlap or allocation\n                                            rule compliance. When a resource is chosen to be\n                                            ignored, any space allocated to it from an IPAM pool is\n                                            returned to the pool and the resource will not be\n                                            imported again through automatic import (if the\n                                            automatic import allocation rule is set on the\n                                            pool).\n-\n: This resource is\n                                            not one of the types of resources that IPAM can manage.\nIP usage\n: For resources that\n                                    are VPCs, this is the percentage of IP address space in the VPC\n                                    that's taken up by subnet CIDRs. For resources that are subnets,\n                                    if the subnet has an IPv4 CIDR provisioned to it, this is the\n                                    percentage of IPv4 address space in the subnet that's in use. If\n                                    the subnet has an IPv6 CIDR provisioned to it, the percentage of\n                                    IPv6 address space in use is not represented. The percentage of\n                                    IPv6 address space in use cannot currently be calculated. For\n                                    resources that are public IPv4 pools, this is the percentage of\n                                    IP address space in the pool that's been allocated to Elastic IP\n                                    addresses (EIPs).\nRegion\n: The AWS Region of\n                                    the resource.\nOwner ID\n: The AWS account\n                                    ID of the person that created this resource.\nResource type\n: Whether the resource is a VPC, subnet, Elastic\n                                    IP address, or public IPv4 pool.\nPool ID\n: The ID of the IPAM\n                                    pool that the resource is in.\nUse\nFilter resources\nto filter the resources table by column property, like VPC ID or compliance status.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nUse the following AWS CLI commands to monitor CIDR usage by resource:\nGet the scope ID:\ndescribe-ipam-scopes\nRequest resource information:\nget-ipam-resource-cidrs\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMonitor CIDR usage with the IPAM dashboard\nMonitor IPAM with Amazon CloudWatch\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/cloudwatch-ipam.html": "Monitor IPAM with Amazon CloudWatch - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nMonitor IPAM with Amazon CloudWatch\nIPAM automatically stores metrics related to IP address usage (such as the IP address\n        space available in your IPAM pools and the number of resource CIDRs that comply with\n        allocation rules) and resource utilization in the\nAWS/IPAM\nAmazon CloudWatch namespace\nin the home Region of your IPAM.\nContents\nIPAM pool and scope metrics\nResource utilization metrics\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMonitor CIDR usage by resource\nIPAM pool and scope metrics\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/cloudwatch-ipam-ip-address-usage.html": "IPAM pool and scope metrics - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nIPAM pool and scope metrics\nIPAM publishes data about your IPAM pools and scopes to Amazon CloudWatch. You can use these\n            metrics to create alarms for IPAM pools to notify you if the address pools are nearing\n            exhaustion or if resources fail to comply with allocation rules set on a pool. Creating\n            alarms and setting up notifications with Amazon CloudWatch is outside the scope of this section. For more information, see\nUsing Amazon CloudWatch alarms\nin the\nAmazon CloudWatch User\n            Guide\n.\nThe metrics and dimensions that IPAM sends to Amazon CloudWatch are listed below.\nIPAM pool metrics\nMetric name\nDescription\nCompliantResourceCidrs\nThe number of managed resource CIDRs that comply with the allocation rules of the IPAM pool. For more information about allocation rules, see\nCreate a top-level IPv4 pool\n.\nNoncompliantResourceCidrs\nThe number of managed resource CIDRs that do not comply with the allocation rules of the IPAM pool. For more information about allocation rules, see\nCreate a top-level IPv4 pool\n.\nPercentAllocated\nThe percentage of a pool's IP space that has been allocated to other pools.\nPercentAssigned\nThe percentage of a pools IP space that has been allocated to resources, including manual allocations.\nPercentAvailable\nThe percentage of a pool's IP space that has not been allocated to other pools or resources.\nIPAM scope metrics\nMetric name\nDescription\nCompliantResourceCidrs\nThe number of resource CIDRs that comply with the allocation rules for IPAM pools in the scope.\nManagedResourceCidrs\nThe number of resource CIDRs for manageable resources (VPCs or public IPv4 pools) that are allocated from an IPAM pool in the scope.\nNoncompliantResourceCidrs\nThe number of resource CIDRs that do not comply with the allocation rules for the IPAM pools in the scope.\nOverlappingResourceCidrs\nThe number of resource CIDRs that overlap in the scope.\nUnmanagedResourceCidrs\nThe number of resource CIDRs in the scope that are currently associated with manageable resources but are not managed by IPAM.\nThe dimensions you can use to filter IPAM metrics are listed below.\nDimension\nDescription\nAddressFamily\nThe IP address family for resource CIDRs (IPv4 or IPv6).\nLocale\nThe AWS Region where an IPAM pool is available for allocations.\nPoolID\nThe ID of a pool.\nScopeID\nThe ID of a scope.\nFor information about monitoring VPCs with Amazon CloudWatch, see\nCloudWatch metrics for your VPCs\nin the\nAmazon Virtual Private Cloud User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMonitor IPAM with Amazon CloudWatch\nResource utilization metrics\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/cloudwatch-ipam-res-util.html": "Resource utilization metrics - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nVPC metrics\nSubnet metrics\nPublic IPv4 pool metrics\nPublic IP insight metrics\nQuick tip\nResource utilization metrics\nIPAM publishes IP utilization metrics for resources that the IPAM monitors to Amazon CloudWatch. These resources include:\nVPCs (IPv4 and IPv6)\nSubnets (IPv4)\nPublic IPv4 pools\nIPAM calculates and publishes IP utilization metrics separately by IP address family (IPv4 or IPv6). The IP utilization of a resource is calculated across all of its CIDRs of the same address family.\nFor each resource type and address family combination, IPAM uses three rules to determine which metrics to publish:\nUp to 50 resources with the highest IP utilization. You can use this information to configure alarms to be alerted if an IP utilization threshold is breached.\nUp to 50 resources with the lowest IP utilization. You can use this information to decide if you want to keep or delete resources that are underutilized.\nUp to 50 other resources. You can use this information to consistently track the\n                    IP utilization of resources that may not be captured within the high or low\n                    utilization group.\nUp to 50 VPCs containing a CIDR allocated from an IPAM pool (prioritized by total size of CIDR blocks).\nUp to 50 subnets whose VPC contains a CIDR allocated from an IPAM pool (prioritized by total size of CIDR blocks).\nUp to 50 public IPv4 pools containing a CIDR allocated from an IPAM pool (prioritized by total size of CIDR blocks).\nAfter applying each rule, the metrics are aggregated and published under the same\n            metric name for each resource type. See below for detailed information on the metric\n            names and their dimensions.\nImportant\nThere is a unique limit for each resource type, address family, and rule combination. The default value of each limit is 50. You can adjust these limits by contacting the AWS Support Center as described in\nAWS service quotas\nin\n                the\nAWS General Reference\n.\nExample\nLet\u00e2\u0080\u0099s say that your IPAM monitors 2,500 VPCs and 10,000 subnets, all with IPv4 and IPv6 CIDRs. IPAM publishes the following IP utilization metrics:\nUp to 150 metrics for VPC IPv4 IP utilization, including:\nThe 50 VPCs with the highest IPv4 IP utilization\nThe 50 VPCs with the lowest IPv4 utilization\nUp to 50 VPCs containing an IPv4 CIDR allocated from an IPAM pool\nUp to 150 metrics for VPC IPv6 utilization, including:\nThe 50 VPCs with the highest IPv6 IP utilization\nThe 50 VPCs with the lowest IPv6 utilization\nUp to 50 VPCs containing an IPv6 CIDR allocated from an IPAM pool\nUp to 150 metrics for subnet IPv4 utilization, including:\nThe 50 subnets with the highest IPv4 IP utilization\nThe 50 subnets with the lowest IPv4 IP utilization\nUp to 50 subnets whose VPC contains an IPv4 CIDR allocated from an IPAM pool\nVPC metrics\nThe VPC metric name and description is listed below.\nMetric name\nDescription\nVpcIPUsage\nThe total IPs covered by CIDRs in the VPC\u00e2\u0080\u0099s subnets divided by\n                                the total IPs covered by CIDRs in the VPC. This is calculated across\n                                all VPC CIDRs in the same IPAM Scope and separately for IPv4 and\n                                IPv6 CIDRs.\nThe dimensions you can use to filter VPC metrics are listed below.\nDimension\nDescription\nAddressFamily\nThe IP address family for resource CIDRs (IPv4 or IPv6).\nOwnerID\nThe ID of the VPC owner.\nRegion\nThe AWS Region where the VPC is located.\nScopeID\nThe ID of the IPAM scope that the VPC belongs to.\nVpcID\nThe ID of the VPC.\nSubnet metrics\nThe subnet metric name and description is listed below.\nMetric name\nDescription\nSubnetIPUsage\nThe number of active IPs divided by total IPs in the subnet's IPv4\n                                CIDR.\nThe dimensions you can use to filter subnet metrics are listed below.\nDimension\nDescription\nAddressFamily\nThe IP address family for resource CIDRs (IPv4 only).\nOwnerID\nThe ID of the subnet owner.\nRegion\nThe AWS Region where the subnet is located.\nScopeID\nThe ID of the IPAM scope that the subnet belongs to.\nSubnetID\nThe ID of the subnet.\nVpcID\nThe ID of the VPC that the subnet belongs to.\nPublic IPv4 pool metrics\nThe public IPv4 pool metric name and description is listed below.\nMetric name\nDescription\nPublicIPv4PoolIPUsage\nThe number of EIPs from the public IPv4 Pool divided by total IPs in the pool.\nThe dimensions you can use to filter the public IPv4 pool metrics are listed below.\nDimension\nDescription\nOwnerID\nThe ID of the public IPv4 pool owner.\nPublicIPv4PoolID\nThe ID of the public IPv4 pool.\nRegion\nThe AWS Region where the public IPv4 pool is located.\nScopeID\nThe ID of the IPAM scope that the public IPv4 pool  belongs to.\nPublic IP insight metrics\nThe\npublic IP insight\nmetric names and descriptions are listed below.\nMetric name\nDescription\nAmazonOwnedElasticIPs\nThe number of Amazon-owned Elastic IP addresses that you have\n                                provisioned or assigned to resources in your AWS account.\nAssociatedAmazonOwnedElasticIPs\nThe number of Amazon-owned Elastic IP addresses that you have\n                                associated with resources in your AWS account.\nAssociatedBringYourOwnIPs\nThe number of public IPv4 addresses that you have brought to\n                                AWS using Bring your own IP addresses (BYOIP) and have associated\n                                with resources in your AWS account.\nBringYourOwnIPs\nThe number of public IPv4 addresses that you have brought to\n                                AWS using Bring your own IP addresses (BYOIP).\nEC2PublicIPs\nThe number of public IPv4 addresses assigned to EC2 instances when the instances were launched into a default subnet or into a subnet configured to automatically assign a public IPv4 address.\nServiceManagedBringYourOwnIPs\nThe number of public IPv4 addresses that you have brought to\n                                AWS using Bring your own IP addresses (BYOIP) that are provisioned\n                                and managed by an AWS service.\nServiceManagedIPs\nThe number of public IPv4 addresses provisioned and managed by an\n                                AWS service.\nUnassociatedAmazonOwnedElasticIPs\nThe number of Amazon-owned Elastic IP addresses that you have not associated with resources in your AWS account.\nUnassociatedBringYourOwnIPs\nThe number of public IPv4 addresses that you have brought to AWS using Bring your own IP addresses (BYOIP) and have not associated with any resources in your AWS account.\nThe dimensions you can use to filter the public IP insight metrics are listed below.\nDimension\nDescription\nIpamId\nThe ID of the IPAM that the IP address belongs to.\nRegion\nThe AWS Region where the public IP address is located.\nQuick tip for creating alarms\nTo quickly create an Amazon CloudWatch alarm for resources with high IP address utilization, open the\n                CloudWatch console, choose\nMetrics\n,\nAll\n                    metrics\n, choose the\nQuery\ntab, choose the\nNamespace\nAWS/IPAM > VPC IP Usage Metrics\n,\nAWS/IPAM > Subnet IP Usage Metrics\n, or\nAWS/IPAM > Public IPv4 Pool IP Usage Metrics\n, choose the\nMetric\n                    name\nMAX(VpcIPUsage)\n,\nMAX(SubnetIPUsage)\n, or\nMAX(PublicIPv4PoolIPUsage)\n, and choose\nCreate alarm\n. For\n                more information, see\nCreate alarms on Metrics Insights queries\nin the\nAmazon CloudWatch User\n                        Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIPAM pool and scope metrics\nView IP address history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/view-history-cidr-ipam.html": "View IP address history - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nView IP address history\nFollow the steps in this section to view the history of an IP address or CIDR in an IPAM\n        scope. You can\n        use the historical data to analyze and audit your network security and routing\n        policies. IPAM automatically retains IP address monitoring data for up to three years.\nYou can use the IP historical data to search for the status change of IP addresses or\n        CIDRs for the following types of resources:\nVPCs\nVPC subnets\nElastic IP addresses\nEC2 instances\nEC2 network interfaces attached to instances\nImportant\nAlthough IPAM doesn't monitor Amazon EC2 instances or EC2 network interfaces that are attached to\n            instances, you can use the Search IP history feature to search for historical data on\n            EC2 instance and network interface CIDRs.\nNote\nIf you move a resource from one IPAM scope to another, \n                the previous history record ends and a new history record is created under the new scope. For more information, see\nMove VPC CIDRs between scopes\n.\nIf you transfer an Elastic IP address to an AWS account\nwithin\nthe AWS Organization that's associated with your IPAM,\n                    the history for the Elastic IP address before it was transferred will still be\n                    visible in IPAM, and a new historical record will be started. If you transfer an\n                    Elastic IP address to an AWS account\noutside\nof the AWS Organization that's associated with your\n                    IPAM, the history related to the Elastic IP address will not visible and IPAM\n                    won't show the transferred Elastic IP address. For information about\n                    transferring Elastic IP addresses, see\nTransfer an Elastic IP\n                        address\nin the\nAmazon EC2 User Guide for Linux Instances\n.\nIf you\nIntegrate IPAM with accounts outside of your organization\n, the Org1 IPAM\n                    Account will be able to see the history of CIDRs in Org1 but not Org2. The Org2\n                    Admin Account will not be able to see the history of CIDRs in Org 1 or\n                    Org2.\nAWS Management Console\nTo view the history of a CIDR\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nSearch IP\n                            history\n.\nEnter an IPv4 or IPv6 IP address or CIDR. This must be a specific CIDR\n                            for the resource.\nChoose an IPAM scope ID.\nChoose a date/time range.\nIf you want to filter the results by VPC, enter a VPC ID. Use this option if the CIDR appears\n                            in multiple VPCs.\nChoose\nSearch\n.\nCommand line\nThe commands in this section link to the AWS CLI Reference documentation.\n                    The documentation provides detailed descriptions of the options that you can use\n                    when you run the commands.\nView the history of a CIDR:\nget-ipam-address-history\nTo see examples of how you can use the AWS CLI to analyze and audit IP address usage, see\nTutorial: View IP address history using the AWS CLI\n.\nThe results of the search are organized into the following columns:\nSampled end time\n: Sampled end time of the resource-to-CIDR\n                association within the IPAM scope. Changes are picked up in periodic snapshots, so\n                the end time might have occurred before this specific time.\nSampled start time\n: Sampled start time of the\n                resource-to-CIDR association within the IPAM scope. Changes are picked up in\n                periodic snapshots, so the start time might have occurred before this specific\n                time.\nTo help explain the times that you see under Sampled start time and Sampled end time, let\u00e2\u0080\u0099s look at an example use case:\nAt 2:00 PM, a VPC was created with CIDR 10.0.0.0/16. At 3:00 PM, you create an\n                    IPAM and IPAM pool with CIDR 10.0.0.0/8, and select the auto-import option to\n                    allow IPAM to discover and import any CIDRs that fall within the 10.0.0.0/8 IP\n                    address range. Because IPAM picks up changes to CIDRs in periodic snapshots, it\n                    doesn\u00e2\u0080\u0099t discover the existing VPC CIDR until 3:05 PM. When you search for the ID\n                    of this VPC using the Search IP history feature, the Sampled start time for your\n                    VPC is 3:05 PM, which is when IPAM discovered it, not 2:00 PM, which is when you\n                    created the VPC. Now, let\u00e2\u0080\u0099s say that you decide to delete the VPC at 5:00 PM.\n                    When the VPC is deleted, the CIDR 10.0.0.0/16 that was allocated to the VPC is\n                    recycled back into the IPAM pool. IPAM takes its periodic snapshot at 5:05 PM\n                    and picks up the change. When you search for the ID of this VPC in Search IP\n                    history, 5:05 PM is the Sampled end time for the VPC\u00e2\u0080\u0099s CIDR, not 5:00 PM, which\n                    is when the VPC was deleted.\nResource ID\n: The ID generated when the resource was\n                associated with the CIDR.\nName:\nThe name of the resource (if applicable).\nCompliance status\n: The\n                compliance status of the CIDR.\nCompliant\n: A managed\n                        resource complies with the allocation rules of the IPAM\n                        pool.\nNoncompliant\n: The\n                        resource CIDR does not comply with one or more of the\n                        allocation rules of the IPAM pool.\nIf a VPC has a CIDR that does not meet the netmask\n                            length parameters of the IPAM pool, or if the\n                            resource is not in the same AWS Region as the IPAM\n                            pool, it will be flagged as noncompliant.\nUnmanaged\n: The\n                        resource does not have a CIDR allocated from an IPAM\n                        pool and is not being monitored by IPAM for potential\n                        CIDR compliance with pool allocation rules. The CIDR is\n                        monitored for overlap.\nIgnored\n: The managed\n                        resource has been chosen to be exempt from monitoring.\n                        Ignored resources are not evaluated for overlap or\n                        allocation rule compliance. When a resource is chosen to\n                        be ignored, any space allocated to it from an IPAM pool\n                        is returned to the pool and the resource will not be\n                        imported again through automatic import (if the\n                        automatic import allocation rule is set on the\n                        pool).\n-\n: This resource is\n                        not one of the types of resources that IPAM can monitor\n                        or manage.\nOverlap status\n: The overlap\n                status of CIDR.\nNonoverlapping\n: The\n                        resource CIDR does not overlap with another CIDR in the\n                        same scope.\nOverlapping\n: The\n                        resource CIDR overlaps with another CIDR in the same\n                        scope. Note that if a resource CIDR is overlapping, it\n                        could be overlapping with a manual allocation.\nIgnored\n: The managed\n                        resource has been chosen to be exempt from monitoring.\n                        IPAM does not evaluate ignored resources for overlap or\n                        allocation rule compliance. When a resource is chosen to\n                        be ignored, any space allocated to it from an IPAM pool\n                        is returned to the pool and the resource will not be\n                        imported again through automatic import (if the\n                        automatic import allocation rule is set on the\n                        pool).\n-\n: This resource is not one of the types of resources that\n                        IPAM can monitor or manage.\nResource type\nvpc\n: The CIDR is associated with a\n                        VPC.\nsubnet\n: The CIDR is associated with a VPC\n                        subnet.\neip\n: The CIDR is associated with an\n                        Elastic IP address.\ninstance\n: The CIDR is associated with an\n                        EC2 instance.\nnetwork-interface\n: The CIDR is associated\n                        with a network interface.\nVPC ID\n: The ID of the VPC that this resource\n                belongs to (if applicable).\nCIDR\n: The CIDR that's associated with this\n                resource.\nRegion\n: The AWS Region of this resource.\nOwner ID\n: The AWS account ID of the user that\n                created this resource (if applicable).\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nResource utilization metrics\nView public IP insights\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/view-public-ip-insights.html": "View public IP insights - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nView public IP insights\nA public IPv4 address is an IPv4 address that is routable from the internet. A public IPv4 address is necessary for a resource to be directly \n        reachable from the internet over IPv4. Public IPv4 addresses are charged. For more information, see\nPricing for public IPv4 addresses\nin the\nAmazon VPC User Guide\n.\nYou can view insights into the following public IPv4 address types:\nElastic IP addresses (EIPs)\n: Static, public IPv4 addresses\n                provided by Amazon that you can associate with an EC2 instance, elastic network\n                interface, or AWS resource.\nEC2 public IPv4 addresses\n: Public IPv4 addresses assigned to\n                an EC2 instance by Amazon (if the EC2 instance is launched into a default subnet or\n                if the instance is launched into a subnet that\u00e2\u0080\u0099s been configured to automatically\n                assign a public IPv4 address).\nBYOIPv4 addresses\n: Public IPv4 addresses in the IPv4 address\n                range that you\u00e2\u0080\u0099ve brought to AWS using\nBring your own IP addresses (BYOIP)\n.\nService-managed IPv4 addresses\n: Public IPv4 addresses\n                automatically provisioned on AWS resources and managed by an AWS service. For\n                example, public IPv4 addresses on Amazon ECS, Amazon RDS, or Amazon\n                Workspaces.\nYou can use Public IP insights to see the following:\nIf your IPAM is\nintegrated with accounts in an\n                    AWS Organization\n, you can view all public IPv4 addresses used by\n                services across all AWS Regions for your entire AWS Organization.\nIf your IPAM is\nintegrated with\n                    accounts outside an AWS Organization\n, you can view all public IPv4\n                addresses used by services across all AWS Regions for those accounts.\nIf your IPAM is\nintegrated with a single\n                    account\n, you can view all public IPv4 addresses used by services across\n                all AWS Regions in your account.\nPublic IP insights shows you all public IPv4 addresses used by services across Regions. You can use these insights to identify public IPv4 address usage and view recommendations to release unused Elastic IP addresses.\nPublic IP types\n: The number of public IPv4 addresses organized by type.\nAmazon-owned EIPs\n: Elastic IP addresses that you have provisioned or assigned to resources in your AWS account.\nEC2 public IPs\n: Public IPv4 addresses assigned to EC2 instances when the instances were launched into a default subnet or into a subnet that\u00e2\u0080\u0099s been configured to automatically assign a public IPv4 address.\nBYOIP\n: Public IPv4 addresses that you have brought to AWS using Bring your own IP addresses (BYOIP).\nService managed IPs\n: Public IPv4 addresses provisioned and managed by an AWS service.\nEIP usage\n: The number of Elastic IP addresses organized by how they are used.\nAssociated Amazon-owned EIPs\n: Elastic IP addresses that you have provisioned in your AWS account and that you have associated with an EC2 instance, network interface, or AWS resource.\nAssociated BYOIP\n: Public IPv4 addresses you have brought to AWS using BYOIP that you have associated with a network interface.\nUnassociated Amazon-owned EIPs\n: Elastic IP addresses that you have provisioned in your AWS account but you have not associated with a network interface.\nUnassociated BYOIP\n: Public IPv4 addresses you have brought to AWS using BYOIP but you have not associated with a network interface.\nPublic IP addresses\n: A table of public IPv4 addresses and their attributes.\nIP address\n: The public IPv4 address.\nAssociated\n: Whether or not the address is associated with an EC2 instance, network interface, or AWS resource.\nAssociated\n: The public IPv4 address is associated with an EC2 instance, network interface, or AWS resource.\nUnassociated\n: The public IPv4 address is not associated to any resource and is idle in your AWS account.\nAddress type\n: The IP address type.\nAmazon-owned EIP\n: The public IPv4 address is an Elastic IP address.\nBYOIP\n: The public IPv4 address was brought to AWS using BYOIP.\nEC2 public IP\n: The public IPv4 address was assigned automatically to an EC2 instance.\nService managed BYOIP\n: The public IPv4 address was brought to AWS using Bring your own IP (BYOIP).\nService managed IP\n: The public IPv4 address was provisioned and is managed by an AWS service.\nService\n: The service that the IP address is associated with.\nAGA\n: An AWS Global Accelerator.\nDatabase Migration Service\n: An AWS Database Migration Service (DMS) replication instance.\nRedshift\n: An Amazon Redshift cluster.\nRDS\n: An Amazon Relational Database Service (RDS) instance.\nLoad balancer (EC2)\n: An Application Load Balancer or a Network Load Balancer.\nNAT gateway (VPC)\n: An Amazon VPC public NAT gateway.\nSite-to-Site VPN\n: An AWS Site-to-Site VPN virtual private gateway.\nOther\n: Other service that is not currently identifiable.\nName (EIP ID)\n: If this public IPv4 address is an Elastic IP address allocation, this is the name and ID of the EIP allocation.\nNetwork interface ID\n: If this public IPv4 address is associated with a network interface, this is the ID of the network interface.\nInstance ID\n: If this public IPv4 address is associated with an EC2 instance, this is the instance ID.\nSecurity groups\n: If this public IPv4 address is associated with an EC2 instance, this is the name and ID of the security group assigned to the instance.\nPublic IPv4 pool\n: If this is an Elastic IP address from an IP address pool owned and managed by Amazon, the value is \"-\". If this is an Elastic IP address from an IP address range which you own and have brought to Amazon (using BYOIP), the value is the public IPv4 pool ID.\nNetwork border group\n: If the IP address is advertised, this is the AWS Region from which the IP address is advertised.\nOwner ID\n:The AWS account number of resource owner.\nSample time\n: The last successful resource discovery time.\nResource discovery ID\n: ID of the resource discovery that has discovered this public IPv4 address.\nService resource\n: Resource ARN or ID.\nIf an Elastic IP address is allocated to your account but is not associated with a network interface, a banner appears informing you that you have unassociated EIPs in your account and you should release them.\nImportant\nPublic IP insights was recently updated. If you see an error related to not having permissions to call GetIpamDiscoveredPublicAddresses, the managed permission attached to a resource discovery that was shared with you needs to be updated. Contact the person who created the resource discovery and ask them to update the managed permission\nAWSRAMPermissionIpamResourceDiscovery\nto the default version. For more information, see\nUpdate a resource share\nin the\nAWS RAM User Guide\n.\nAWS Management Console\nTo view public IP address insights\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPublic IP insights\n.\nTo view details for a public IP address, select an IP address by clicking on it.\nView the following information about the IP address:\nDetails\n: The same information visible in the columns of the main Public IP insights pane, such as the\nAddress type\nand\nService\n.\nInbound security group rules\n: If this IP address is associated with an EC2 instance, these are the security group rules that control the inbound traffic to the instance.\nOutbound security group rules\n: If this IP address is associated with an EC2 instance, these are the security group rules that control the outbound traffic from the instance.\nTags\n: Key and value pairs that act as metadata for organizing your AWS resources.\nCommand line\nYou cannot view public IPv4 insights with the AWS CLI.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nView IP address history\nTutorials\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-ipam.html": "Tutorials for Amazon VPC IP Address Manager - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nTutorials for Amazon VPC IP Address Manager\nThe following tutorials show you how to perform common IPAM tasks using the AWS CLI. \n        To get the AWS CLI, see\nAccess IPAM\n. \n        For more information about the IPAM concepts that are mentioned in these tutorials, \n        see\nHow IPAM works\n.\nContents\nCreate an IPAM and pools using the console\nCreate an IPAM and pools using the AWS CLI\nView IP address history using the AWS CLI\nBring your ASN to IPAM\nBring your IP addresses to IPAM\nTransfer a BYOIP IPv4 CIDR to IPAM\nPlan VPC IP address space for subnet IP allocations\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nView public IP insights\nCreate an IPAM and pools using the console\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-get-started-console.html": "Tutorial:\u00c2\u00a0Create an IPAM and pools using the console - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nPrerequisites\nHow AWS Organizations integrates with IPAM\nStep 1: Delegate an IPAM administrator\nStep 2: Create an IPAM\nStep 3: Create a top-level IPAM pool\nStep 4: Create Regional IPAM pools\nStep 5: Create a pre-production\n        development pool\nStep 6: Share the IPAM pool\nStep 7: Create a VPC with\n        a CIDR allocated from an IPAM pool\nStep 8: Cleanup\nTutorial:\u00c2\u00a0Create an IPAM and pools using the console\nIn this tutorial, you create an IPAM, integrate with AWS Organizations, create IP address pools, \n      and create a VPC with a CIDR from an IPAM pool.\nThis tutorial shows you how you can use IPAM to organize IP address space based on different\n      development needs. Once you\u00e2\u0080\u0099ve completed this tutorial, you\u00e2\u0080\u0099ll have one IP address pool for\n      pre-production resources. You can then create other pools based on your routing and security\n      needs, such as a pool for production resources.\nWhile you can use IPAM as a single user, integrating with AWS Organizations enables you to manage\n      IP addresses across accounts in your organization. This tutorial covers integrating IPAM with\n      accounts in an organization. It does not cover how to\nIntegrate IPAM with accounts outside of your organization\n.\nNote\nFor the purposes of this tutorial, the instructions will tell you to name IPAM resources\n      in a particular way, create IPAM resources in specific Regions, and use specific IP address\n      CIDR ranges for your pools. This is intended to streamline the choices available in IPAM and\n      get you started with IPAM quickly. Once you\u00e2\u0080\u0099ve completed this tutorial, you may decide to\n      create a new IPAM and configure it differently.\nContents\nPrerequisites\nHow AWS Organizations integrates with IPAM\nStep 1: Delegate an IPAM administrator\nStep 2: Create an IPAM\nStep 3: Create a top-level IPAM pool\nStep 4: Create Regional IPAM pools\nStep 5: Create a pre-production\n        development pool\nStep 6: Share the IPAM pool\nStep 7: Create a VPC with\n        a CIDR allocated from an IPAM pool\nStep 8: Cleanup\nPrerequisites\nBefore you begin, you must have set up an AWS Organizations account with at least one member\n      account. For how-to instructions, see\nCreating and managing an\n        organization\nin the\nAWS Organizations User Guide\n.\nHow AWS Organizations integrates with IPAM\nThis section shows an example of the AWS Organizations accounts you use in this tutorial. There are\n      three accounts in your organization that you use when you integrate with IPAM in this\n      tutorial:\nThe management account (called\nexample-management-account\nin the following image) to log into the IPAM\n          console and delegate an IPAM admin. You cannot use the organization\u00e2\u0080\u0099s management account\n          as your IPAM admin.\nA member account (called\nexample-member-account-1\nin the following image) as the IPAM admin account. The IPAM admin account is responsible\n          for creating an IPAM and using it to manage and monitor IP address usage across the\n          organization. Any member account in your organization can be delegated as the IPAM\n          admin.\nA member account (called\nexample-member-account-2\nin the following above) as the developer account. This account creates a VPC with a CIDR\n          allocated from an IPAM pool.\nIn addition to the accounts, you\u00e2\u0080\u0099ll need the ID of the organizational unit (\nou-fssg-q5brfv9c\nin the preceding image) that contains the member\n      account you\u00e2\u0080\u0099ll use as the developer account. You need this ID so that, in a later step, when\n      you share your IPAM pool, you can share it with this OU.\nNote\nFor more information about AWS Organizations account types like\nmanagement\nand\nmember\naccounts, see\nAWS Organizations\n        terminology and concepts\n.\nStep 1: Delegate an IPAM administrator\nIn this step, you\u00e2\u0080\u0099ll delegate an AWS Organizations member account as the IPAM admin. When you\n      delegate an IPAM admin,\na service-linked role\nis automatically created in each of your AWS Organizations member accounts. IPAM monitors the IP\n      address usage in these accounts by assuming the service-linked role in each member account. It\n      can then discover the resources and their CIDRs regardless of their Organizational Unit.\nYou cannot complete this step unless you have the required AWS Identity and Access Management (IAM) permissions.\n      For more information, see\nIntegrate IPAM with accounts in an AWS Organization\n.\nTo delegate an IPAM admin account\nUsing the AWS Organizations management account, open the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the AWS Management Console, choose the AWS Region in which you want to work\n          with IPAM.\nIn the navigation pane, choose\nOrganization settings\n.\nChoose\nDelegate\n. The\nDelegate\noption is\n          available only if you logged in to the console as the AWS Organizations management account.\nEnter the AWS account ID for an organization member account. The IPAM administrator\n          must be an AWS Organizations member account, not the management account.\nChoose\nSave changes\n. The\nDelegated\n          administrator\ninformation is populated with details related to the member\n          account.\nStep 2: Create an IPAM\nIn this step you\u00e2\u0080\u0099ll create an IPAM. When you create an IPAM, IPAM automatically creates\n      two scopes for the IPAM: the private scope that\u00e2\u0080\u0099s intended for all private space, and the\n      public scope that\u00e2\u0080\u0099s intended for all public space. The\n      scopes, together with pools and allocations, are key components of your IPAM. For more\n      information, see\nHow IPAM works\n.\nTo create an IPAM\nUsing the AWS Organizations member account delegated as the IPAM admin in\nthe\n          previous step\n, open the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the AWS Management Console, choose the AWS Region in which you want to create\n        the IPAM. Create the IPAM in your main Region of operations.\nOn the service home page, choose\nCreate IPAM\n.\nSelect\nAllow Amazon VPC IP Address Manager to replicate data\n        from source account(s) into the IPAM delegate account\n. If you do not select\n        this option, you cannot create an IPAM.\nUnder\nOperating Regions\n, choose the AWS Regions\n        in which this IPAM can manage and discover resources. The AWS Region in which you are\n        creating your IPAM is automatically selected as one of the operating Regions. In this\n        tutorial, the home Region of our IPAM is us-east-1, so we\u00e2\u0080\u0099ll choose us-west-1 and\n        us-west-2 as additional operating Regions. If you forget an operating Region, you can edit\n        your IPAM settings later and add or remove Regions.\nChoose\nCreate IPAM\n.\nStep 3: Create a top-level IPAM pool\nIn this tutorial, you create a hierarchy of pools starting with the top-level IPAM pool. In\n      the subsequent steps, you\u00e2\u0080\u0099ll create a pair of Regional pools and a pre-production development\n      pool in one of the regional pools.\nFor more information about pool hierarchies that you can build with IPAM, see\nExample IPAM pool plans\n.\nTo create a top-level pool\nUsing the IPAM admin account, open the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose the private scope.\nChoose\nCreate pool\n.\nUnder\nIPAM scope\n, leave the private scope selected.\n(Optional) Add a\nName tag\nfor the pool and a\n        description for the pool, such as \u00e2\u0080\u009cGlobal pool\u00e2\u0080\u009d.\nUnder\nSource\n, choose\nIPAM scope\n. Because this is our\n          top level pool, it will not have a source pool.\nUnder\nAddress family\n, choose\nIPv4\n.\nUnder\nResource planning\n, leave\nPlan IP\n          space within the scope\nselected. For more information\n          about using this option to plan for subnet IP space within a VPC, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\nFor the\nLocale\n, choose\nNone\n.\n        Locales are the AWS Regions where you want this IPAM pool to be available for\n        allocations. You\u00e2\u0080\u0099ll set the locale for the Regional pools that you create in the next\n        section of this tutorial.\nChoose a CIDR to provision for the pool. In this example, we provision 10.0.0.0/16.\nLeave\nConfigure this pool\u00e2\u0080\u0099s allocation rule settings\ndisabled. This is our top-level pool, and you will not be allocating CIDRs to VPCs\n        directly from this pool. Instead, you will allocate them from a sub-pool that you create\n        from this pool.\nChoose\nCreate pool\n. The pool is created and the\n        CIDR is in a\nPending-provision\nstate:\nWait for the state to be\nProvisioned\nbefore you go\n        to the next step.\nNow that you have created your top-level pool, you\u00e2\u0080\u0099ll create Regional pools in us-west-1 and\n        us-west-2.\nStep 4: Create Regional IPAM pools\nThis section shows you how to organize your IP addresses using two Regional pools. In\n      this tutorial, we\u00e2\u0080\u0099re following one of\nthe example\n        IPAM pool plans\nand creating two Regional pools which can be used by the member\n      accounts in your organization for allocating CIDRs to their VPCs.\nTo create a Regional pool\nUsing the IPAM admin account, open the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose the private scope.\nChoose\nCreate pool\n.\nUnder\nIPAM scope\n, leave the private scope selected.\n(Optional) Add a\nName tag\nfor the pool and a\n        description for the pool, such as\nRegional pool us-west-1\n.\nUnder\nSource\n, select\nIPAM pool\nand select the top-level pool\n          (\u00e2\u0080\u009cGlobal pool\u00e2\u0080\u009d) that you created in\nStep 3: Create a top-level IPAM pool\n. Then, under\nLocale\n, choose\nus-west-1\n.\nUnder\nResource planning\n, leave\nPlan IP\n          space within the scope\nselected. For more information\n          about using this option to plan for subnet IP space within a VPC, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\nUnder\nCIDRs to provision\n, enter 10.0.0.0/18, which\n        will give this pool around 16,000 available IP addresses.\nLeave\nConfigure this pool\u00e2\u0080\u0099s allocation rule settings\ndisabled. You will not be allocating CIDRs to VPCs directly from this pool. Instead, you\n        will allocate them from a sub-pool that you create from this pool.\nChoose\nCreate pool\n.\nReturn to the\nPools\nview to see the hierarchy of\n        IPAM pools that you\u00e2\u0080\u0099ve created.\nRepeat the steps in this section and create a second Regional pool in\nus-west-2\nlocale with the CIDR\n10.0.64.0/18\nprovisioned to it. When you complete that process, you\u00e2\u0080\u0099ll have\n        three pools in a hierarchy similar to this one:\nStep 5: Create a pre-production\n        development pool\nFollow the steps in this section to create a development pool for pre-production resources\n      within one of your Regional pools.\nTo create a pre-production development pool\nIn the same way that you did in the previous section, using the IPAM admin account,\n            create a pool called\nPre-prod pool\n, but this time use\nRegional pool us-west-1\nas the source pool.\nSpecify a CIDR of 10.0.0.0/20 to provision, which will give this pool around 4,000 IP\n        addresses.\nToggle the option for\nConfigure this pool's allocation rule\n        settings\n. Do the following:\nUnder\nCIDR management\n, for\nAutomatically import discovered resources\n, leave the\n            default\nDon't allow\noption selected. This option\n            would enable IPAM to automatically import resource CIDRs it discovers in the pool's\n            locale. A detailed description of this option is outside the scope of this tutorial,\n            but you can read more about the option in\nCreate a top-level IPv4 pool\n.\nUnder\nNetmask compliancy\n, choose\n/24\nfor the minimum, default, and maximum netmask length. A\n            detailed description of this option is outside the scope of this tutorial, but you can\n            read more about the option in\nCreate a top-level IPv4 pool\n. What\u00e2\u0080\u0099s important to note is that the VPC that you create\n            later with a CIDR from this pool will be limited to /24 based on what we set here.\nUnder\nTag compliance\n, enter\nenvironment/pre-prod\n. This tag will be required for VPCs to\n            allocate space from the pool. We will demonstrate later how this works.\nChoose\nCreate pool\n.\nThe pool hierarchy now includes an additional subpool under\nRegional\n          pool us-west-1\n:\nNow you\u00e2\u0080\u0099re ready to share the IPAM pool with another member account in your organization and\n      enable that account to allocate a CIDR from the pool to create a VPC.\nStep 6: Share the IPAM pool\nFollow the steps in this section to share the pre-production IPAM pool using AWS Resource Access Manager (RAM).\nThis section consists of two subsections:\nStep 6.1. Enable resource sharing in\n          AWS RAM\n: This step must be done by the\n          AWS Organizations management account.\nStep 6.2. Share an IPAM pool using AWS RAM\n: This step must be done by the\n          IPAM admin.\nStep 6.1. Enable resource sharing in\n          AWS RAM\nAfter you create your IPAM, you\u00e2\u0080\u0099ll want to share IP address pools with other accounts in\n        your organization. Before you share an IPAM pool, complete the steps in this section to\n        enable resource sharing with AWS RAM.\nTo enable resource sharing\nUsing the AWS Organizations management account, open the AWS RAM console at\nhttps://console.aws.amazon.com/ram/\n.\nIn the left navigation pane, choose\nSettings\n,\n            choose\nEnable sharing with AWS Organizations\n, and then choose\nSave settings\n.\nYou can now share an IPAM pool with other members of the organization.\nStep 6.2. Share an IPAM pool using AWS RAM\nIn this section you\u00e2\u0080\u0099ll share the pre-production development pool with another AWS Organizations\n        member account. For complete instructions on sharing IPAM pools, including information on\n        the required IAM permissions, see\nShare an IPAM pool using AWS RAM\n.\nTo share an IPAM pool using AWS RAM\nUsing the IPAM admin account, open the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose the private scope, choose the pre-production IPAM pool, and choose\nActions\n>\nView details\n.\nUnder\nResource sharing\n, choose\nCreate resource share\n. The AWS RAM console opens. You'll share\n            the pool using AWS RAM.\nChoose\nCreate a resource share\n.\nThe AWS RAM console opens.\nIn the AWS RAM console, choose\nCreate a resource share\nagain.\nAdd a\nName\nfor the shared pool.\nUnder\nSelect resource type\n, choose\nIPAM pools,\nand then choose the ARN of the pre-production\n            development pool.\nChoose\nNext\n.\nLeave the default\nAWSRAMDefaultPermissionsIpamPool\npermission selected. The details of the permission options are out of scope for this\n            tutorial, but you can find out more about these options in\nShare an IPAM pool using AWS RAM\n.\nChoose\nNext\n.\nUnder\nPrincipals\n, choose\nAllow\n          sharing only within your organization.\nEnter your AWS Organizations organization unit\n          ID (as mentioned in\nHow AWS Organizations integrates with IPAM\n, and then choose\nAdd\n.\nChoose\nNext\n.\nReview the resource share options and the principals that you\u00e2\u0080\u0099ll be sharing with,\n          and then choose\nCreate\n.\nNow that the pool has been shared, go to the next step to create a VPC with a CIDR\n        allocated from an IPAM pool.\nStep 7: Create a VPC with\n        a CIDR allocated from an IPAM pool\nFollow the steps in this section to create a VPC with a CIDR allocated from the\n      pre-production pool. This step should be completed by the member account in the OU that the\n      IPAM pool was shared with in the previous section (called\nexample-member-account-2\nin\nHow AWS Organizations integrates with IPAM\n). For more information about\n      the IAM permissions that are required to create VPCs, see\nAmazon VPC policy examples\nin the\nAmazon VPC User Guide\n.\nTo create a VPC with a CIDR allocated from an IPAM pool\nUsing the member account, open the VPC console at\nhttps://console.aws.amazon.com/vpc/\nas\n            the member account that you\u00e2\u0080\u0099ll use as the developer\n            account.\nChoose\nCreate VPC\n.\nDo the following:\nEnter a name, such as\nExample VPC.\nChoose\nIPAM-allocated IPv4 CIDR block.\nUnder\nIPv4 IPAM pool\n, choose the ID of the\n                pre-production pool.\nChoose a\nNetmask\nlength. Because you limited\n                the available netmask length for this pool to /24 (in\nStep 5: Create a pre-production\n        development pool\n), the only netmask option available\n                is /24.\nFor demonstration purposes, under\nTags\n, do not add\n          any additional tags at this time. When you created the pre-prod pool (in\n5. Create a pre-production development pool\n), you added an allocation rule that\n          required any VPCs that are created with CIDRs from this pool to have an\n          environment/pre-prod tag. Leave the environment/pre-prod tag off for now so that you can\n          see that an error appears telling you that a required tag was not added.\nChoose\nCreate VPC\n.\nAn error appears telling you that a required tag was not added. The error appears because you\n          set an allocation rule when you created the pre-prod pool (in\nStep 5: Create a pre-production\n        development pool\n). The allocation rule\n          required any VPCs that are created with CIDRs from this pool to have an environment/pre-prod tag.\nNow, under\nTags\n, add the tag\nenvironment/pre-prod\nand choose\nCreate\n            VPC\nagain.\nThe VPC is created successfully, and the VPC complies with the tag rule on the\n          pre-production pool:\nIn the\nResources\npane of the IPAM console, the IPAM\n      admin will be able to see and manage the VPC and its allocated CIDR. Note that it takes some\n      time for the VPC to appear in the\nResources\npane.\nStep 8: Cleanup\nIn this tutorial, you created an IPAM with a delegated admin, created multiple pools, and\n      enabled a member account in your organization to allocate a VPC CIDR from a pool.\nFollow the steps in this section to clean up the resources that you created in this tutorial.\nTo cleanup the resources created in this tutorial\nUsing the member account that created the example VPC, delete the VPC. For detailed\n        instructions, see\nDelete your VPC\nin the\nAmazon Virtual Private Cloud User Guide\n.\nUsing the IPAM admin account, delete the example resource share in the AWS RAM console.\n        For detailed instructions, see\nDeleting\n          a resource share in AWSAWS RAM\nin the\nAWS Resource Access Manager User Guide\n.\nUsing the IPAM admin account, log into the RAM console and disable sharing with\n        AWS Organizations that you enable in\nStep 6.1. Enable resource sharing in\n          AWS RAM\n.\nUsing the IPAM admin account, delete the example IPAM by selecting the IPAM in the\n        IPAM console and then choosing\nActions\n>\nDelete\n. For detailed instructions, see\nDelete an IPAM\n.\nWhen you\u00e2\u0080\u0099re prompted to delete the IPAM, choose\nCascade\n        delete\n. This will delete all scopes and pools within the IPAM before\n        deleting the IPAM.\nEnter\ndelete\nand then choose\nDelete\n.\nUsing the AWS Organizations management account, log into the IPAM console, choose\nSettings\n, and remove the delegated administrator account.\n(Optional) When you integrate IPAM with AWS Organizations,\nIPAM automatically\n        creates a service-linked role in each member account\n. Using each AWS Organizations member\n        account, log into IAM and delete the\nAWSServiceRoleForIPAM\nservice\n        linked role in each member account.\nCleanup is complete.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTutorials\nCreate an IPAM and pools using the AWS CLI\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-create-vpc-ipam.html": "Tutorial: Create an IPAM and pools using the AWS CLI - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nStep 1: Enable IPAM in your organization\nStep 2: Create an IPAM\nStep 3: Create an IPv4 address pool\nStep 4: Provision a CIDR to the top-level pool\nStep 5. Create a Regional pool with CIDR sourced from the\n                top-level pool\nStep 6: Provision a CIDR to the Regional pool\nStep 7. Create a RAM share for enabling IP assignments across\n                accounts\nStep 8. Create a VPC\nStep 9. Cleanup\nTutorial: Create an IPAM and pools using the AWS CLI\nFollow the steps in this tutorial to use the AWS CLI to create an IPAM, create IP address pools,\n        and allocate a VPC with a CIDR from an IPAM pool.\nThe following is an example hierarchy of the pool structure that you will create by\n        following the steps in this section:\nIPAM operating in AWS Region 1, AWS Region 2\nPrivate scope\nTop-level pool\nRegional pool in AWS Region 2\nDevelopment pool\nAllocation for a VPC\nNote\nIn this section, you'll create an IPAM. By default, you can only create one IPAM. For more\n            information, see\nQuotas for your IPAM\n. If you have\n            already delegated an IPAM account and created an IPAM, you can skip steps 1 and\n            2.\nContents\nStep 1: Enable IPAM in your organization\nStep 2: Create an IPAM\nStep 3: Create an IPv4 address pool\nStep 4: Provision a CIDR to the top-level pool\nStep 5. Create a Regional pool with CIDR sourced from the\n                top-level pool\nStep 6: Provision a CIDR to the Regional pool\nStep 7. Create a RAM share for enabling IP assignments across\n                accounts\nStep 8. Create a VPC\nStep 9. Cleanup\nStep 1: Enable IPAM in your organization\nThis step is optional. Complete this step to enable IPAM in your organization and\n            configure your delegated IPAM using the AWS CLI. For more information about the role\n            of the IPAM account, see\nIntegrate IPAM with accounts in an AWS Organization\n.\nThis request must be made from an AWS Organizations management account. When you run\n            the following command, ensure that you\u00e2\u0080\u0099re using a role with an IAM policy that permits\n            the following actions:\nec2:EnableIpamOrganizationAdminAccount\norganizations:EnableAwsServiceAccess\norganizations:RegisterDelegatedAdministrator\niam:CreateServiceLinkedRole\naws ec2 enable-ipam-organization-admin-account --region\nus-east-1\n--delegated-admin-account-id\n11111111111\nYou should see the following output, indicating that enabling was successful.\n{\n\"Success\": true\n}\nStep 2: Create an IPAM\nFollow the steps in this section to create an IPAM and view additional information\n            about the scopes that are created. You will use this IPAM when you create pools and\n            provision IP address ranges for those pools in later steps.\nNote\nThe operating Regions option determines which AWS Regions the IPAM pools can be used for.\n                For more information about operating Regions, see\nCreate an IPAM\n.\nTo create an IPAM using the AWS CLI\nRun the following command to create the IPAM instance.\naws ec2 create-ipam --description\nmy-ipam\n--region\nus-east-1\n--operating-regions\nRegionName=us-west-2\nWhen you create an IPAM, AWS automatically does the following:\nReturns a globally unique resource ID (\nIpamId\n) for the IPAM.\nCreates a default public scope (\nPublicDefaultScopeId\n) and a default private scope\n                                (\nPrivateDefaultScopeId\n).\n{\n\"Ipam\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamId\": \"ipam-0de83dba6694560a9\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-0de83dba6694560a9\",\n        \"PublicDefaultScopeId\": \"ipam-scope-02a24107598e982c5\",\n        \"PrivateDefaultScopeId\": \"ipam-scope-065e7dfe880df679c\",\n        \"ScopeCount\": 2,\n        \"Description\": \"my-ipam\",\n        \"OperatingRegions\": [\n{\n\"RegionName\": \"us-west-2\"\n            },\n{\n\"RegionName\": \"us-east-1\"\n            }\n        ],\n        \"Tags\": []\n    }\n}\nRun the following command to view additional information related to the\n                    scopes. The public scope is intended for IP addresses that are going to be\n                    accessed via public internet. The private scope is intended for IP addresses\n                    that are not going to be accessed via public internet.\naws ec2 describe-ipam-scopes --region\nus-east-1\nIn the output, you see the available scopes. You'll use the private scope ID\n                    in the next step.\n{\n\"IpamScopes\": [\n{\n\"OwnerId\": \"123456789012\",\n            \"IpamScopeId\": \"ipam-scope-02a24107598e982c5\",\n            \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-02a24107598e982c5\",\n            \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-0de83dba6694560a9\",\n            \"IpamScopeType\": \"public\",\n            \"IsDefault\": true,\n            \"PoolCount\": 0\n        },\n{\n\"OwnerId\": \"123456789012\",\n            \"IpamScopeId\": \"ipam-scope-065e7dfe880df679c\",\n            \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-065e7dfe880df679c\",\n            \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-0de83dba6694560a9\",\n            \"IpamScopeType\": \"private\",\n            \"IsDefault\": true,\n            \"PoolCount\": 0\n        }\n    ]\n}\nStep 3: Create an IPv4 address pool\nFollow the steps in this section to create an IPv4 address pool.\nImportant\nYou won't use the\n--locale\noption on this top-level pool. You will set the locale option later on the Regional pool. The locale is the AWS Region where you want a pool to be available for CIDR allocations. As a result of not setting the locale on the top-level pool, the locale will default to\nNone\n. If a pool has a locale of\nNone\n, the pool won't be available to VPC resources in any AWS Region. You can only manually allocate IP address space in the pool to reserve space.\nTo create an IPv4 address pool for all of your AWS resources using the\n                AWS CLI\nRun the following command to create an IPv4 address pool. Use the ID of the\n                    private scope of the IPAM that you created in the previous step.\naws ec2 create-ipam-pool --ipam-scope-id\nipam-scope-065e7dfe880df679c\n--description\n\"top-level-pool\"\n--address-family\nipv4\nIn the output, you'll see a state of\ncreate-in-progress\nfor the\n                    pool.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-0008f25d7187a08d9\",\n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0008f25d7187a08d9\",\n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-065e7dfe880df679c\",\n        \"IpamScopeType\": \"private\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-0de83dba6694560a9\",\n        \"Locale\": \"None\",\n        \"PoolDepth\": 1,\n        \"State\": \"create-in-progress\",\n        \"Description\": \"top-level-pool\",\n        \"AutoImport\": false,\n        \"AddressFamily\": \"ipv4\",\n        \"Tags\": []\n    }\n}\nRun the following command until you see a state of\ncreate-complete\nin the output.\naws ec2 describe-ipam-pools\nThe following example output shows the correct state.\n{\n\"IpamPools\": [\n{\n\"OwnerId\": \"123456789012\",\n            \"IpamPoolId\": \"ipam-pool-0008f25d7187a08d9\",\n            \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0008f25d7187a08d9\",\n            \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-065e7dfe880df679c\",\n            \"IpamScopeType\": \"private\",\n            \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-0de83dba6694560a9\",\n            \"Locale\": \"None\",\n            \"PoolDepth\": 1,\n            \"State\": \"create-complete\",\n            \"Description\": \"top-level-pool\",\n            \"AutoImport\": false,\n            \"AddressFamily\": \"ipv4\"\n        }\n    ]\n}\nStep 4: Provision a CIDR to the top-level pool\nFollow the steps in this section to provision a CIDR to the top-level pool, and then\n            verify that the CIDR is provisioned. For more information, see\nProvision CIDRs to a pool\n.\nTo provision a CIDR block to the pool using the AWS CLI\nRun the following command to provision the CIDR.\naws ec2 provision-ipam-pool-cidr --region\nus-east-1\n--ipam-pool-id\nipam-pool-0008f25d7187a08d9\n--cidr\n10.0.0.0/8\nIn the output, you can verify the state of the provisioning.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"10.0.0.0/8\",        \n        \"State\": \"pending-provision\"      \n    }                                     \n}\nRun the following command until you see a state of\nprovisioned\nin\n                    the output.\naws ec2 get-ipam-pool-cidrs --region\nus-east-1\n--ipam-pool-id\nipam-pool-0008f25d7187a08d9\nThe following example output shows the correct state.\n{\n\"IpamPoolCidrs\": [\n{\n\"Cidr\": \"10.0.0.0/8\",     \n            \"State\": \"provisioned\"         \n        }                                  \n    ]                                      \n}\nStep 5. Create a Regional pool with CIDR sourced from the\n                top-level pool\nWhen you create an IPAM pool, the pool belongs to the AWS Region of the IPAM by\n            default. When you create a VPC, the pool that the VPC draws from must be in the same\n            Region as the VPC. You can use the\n--locale\noption when you create a pool\n            to make the pool available to services in a Region other than the Region of the IPAM.\n            Follow the steps in this section to create a Regional pool in another locale.\nTo create a pool with a CIDR sourced from the previous pool using the\n                AWS CLI\nRun the following command to create the pool and insert space with a known\n                    available CIDR from the previous pool.\naws ec2 create-ipam-pool --description\n\"regional--pool\"\n--region\nus-east-1\n--ipam-scope-id\nipam-scope-065e7dfe880df679c\n--source-ipam-pool-id\nipam-pool-0008f25d7187a08d9\n--locale\nus-west-2\n--address-family\nipv4\nIn the output, you'll see the ID of the pool that you created. You'll need\n                    this ID in the next step.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-0da89c821626f1e4b\",\n        \"SourceIpamPoolId\": \"ipam-pool-0008f25d7187a08d9\",\n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0da89c821626f1e4b\",\n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-065e7dfe880df679c\",\n        \"IpamScopeType\": \"private\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-0de83dba6694560a9\",\n        \"Locale\": \"us-west-2\",\n        \"PoolDepth\": 2,\n        \"State\": \"create-in-progress\",\n        \"Description\": \"regional--pool\",\n        \"AutoImport\": false,\n        \"AddressFamily\": \"ipv4\",\n        \"Tags\": []\n    }\n}\nRun the following command until you see a state of\ncreate-complete\nin the output.\naws ec2 describe-ipam-pools\nIn the output, you see the pools that you have in your IPAM. In this tutorial,\n                    we created a top-level and a Regional pool, so you'll see them both.\n{\n\"IpamPools\": [\n{\n\"OwnerId\": \"123456789012\",\n            \"IpamPoolId\": \"ipam-pool-0008f25d7187a08d9\",\n            \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0008f25d7187a08d9\",\n            \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-065e7dfe880df679c\",\n            \"IpamScopeType\": \"private\",\n            \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-0de83dba6694560a9\",\n            \"Locale\": \"None\",\n            \"PoolDepth\": 1,\n            \"State\": \"create-complete\",\n            \"Description\": \"top-level-pool\",\n            \"AutoImport\": false,\n            \"AddressFamily\": \"ipv4\"\n        },\n{\n\"OwnerId\": \"123456789012\",\n            \"IpamPoolId\": \"ipam-pool-0da89c821626f1e4b\",\n            \"SourceIpamPoolId\": \"ipam-pool-0008f25d7187a08d9\",\n            \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0da89c821626f1e4b\",\n            \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-065e7dfe880df679c\",\n            \"IpamScopeType\": \"private\",\n            \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-0de83dba6694560a9\",\n            \"Locale\": \"us-west-2\",\n            \"PoolDepth\": 2,\n            \"State\": \"create-complete\",\n            \"Description\": \"regional--pool\",\n            \"AutoImport\": false,\n            \"AddressFamily\": \"ipv4\"\n        }\n    ]\n}\nStep 6: Provision a CIDR to the Regional pool\nFollow the steps in this section to assign a CIDR block to the pool, and validate that\n            it\u00e2\u0080\u0099s been successfully provisioned.\nTo assign a CIDR block to the Regional pool using the AWS CLI\nRun the following command to provision the CIDR.\naws ec2 provision-ipam-pool-cidr --region\nus-east-1\n--ipam-pool-id\nipam-pool-0da89c821626f1e4b\n--cidr\n10.0.0.0/16\nIn the output, you see the state of the pool.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"10.0.0.0/16\",       \n        \"State\": \"pending-provision\"      \n    }                                     \n}\nRun the following command until you see the state of\nprovisioned\nin the output.\naws ec2 get-ipam-pool-cidrs --region\nus-east-1\n--ipam-pool-id\nipam-pool-0da89c821626f1e4b\nThe following example output shows the correct state.\n{\n\"IpamPoolCidrs\": [\n{\n\"Cidr\": \"10.0.0.0/16\",     \n            \"State\": \"provisioned\"         \n        }                                  \n    ]                                      \n}\nRun the following command to query the top-level pool to view the allocations.\n                    The Regional pool is considered an allocation within the top-level pool.\naws ec2 get-ipam-pool-allocations --region\nus-east-1\n--ipam-pool-id\nipam-pool-0008f25d7187a08d9\nIn the output, you see the Regional pool as an allocation in the top-level\n                    pool.\n{\n\"IpamPoolAllocations\": [\n{\n\"Cidr\": \"10.0.0.0/16\",\n            \"IpamPoolAllocationId\": \"ipam-pool-alloc-fbd525f6c2bf4e77a75690fc2d93479a\",\n            \"ResourceId\": \"ipam-pool-0da89c821626f1e4b\",\n            \"ResourceType\": \"ipam-pool\",\n            \"ResourceOwner\": \"123456789012\"\n        }\n    ]\n}\nStep 7. Create a RAM share for enabling IP assignments across\n                accounts\nThis step is optional. You can complete this step only if you completed\nIntegrate IPAM with accounts in an AWS Organization\n.\nWhen you create an IPAM pool AWS RAM share, it enables IP assignments across\n            accounts. RAM sharing is only available in your home AWS Region. Note that you create\n            this share in the same Region as the IPAM, not in the local Region for the pool. All\n            administrative operations on IPAM resources are made through the home Region of your IPAM. The\n            example in this tutorial creates a single share for a single pool, but you can add\n            multiple pools to a single share. For more information, including an explanation of the\n            options that you must enter, see\nShare an IPAM pool using AWS RAM\n.\nRun the following command to create a resource share.\naws ram create-resource-share --region\nus-east-1\n--name\npool_share\n--resource-arns\narn:aws:ec2::123456789012:ipam-pool/ipam-pool-0dec9695bca83e606\n--principals\n123456\nThe output shows that the pool was created.\n{\n\"resourceShare\":\n{\n\"resourceShareArn\": \"arn:aws:ram:us-west-2:123456789012:resource-share/3ab63985-99d9-1cd2-7d24-75e93EXAMPLE\",\n        \"name\": \"pool_share\",\n        \"owningAccountId\": \"123456789012\",\n        \"allowExternalPrincipals\": false,\n        \"status\": \"ACTIVE\",\n        \"creationTime\": 1565295733.282,\n        \"lastUpdatedTime\": 1565295733.282\n    }\n}\nStep 8. Create a VPC\nRun the following command to create a VPC and assign a CIDR block to the VPC from the\n            pool in your newly created IPAM.\naws ec2 create-vpc --region\nus-east-1\n--ipv4-ipam-pool-id\nipam-pool-04111dca0d960186e\n--cidr-block\n10.0.0.0/24\nThe output shows that the VPC was created.\n{\n\"Vpc\":\n{\n\"CidrBlock\": \"10.0.0.0/24\",\n        \"DhcpOptionsId\": \"dopt-19edf471\",\n        \"State\": \"pending\",\n        \"VpcId\": \"vpc-0983f3c454f3d8be5\",\n        \"OwnerId\": \"123456789012\",   \n        \"InstanceTenancy\": \"default\",\n        \"Ipv6CidrBlockAssociationSet\": [],\n        \"CidrBlockAssociationSet\": [\n{\n\"AssociationId\": \"vpc-cidr-assoc-00b24cc1c2EXAMPLE\",\n                \"CidrBlock\": \"10.0.0.0/24\",\n                \"CidrBlockState\":\n{\n\"State\": \"associated\"\n                }\n            }\n        ],\n        \"IsDefault\": false\n    }\n}\nStep 9. Cleanup\nFollow the steps in this section to delete the IPAM resources you've created in this tutorial.\nDelete the VPC.\naws ec2 delete-vpc --vpc-id\nvpc-0983f3c454f3d8be5\nDelete the IPAM pool RAM share.\naws ram delete-resource-share --resource-share-arn\narn:aws:ram:us-west-2:123456789012:resource-share/3ab63985-99d9-1cd2-7d24-75e93EXAMPLE\nDeprovision pool CIDR from the Regional pool.\naws ec2 deprovision-ipam-pool-cidr --ipam-pool-id\nipam-pool-0da89c821626f1e4b\n--region\nus-east-1\nDeprovision pool CIDR from the top-level pool.\naws ec2 deprovision-ipam-pool-cidr --ipam-pool-id\nipam-pool-0008f25d7187a08d9\n--region\nus-east-1\nDelete the IPAM\naws ec2 delete-ipam --region\nus-east-1\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate an IPAM and pools using the console\nView IP address history using the AWS CLI\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-historical-insights.html": "Tutorial: View IP address history using the AWS CLI - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nOverview\nScenarios\nTutorial: View IP address history using the AWS CLI\nThe scenarios in this section show you how to analyze and audit IP address usage using the AWS CLI. For general information about using the AWS CLI, see\nUsing the AWS CLI\nin the\nAWS Command Line Interface User Guide\n.\nContents\nOverview\nScenarios\nOverview\nIPAM automatically retains your IP address monitoring data for up to three years. You can use the historical data to \n        analyze and audit your network security and routing policies. You can search for historical insights for the following types of resources:\nVPCs\nVPC subnets\nElastic IP addresses\nEC2 instances that are running\nEC2 network interfaces attached to instances\nImportant\nAlthough IPAM doesn't monitor Amazon EC2 instances or EC2 network interfaces attached to instances,\n        you can use the Search IP history feature to search for historical data on EC2\n        instance and network interface CIDRs.\nNote\nThe commands in this tutorial must be run using the account that owns the IPAM and the AWS Region that hosts the IPAM.\nRecords of changes to CIDRs are picked up in periodic snapshots, which means that it can take\n                    some time for records to appear or be updated, and the values for SampledStartTime and\n                    SampledEndTime can differ from the actual times they occurred.\nScenarios\nThe scenarios in this section show you how to analyze and audit IP address usage using the AWS CLI. For more information about the values mentioned in this tutorial like sampled end\n           time and start time, see\nView IP address history\n.\nScenario 1: Which resources were associated with\n10.2.1.155/32\nbetween 1:00 AM and 9:00 PM on December 27, 2021 (UTC)?\nRun the following command:\naws ec2 get-ipam-address-history --region\nus-east-1\n--cidr\n10.2.1.155/32\n--ipam-scope-id\nipam-scope-05b579a1909c5fc7a\n--start-time\n2021-12-20T01:00:00.000Z\n--end-time\n2021-12-27T21:00:00.000Z\nView the results of the analysis. In the example below, the CIDR was allocated to a network\n                    interface and EC2 instance over the course of the time period. Note that no\nSampledEndTime\nvalue means the record is still active. For\n                    more information about the values shown in the following output, see\nView IP address history\n.\n{\n\"HistoryRecords\": [\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-1\",\n            \"ResourceType\": \"network-interface\",\n            \"ResourceId\": \"eni-0b4e53eb1733aba16\",\n            \"ResourceCidr\": \"10.2.1.155/32\",\n            \"VpcId\": \"vpc-0f5ee7e1ba908a378\",\n            \"SampledStartTime\": \"2021-12-27T20:08:46.672000+00:00\"\n        },\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-1\",\n            \"ResourceType\": \"instance\",\n            \"ResourceId\": \"i-064da1f79baed14f3\",\n            \"ResourceCidr\": \"10.2.1.155/32\",\n            \"VpcId\": \"vpc-0f5ee7e1ba908a378\",\n            \"SampledStartTime\": \"2021-12-27T20:08:46.672000+00:00\"\n        }\n    ]\n}\nIf the owner ID of the instance to which a network interface is attached\n                    differs from the owner ID of the network interface (as is the case for NAT\n                    gateways, Lambda network interfaces in VPCs, and other AWS services), the\nResourceOwnerId\nis\namazon-aws\nrather than the\n                    account ID of the owner of the network interface. The following example shows\n                    the record for a CIDR associated with a NAT gateway:\n{\n\"HistoryRecords\": [\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-1\",\n            \"ResourceType\": \"network-interface\",\n            \"ResourceId\": \"eni-0b4e53eb1733aba16\",\n            \"ResourceCidr\": \"10.0.0.176/32\",\n            \"VpcId\": \"vpc-0f5ee7e1ba908a378\",\n            \"SampledStartTime\": \"2021-12-27T20:08:46.672000+00:00\"\n        },\n{\n\"ResourceOwnerId\": \"amazon-aws\",\n            \"ResourceRegion\": \"us-east-1\",\n            \"ResourceType\": \"instance\",\n            \"ResourceCidr\": \"10.0.0.176/32\",\n            \"VpcId\": \"vpc-0f5ee7e1ba908a378\",\n            \"SampledStartTime\": \"2021-12-27T20:08:46.672000+00:00\"\n        }\n    ]\n}\nScenario 2: Which resources were associated with\n10.2.1.0/24\nfrom\n                December 1, 2021 to December 27, 2021 (UTC)?\nRun the following command:\naws ec2 get-ipam-address-history --region\nus-east-1\n--cidr\n10.2.1.0/24\n--ipam-scope-id\nipam-scope-05b579a1909c5fc7a\n--start-time\n2021-12-01T00:00:00.000Z\n--end-time\n2021-12-27T23:59:59.000Z\nView the results of the analysis. In the example below, the CIDR was allocated to a subnet and\n                VPC over the course of the time period. Note that no\nSampledEndTime\nvalue means the record is still active. \n                For more information about the values shown in the\n                    following output, see\nView IP address history\n.\n{\n\"HistoryRecords\": [\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-1\",\n            \"ResourceType\": \"subnet\",\n            \"ResourceId\": \"subnet-0864c82a42f5bffed\",\n            \"ResourceCidr\": \"10.2.1.0/24\",\n            \"VpcId\": \"vpc-0f5ee7e1ba908a378\",\n            \"SampledStartTime\": \"2021-12-27T20:08:46.672000+00:00\"\n        },\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-1\",\n            \"ResourceType\": \"vpc\",\n            \"ResourceId\": \"vpc-0f5ee7e1ba908a378\",\n            \"ResourceCidr\": \"10.2.1.0/24\",\n            \"ResourceComplianceStatus\": \"compliant\",\n            \"ResourceOverlapStatus\": \"nonoverlapping\",\n            \"VpcId\": \"vpc-0f5ee7e1ba908a378\",\n            \"SampledStartTime\": \"2021-12-27T20:08:46.672000+00:00\"\n        }\n    ]\n}\nScenario 3: Which resources were associated with\n2605:9cc0:409::/56\nfrom December 1, 2021 to December 27, 2021 (UTC)?\nRun the following command, where --region is the IPAM home Region:\naws ec2 get-ipam-address-history --region\nus-east-1\n--cidr\n2605:9cc0:409::/56\n--ipam-scope-id\nipam-scope-07cb485c8b4a4d7cc\n--start-time\n2021-12-01T01:00:00.000Z\n--end-time\n2021-12-27T23:59:59.000Z\nView the results of the analysis. In the example below, the CIDR was allocated to two\n                    different VPCs over the course of the time period in a Region outside the IPAM\n                    home Region. Note that no\nSampledEndTime\nvalue means the\n                    record is still active. For more information about the values shown in the\n                    following output, see\nView IP address history\n.\n{\n\"HistoryRecords\": [\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-2\",\n            \"ResourceType\": \"vpc\",\n            \"ResourceId\": \"vpc-01d967bf3b923f72c\",\n            \"ResourceCidr\": \"2605:9cc0:409::/56\",\n            \"ResourceName\": \"First example VPC\",\n            \"ResourceComplianceStatus\": \"compliant\",\n            \"ResourceOverlapStatus\": \"nonoverlapping\",\n            \"VpcId\": \"vpc-01d967bf3b923f72c\",\n            \"SampledStartTime\": \"2021-12-23T20:02:00.701000+00:00\",\n            \"SampledEndTime\": \"2021-12-23T20:12:59.848000+00:00\"\n        },\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-2\",\n            \"ResourceType\": \"vpc\",\n            \"ResourceId\": \"vpc-03e62c7eca81cb652\",\n            \"ResourceCidr\": \"2605:9cc0:409::/56\",\n            \"ResourceName\": \"Second example VPC\",\n            \"ResourceComplianceStatus\": \"compliant\",\n            \"ResourceOverlapStatus\": \"nonoverlapping\",\n            \"VpcId\": \"vpc-03e62c7eca81cb652\",\n            \"SampledStartTime\": \"2021-12-27T15:11:00.046000+00:00\"\n        }\n    ]\n}\nScenario 4: Which resources were associated with\n10.0.0.0/24\nin the\n                last 24 hours (assuming the current time is midnight on December 27, 2021\n                (UTC))?\nRun the following command:\naws ec2 get-ipam-address-history --region\nus-east-1\n--cidr\n10.0.0.0/24\n--ipam-scope-id\nipam-scope-05b579a1909c5fc7a\n--start-time\n2021-12-27T00:00:00.000Z\nView the results of the analysis. In the example below, the CIDR has been\n                    allocated to numerous subnets and VPCs over the time period. Note that no\nSampledEndTime\nvalue means the record is still active. For\n                    more information about the values shown in the following output, see\nView IP address history\n.\n{\n\"HistoryRecords\": [\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-2\",\n            \"ResourceType\": \"subnet\",\n            \"ResourceId\": \"subnet-0d1b8f899725aa72d\",\n            \"ResourceCidr\": \"10.0.0.0/24\",\n            \"ResourceName\": \"Example name\",\n            \"VpcId\": \"vpc-042b8a44f64267d67\",\n            \"SampledStartTime\": \"2021-12-11T16:35:59.074000+00:00\",\n            \"SampledEndTime\": \"2021-12-28T15:34:00.017000+00:00\"\n        },\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-2\",\n            \"ResourceType\": \"vpc\",\n            \"ResourceId\": \"vpc-09754dfd85911abec\",\n            \"ResourceCidr\": \"10.0.0.0/24\",\n            \"ResourceName\": \"Example name\",\n            \"ResourceComplianceStatus\": \"unmanaged\",\n            \"ResourceOverlapStatus\": \"overlapping\",\n            \"VpcId\": \"vpc-09754dfd85911abec\",\n            \"SampledStartTime\": \"2021-12-27T20:07:59.947000+00:00\",\n            \"SampledEndTime\": \"2021-12-28T15:34:00.017000+00:00\"\n        },\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-west-2\",\n            \"ResourceType\": \"vpc\",\n            \"ResourceId\": \"vpc-0a8347f594bea5901\",\n            \"ResourceCidr\": \"10.0.0.0/24\",\n            \"ResourceName\": \"Example name\",\n            \"ResourceComplianceStatus\": \"unmanaged\",\n            \"ResourceOverlapStatus\": \"overlapping\",\n            \"VpcId\": \"vpc-0a8347f594bea5901\",\n            \"SampledStartTime\": \"2021-12-11T16:35:59.318000+00:00\"\n        },\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-1\",\n            \"ResourceType\": \"subnet\",\n            \"ResourceId\": \"subnet-0af7eadb0798e9148\",\n            \"ResourceCidr\": \"10.0.0.0/24\",\n            \"ResourceName\": \"Example name\",\n            \"VpcId\": \"vpc-03298ba16756a8736\",\n            \"SampledStartTime\": \"2021-12-14T21:07:22.357000+00:00\"\n        }\n    ]\n}\nScenario 5: Which resources are currently associated with\n10.2.1.155/32\n?\nRun the following command:\naws ec2 get-ipam-address-history --region\nus-east-1\n--cidr\n10.2.1.155/32\n--ipam-scope-id\nipam-scope-05b579a1909c5fc7a\nView the results of the analysis. In the example below, the CIDR was allocated\n                    to a network interface and EC2 instance over the time period. Note that no\nSampledEndTime\nvalue means the record is still active. For\n                    more information about the values shown in the following output, see\nView IP address history\n.\n{\n\"HistoryRecords\": [\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-1\",\n            \"ResourceType\": \"network-interface\",\n            \"ResourceId\": \"eni-0b4e53eb1733aba16\",\n            \"ResourceCidr\": \"10.2.1.155/32\",\n            \"VpcId\": \"vpc-0f5ee7e1ba908a378\",\n            \"SampledStartTime\": \"2021-12-27T20:08:46.672000+00:00\"\n        },\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-1\",\n            \"ResourceType\": \"instance\",\n            \"ResourceId\": \"i-064da1f79baed14f3\",\n            \"ResourceCidr\": \"10.2.1.155/32\",\n            \"VpcId\": \"vpc-0f5ee7e1ba908a378\",\n            \"SampledStartTime\": \"2021-12-27T20:08:46.672000+00:00\"\n        }\n    ]\n}\nScenario 6: Which resources are currently associated with\n10.2.1.0/24\n?\nRun the following command:\naws ec2 get-ipam-address-history --region\nus-east-1\n--cidr\n10.2.1.0/24\n--ipam-scope-id\nipam-scope-05b579a1909c5fc7a\nView the results of the analysis. In the example below, the CIDR was allocated\n                    to a VPC and subnet over the time period. Only the results that match this exact\n/24\nCIDR are returned, not all\n/32\nwithin the\n/24\nCIDR. Note that no\nSampledEndTime\nvalue means the record is still active. For more information about the values shown in\n                    the following output, see\nView IP address history\n.\n{\n\"HistoryRecords\": [\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-1\",\n            \"ResourceType\": \"subnet\",\n            \"ResourceId\": \"subnet-0864c82a42f5bffed\",\n            \"ResourceCidr\": \"10.2.1.0/24\",\n            \"VpcId\": \"vpc-0f5ee7e1ba908a378\",\n            \"SampledStartTime\": \"2021-12-27T20:08:46.672000+00:00\"\n        },\n{\n\"ResourceOwnerId\": \"123456789012\",\n            \"ResourceRegion\": \"us-east-1\",\n            \"ResourceType\": \"vpc\",\n            \"ResourceId\": \"vpc-0f5ee7e1ba908a378\",\n            \"ResourceCidr\": \"10.2.1.0/24\",\n            \"ResourceComplianceStatus\": \"compliant\",\n            \"ResourceOverlapStatus\": \"nonoverlapping\",\n            \"VpcId\": \"vpc-0f5ee7e1ba908a378\",\n            \"SampledStartTime\": \"2021-12-27T20:08:46.672000+00:00\"\n        }\n    ]\n}\nScenario 7: Which resources are currently associated with\n54.0.0.9/32\n?\nIn this example,\n54.0.0.9/32\nis assigned to an Elastic IP address that is not part of the AWS Organization integrated with your IPAM.\nRun the following command:\naws ec2 get-ipam-address-history --region\nus-east-1\n--cidr\n54.0.0.9/32\n--ipam-scope-id\nipam-scope-05b579a1909c5fc7a\nSince\n54.0.0.9/32\nis assigned to an Elastic IP address that is\n                    not part of the AWS Organization integrated with the IPAM in this example, no\n                    records are returned.\n{\n\"HistoryRecords\": []\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate an IPAM and pools using the AWS CLI\nBring your ASN to IPAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoip-ipam.html": "Tutorial: Bring your IP addresses to IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nTutorial: Bring your IP addresses to IPAM\nThe tutorials in this section walk you through the process of bringing public IP address space to AWS and managing the space with IPAM.\nManaging public IP address space with IPAM has the following benefits:\nImproves public IP addresses utilization across your\n            organization\n: You can use IPAM to share IP address space across AWS\n            accounts. Without using IPAM, you cannot share your public IP space across AWS\n            Organizations accounts.\nSimplifies the process of bringing public IP space to AWS\n:\n                You can use IPAM to onboard public IP address space once, and then use IPAM to\n                distribute your public IPs across Regions. Without IPAM, you have to onboard your\n                public IPs for each AWS Region.\nImportant\nTo complete the steps in this tutorial, you first need to complete the following steps\n            using the\nAmazon EC2 User Guide for Linux Instances\nfor the CIDR\n            range you want to bring to AWS and IPAM. Once you complete these steps, continue with this tutorial.\nFollow these steps to authorize Amazon to advertise your IP address range.\nStep 3. Create a ROA object in your RIR\n. This may require you to create a key pair as described in\nStep 1. Create a key pair and certificate\n.\nWhen you create the ROAs, for IPv4 CIDRs \n                    you must set the maximum length of an IP address prefix to\n/24\n. For IPv6 CIDRs, \n                    if you are adding them to an advertisable pool, the maximum length of an IP address prefix must \n                    be\n/48\n. This ensures that you have full flexibility to divide\n                    your public IP address across AWS Regions. IPAM enforces the maximum length you set.\n                    The maximum length is the smallest prefix length announcement you will allow for this\n                    route. For example, if you bring a\n/20\nCIDR block to AWS, by setting the\n                    maximum length to\n/24\n, you can divide the larger block any way you like\n                    (such as with\n/21\n,\n/22\n, or\n/24\n) and distribute\n                    those smaller CIDR blocks to any Region. If you were to set the maximum length to\n/23\n,you would not be able to divide and advertise a\n/24\nfrom the larger\n                    block. Also, note that\n/24\nis the smallest IPv4 block and\n/48\nis the smallest IPv6 block you can advertise from a Region to the internet.\nStep 2. Update the RDAP record in your RIR\n.\nFollow these steps to create a certificate to enable Amazon can verify that you own the IP address range you are bringing to Amazon.\nStep 1. Create a key pair and certificate\n. This is not the same key pair used in creation of the ROA object but rather a new key pair only for Amazon verification purposes.\nStep 3. Create an ROA object in your RIR\n.\nWhen you create the ROAs, for IPv4 CIDRs \n                    you must set the maximum length of an IP address prefix to\n/24\n. For IPv6 CIDRs, \n                    if you are adding them to an advertisable pool, the maximum length of an IP address prefix must \n                    be\n/48\n. This ensures that you have full flexibility to divide\n                    your public IP address across AWS Regions. IPAM enforces the maximum length you set.\n                    The maximum length is the smallest prefix length announcement you will allow for this\n                    route. For example, if you bring a\n/20\nCIDR block to AWS, by setting the\n                    maximum length to\n/24\n, you can divide the larger block any way you like\n                    (such as with\n/21\n,\n/22\n, or\n/24\n) and distribute\n                    those smaller CIDR blocks to any Region. If you were to set the maximum length to\n/23\n,you would not be able to divide and advertise a\n/24\nfrom the larger\n                    block. Also, note that\n/24\nis the smallest IPv4 block and\n/48\nis the smallest IPv6 block you can advertise from a Region to the internet.\nContents\nBring your own public IPv4 CIDR to IPAM using both the AWS Management Console and the AWS CLI\nBring your own public IPv4 CIDR to IPAM using only the AWS CLI\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nBring your ASN to IPAM\nAWS console and CLI\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoip-ipam-console-intro.html": "Bring your own public IPv4 CIDR to IPAM using both the AWS Management Console and the AWS CLI - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nBring your own public IPv4 CIDR to IPAM using both the AWS Management Console and the AWS CLI\nFollow these steps to bring an IPv4 or IPv6 CIDR to IPAM using both the AWS Management Console and the AWS CLI.\nImportant\nTo complete the steps in this tutorial, you first need to complete the following steps\n            using the\nAmazon EC2 User Guide for Linux Instances\nfor the CIDR\n            range you want to bring to AWS and IPAM. Once you complete these steps, continue with this tutorial.\nFollow these steps to authorize Amazon to advertise your IP address range.\nStep 3. Create a ROA object in your RIR\n. This may require you to create a key pair as described in\nStep 1. Create a key pair and certificate\n.\nWhen you create the ROAs, for IPv4 CIDRs \n                    you must set the maximum length of an IP address prefix to\n/24\n. For IPv6 CIDRs, \n                    if you are adding them to an advertisable pool, the maximum length of an IP address prefix must \n                    be\n/48\n. This ensures that you have full flexibility to divide\n                    your public IP address across AWS Regions. IPAM enforces the maximum length you set.\n                    The maximum length is the smallest prefix length announcement you will allow for this\n                    route. For example, if you bring a\n/20\nCIDR block to AWS, by setting the\n                    maximum length to\n/24\n, you can divide the larger block any way you like\n                    (such as with\n/21\n,\n/22\n, or\n/24\n) and distribute\n                    those smaller CIDR blocks to any Region. If you were to set the maximum length to\n/23\n,you would not be able to divide and advertise a\n/24\nfrom the larger\n                    block. Also, note that\n/24\nis the smallest IPv4 block and\n/48\nis the smallest IPv6 block you can advertise from a Region to the internet.\nStep 2. Update the RDAP record in your RIR\n.\nFollow these steps to create a certificate to enable Amazon can verify that you own the IP address range you are bringing to Amazon.\nStep 1. Create a key pair and certificate\n. This is not the same key pair used in creation of the ROA object but rather a new key pair only for Amazon verification purposes.\nStep 3. Create an ROA object in your RIR\n.\nWhen you create the ROAs, for IPv4 CIDRs \n                    you must set the maximum length of an IP address prefix to\n/24\n. For IPv6 CIDRs, \n                    if you are adding them to an advertisable pool, the maximum length of an IP address prefix must \n                    be\n/48\n. This ensures that you have full flexibility to divide\n                    your public IP address across AWS Regions. IPAM enforces the maximum length you set.\n                    The maximum length is the smallest prefix length announcement you will allow for this\n                    route. For example, if you bring a\n/20\nCIDR block to AWS, by setting the\n                    maximum length to\n/24\n, you can divide the larger block any way you like\n                    (such as with\n/21\n,\n/22\n, or\n/24\n) and distribute\n                    those smaller CIDR blocks to any Region. If you were to set the maximum length to\n/23\n,you would not be able to divide and advertise a\n/24\nfrom the larger\n                    block. Also, note that\n/24\nis the smallest IPv4 block and\n/48\nis the smallest IPv6 block you can advertise from a Region to the internet.\nContents\nBring your own IPv4 CIDR to IPAM using both the AWS\n            Management Console and the AWS CLI\nBring your own IPv6 CIDR to IPAM using the AWS\n            Management Console\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nBring your IP addresses to IPAM\nIPv4 CIDR\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoip-ipam-console-ipv4.html": "Bring your own IPv4 CIDR to IPAM using both the AWS Management Console and the AWS CLI - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nStep 1: Create AWS CLI named profiles and IAM roles\nStep 2: Create a top-level IPAM pool\nStep 3. Create a Regional pool within the top-level pool\nStep 4. Share the Regional pool\nStep 5: Create a public IPv4 pool\nStep 6: Provision the public IPv4 CIDR to your public IPv4 pool\nStep 7: Create an Elastic IP address from the\n                public IPv4 pool\nStep 8: Associate the Elastic IP address with an EC2 instance\nStep 9: Advertise the CIDR\nStep 10: Cleanup\nBring your own IPv4 CIDR to IPAM using both the AWS\n            Management Console and the AWS CLI\nFollow these steps to bring an IPv4 CIDR to IPAM and allocate an Elastic IP address (EIP) using both the AWS\n            Management Console and the AWS CLI.\nImportant\nThis tutorial assumes you have already completed the steps in the following sections:\nIntegrate IPAM with accounts in an AWS Organization\n.\nCreate an IPAM\n.\nEach step of this tutorial must be done by one of three AWS Organizations accounts:\nThe management account.\nThe member account configured to be your IPAM administrator in\nIntegrate IPAM with accounts in an AWS Organization\n. In this tutorial, this account will be called the IPAM account.\nThe member account in your organization which will allocate CIDRs from an IPAM pool. In this tutorial, this account will be called the member account.\nContents\nStep 1: Create AWS CLI named profiles and IAM roles\nStep 2: Create a top-level IPAM pool\nStep 3. Create a Regional pool within the top-level pool\nStep 4. Share the Regional pool\nStep 5: Create a public IPv4 pool\nStep 6: Provision the public IPv4 CIDR to your public IPv4 pool\nStep 7: Create an Elastic IP address from the\n                public IPv4 pool\nStep 8: Associate the Elastic IP address with an EC2 instance\nStep 9: Advertise the CIDR\nStep 10: Cleanup\nStep 1: Create AWS CLI named profiles and IAM roles\nTo complete this tutorial as a single AWS user, you can use AWS CLI named profiles to switch\n        from one IAM role to another.\nNamed profiles\nare\n        collections of settings and credentials that you \n        refer to when using the\n--profile\noption with the AWS CLI. \n        For more\n        information about how to create IAM roles and named profiles for AWS accounts, see\nUsing an IAM role in the AWS CLI\nin the\nAWS Identity and Access Management User\n            Guide\n.\nCreate one role and one named profile for each of the three AWS accounts you will use in this tutorial:\nA profile called\nmanagement-account\nfor the AWS Organizations management account.\nA profile called\nipam-account\nfor the AWS Organizations member account that is configured to be your IPAM administrator.\nA profile called\nmember-account\nfor the AWS Organizations member account in your organization which will allocate CIDRs from an IPAM pool.\nAfter you have created the IAM roles and named profiles, return to this page and go to the next step. You will notice throughout the rest of this tutorial that the sample AWS CLI commands use the\n--profile\noption with one of the named profiles to indicate which account must run the command.\nStep 2: Create a top-level IPAM pool\nComplete the steps in this section to create a top-level IPAM pool.\nThis step must be done by the IPAM account.\nTo create a pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, when you create a pool, the default private scope is selected.\n                    Choose the public scope. For more information about scopes, see\nHow IPAM works\n.\nChoose\nCreate pool\n.\n(Optional) Add a\nName tag\nfor the pool and a\nDescription\nfor the pool.\nUnder\nSource\n, choose\nIPAM\n                    scope\n.\nUnder\nAddress family\n, choose\nIPv4\n.\nUnder\nResource planning\n, leave\nPlan IP\n                    space within the scope\nselected. For more information\n                    about using this option to plan for subnet IP space within a VPC, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\nUnder\nLocale\n, choose\nNone\n.\nThe locale is the AWS Region where you want this IPAM pool to be available for allocations. For example, you can only allocate a CIDR for a VPC from an IPAM pool that shares a locale with the VPC\u00e2\u0080\u0099s Region. Note that when you have chosen a locale for a pool, you cannot modify it. If the home Region of the IPAM is unavailable due to an outage and the pool has a locale different than the home Region of the IPAM, the pool can still be used to allocate IP addresses.\nThe IPAM integration with BYOIP requires that the locale is set on\n                    whichever pool will be used for the BYOIP CIDR. Since we are going to create a top-level IPAM pool with a Regional pool within it,\n                    and we\u00e2\u0080\u0099re going to allocate space to an Elastic IP address from the\n                    Regional pool, you will set the locale on the Regional pool and not the top-level\n                    pool. You\u00e2\u0080\u0099ll add the locale to the Regional pool when you create the Regional pool\n                    in a later step.\nNote\nIf you are creating a single pool only and not a top-level pool with Regional pools within it,\n                    you would want to choose a Locale for this pool so that the pool is\n                    available for allocations.\nUnder\nPublic IP source\n, choose one of the following\n                    options:\nBYOIP\n: You are bringing your own IPv4 or IPv6 address range (BYOIP) to\n                        this pool.\nAmazon owned\n: You want to Amazon to provision an IPv4 or IPv6 address range to this pool.\nDo one of the following:\nIf you chose\nBYOIP\nin the previous step, under\nCIDRs to\n                                provision\n, choose a CIDR to provision for the pool. Note\n                            that when provisioning an IPv4 CIDR to a pool within the top-level pool,\n                            the minimum IPv4 CIDR you can provision is\n/24\n; more\n                            specific CIDRs (such as\n/25\n) are not permitted. You must\n                            include the CIDR and the BYOIP message and certificate signature in the\n                            request so we can verify that you own the public space. For a list of\n                            BYOIP prerequisites including how to get this BYOIP message and\n                            certificate signature, see\nBring your own public IPv4 CIDR to IPAM using both the AWS Management Console and the AWS CLI\n.\nImportant\nIt can take up to one week for the BYOIP CIDR\n                            to be provisioned.\nIf you chose\nAmazon owned\n, under\nNetmask length\nchoose a netmask length from\n/40\nto\n/52\n. Default is\n/52\n.\nLeave\nUse this pool to allocate CIDRs to resources such as VPCs\nunchecked.\n(Optional) Choose\nTags\nfor the pool.\nChoose\nCreate pool\n.\nEnsure that this CIDR has been provisioned before you continue. You can see the state of provisioning in the\nCIDRs\ntab in the pool details page. Note that it\n            can take up to one week for the BYOIP CIDR to be provisioned.\nStep 3. Create a Regional pool within the top-level pool\nCreate a Regional pool within the top-level pool. The IPAM integration with BYOIP requires that the locale is set on\n                whichever pool will be used for the BYOIP CIDR. You\u00e2\u0080\u0099ll add the locale to the Regional pool when you create the Regional pool\n                in this section. The\nLocale\nmust be one of the operating Regions you configured when you created the IPAM.\nThis step must be done by the IPAM account.\nTo create a Regional pool within a top-level pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, when you create a pool, the default private scope is selected. If you don\u00e2\u0080\u0099t want to use the default \n                    private scope, from the dropdown menu at the top of the content pane, choose the scope you want to use. For more information about scopes, see\nHow IPAM works\n.\nChoose\nCreate pool\n.\n(Optional) Add a\nName tag\nfor the pool and a\nDescription\nfor the pool.\nUnder\nSource\n, choose the top-level pool that you created\n                    in the previous section.\nUnder\nResource planning\n, leave\nPlan IP\n                    space within the scope\nselected. For more information\n                    about using this option to plan for subnet IP space within a VPC, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\nUnder\nLocale\n, choose the locale for the pool. In this\n                    tutorial, we'll use\nus-east-2\nas the locale for the Regional pool. The available options come from\n                    the operating Regions that you chose when you created your IPAM.\nThe locale is the AWS Region where you want this IPAM pool to be available for allocations. For example, you can only allocate a CIDR for a VPC from an IPAM pool that shares a locale with the VPC\u00e2\u0080\u0099s Region. Note that when you have chosen a locale for a pool, you cannot modify it. If the home Region of the IPAM is unavailable due to an outage and the pool has a locale different than the home Region of the IPAM, the pool can still be used to allocate IP addresses. Choosing a locale ensures there are no cross-region dependencies between your\n                    pool and the resources allocating from it.\nUnder\nService\n, choose\nEC2 (EIP/VPC)\n. The service you select determines the AWS service where the CIDR will be advertisable. Currently, the only option is\nEC2 (EIP/VPC)\n, which means that the CIDRs allocated from this pool will be advertisable for the Amazon EC2 service (for Elastic IP addresses) and the Amazon VPC service (for CIDRs associated with VPCs).\nUnder\nCIDRs to provision\n, choose a CIDR to provision for\n                    the pool. Note that when provisioning a CIDR to a pool within the top-level\n                    pool, the minimum IPv4 CIDR you can provision is\n/24\n; more specific\n                    CIDRs (such as\n/25\n) are not permitted.\nChoose\nUse this pool to allocate CIDRs to resources such as VPCs\n. You have the same allocation rule options here as you did when you\n                    created the top-level pool. See\nCreate a top-level IPv4 pool\nfor an explanation of the options\n                    that are available when you create pools. The allocation rules for the\n                    Regional pool are not inherited from the top-level pool. If you do not\n                    apply any rules here, there will be no allocation rules set for the\n                    pool.\nChoose\nUse this pool to allocate CIDRs to resources such as VPCs\nand choose optional allocation rules for this pool:\nAutomatically import discovered resources\n: This option is not\n                            available if the\nLocale\nis set to\nNone\n. If this option is selected, IPAM will\n                            continuously look for resources within the CIDR range of this pool and\n                            automatically import them as allocations into your IPAM. Note the\n                            following:\nThe CIDRs that will be allocated for\n                                these resources must not already be allocated to other resources in order for the import to succeed.\nIPAM will import \n                                a CIDR regardless of its compliance with the pool's allocation rules, so a resource might be imported and subsequently \n                                marked as noncompliant.\nIf IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only.\nIf IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only.\nMinimum netmask length\n: The minimum netmask length required for \n                        CIDR allocations in this IPAM pool to be compliant and the largest size CIDR block that can be allocated from the pool. The minimum netmask length must be less than the maximum \n                        netmask length. Possible netmask lengths for IPv4 addresses are\n0 - 32\n. Possible netmask lengths for IPv6 addresses \n                        are\n0 - 128\n.\nDefault netmask length\n: A default netmask length for\n                        allocations added to this pool. For example, if the CIDR that's\n                        provisioned to this pool is\n10.0.0.0/8\nand you enter\n16\nhere, any new\n                        allocations in this pool will default to a netmask length of\n/16\n.\nMaximum netmask length\n: The maximum netmask length that will\n                        be required for CIDR allocations in this pool. This value\n                        dictates the smallest size CIDR block that can be allocated from\n                        the pool.\nTagging requirements\n: The tags that are required for\n                        resources to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the \n                        allocation tagging rules are changed on the pool, the resource may be marked as noncompliant.\nLocale\n: The locale that will be required for\n                            resources that use CIDRs from this pool. Automatically imported resources\n                            that do not have this locale will be marked noncompliant. Resources that are not\n                            automatically imported into the pool will not be allowed to allocate space from\n                            the pool unless they are in this locale.\n(Optional) Choose\nTags\nfor the pool.\nWhen you\u00e2\u0080\u0099ve finished configuring your pool, choose\nCreate\n                    pool\n.\nEnsure that this CIDR has been provisioned before you continue. You can see the state of provisioning in the\nCIDRs\ntab in the pool details page.\nStep 4. Share the Regional pool\nFollow the steps in this section to share the pre-production IPAM pool using AWS Resource Access Manager (RAM).\n4.1. Enable resource sharing in\n                    AWS RAM\nAfter you create your IPAM, you\u00e2\u0080\u0099ll want to share the regional pool with other\n                accounts in your organization. Before you share an IPAM pool, complete the steps in\n                this section to enable resource sharing with AWS RAM. If you are using the AWS CLI to\n                enable resource sharing, use the\n--profile\nmanagement-account\noption.\nTo enable resource sharing\nUsing the AWS Organizations management account, open the AWS RAM console at\nhttps://console.aws.amazon.com/ram/\n.\nIn the left navigation pane, choose\nSettings\n,\n                        choose\nEnable sharing with AWS Organizations\n, and then choose\nSave settings\n.\nYou can now share an IPAM pool with other members of the organization.\n4.2. Share an IPAM pool using AWS RAM\nIn this section you\u00e2\u0080\u0099ll share the regional pool with another AWS Organizations member\n                account. For complete instructions on sharing IPAM pools, including information on\n                the required IAM permissions, see\nShare an IPAM pool using AWS RAM\n. If you are using the AWS CLI to enable resource sharing, use the\n--profile\nipam-account\noption.\nTo share an IPAM pool using AWS RAM\nUsing the IPAM admin account, open the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose the private scope, choose the pre-production IPAM pool, and choose\nActions\n>\nView\n                            details\n.\nUnder\nResource sharing\n, choose\nCreate resource share\n. The AWS RAM console opens.\n                        You share the pool using AWS RAM.\nChoose\nCreate a resource share\n.\nIn the AWS RAM console, choose\nCreate a resource share\nagain.\nAdd a\nName\nfor the shared pool.\nUnder\nSelect resource type\n, choose\nIPAM pools,\nand then choose the ARN of the\n                        pre-production development pool.\nChoose\nNext\n.\nChoose the\nAWSRAMPermissionIpamPoolByoipCidrImport\npermission. The details of the permission options are out of scope for this\n                        tutorial, but you can find out more about these options in\nShare an IPAM pool using AWS RAM\n.\nChoose\nNext\n.\nUnder\nPrincipals\n>\nSelect principal\n                        type\n, choose\nAWS account\nand enter the\n                        account ID of the account that will be bringing an IP address range to IPAM and choose\nAdd\n.\nChoose\nNext\n.\nReview the resource share options and the principals that you\u00e2\u0080\u0099ll be\n                        sharing with, and then choose\nCreate\n.\nTo allow the\nmember-account\naccount to allocate IP\n                        address CIDRS from the IPAM pool, create a second resource share with\nAWSRAMDefaultPermissionsIpamPool\nand create a second\n                        resource share. The value for\n--resource-arns\nis the ARN of the\n                        IPAM pool that you created in the previous section. The value for\n--principals\nis the account ID of the BYOIP CIDR owner\n                        account. The value for\n--permission-arns\nis the ARN of the\nAWSRAMDefaultPermissionsIpamPool\npermission.\nStep 5: Create a public IPv4 pool\nCreating a public IPv4 pool is a required step for bringing a public IPv4 address to\n            AWS to be managed with IPAM. This step should be done by the member account\n            that will provision an Elastic IP address.\nThis step must be done by the member account using the AWS CLI.\nImportant\nPublic IPv4 pools and IPAM pools are managed by distinct resources in AWS. Public IPv4 pools are single account resources \n            that enable you to convert your publicly-owned CIDRs to Elastic IP addresses. IPAM pools can be used to allocate your public space \n            to public IPv4 pools.\nTo create a public IPv4 pool using the AWS CLI\nRun the following command to provision the CIDR. When you run the\n                    command in this section, the value for\n--region\nmust match the\nLocale\noption you chose when you created the pool that will be\n                    used for the BYOIP CIDR.\naws ec2 create-public-ipv4-pool --region\nus-east-2\n--profile\nmember-account\nIn the output, you'll see the public IPv4 pool ID. You will need this\n                        ID in the next step.\n{\n\"PoolId\": \"ipv4pool-ec2-09037ce61cf068f9a\"\n}\nStep 6: Provision the public IPv4 CIDR to your public IPv4 pool\nProvision the public IPv4 CIDR to your public IPv4 pool. The value for\n--region\nmust match the\nLocale\nvalue you chose when you\n            created the pool that will be used for the BYOIP CIDR. The\n--netmask-length\nis the amount of space out of the IPAM pool that you want to bring to your public pool.\n            The value cannot be larger than the netmask length of the IPAM pool. The least specific\n            IPv4 prefix you can bring is\n/24\n.\nNote\nIf you are bringing a\n/24\nCIDR range to IPAM to share across an AWS\n                Organization, you can provision smaller prefixes to multiple IPAM pools, say\n/27\n(using\n-- netmask-length 27\n), rather than\n                provisioning the entire\n/24\nCIDR (using\n-- netmask-length\n                    24\n) as is shown in this tutorial.\nThis step must be done by the member account using the AWS CLI.\nTo create a public IPv4 pool using the AWS CLI\nRun the following command to provision the CIDR.\naws ec2 provision-public-ipv4-pool-cidr --region\nus-east-2\n--ipam-pool-id\nipam-pool-04d8e2d9670eeab21\n--pool-id\nipv4pool-ec2-09037ce61cf068f9a\n--netmask-length\n24\n--profile\nmember-account\nIn the output, you'll see the provisioned CIDR.\n{\n\"PoolId\": \"ipv4pool-ec2-09037ce61cf068f9a\", \n    \"PoolAddressRange\":\n{\n\"FirstAddress\": \"130.137.245.0\",        \n        \"LastAddress\": \"130.137.245.255\",       \n        \"AddressCount\": 256,                    \n        \"AvailableAddressCount\": 256            \n    }                                           \n}\nRun the following command to view the CIDR provisioned in the public IPv4 pool.\naws ec2 describe-public-ipv4-pools --region\nus-east-2\n--max-results\n10\n--profile\nmember-account\nIn the output, you'll see the provisioned CIDR. By default the CIDR is\n                        not advertised, which means it's not publicly accessible over the internet.\n                        You will have the chance to set this CIDR to advertised in the last step of\n                        this tutorial.\n{\n\"PublicIpv4Pools\": [\n{\n\"PoolId\": \"ipv4pool-ec2-09037ce61cf068f9a\",\n            \"Description\": \"\",\n            \"PoolAddressRanges\": [\n{\n\"FirstAddress\": \"130.137.245.0\",\n                    \"LastAddress\": \"130.137.245.255\",\n                    \"AddressCount\": 256,\n                    \"AvailableAddressCount\": 255\n                }\n            ],\n            \"TotalAddressCount\": 256,\n            \"TotalAvailableAddressCount\": 255,\n            \"NetworkBorderGroup\": \"us-east-2\",\n            \"Tags\": []\n        }\n    ]\n}\nOnce you create the public IPv4 pool, to view the public IPv4 pool allocated in the\n            IPAM Regional pool, open the IPAM console and view the allocation in the Regional pool\n            under\nAllocations\nor\nResources\n.\nStep 7: Create an Elastic IP address from the\n                public IPv4 pool\nComplete the steps in\nAllocate an Elastic IP address\nin the\nAmazon EC2 User Guide for Linux Instances\nto create an Elastic IP address (EIP) from the public IPv4 pool. When you open EC2 in\n            the AWS Management console, the AWS Region you allocate the EIP in must match the\nLocale\noption you chose when you created the pool that will be used for\n            the BYOIP CIDR.\nThis step must be done by the member account. If you are using the AWS CLI, use the\n--profile\nmember-account\noption.\nStep 8: Associate the Elastic IP address with an EC2 instance\nComplete the steps in\nAssociate an Elastic IP address with an instance or network interface\nin\n            the\nAmazon EC2 User Guide for Linux Instances\nto associate the EIP with an EC2 instance.\n            When you open EC2 in the AWS Management console, the AWS Region you associate the\n            EIP in must match the\nLocale\noption you chose when you created the pool\n            that will be used for the BYOIP CIDR. In this tutorial, that pool is the Regional\n            pool.\nThis step must be done by the member account. If you are using the AWS CLI, use the\n--profile\nmember-account\noption.\nStep 9: Advertise the CIDR\nThe steps in this section must be done by the IPAM account. Once you associate the\n            Elastic IP address (EIP) with an instance or Elastic Load Balancer, you can then start\n            advertising the CIDR you brought to AWS that is in pool that has the\nService EC2 (EIP/VPC)\nconfigured. In this tutorial, that's your Regional\n            pool. By default the CIDR is not advertised, which means it's not publicly accessible\n            over the internet.\nThis step must be done by the IPAM account.\nTo advertise the CIDR\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, when you create a pool, the default private scope is selected.\n                    Choose the public scope. For more information about scopes, see\nHow IPAM works\n.\nChoose the Regional pool you created in this tutorial.\nChoose the\nCIDRs\ntab.\nSelect the BYOIP CIDR and choose\nActions\n>\nAdvertise\n.\nChoose\nAdvertise CIDR\n.\nAs a result, the BYOIP CIDR is advertised and the value in the\nAdvertising\ncolumn changes from\nWithdrawn\nto\nAdvertised\n.\nStep 10: Cleanup\nFollow the steps in this section to clean up the resources you've provisioned and\n            created in this tutorial.\nStep 1: Withdraw the CIDR from advertising\nThis step must be done by the IPAM account.\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, when you create a pool, the default private scope is selected.\n                    Choose the public scope.\nChoose the Regional pool you created in this tutorial.\nChoose the\nCIDRs\ntab.\nSelect the BYOIP CIDR and choose\nActions\n>\nWithdraw from advertising\n.\nChoose\nWithdraw CIDR\n.\nAs a result, the BYOIP CIDR is no longer advertised and the value in the\nAdvertising\ncolumn changes from\nAdvertised\nto\nWithdrawn\n.\nStep 2: Disassociate the Elastic IP address\nThis step must be done by the member account. If you are using the AWS CLI, use the\n--profile\nmember-account\noption.\nComplete the steps in\nDisassociate an Elastic IP address\nin\n                    the\nAmazon EC2 User Guide for Linux Instances\nto disassociate the EIP.\n                    When you open EC2 in the AWS Management console, the AWS Region you disassociate the\n                    EIP in must match the\nLocale\noption you chose when you created the pool\n                    that will be used for the BYOIP CIDR. In this tutorial, that pool is the Regional\n                    pool.\nStep 3: Release the Elastic IP address\nThis step must be done by the member account. If you are using the AWS CLI, use the\n--profile\nmember-account\noption.\nComplete the steps in\nRelease an Elastic IP address\nin the\nAmazon EC2 User Guide for Linux Instances\nto release an Elastic IP address (EIP)\n                    from the public IPv4 pool. When you open EC2 in the AWS Management console,\n                    the AWS Region you allocate the EIP in must match the\nLocale\noption you chose when you created the pool that will be used for the BYOIP\n                    CIDR.\nStep 4: Deprovision the public IPv4 CIDR from your public IPv4 pool\nThis step must be done by the member account using the AWS CLI.\nView your BYOIP CIDRs.\naws ec2 describe-public-ipv4-pools --region\nus-east-2\n--profile\nmember-account\nIn the output, you'll see the IP addresses in your BYOIP CIDR.\n{\n\"PublicIpv4Pools\": [\n{\n\"PoolId\": \"ipv4pool-ec2-09037ce61cf068f9a\",\n            \"Description\": \"\",\n            \"PoolAddressRanges\": [\n{\n\"FirstAddress\": \"130.137.245.0\",\n                    \"LastAddress\": \"130.137.245.255\",\n                    \"AddressCount\": 256,\n                    \"AvailableAddressCount\": 256\n                }\n            ],\n            \"TotalAddressCount\": 256,\n            \"TotalAvailableAddressCount\": 256,\n            \"NetworkBorderGroup\": \"us-east-2\",\n            \"Tags\": []\n        }\n    ]\n}\nRun the following command to release the last IP address in the CIDR from\n                       the public IPv4 pool. Enter the IP address with a netmask of\n/32\n.\naws ec2 deprovision-public-ipv4-pool-cidr --region\nus-east-2\n--pool-id\nipv4pool-ec2-09037ce61cf068f9a\n--cidr\n130.137.245.255/32\n--profile\nmember-account\nIn the output, you'll see the deprovisioned CIDR.\n{\n\"PoolId\": \"ipv4pool-ec2-09037ce61cf068f9a\",                                                                                       \n    \"DeprovisionedAddresses\": [                                                                                                       \n        \"130.137.245.255\"                                                                                                             \n    ]                                                                                                                                 \n}\nImportant\nYou must rerun this command for each IP address in the CIDR range. If your CIDR is a\n/24\n, you will have to run this command to deprovision each of the 256 IP addresses in the\n/24\nCIDR.\nView your BYOIP CIDRs again and ensure there are no more provisioned\n                       addresses. When you run the command in this section, the value for\n--region\nmust match the Region of your IPAM.\naws ec2 describe-public-ipv4-pools --region\nus-east-2\n--profile\nmember-account\nIn the output, you'll see the IP addresses count in your public IPv4 pool.\n{\n\"PublicIpv4Pools\": [\n{\n\"PoolId\": \"ipv4pool-ec2-09037ce61cf068f9a\",\n            \"Description\": \"\",\n            \"PoolAddressRanges\": [],\n            \"TotalAddressCount\": 0,\n            \"TotalAvailableAddressCount\": 0,\n            \"NetworkBorderGroup\": \"us-east-2\",\n            \"Tags\": []\n        }\n    ]\n}\nNote\nIt can take some time for IPAM to discover that public IPv4 pool allocations have\n                been removed. You cannot continue to clean up and deprovision the IPAM pool CIDR\n                until you see that the allocation has been removed from IPAM.\nStep 5: Delete the public IPv4 pool\nThis step must be done by the member account.\nRun the following command to delete the public IPv4 pool the CIDR.\n                When you run the command in this section, the value for\n--region\nmust match the\nLocale\noption you chose when you created the pool\n                that will be used for the BYOIP CIDR. In this tutorial, that pool is the\n                Regional pool. This step must be done using the AWS CLI.\naws ec2 delete-public-ipv4-pool --region\nus-east-2\n--pool-id\nipv4pool-ec2-09037ce61cf068f9a\n--profile\nmember-account\nIn the output, you'll see the return value\ntrue\n.\n{\n\"ReturnValue\": true\n}\nOnce you delete the pool, to view the allocation unmanaged by IPAM, open the IPAM\n                           console and view the details of the Regional pool under\nAllocations\n.\nStep 6: Delete any RAM shares and disable RAM integration with AWS\n                Organizations\nThis step must be done by the IPAM account and management account\n                respectively. If you are using the AWS CLI to delete the RAM shares and disable RAM\n                integration, use the\n--profile\nipam-account\nand\n--profile\nmanagement-account\noptions.\nComplete the steps in\nDeleting a resource\n                        share in AWS RAM\nand\nDisabling\n                        resource sharing with AWS Organizations\nin the\nAWS RAM User Guide\n, in that order, to delete the\n                    RAM shares and disable RAM integration with AWS Organizations.\nStep 7: Deprovision the CIDRs from the Regional pool and top-level pool\nThis step must be done by the IPAM account. If you are using the AWS CLI to share the pool, use the\n--profile\nipam-account\noption.\nComplete the steps in\nDeprovision CIDRs from a pool\nto deprovision the CIDRs from the Regional pool and then the top-level pool, in that order.\nStep 8: Delete the Regional pool and top-level pool\nThis step must be done by the IPAM account. If you are using the AWS CLI to share the pool, use the\n--profile\nipam-account\noption.\nComplete the steps in\nDelete a pool\nto delete the Regional pool and then the top-level pool, in that order.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS console and CLI\nIPv6 CIDR\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoip-ipam-console-ipv6.html": "Bring your own IPv6 CIDR to IPAM using the AWS Management Console - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nStep 1: Create a top-level IPAM pool\nStep 2. Create a Regional pool within the\n                top-level pool\nStep 3. Share the Regional pool\nStep 4: Create a VPC\nStep 5: Advertise the CIDR\nStep 6: Cleanup\nBring your own IPv6 CIDR to IPAM using the AWS\n            Management Console\nFollow the steps in this tutorial to bring an IPv6 CIDR to IPAM and allocate a VPC\n        with the CIDR using both the AWS Management Console and the AWS CLI.\nImportant\nThis tutorial assumes you have already completed the steps in the following sections:\nIntegrate IPAM with accounts in an AWS Organization\n.\nCreate an IPAM\n.\nEach step of this tutorial must be done by one of three AWS Organizations accounts:\nThe management account.\nThe member account configured to be your IPAM administrator in\nIntegrate IPAM with accounts in an AWS Organization\n. In this tutorial, this account will be called the IPAM account.\nThe member account in your organization which will allocate CIDRs from an IPAM pool. In this tutorial, this account will be called the member account.\nContents\nStep 1: Create a top-level IPAM pool\nStep 2. Create a Regional pool within the\n                top-level pool\nStep 3. Share the Regional pool\nStep 4: Create a VPC\nStep 5: Advertise the CIDR\nStep 6: Cleanup\nStep 1: Create a top-level IPAM pool\nSince you are going to create a top-level IPAM pool with a Regional pool within it,\n                and we\u00e2\u0080\u0099re going to allocate space to a resource (an Elastic IP address) from the\n                Regional pool, you will set the locale on the Regional pool and not the top-level\n                pool. You\u00e2\u0080\u0099ll add the locale to the Regional pool when you create the Regional pool\n                in a later step. The IPAM integration with BYOIP requires that the locale is set on\n                whichever pool will be used for the BYOIP CIDR.\nThis step must be done by the IPAM account.\nTo create a pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, when you create a pool, the default private scope is selected.\n                    Choose the public scope. For more information about scopes, see\nHow IPAM works\n.\nChoose\nCreate pool\n.\n(Optional) Add a\nName tag\nfor the pool and a\nDescription\nfor the pool.\nUnder\nSource\n, choose\nIPAM\n                    scope\n.\nUnder\nAddress family\n, choose\nIPv6\n.\nWhen you choose\nIPv6\n, a toggle option appears that\n                    enables you to control if AWS can to publicly advertise the CIDRs in this\n                    pool. Leave this option enabled.\nUnder\nResource planning\n, leave\nPlan IP\n                    space within the scope\nselected. For more information\n                    about using this option to plan for subnet IP space within a VPC, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\nEnsure\nAllow CIDRs in this pool to be publicly advertisable\nis selected.\nUnder\nLocale\n, choose\nNone\n. You will\n                    set the locale on the Regional pool.\nThe locale is the AWS Region where you want this IPAM pool to be available for allocations. For example, you can only allocate a CIDR for a VPC from an IPAM pool that shares a locale with the VPC\u00e2\u0080\u0099s Region. Note that when you have chosen a locale for a pool, you cannot modify it. If the home Region of the IPAM is unavailable due to an outage and the pool has a locale different than the home Region of the IPAM, the pool can still be used to allocate IP addresses.\nNote\nIf you are creating a single pool only and not a top-level pool with Regional pools within it,\n                    you would want to choose a Locale for this pool so that the pool is\n                    available for allocations.\nUnder\nPublic IP source\n,\nBYOIP\nis\n                    selected by default.\nUnder\nCIDRs to provision\n, choose a CIDR to\n                            provision for the pool. Note that when provisioning an IPv6 CIDR to a\n                            pool within the top-level pool, the minimum IPv6 CIDR you can provision\n                            for an advertisable IPAM pool is\n/48\n; more specific CIDRs\n                            (such as\n/49\n) are not permitted. The minimum CIDR you can\n                            bring in for an non-advertisable IPAM pool is\n/56;\nmore\n                            specific CIDRs (such as\n/57\n) are not permitted. You must\n                            include the CIDR and the BYOIP message and certificate signature in the\n                            request so we can verify that you own the public space. For a list of\n                            BYOIP prerequisites including how to get this BYOIP message and\n                            certificate signature, see\nBring your own public IPv4 CIDR to IPAM using both the AWS Management Console and the AWS CLI\n.\nImportant\nIt can take up to one week for the BYOIP CIDR\n                    to be provisioned.\nLeave\nUse this pool to allocate CIDRs to resources such as VPCs\nunchecked.\n(Optional) Choose\nTags\nfor the pool.\nChoose\nCreate pool\n.\nEnsure that this CIDR has been provisioned before you continue. You can see the state of provisioning in \n            the\nCIDRs\ntab in the pool details page. Note that it\n            can take up to one week for the BYOIP CIDR to be provisioned.\nStep 2. Create a Regional pool within the\n                top-level pool\nCreate a Regional pool within the top-level pool. A Locale is required on\n            the pool and it must be one of the operating Regions you configured when you created the\n            IPAM.\nThis step must be done by the IPAM account.\nTo create a Regional pool within a top-level pool\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, when you create a pool, the default private scope is selected. If you don\u00e2\u0080\u0099t want to use the default \n                    private scope, from the dropdown menu at the top of the content pane, choose the scope you want to use. For more information about scopes, see\nHow IPAM works\n.\nChoose\nCreate pool\n.\n(Optional) Add a\nName tag\nfor the pool and a description for the pool.\nUnder\nSource\n, choose the top-level pool that you created\n                    in the previous section.\nUnder\nResource planning\n, leave\nPlan IP\n                    space within the scope\nselected. For more information\n                    about using this option to plan for subnet IP space within a VPC, see\nTutorial: Plan VPC IP address space for subnet IP allocations\n.\nChoose the locale for the pool. Choosing a locale ensures there are no\n                    cross-region dependencies between your pool and the resources allocating from\n                    it. The available options come from the operating Regions that you chose when\n                    you created your IPAM. In this tutorial, we'll use\nus-east-2\nas the\n                    locale for the Regional pool.\nThe locale is the AWS Region where you want this IPAM pool to be available for allocations. For example, you can only allocate a CIDR for a VPC from an IPAM pool that shares a locale with the VPC\u00e2\u0080\u0099s Region. Note that when you have chosen a locale for a pool, you cannot modify it. If the home Region of the IPAM is unavailable due to an outage and the pool has a locale different than the home Region of the IPAM, the pool can still be used to allocate IP addresses.\nUnder\nService\n, choose\nEC2 (EIP/VPC)\n.\n                    The service you select determines the AWS service where the CIDR will be\n                    advertisable. Currently, the only option is\nEC2 (EIP/VPC)\n,\n                    which means that the CIDRs allocated from this pool will be advertisable for the\n                    Amazon EC2 service (for Elastic IP addresses) and the Amazon VPC service (for\n                    CIDRs associated with VPCs).\nUnder\nCIDRs to provision\n, choose a CIDR to provision for the pool. Note that when provisioning an IPv6\n                    CIDR to a pool within the top-level pool, the minimum IPv6 CIDR you can\n                    provision for an advertisable IPAM pool is\n/48\n; more specific CIDRs (such as\n/49\n) are not permitted. The minimum CIDR you can bring in for an\n                    non-advertisable IPAM pool is\n/56\n; more specific CIDRs (such as\n/57\n) are not\n                    permitted.\nChoose\nUse this pool to allocate CIDRs to resources such as VPCs\nand\n                choose optional allocation rules for this pool:\nAutomatically import discovered resources\n: This option is not available if the\nLocale\nis set to\nNone\n. If selected, IPAM will continuously look for resources within the CIDR range of this pool \n                        and automatically import them as allocations into your IPAM. Note the following:\nThe CIDRs that will be allocated for\n                                these resources must not already be allocated to other resources in order for the import to succeed.\nIPAM will import \n                                a CIDR regardless of its compliance with the pool's allocation rules, so a resource might be imported and subsequently \n                                marked as noncompliant.\nIf IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only.\nIf IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only.\nMinimum netmask length\n: The minimum netmask length required for \n                        CIDR allocations in this IPAM pool to be compliant and the largest size CIDR block that can be allocated from the pool. The minimum netmask length must be less than the maximum \n                        netmask length. Possible netmask lengths for IPv4 addresses are\n0\n-\n32\n. Possible netmask lengths for IPv6 addresses \n                        are\n0\n-\n128\n.\nDefault netmask length\n: A default netmask length for\n                        allocations added to this pool.\nMaximum netmask length\n: The maximum netmask length that will\n                            be required for CIDR allocations in this pool. This value dictates the\n                            smallest size CIDR block that can be allocated from the pool. Ensure\n                            that this value is minimum\n/48\n.\nTagging requirements\n: The tags that are required for\n                        resources to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the \n                        allocation tagging rules are changed on the pool, the resource may be marked as noncompliant.\nLocale\n: The locale that will be required for\n                            resources that use CIDRs from this pool. Automatically imported resources\n                            that do not have this locale will be marked noncompliant. Resources that are not\n                            automatically imported into the pool will not be allowed to allocate space from\n                            the pool unless they are in this locale.\n(Optional) Choose\nTags\nfor the pool.\nWhen you\u00e2\u0080\u0099ve finished configuring your pool, choose\nCreate\n                    pool\n.\nEnsure that this CIDR has been provisioned before you continue. You can see the state of provisioning in the\nCIDRs\ntab in the pool details page.\nStep 3. Share the Regional pool\nFollow the steps in this section to share the pre-production IPAM pool using AWS Resource Access Manager (RAM).\n4.1. Enable resource sharing in\n                    AWS RAM\nAfter you create your IPAM, you\u00e2\u0080\u0099ll want to share the regional pool with other\n                accounts in your organization. Before you share an IPAM pool, complete the steps in\n                this section to enable resource sharing with AWS RAM. If you are using the AWS CLI to\n                enable resource sharing, use the\n--profile\nmanagement-account\noption.\nTo enable resource sharing\nUsing the AWS Organizations management account, open the AWS RAM console at\nhttps://console.aws.amazon.com/ram/\n.\nIn the left navigation pane, choose\nSettings\n,\n                        choose\nEnable sharing with AWS Organizations\n, and then choose\nSave settings\n.\nYou can now share an IPAM pool with other members of the organization.\n4.2. Share an IPAM pool using AWS RAM\nIn this section you\u00e2\u0080\u0099ll share the regional pool with another AWS Organizations member\n                account. For complete instructions on sharing IPAM pools, including information on\n                the required IAM permissions, see\nShare an IPAM pool using AWS RAM\n. If you are using the AWS CLI to enable resource sharing, use the\n--profile\nipam-account\noption.\nTo share an IPAM pool using AWS RAM\nUsing the IPAM admin account, open the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose the private scope, choose the pre-production IPAM pool, and choose\nActions\n>\nView\n                            details\n.\nUnder\nResource sharing\n, choose\nCreate resource share\n. The AWS RAM console opens.\n                        You share the pool using AWS RAM.\nChoose\nCreate a resource share\n.\nIn the AWS RAM console, choose\nCreate a resource share\nagain.\nAdd a\nName\nfor the shared pool.\nUnder\nSelect resource type\n, choose\nIPAM pools,\nand then choose the ARN of the\n                        pre-production development pool.\nChoose\nNext\n.\nChoose the\nAWSRAMPermissionIpamPoolByoipCidrImport\npermission. The details of the permission options are out of scope for this\n                        tutorial, but you can find out more about these options in\nShare an IPAM pool using AWS RAM\n.\nChoose\nNext\n.\nUnder\nPrincipals\n>\nSelect principal\n                        type\n, choose\nAWS account\nand enter the\n                        account ID of the account that will be bringing an IP address range to IPAM and choose\nAdd\n.\nChoose\nNext\n.\nReview the resource share options and the principals that you\u00e2\u0080\u0099ll be\n                        sharing with, and then choose\nCreate\n.\nTo allow the\nmember-account\naccount to allocate IP\n                        address CIDRS from the IPAM pool, create a second resource share with\nAWSRAMDefaultPermissionsIpamPool\nand create a second\n                        resource share. The value for\n--resource-arns\nis the ARN of the\n                        IPAM pool that you created in the previous section. The value for\n--principals\nis the account ID of the BYOIP CIDR owner\n                        account. The value for\n--permission-arns\nis the ARN of the\nAWSRAMDefaultPermissionsIpamPool\npermission.\nStep 4: Create a VPC\nComplete the steps in\nCreating a VPC\nin the\nAmazon VPC User Guide\n.\nThis step must be done by the member account.\nNote\nWhen you open VPC in the AWS Management console, the AWS Region you create the VPC\n                    in must match the\nLocale\noption you chose when you created the pool that\n                    will be used for the BYOIP CIDR.\nWhen you reach the step to choose a CIDR for the VPC, you will have an option to use a\n                    CIDR from an IPAM pool. Choose the Regional pool you created in this tutorial.\nWhen you create the VPC, AWS allocates a CIDR in the IPAM pool to the VPC. You can\n            view the allocation in IPAM by choosing a pool in the content pane of the IPAM console\n            and viewing the\nAllocations\ntab for the pool.\nStep 5: Advertise the CIDR\nThe steps in this section must be done by the IPAM account. Once you create the VPC,\n            you can then start advertising the CIDR you brought to AWS that is in the pool that has the\nService EC2 (EIP/VPC)\nconfigured. In this tutorial, that's your Regional pool. By default the CIDR is\n            not advertised, which means it's not publicly accessible over the internet.\nThis step must be done by the IPAM account.\nTo advertise the CIDR\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, when you create a pool, the default private scope is selected.\n                    Choose the public scope. For more information about scopes, see\nHow IPAM works\n.\nChoose the Regional pool you created in this tutorial.\nChoose the\nCIDRs\ntab.\nSelect the BYOIP CIDR and choose\nActions\n>\nAdvertise\n.\nChoose\nAdvertise CIDR\n.\nAs a result, the BYOIP CIDR is advertised and the value in the\nAdvertising\ncolumn changes from\nWithdrawn\nto\nAdvertised\n.\nStep 6: Cleanup\nFollow the steps in this section to clean up the resources you've provisioned and\n            created in this tutorial.\nStep 1: Withdraw the CIDR from advertising\nThis step must be done by the IPAM account.\nOpen the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nBy default, when you create a pool, the default private scope is selected.\n                    Choose the public scope.\nChoose the Regional pool you created in this tutorial.\nChoose the\nCIDRs\ntab.\nSelect the BYOIP CIDR and choose\nActions\n>\nWithdraw from advertising\n.\nChoose\nWithdraw CIDR\n.\nAs a result, the BYOIP CIDR is no longer advertised and the value in the\nAdvertising\ncolumn changes from\nAdvertised\nto\nWithdrawn\n.\nStep 2: Delete the VPC\nThis step must be done by the member account.\nComplete the steps in\nDeleting\n                    a VPC\nin the\nAmazon VPC User Guide\nto delete the VPC.\n                    When you open VPC in the AWS Management console, the AWS Region delete the VPC from must match the\nLocale\noption you chose when you created the pool\n                    that will be used for the BYOIP CIDR. In this tutorial, that pool is the Regional\n                    pool.\nWhen you delete the VPC, it takes time for IPAM to discover that the resource has been deleted and to deallocate the CIDR allocated to the VPC.\n                    You cannot continue to the next step in the cleanup until you see that IPAM has removed the allocation from the pool in the pool details\nAllocations\ntab.\nStep 3: Delete the RAM shares and disable RAM integration with AWS Organizations\nThis step must be done by the IPAM account and management account respectively.\nComplete the steps in\nDeleting a resource share in AWS RAM\nand\nDisabling resource sharing with AWS Organizations\nin\n                        the\nAWS RAM User Guide\n, in that order, to delete the RAM shares and disable RAM integration with AWS Organizations.\nStep 4: Deprovision the CIDRs from the Regional pool and top-level pool\nThis step must be done by the IPAM account.\nComplete the steps in\nDeprovision CIDRs from a pool\nto deprovision the CIDRs from the Regional pool and then the top-level pool, in that order.\nStep 5: Delete the Regional pool and top-level pool\nThis step must be done by the IPAM account.\nComplete the steps in\nDelete a pool\nto delete the Regional pool and then the top-level pool, in that order.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIPv4 CIDR\nAWS CLI only\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoip-ipam-cli-only-intro.html": "Bring your own public IPv4 CIDR to IPAM using only the AWS CLI - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nBring your own public IPv4 CIDR to IPAM using only the AWS CLI\nFollow these steps to bring an IPv4 or IPv6 CIDR to IPAM using only the AWS CLI.\nImportant\nTo complete the steps in this tutorial, you first need to complete the following steps\n            using the\nAmazon EC2 User Guide for Linux Instances\nfor the CIDR\n            range you want to bring to AWS and IPAM. Once you complete these steps, continue with this tutorial.\nFollow these steps to authorize Amazon to advertise your IP address range.\nStep 3. Create a ROA object in your RIR\n. This may require you to create a key pair as described in\nStep 1. Create a key pair and certificate\n.\nWhen you create the ROAs, for IPv4 CIDRs \n                    you must set the maximum length of an IP address prefix to\n/24\n. For IPv6 CIDRs, \n                    if you are adding them to an advertisable pool, the maximum length of an IP address prefix must \n                    be\n/48\n. This ensures that you have full flexibility to divide\n                    your public IP address across AWS Regions. IPAM enforces the maximum length you set.\n                    The maximum length is the smallest prefix length announcement you will allow for this\n                    route. For example, if you bring a\n/20\nCIDR block to AWS, by setting the\n                    maximum length to\n/24\n, you can divide the larger block any way you like\n                    (such as with\n/21\n,\n/22\n, or\n/24\n) and distribute\n                    those smaller CIDR blocks to any Region. If you were to set the maximum length to\n/23\n,you would not be able to divide and advertise a\n/24\nfrom the larger\n                    block. Also, note that\n/24\nis the smallest IPv4 block and\n/48\nis the smallest IPv6 block you can advertise from a Region to the internet.\nStep 2. Update the RDAP record in your RIR\n.\nFollow these steps to create a certificate to enable Amazon can verify that you own the IP address range you are bringing to Amazon.\nStep 1. Create a key pair and certificate\n. This is not the same key pair used in creation of the ROA object but rather a new key pair only for Amazon verification purposes.\nStep 3. Create an ROA object in your RIR\n.\nWhen you create the ROAs, for IPv4 CIDRs \n                    you must set the maximum length of an IP address prefix to\n/24\n. For IPv6 CIDRs, \n                    if you are adding them to an advertisable pool, the maximum length of an IP address prefix must \n                    be\n/48\n. This ensures that you have full flexibility to divide\n                    your public IP address across AWS Regions. IPAM enforces the maximum length you set.\n                    The maximum length is the smallest prefix length announcement you will allow for this\n                    route. For example, if you bring a\n/20\nCIDR block to AWS, by setting the\n                    maximum length to\n/24\n, you can divide the larger block any way you like\n                    (such as with\n/21\n,\n/22\n, or\n/24\n) and distribute\n                    those smaller CIDR blocks to any Region. If you were to set the maximum length to\n/23\n,you would not be able to divide and advertise a\n/24\nfrom the larger\n                    block. Also, note that\n/24\nis the smallest IPv4 block and\n/48\nis the smallest IPv6 block you can advertise from a Region to the internet.\nContents\nBring your own public IPv4 CIDR to IPAM using only the AWS CLI\nBring your own IPv6 CIDR to IPAM using only the AWS CLI\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIPv6 CIDR\nIPv4 CIDR\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoip-ipam-ipv4.html": "Bring your own public IPv4 CIDR to IPAM using only the AWS CLI - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nStep 1: Create AWS CLI named profiles and IAM roles\nStep 2: Create an IPAM\nStep 3: Create a top-level IPAM pool\nStep 4: Provision a CIDR to the top-level pool\nStep 5: Create a Regional pool within the\n                top-level pool\nStep 6: Provision a CIDR to the Regional pool\nStep 7. Share the Regional pool\nStep 8: Create a public IPv4 pool\nStep 9: Provision the public IPv4 CIDR to your public IPv4 pool\nStep 10: Create an Elastic IP address from the public\n                    IPv4 pool\nStep 11: Advertise the CIDR\nStep 12: Cleanup\nBring your own public IPv4 CIDR to IPAM using only the AWS CLI\nFollow these steps to bring an IPv4 CIDR to IPAM and allocate an Elastic IP address (EIP) with the CIDR using only the AWS CLI.\nImportant\nThis tutorial assumes you have already completed the steps in the following sections:\nIntegrate IPAM with accounts in an AWS Organization\n.\nCreate an IPAM\n.\nEach step of this tutorial must be done by one of three AWS Organizations accounts:\nThe management account.\nThe member account configured to be your IPAM administrator in\nIntegrate IPAM with accounts in an AWS Organization\n. In this tutorial, this account will be called the IPAM account.\nThe member account in your organization which will allocate CIDRs from an IPAM pool. In this tutorial, this account will be called the member account.\nContents\nStep 1: Create AWS CLI named profiles and IAM roles\nStep 2: Create an IPAM\nStep 3: Create a top-level IPAM pool\nStep 4: Provision a CIDR to the top-level pool\nStep 5: Create a Regional pool within the\n                top-level pool\nStep 6: Provision a CIDR to the Regional pool\nStep 7. Share the Regional pool\nStep 8: Create a public IPv4 pool\nStep 9: Provision the public IPv4 CIDR to your public IPv4 pool\nStep 10: Create an Elastic IP address from the public\n                    IPv4 pool\nStep 11: Advertise the CIDR\nStep 12: Cleanup\nStep 1: Create AWS CLI named profiles and IAM roles\nTo complete this tutorial as a single AWS user, you can use AWS CLI named profiles to switch\n        from one IAM role to another.\nNamed profiles\nare\n        collections of settings and credentials that you \n        refer to when using the\n--profile\noption with the AWS CLI. \n        For more\n        information about how to create IAM roles and named profiles for AWS accounts, see\nUsing an IAM role in the AWS CLI\nin the\nAWS Identity and Access Management User\n            Guide\n.\nCreate one role and one named profile for each of the three AWS accounts you will use in this tutorial:\nA profile called\nmanagement-account\nfor the AWS Organizations management account.\nA profile called\nipam-account\nfor the AWS Organizations member account that is configured to be your IPAM administrator.\nA profile called\nmember-account\nfor the AWS Organizations member account in your organization which will allocate CIDRs from an IPAM pool.\nAfter you have created the IAM roles and named profiles, return to this page and go to the next step. You will notice throughout the rest of this tutorial that the sample AWS CLI commands use the\n--profile\noption with one of the named profiles to indicate which account must run the command.\nStep 2: Create an IPAM\nThis step is optional. If you already have an IPAM created with operating Regions of\nus-east-1\nand\nus-west-2\ncreated, you can skip this step.\n            Create an IPAM and specify an operating region of\nus-east-1\nand\nus-west-2\n. You must select an operating region so that you can use the\n            locale option when you create your IPAM pool. The IPAM integration with BYOIP requires\n            that the locale is set on whichever pool will be used for the BYOIP CIDR.\nThis step must be done by the IPAM account.\nRun the following command:\naws ec2 create-ipam --description\nmy-ipam\n--region\nus-east-1\n--operating-regions\nRegionName=us-west-2\n--profile\nipam-account\nIn the output, you'll see the IPAM you've created. Note the value for\nPublicDefaultScopeId\n. You will need your public scope ID in the next\n            step. You are using the public scope because BYOIP CIDRs are public IP addresses, which\n            is what the public scope is meant for.\n{\n\"Ipam\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamId\": \"ipam-090e48e75758de279\",                                           \n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",  \n        \"PublicDefaultScopeId\": \"ipam-scope-0087d83896280b594\",                       \n        \"PrivateDefaultScopeId\": \"ipam-scope-08b70b04fbd524f8d\",                      \n        \"ScopeCount\": 2,                                                              \n        \"Description\": \"my-ipam\",                                                     \n        \"OperatingRegions\": [\n{\n\"RegionName\": \"us-east-1\"                                             \n            },\n{\n\"RegionName\": \"us-west-2\"\n            }\n        ],                                                                            \n        \"Tags\": []                                                                    \n    }                                                                                 \n}\nStep 3: Create a top-level IPAM pool\nComplete the steps in this section to create a top-level IPAM pool.\nThis step must be done by the IPAM account.\nTo create an IPv4 address pool for all of your AWS resources using the\n                AWS CLI\nRun the following command to create an IPAM pool. Use the ID of the public\n                    scope of the IPAM that you created in the previous step.\nThis step must be done by the IPAM account.\naws ec2 create-ipam-pool --region\nus-east-1\n--ipam-scope-id\nipam-scope-0087d83896280b594\n--description\n\"top-level-IPv4-pool\"\n--address-family\nipv4\n--profile\nipam-account\nIn the output, you'll see\ncreate-in-progress\n, which indicates that pool creation is in progress.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-0a03d430ca3f5c035\",\n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0a03d430ca3f5c035\",\n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",\n        \"IpamScopeType\": \"public\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n        \"Locale\": \"None\",\n        \"PoolDepth\": 1,\n        \"State\": \"create-in-progress\",\n        \"Description\": \"top-level-pool\",\n        \"AutoImport\": false,\n        \"AddressFamily\": \"ipv4\",\n        \"Tags\": []\n    }\n}\nRun the following command until you see a state of\ncreate-complete\nin the output.\naws ec2 describe-ipam-pools --region\nus-east-1\n--profile\nipam-account\nThe following example output shows the state of the pool.\n{\n\"IpamPools\": [\n{\n\"OwnerId\": \"123456789012\",\n            \"IpamPoolId\": \"ipam-pool-0a03d430ca3f5c035\",\n            \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0a03d430ca3f5c035\",\n            \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",\n            \"IpamScopeType\": \"public\",\n            \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n            \"Locale\": \"None\",\n            \"PoolDepth\": 1,\n            \"State\": \"create-complete\",\n            \"Description\": \"top-level-IPV4-pool\",\n            \"AutoImport\": false,\n            \"AddressFamily\": \"ipv4\",\n            \"Tags\": []\n        }\n    ]\n}\nStep 4: Provision a CIDR to the top-level pool\nProvision a CIDR block to the top-level pool. Note that when provisioning an IPv4 CIDR\n            to a pool within the top-level pool, the minimum IPv4 CIDR you can provision is\n/24\n;\n            more specific CIDRs (such as\n/25\n) are not permitted. You must include the CIDR and the\n            BYOIP message and certificate signature in the request so we can verify that you own the\n            public space. For a list of BYOIP prerequisites including how to get this BYOIP message and certificate signature, see\nBring your own public IPv4 CIDR to IPAM using only the AWS CLI\n.\nThis step must be done by the IPAM account.\nImportant\nYou only need to add\n--cidr-authorization-context\nwhen you provision the BYOIP CIDR to the\n            top-level pool. For the Regional pool within the top-level pool, you can omit the\n--cidr-authorization-context\noption. Once you onboard your BYOIP to IPAM, you are not required to perform \n            ownership validation when you divide the BYOIP across Regions and accounts.\nTo provision a CIDR block to the pool using the AWS CLI\nRun the following command to provision the CIDR.\naws ec2 provision-ipam-pool-cidr --region\nus-east-1\n--ipam-pool-id\nipam-pool-0a03d430ca3f5c035\n--cidr\n130.137.245.0/24\n--cidr-authorization-context Message=\"\n1|aws|470889052444|130.137.245.0/24|20250101|SHA256|RSAPSS\n\",Signature=\"\nW3gdQ9PZHLjPmrnGM~cvGx~KCIsMaU0P7ENO7VRnfSuf9NuJU5RUveQzus~QmF~Nx42j3z7d65uyZZiDRX7KMdW4KadaLiClyRXN6ps9ArwiUWSp9yHM~U-hApR89Kt6GxRYOdRaNx8yt-uoZWzxct2yIhWngy-du9pnEHBOX6WhoGYjWszPw0iV4cmaAX9DuMs8ASR83K127VvcBcRXElT5URr3gWEB1CQe3rmuyQk~gAdbXiDN-94-oS9AZlafBbrFxRjFWRCTJhc7Cg3ASbRO-VWNci-C~bWAPczbX3wPQSjtWGV3k1bGuD26ohUc02o8oJZQyYXRpgqcWGVJdQ__\n\" --profile\nipam-account\nIn the output, you'll see the CIDR pending provision.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"130.137.245.0/24\",                                                                      \n        \"State\": \"pending-provision\"                                                                          \n    }                                                                                                         \n}\nEnsure that this CIDR has been provisioned before you continue.\nImportant\nIt can take up to one week for the BYOIP CIDR\n                        to be provisioned.\nRun the following\n                    command until you see a state of\nprovisioned\nin the output.\naws ec2 get-ipam-pool-cidrs --region\nus-east-1\n--ipam-pool-id\nipam-pool-0a03d430ca3f5c035\n--profile\nipam-account\nThe following example output shows the state.\n{\n\"IpamPoolCidrs\": [\n{\n\"Cidr\": \"130.137.245.0/24\",     \n            \"State\": \"provisioned\"         \n        }                                  \n    ]                                      \n}\nStep 5: Create a Regional pool within the\n                top-level pool\nCreate a Regional pool within the top-level pool.\n--locale\nis required on\n            the pool and it must be one of the operating Regions you configured when you created the\n            IPAM. The locale is the AWS Region where you want this IPAM pool to be available for allocations. For example, you can only allocate a CIDR for a VPC from an IPAM pool that shares a locale with the VPC\u00e2\u0080\u0099s Region. Note that when you have chosen a locale for a pool, you cannot modify it. If the home Region of the IPAM is unavailable due to an outage and the pool has a locale different than the home Region of the IPAM, the pool can still be used to allocate IP addresses.\nThis step must be done by the IPAM account.\nChoosing a locale ensures there are no\n            cross-region dependencies between your pool and the resources allocating from\n            it. The available options come from the operating Regions that you chose when\n            you created your IPAM. In this tutorial, we'll use\nus-west-2\nas the\n            locale for the Regional pool.\nImportant\nWhen you create the pool, you must include\n--aws-service ec2\n. The service you select determines the AWS service where the CIDR will be advertisable. Currently, the only option is\nec2\n, which means that the CIDRs allocated from this pool will be advertisable for the Amazon EC2 service (for Elastic IP addresses) and the Amazon VPC service (for CIDRs associated with VPCs).\nTo create a Regional pool using the\n                AWS CLI\nRun the following command to create the pool.\naws ec2 create-ipam-pool --description\n\"Regional-IPv4-pool\"\n--region\nus-east-1\n--ipam-scope-id\nipam-scope-0087d83896280b594\n--source-ipam-pool-id\nipam-pool-0a03d430ca3f5c035\n--locale\nus-west-2\n--address-family\nipv4\n--aws-service ec2 --profile\nipam-account\nIn the output, you'll see IPAM creating the pool.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-0d8f3646b61ca5987\",\n        \"SourceIpamPoolId\": \"ipam-pool-0a03d430ca3f5c035\",\n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0d8f3646b61ca5987\",\n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",\n        \"IpamScopeType\": \"public\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n        \"Locale\": \"us-west-2\",\n        \"PoolDepth\": 2,\n        \"State\": \"create-in-progress\",\n        \"Description\": \"Regional--pool\",\n        \"AutoImport\": false,\n        \"AddressFamily\": \"ipv4\",\n        \"Tags\": [],\n        \"ServiceType\": \"ec2\"\n    }\n}\nRun the following command until you see a state of\ncreate-complete\nin the output.\naws ec2 describe-ipam-pools --region\nus-east-1\n--profile\nipam-account\nIn the output, you see the pools that you have in your IPAM. In this tutorial,\n                    we created a top-level and a Regional pool, so you'll see them both.\nStep 6: Provision a CIDR to the Regional pool\nProvision a CIDR block to the Regional pool. Note that when provisioning a CIDR to a\n            pool within the top-level pool, the minimum IPv4 CIDR you can provision is\n/24\n; more\n            specific CIDRs (such as\n/25\n) are not permitted.\nThis step must be done by the IPAM account.\nTo assign a CIDR block to the Regional pool using the AWS CLI\nRun the following command to provision the CIDR.\naws ec2 provision-ipam-pool-cidr --region\nus-east-1\n--ipam-pool-id\nipam-pool-0d8f3646b61ca5987\n--cidr\n130.137.245.0/24\n--profile\nipam-account\nIn the output, you'll see the CIDR pending provision.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"130.137.245.0/24\",                                                                      \n        \"State\": \"pending-provision\"                                                                          \n    }                                                                                                         \n}\nRun the following command until you see the state of\nprovisioned\nin the output.\naws ec2 get-ipam-pool-cidrs --region\nus-east-1\n--ipam-pool-id\nipam-pool-0d8f3646b61ca5987\n--profile\nipam-account\nThe following example output shows the correct state.\n{\n\"IpamPoolCidrs\": [\n{\n\"Cidr\": \"130.137.245.0/24\",\n            \"State\": \"provisioned\"\n        }\n    ]\n}\nStep 7. Share the Regional pool\nFollow the steps in this section to share the pre-production IPAM pool using AWS Resource Access Manager (RAM).\n4.1. Enable resource sharing in\n                    AWS RAM\nAfter you create your IPAM, you\u00e2\u0080\u0099ll want to share the regional pool with other\n                accounts in your organization. Before you share an IPAM pool, complete the steps in\n                this section to enable resource sharing with AWS RAM. If you are using the AWS CLI to\n                enable resource sharing, use the\n--profile\nmanagement-account\noption.\nTo enable resource sharing\nUsing the AWS Organizations management account, open the AWS RAM console at\nhttps://console.aws.amazon.com/ram/\n.\nIn the left navigation pane, choose\nSettings\n,\n                        choose\nEnable sharing with AWS Organizations\n, and then choose\nSave settings\n.\nYou can now share an IPAM pool with other members of the organization.\n4.2. Share an IPAM pool using AWS RAM\nIn this section you\u00e2\u0080\u0099ll share the regional pool with another AWS Organizations member\n                account. For complete instructions on sharing IPAM pools, including information on\n                the required IAM permissions, see\nShare an IPAM pool using AWS RAM\n. If you are using the AWS CLI to enable resource sharing, use the\n--profile\nipam-account\noption.\nTo share an IPAM pool using AWS RAM\nUsing the IPAM admin account, open the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose the private scope, choose the pre-production IPAM pool, and choose\nActions\n>\nView\n                            details\n.\nUnder\nResource sharing\n, choose\nCreate resource share\n. The AWS RAM console opens.\n                        You share the pool using AWS RAM.\nChoose\nCreate a resource share\n.\nIn the AWS RAM console, choose\nCreate a resource share\nagain.\nAdd a\nName\nfor the shared pool.\nUnder\nSelect resource type\n, choose\nIPAM pools,\nand then choose the ARN of the\n                        pre-production development pool.\nChoose\nNext\n.\nChoose the\nAWSRAMPermissionIpamPoolByoipCidrImport\npermission. The details of the permission options are out of scope for this\n                        tutorial, but you can find out more about these options in\nShare an IPAM pool using AWS RAM\n.\nChoose\nNext\n.\nUnder\nPrincipals\n>\nSelect principal\n                        type\n, choose\nAWS account\nand enter the\n                        account ID of the account that will be bringing an IP address range to IPAM and choose\nAdd\n.\nChoose\nNext\n.\nReview the resource share options and the principals that you\u00e2\u0080\u0099ll be\n                        sharing with, and then choose\nCreate\n.\nTo allow the\nmember-account\naccount to allocate IP\n                        address CIDRS from the IPAM pool, create a second resource share with\nAWSRAMDefaultPermissionsIpamPool\nand create a second\n                        resource share. The value for\n--resource-arns\nis the ARN of the\n                        IPAM pool that you created in the previous section. The value for\n--principals\nis the account ID of the BYOIP CIDR owner\n                        account. The value for\n--permission-arns\nis the ARN of the\nAWSRAMDefaultPermissionsIpamPool\npermission.\nStep 8: Create a public IPv4 pool\nCreating a public IPv4 pool is a required step for bringing a public IPv4 address to\n            AWS to be managed with IPAM. This step would typically be done by a different AWS account which wants to provision an Elastic IP address.\nThis step must be done by the member account.\nImportant\nPublic IPv4 pools and IPAM pools are managed by distinct resources in AWS. Public IPv4 pools are single account resources \n            that enable you to convert your publicly-owned CIDRs to Elastic IP addresses. IPAM pools can be used to allocate your public space \n            to public IPv4 pools.\nTo create a public IPv4 pool using the AWS CLI\nRun the following command to provision the CIDR. When you run the\n                    command in this section, the value for\n--region\nmust match the\n--locale\noption you entered when you created the pool that will\n                    be used for the BYOIP CIDR.\naws ec2 create-public-ipv4-pool --region\nus-west-2\n--profile\nmember-account\nIn the output, you'll see the public IPv4 pool ID. You will need this\n                        ID in the next step.\n{\n\"PoolId\": \"ipv4pool-ec2-0019eed22a684e0b2\"\n}\nStep 9: Provision the public IPv4 CIDR to your public IPv4 pool\nProvision the public IPv4 CIDR to your public IPv4 pool. The value for\n--region\nmust match the\n--locale\nvalue you entered\n                when you created the pool that will be used for the BYOIP CIDR.\nThis step must be done by the member account.\nTo create a public IPv4 pool using the AWS CLI\nRun the following command to provision the CIDR.\naws ec2 provision-public-ipv4-pool-cidr --region\nus-west-2\n--ipam-pool-id\nipam-pool-0d8f3646b61ca5987\n--pool-id\nipv4pool-ec2-0019eed22a684e0b2\n--netmask-length\n24\n--profile\nmember-account\nIn the output, you'll see the provisioned CIDR.\n{\n\"PoolId\": \"ipv4pool-ec2-0019eed22a684e0b2\",\n    \"PoolAddressRange\":\n{\n\"FirstAddress\": \"130.137.245.0\",\n        \"LastAddress\": \"130.137.245.255\",\n        \"AddressCount\": 256,\n        \"AvailableAddressCount\": 256\n    }\n}\nRun the following command to view the CIDR provisioned in the public IPv4 pool.\naws ec2 describe-byoip-cidrs --region\nus-west-2\n--max-results\n10\n--profile\nmember-account\nIn the output, you'll see the provisioned CIDR. By default the CIDR is\n                        not advertised, which means it's not publicly accessible over the internet.\n                        You will have the chance to set this CIDR to advertised in the last step of\n                        this tutorial.\n{\n\"ByoipCidrs\": [\n{\n\"Cidr\": \"130.137.245.0/24\",\n            \"StatusMessage\": \"Cidr successfully provisioned\",\n            \"State\": \"provisioned\"\n        }\n    ]\n}\nStep 10: Create an Elastic IP address from the public\n                    IPv4 pool\nCreate an Elastic IP address (EIP) from the public IPv4 pool. When you run the\n            commands in this section, the value for\n--region\nmust match the\n--locale\noption you entered when you created the pool that will be used\n            for the BYOIP CIDR.\nThis step must be done by the member account.\nTo create an EIP from the public IPv4 pool using the AWS CLI\nRun the following command to create the EIP.\naws ec2 allocate-address  --region\nus-west-2\n--public-ipv4-pool\nipv4pool-ec2-0019eed22a684e0b2\n--profile\nmember-account\nIn the output, you'll see the allocation.\n{\n\"PublicIp\": \"130.137.245.100\",\n    \"AllocationId\": \"eipalloc-0db3405026756dbf6\",\n    \"PublicIpv4Pool\": \"ipv4pool-ec2-0019eed22a684e0b2\",\n    \"NetworkBorderGroup\": \"us-east-1\",\n    \"Domain\": \"vpc\"\n}\nRun the following command to view the EIP allocation managed in IPAM.\nThis step must be done by the IPAM account.\naws ec2 get-ipam-pool-allocations --region\nus-west-2\n--ipam-pool-id\nipam-pool-0d8f3646b61ca5987\n--profile\nipam-account\nThe output shows the allocation in IPAM.\n{\n\"IpamPoolAllocations\": [\n{\n\"Cidr\": \"130.137.245.0/24\",\n            \"IpamPoolAllocationId\": \"ipam-pool-alloc-5dedc8e7937c4261b56dc3e3eb53dc45\",\n            \"ResourceId\": \"ipv4pool-ec2-0019eed22a684e0b2\",\n            \"ResourceType\": \"ec2-public-ipv4-pool\",\n            \"ResourceOwner\": \"123456789012\"\n        }\n    ]\n}\nStep 11: Advertise the CIDR\nThe steps in this section must be done by the IPAM account. Once you associate the\n            Elastic IP address (EIP) with an instance or Elastic Load Balancer, you can then start\n            advertising the CIDR you brought to AWS that is in pool that has\n--aws-service\n                ec2\ndefined. In this tutorial, that's your Regional pool. By default the CIDR\n            is not advertised, which means it's not publicly accessible over the internet. When you\n            run the command in this section, the value for\n--region\nmust match the\n--locale\noption you entered when you created the pool that will be used\n            for the BYOIP CIDR.\nThis step must be done by the IPAM account.\nStart advertising the CIDR using the AWS CLI\nRun the following command to advertise the CIDR.\naws ec2 advertise-byoip-cidr --region\nus-west-2\n--cidr\n130.137.245.0/24\n--profile\nipam-account\nIn the output, you'll see the CIDR is advertised.\n{\n\"ByoipCidr\":\n{\n\"Cidr\": \"130.137.245.0/24\",\n        \"State\": \"advertised\"\n    }\n}\nStep 12: Cleanup\nFollow the steps in this section to clean up the resources you've provisioned and\n            created in this tutorial. When you run the commands in this section, the value for\n--region\nmust match the\n--locale\noption you entered when\n            you created the pool that will be used for the BYOIP CIDR.\nClean up using the AWS CLI\nView the EIP allocation managed in IPAM.\nThis step must be done by the IPAM account.\naws ec2 get-ipam-pool-allocations --region\nus-west-2\n--ipam-pool-id\nipam-pool-0d8f3646b61ca5987\n--profile\nipam-account\nThe output shows the allocation in IPAM.\n{\n\"IpamPoolAllocations\": [\n{\n\"Cidr\": \"130.137.245.0/24\",\n            \"IpamPoolAllocationId\": \"ipam-pool-alloc-5dedc8e7937c4261b56dc3e3eb53dc45\",\n            \"ResourceId\": \"ipv4pool-ec2-0019eed22a684e0b2\",\n            \"ResourceType\": \"ec2-public-ipv4-pool\",\n            \"ResourceOwner\": \"123456789012\"\n        }\n    ]\n}\nStop advertising the IPv4 CIDR.\nThis step must be done by the IPAM account.\naws ec2 withdraw-byoip-cidr --region\nus-west-2\n--cidr\n130.137.245.0/24\n--profile\nipam-account\nIn the output, you'll see the CIDR State has changed from\nadvertised\nto\nprovisioned\n.\n{\n\"ByoipCidr\":\n{\n\"Cidr\": \"130.137.245.0/24\",\n        \"State\": \"provisioned\"\n    }\n}\nRelease the Elastic IP address.\nThis step must be done by the member account.\naws ec2 release-address --region\nus-west-2\n--allocation-id\neipalloc-0db3405026756dbf6\n--profile\nmember-account\nYou will not see any output when you run this command.\nView your BYOIP CIDRs.\nThis step must be done by the member account.\naws ec2 describe-public-ipv4-pools --region\nus-west-2\n--profile\nmember-account\nIn the output, you'll see the IP addresses in your BYOIP CIDR.\n{\n\"PublicIpv4Pools\": [\n{\n\"PoolId\": \"ipv4pool-ec2-0019eed22a684e0b2\",\n            \"Description\": \"\",\n            \"PoolAddressRanges\": [\n{\n\"FirstAddress\": \"130.137.245.0\",\n                    \"LastAddress\": \"130.137.245.255\",\n                    \"AddressCount\": 256,\n                    \"AvailableAddressCount\": 256\n                }\n            ],\n            \"TotalAddressCount\": 256,\n            \"TotalAvailableAddressCount\": 256,\n            \"NetworkBorderGroup\": \"us-east-1\",\n            \"Tags\": []\n        }\n    ]\n}\nRelease the last IP address in the CIDR from\n                    the public IPv4 pool. Enter the IP address with a netmask of /32. You must rerun\n                    this command for each IP address in the CIDR range. If your CIDR is a\n/24\n, you\n                    will have to run this command to deprovision each of the 256 IP addresses in the\n/24\nCIDR. When you run the command in this section, the value for\n--region\nmust match the Region of your IPAM.\nThis step must be done by the member account.\naws ec2 deprovision-public-ipv4-pool-cidr --region\nus-east-1\n--pool-id\nipv4pool-ec2-0019eed22a684e0b2\n--cidr\n130.137.245.255/32\n--profile\nmember-account\nIn the output, you'll see the deprovisioned CIDR.\n{\n\"PoolId\": \"ipv4pool-ec2-0019eed22a684e0b2\",                                                                                       \n    \"DeprovisionedAddresses\": [                                                                                                       \n        \"130.137.245.255\"                                                                                                             \n    ]                                                                                                                                 \n}\nView your BYOIP CIDRs again and ensure there are no more provisioned\n                    addresses. When you run the command in this section, the value for\n--region\nmust match the Region of your IPAM.\nThis step must be done by the member account.\naws ec2 describe-public-ipv4-pools --region\nus-east-1\n--profile\nmember-account\nIn the output, you'll see the IP addresses count in your public IPv4 pool.\n{\n\"PublicIpv4Pools\": [\n{\n\"PoolId\": \"ipv4pool-ec2-0019eed22a684e0b2\",\n            \"Description\": \"\",\n            \"PoolAddressRanges\": [],\n            \"TotalAddressCount\": 0,\n            \"TotalAvailableAddressCount\": 0,\n            \"NetworkBorderGroup\": \"us-east-1\",\n            \"Tags\": []\n        }\n    ]\n}\nView the EIP allocation is no longer managed\n                    in IPAM. It can take some time for IPAM to discover that the Elastic IP address\n                    has been removed. You cannot continue to clean up and deprovision the IPAM pool\n                    CIDR until you see that the allocation has been removed from IPAM. When you run\n                    the command in this section, the value for\n--region\nmust match the --locale\n                    option you entered when you created the pool that will be used for the BYOIP\n                    CIDR.\nThis step must be done by the IPAM account.\naws ec2 get-ipam-pool-allocations --region\nus-west-2\n--ipam-pool-id\nipam-pool-0d8f3646b61ca5987\n--profile\nipam-account\nThe output shows the allocation in IPAM.\n{\n\"IpamPoolAllocations\": []\n}\nDeprovision the Regional pool CIDR. When you\n                    run the commands in this step, the value for\n--region\nmust match\n                    the Region of your IPAM.\nThis step must be done by the IPAM account.\naws ec2 deprovision-ipam-pool-cidr --region\nus-east-1\n--ipam-pool-id\nipam-pool-0d8f3646b61ca5987\n--cidr\n130.137.245.0/24\n--profile\nipam-account\nIn the output, you'll see the CIDR pending deprovision.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"130.137.245.0/24\",                                                                         \n        \"State\": \"pending-deprovision\"                                                                           \n    }                                                                                                            \n}\nDeprovisioning takes time to complete. Check the status of deprovisioning.\naws ec2 get-ipam-pool-cidrs --region\nus-east-1\n--ipam-pool-id\nipam-pool-0d8f3646b61ca5987\n--profile\nipam-account\nWait until you see\ndeprovisioned\nbefore you continue to the next step.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"130.137.245.0/24\",                                                                         \n        \"State\": \"deprovisioned\"                                                                           \n    }                                                                                                            \n}\nDelete the RAM shares and disable RAM integration with AWS\n                    Organizations. Complete the steps in\nDeleting a resource\n                        share in AWS RAM\nand\nDisabling\n                        resource sharing with AWS Organizations\nin the\nAWS RAM User Guide\n, in that order, to delete the\n                    RAM shares and disable RAM integration with AWS Organizations.\nThis step must be done by the IPAM account and management account\n                    respectively. If you are using the AWS CLI to delete the RAM shares and disable\n                    RAM integration, use the\n--profile\nipam-account\nand\n--profile\nmanagement-account\noptions.\nDelete the Regional pool. When you run the\n                    command in this step, the value for\n--region\nmust match the Region\n                    of your IPAM.\nThis step must be done by the IPAM account.\naws ec2 delete-ipam-pool --region\nus-east-1\n--ipam-pool-id\nipam-pool-0d8f3646b61ca5987\n--profile\nipam-account\nIn the output, you can see the delete state.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-0d8f3646b61ca5987\",\n        \"SourceIpamPoolId\": \"ipam-pool-0a03d430ca3f5c035\",\n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0d8f3646b61ca5987\",\n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",\n        \"IpamScopeType\": \"public\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n        \"Locale\": \"us-east-1\",\n        \"PoolDepth\": 2,\n        \"State\": \"delete-in-progress\",\n        \"Description\": \"reg-ipv4-pool\",\n        \"AutoImport\": false,\n        \"Advertisable\": true,\n        \"AddressFamily\": \"ipv4\"\n    }\n}\nDeprovision the top-level pool CIDR. When you\n                    run the commands in this step, the value for\n--region\nmust match\n                    the Region of your IPAM.\nThis step must be done by the IPAM account.\naws ec2 deprovision-ipam-pool-cidr --region\nus-east-1\n--ipam-pool-id\nipam-pool-0a03d430ca3f5c035\n--cidr\n130.137.245.0/24\n--profile\nipam-account\nIn the output, you'll see the CIDR pending deprovision.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"130.137.245.0/24\",                                                                         \n        \"State\": \"pending-deprovision\"                                                                           \n    }                                                                                                            \n}\nDeprovisioning takes time to complete. Run the following command to check the status of deprovisioning.\naws ec2 get-ipam-pool-cidrs --region\nus-east-1\n--ipam-pool-id\nipam-pool-0a03d430ca3f5c035\n--profile\nipam-account\nWait until you see\ndeprovisioned\nbefore you continue to the next step.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"130.137.245.0/24\",                                                                         \n        \"State\": \"deprovisioned\"                                                                           \n    }                                                                                                            \n}\nDelete the top-level pool. When you run the\n                    command in this step, the value for\n--region\nmust match the Region\n                    of your IPAM.\nThis step must be done by the IPAM account.\naws ec2 delete-ipam-pool --region\nus-east-1\n--ipam-pool-id\nipam-pool-0a03d430ca3f5c035\n--profile\nipam-account\nIn the output, you can see the delete state.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-0a03d430ca3f5c035\",\n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0a03d430ca3f5c035\",\n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",\n        \"IpamScopeType\": \"public\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n        \"Locale\": \"us-east-1\",\n        \"PoolDepth\": 2,\n        \"State\": \"delete-in-progress\",\n        \"Description\": \"top-level-pool\",\n        \"AutoImport\": false,\n        \"Advertisable\": true,\n        \"AddressFamily\": \"ipv4\"\n    }\n}\nDelete the IPAM. When you run the command in\n                    this step, the value for\n--region\nmust match the Region of your\n                    IPAM.\nThis step must be done by the IPAM account.\naws ec2 delete-ipam --region\nus-east-1\n--ipam-id\nipam-090e48e75758de279\n--profile\nipam-account\nIn the output, you'll see the IPAM response. This means that the IPAM was deleted.\n{\n\"Ipam\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamId\": \"ipam-090e48e75758de279\",                                           \n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",  \n        \"PublicDefaultScopeId\": \"ipam-scope-0087d83896280b594\",                       \n        \"PrivateDefaultScopeId\": \"ipam-scope-08b70b04fbd524f8d\",                      \n        \"ScopeCount\": 2,                                                                                                                  \n        \"OperatingRegions\": [\n{\n\"RegionName\": \"us-east-1\"                                             \n            },\n{\n\"RegionName\": \"us-west-2\"\n            }\n        ],          \n    }\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS CLI only\nIPv6 CIDR\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoip-ipam-ipv6.html": "Bring your own IPv6 CIDR to IPAM using only the AWS CLI - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nStep 1: Create AWS CLI named profiles and IAM roles\nStep 2: Create an IPAM\nStep 3: Create an IPAM pool\nStep 4: Provision a CIDR to the top-level pool\nStep 5: Create a Regional pool within the\n                top-level pool\nStep 6: Provision a CIDR to the Regional pool\nStep 7. Share the Regional pool\nStep 8: Create a VPC using the IPv6 CIDR\nStep 9: Advertise the CIDR\nStep 10: Cleanup\nBring your own IPv6 CIDR to IPAM using only the AWS CLI\nFollow these steps to bring an IPv6 CIDR to IPAM and allocate a VPC using only the AWS CLI.\nImportant\nThis tutorial assumes you have already completed the steps in the following sections:\nIntegrate IPAM with accounts in an AWS Organization\n.\nCreate an IPAM\n.\nEach step of this tutorial must be done by one of three AWS Organizations accounts:\nThe management account.\nThe member account configured to be your IPAM administrator in\nIntegrate IPAM with accounts in an AWS Organization\n. In this tutorial, this account will be called the IPAM account.\nThe member account in your organization which will allocate CIDRs from an IPAM pool. In this tutorial, this account will be called the member account.\nContents\nStep 1: Create AWS CLI named profiles and IAM roles\nStep 2: Create an IPAM\nStep 3: Create an IPAM pool\nStep 4: Provision a CIDR to the top-level pool\nStep 5: Create a Regional pool within the\n                top-level pool\nStep 6: Provision a CIDR to the Regional pool\nStep 7. Share the Regional pool\nStep 8: Create a VPC using the IPv6 CIDR\nStep 9: Advertise the CIDR\nStep 10: Cleanup\nStep 1: Create AWS CLI named profiles and IAM roles\nTo complete this tutorial as a single AWS user, you can use AWS CLI named profiles to switch\n        from one IAM role to another.\nNamed profiles\nare\n        collections of settings and credentials that you \n        refer to when using the\n--profile\noption with the AWS CLI. \n        For more\n        information about how to create IAM roles and named profiles for AWS accounts, see\nUsing an IAM role in the AWS CLI\nin the\nAWS Identity and Access Management User\n            Guide\n.\nCreate one role and one named profile for each of the three AWS accounts you will use in this tutorial:\nA profile called\nmanagement-account\nfor the AWS Organizations management account.\nA profile called\nipam-account\nfor the AWS Organizations member account that is configured to be your IPAM administrator.\nA profile called\nmember-account\nfor the AWS Organizations member account in your organization which will allocate CIDRs from an IPAM pool.\nAfter you have created the IAM roles and named profiles, return to this page and go to the next step. You will notice throughout the rest of this tutorial that the sample AWS CLI commands use the\n--profile\noption with one of the named profiles to indicate which account must run the command.\nStep 2: Create an IPAM\nThis step is optional. If you already have an IPAM created with operating Regions of\nus-east-1\nand\nus-west-2\ncreated, you can skip this step.\n            Create an IPAM and specify an operating region of\nus-east-1\nand\nus-west-2\n. You must select an operating region so that you can use the\n            locale option when you create your IPAM pool. The IPAM integration with BYOIP requires\n            that the locale is set on whichever pool will be used for the BYOIP CIDR.\nThis step must be done by the IPAM account.\nRun the following command:\naws ec2 create-ipam --description\nmy-ipam\n--region\nus-east-1\n--operating-regions\nRegionName=us-west-2\n--profile\nipam-account\nIn the output, you'll see the IPAM you've created. Note the value for\nPublicDefaultScopeId\n. You will need your public scope ID in the next step.\n{\n\"Ipam\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamId\": \"ipam-090e48e75758de279\",                                           \n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",  \n        \"PublicDefaultScopeId\": \"ipam-scope-0087d83896280b594\",                       \n        \"PrivateDefaultScopeId\": \"ipam-scope-08b70b04fbd524f8d\",                      \n        \"ScopeCount\": 2,                                                              \n        \"Description\": \"my-ipam\",                                                     \n        \"OperatingRegions\": [\n{\n\"RegionName\": \"us-east-1\"                                             \n            },\n{\n\"RegionName\": \"us-west-2\"\n            }                                                                       \n        ],                                                                            \n        \"Tags\": []                                                                    \n    }                                                                                 \n}\nStep 3: Create an IPAM pool\nSince you are going to create a top-level IPAM pool with a Regional pool within it,\n            and we\u00e2\u0080\u0099re going to allocate space to a resource (a VPC) from the\n            Regional pool, you will set the locale on the Regional pool and not the top-level\n            pool. You\u00e2\u0080\u0099ll add the locale to the Regional pool when you create the Regional pool\n            in a later step. The IPAM integration with BYOIP requires that the locale is set on\n            whichever pool will be used for the BYOIP CIDR.\nThis step must be done by the IPAM account.\nChoose if you want this IPAM pool CIDR to be advertisable by AWS over the public internet (\n--publicly-advertisable\nor\n--no-publicly-advertisable\n).\nNote\nNote that the scope ID must be the ID for the public scope and the address family must be\nipv6\n.\nTo create an IPv6 address pool for all of your AWS resources using the\n                AWS CLI\nRun the following command to create an IPAM pool. Use the ID of the public\n                    scope of the IPAM that you created in the previous step.\naws ec2 create-ipam-pool --region\nus-east-1\n--ipam-scope-id\nipam-scope-0087d83896280b594\n--description\n\"top-level-IPv6-pool\"\n--address-family\nipv6\n--publicly-advertisable\n--profile\nipam-account\nIn the output, you'll see\ncreate-in-progress\n, which indicates that pool creation is in progress.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-07f2466c7158b50c4\",                                                          \n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-07f2466c7158b50c4\",            \n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",         \n        \"IpamScopeType\": \"public\",                                                                            \n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",                          \n        \"Locale\": \"None\",                                                                                     \n        \"PoolDepth\": 1,                                                                                       \n        \"State\": \"create-in-progress\",                                                                        \n        \"Description\": \"top-level-Ipv6-pool\",                                                                 \n        \"AutoImport\": false,                                                                                  \n        \"Advertisable\": true,                                                                                 \n        \"AddressFamily\": \"ipv6\",                                                                              \n        \"Tags\": []                                                                                            \n    }                                                                                                         \n}\nRun the following command until you see a state of\ncreate-complete\nin the output.\naws ec2 describe-ipam-pools --region\nus-east-1\n--profile\nipam-account\nThe following example output shows the state of the pool.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-07f2466c7158b50c4\",                                                          \n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-07f2466c7158b50c4\",            \n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",         \n        \"IpamScopeType\": \"public\",                                                                            \n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",                          \n        \"Locale\": \"None\",                                                                                     \n        \"PoolDepth\": 1,                                                                                       \n        \"State\": \"create-complete\",                                                                        \n        \"Description\": \"top-level-Ipv6-pool\",                                                                 \n        \"AutoImport\": false,                                                                                  \n        \"Advertisable\": true,                                                                                 \n        \"AddressFamily\": \"ipv6\",                                                                              \n        \"Tags\": []                                                                                            \n    }                                                                                                         \n}\nStep 4: Provision a CIDR to the top-level pool\nProvision a CIDR block to the top-level pool. Note that when provisioning an IPv6 CIDR\n            to a pool within the top-level pool, the minimum IPv6 CIDR you can provision for an\n            advertisable IPAM pool is\n/48\n; more specific CIDRs (such as\n/49\n) are not permitted. The\n            minimum CIDR you can bring in for an non-advertisable IPAM pool is\n/56\n; more specific\n            CIDRs (such as\n/57\n) are not permitted. You must include the CIDR and the BYOIP message\n            and certificate signature in the request so we can verify that you own the public space.\n            For a list of BYOIP prerequisites including how to get this BYOIP message and certificate signature, see\nBring your own public IPv4 CIDR to IPAM using only the AWS CLI\n.\nYou only need to add\n--cidr-authorization-context\nwhen you provision the BYOIP CIDR to the\n            top-level pool. For the Regional pool within the top-level pool, you can omit the\n--cidr-authorization-context\noption.\nThis step must be done by the IPAM account.\nTo provision a CIDR block to the pool using the AWS CLI\nRun the following command to provision the CIDR.\naws ec2 provision-ipam-pool-cidr --region\nus-east-1\n--ipam-pool-id\nipam-pool-07f2466c7158b50c4\n--cidr\n2605:9cc0:409::/48\n--cidr-authorization-context Message=\"\n1|aws|470889052444|2605:9cc0:409::/48|20250101|SHA256|RSAPSS\n\",Signature=\"\nFU26~vRG~NUGXa~akxd6dvdcCfvL88g8d~YAuai-CR7HqMwzcgdS9RlpBGtfIdsRGyr77LmWyWqU9Xp1g2R1kSkfD00NiLKLcv9F63k6wdEkyFxNp7RAJDvF1mBwxmSgH~Crt-Vp6LON3yOOXMp4JENB9uM7sMlu6oeoutGyyhXFeYPzlGSRdcdfKNKaimvPCqVsxGN5AwSilKQ8byNqoa~G3dvs8ueSaDcT~tW4CnILura70nyK4f2XzgPKKevAD1g8bpKmOFMbHS30CxduYknnDl75lvEJs1J91u3-wispI~r69fq515UR19TA~fmmxBDh1huQ8DkM1rqcwveWow__\n\" --profile\nipam-account\nIn the output, you'll see the CIDR pending provision.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"2605:9cc0:409::/48\",                                                                    \n        \"State\": \"pending-provision\"                                                                          \n    }                                                                                                         \n}\nEnsure that this CIDR has been provisioned before you continue.\nImportant\nIt can take up to one week for the BYOIP CIDR\n                    to be provisioned.\nRun the following\n                    command until you see a state of\nprovisioned\nin the output.\naws ec2 get-ipam-pool-cidrs --region\nus-east-1\n--ipam-pool-id\nipam-pool-07f2466c7158b50c4\n--profile\nipam-account\nThe following example output shows the state.\n{\n\"IpamPoolCidrs\": [\n{\n\"Cidr\": \"2605:9cc0:409::/48\",\n            \"State\": \"provisioned\"\n        }\n    ]\n}\nStep 5: Create a Regional pool within the\n                top-level pool\nCreate a Regional pool within the top-level pool.\n--locale\nis required on\n            the pool and it must be one of the operating Regions you configured when you created the\n            IPAM.\nThis step must be done by the IPAM account.\nImportant\nWhen you create the pool, you must include\n--aws-service ec2\n. The service you select determines the AWS service where the CIDR will be advertisable. Currently, the only option is\nec2\n, which means that the CIDRs allocated from this pool will be advertisable for the Amazon EC2 service (for Elastic IP addresses) and the Amazon VPC service (for CIDRs associated with VPCs).\nTo create a Regional pool using the\n                AWS CLI\nRun the following command to create the pool.\naws ec2 create-ipam-pool --description\n\"Regional-IPv6-pool\"\n--region\nus-east-1\n--ipam-scope-id\nipam-scope-0087d83896280b594\n--source-ipam-pool-id\nipam-pool-07f2466c7158b50c4\n--locale\nus-west-2\n--address-family\nipv6\n--aws-service ec2 --profile\nipam-account\nIn the output, you'll see IPAM creating the pool.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-0053b7d2b4fc3f730\",\n        \"SourceIpamPoolId\": \"ipam-pool-07f2466c7158b50c4\",\n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0053b7d2b4fc3f730\",\n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",\n        \"IpamScopeType\": \"public\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n        \"Locale\": \"us-west-2\",\n        \"PoolDepth\": 2,\n        \"State\": \"create-in-progress\",\n        \"Description\": \"reg-ipv6-pool\",\n        \"AutoImport\": false,\n        \"Advertisable\": true,\n        \"AddressFamily\": \"ipv6\",\n        \"Tags\": [],\n        \"ServiceType\": \"ec2\"\n    }\n}\nRun the following command until you see a state of\ncreate-complete\nin the output.\naws ec2 describe-ipam-pools --region\nus-east-1\n--profile\nipam-account\nIn the output, you see the pools that you have in your IPAM. In this tutorial,\n                    we created a top-level and a Regional pool, so you'll see them both.\nStep 6: Provision a CIDR to the Regional pool\nProvision a CIDR block to the Regional pool. Note that when provisioning the CIDR to a\n            pool within the top-level pool, the minimum IPv6 CIDR you can provision for an\n            advertisable IPAM pool is\n/48\n; more specific CIDRs (such as\n/49\n) are not permitted. The\n            minimum CIDR you can bring in for an non-advertisable IPAM pool is\n/56\n; more specific\n            CIDRs (such as\n/57\n) are not permitted.\nThis step must be done by the IPAM account.\nTo assign a CIDR block to the Regional pool using the AWS CLI\nRun the following command to provision the CIDR.\naws ec2 provision-ipam-pool-cidr --region\nus-east-1\n--ipam-pool-id\nipam-pool-0053b7d2b4fc3f730\n--cidr\n2605:9cc0:409::/48\n--profile\nipam-account\nIn the output, you'll see the CIDR pending provision.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"2605:9cc0:409::/48\",\n        \"State\": \"pending-provision\"\n    }\n}\nRun the following command until you see the state of\nprovisioned\nin the output.\naws ec2 get-ipam-pool-cidrs --region\nus-east-1\n--ipam-pool-id\nipam-pool-0053b7d2b4fc3f730\n--profile\nipam-account\nThe following example output shows the correct state.\n{\n\"IpamPoolCidrs\": [\n{\n\"Cidr\": \"2605:9cc0:409::/48\",                                \n            \"State\": \"provisioned\"                                            \n        }                                                                     \n    ]                                                                         \n}\nStep 7. Share the Regional pool\nFollow the steps in this section to share the pre-production IPAM pool using AWS Resource Access Manager (RAM).\n4.1. Enable resource sharing in\n                    AWS RAM\nAfter you create your IPAM, you\u00e2\u0080\u0099ll want to share the regional pool with other\n                accounts in your organization. Before you share an IPAM pool, complete the steps in\n                this section to enable resource sharing with AWS RAM. If you are using the AWS CLI to\n                enable resource sharing, use the\n--profile\nmanagement-account\noption.\nTo enable resource sharing\nUsing the AWS Organizations management account, open the AWS RAM console at\nhttps://console.aws.amazon.com/ram/\n.\nIn the left navigation pane, choose\nSettings\n,\n                        choose\nEnable sharing with AWS Organizations\n, and then choose\nSave settings\n.\nYou can now share an IPAM pool with other members of the organization.\n4.2. Share an IPAM pool using AWS RAM\nIn this section you\u00e2\u0080\u0099ll share the regional pool with another AWS Organizations member\n                account. For complete instructions on sharing IPAM pools, including information on\n                the required IAM permissions, see\nShare an IPAM pool using AWS RAM\n. If you are using the AWS CLI to enable resource sharing, use the\n--profile\nipam-account\noption.\nTo share an IPAM pool using AWS RAM\nUsing the IPAM admin account, open the IPAM console at\nhttps://console.aws.amazon.com/ipam/\n.\nIn the navigation pane, choose\nPools\n.\nChoose the private scope, choose the pre-production IPAM pool, and choose\nActions\n>\nView\n                            details\n.\nUnder\nResource sharing\n, choose\nCreate resource share\n. The AWS RAM console opens.\n                        You share the pool using AWS RAM.\nChoose\nCreate a resource share\n.\nIn the AWS RAM console, choose\nCreate a resource share\nagain.\nAdd a\nName\nfor the shared pool.\nUnder\nSelect resource type\n, choose\nIPAM pools,\nand then choose the ARN of the\n                        pre-production development pool.\nChoose\nNext\n.\nChoose the\nAWSRAMPermissionIpamPoolByoipCidrImport\npermission. The details of the permission options are out of scope for this\n                        tutorial, but you can find out more about these options in\nShare an IPAM pool using AWS RAM\n.\nChoose\nNext\n.\nUnder\nPrincipals\n>\nSelect principal\n                        type\n, choose\nAWS account\nand enter the\n                        account ID of the account that will be bringing an IP address range to IPAM and choose\nAdd\n.\nChoose\nNext\n.\nReview the resource share options and the principals that you\u00e2\u0080\u0099ll be\n                        sharing with, and then choose\nCreate\n.\nTo allow the\nmember-account\naccount to allocate IP\n                        address CIDRS from the IPAM pool, create a second resource share with\nAWSRAMDefaultPermissionsIpamPool\nand create a second\n                        resource share. The value for\n--resource-arns\nis the ARN of the\n                        IPAM pool that you created in the previous section. The value for\n--principals\nis the account ID of the BYOIP CIDR owner\n                        account. The value for\n--permission-arns\nis the ARN of the\nAWSRAMDefaultPermissionsIpamPool\npermission.\nStep 8: Create a VPC using the IPv6 CIDR\nCreate a VPC using the IPAM pool ID. You must associate an IPv4 CIDR block to the VPC\n            as well using the\n--cidr-block\noption or the request will fail. When you\n            run the command in this section, the value for\n--region\nmust match the\n--locale\noption you entered when you created the pool that will be used\n            for the BYOIP CIDR.\nThis step must be done by the member account.\nTo create a VPC with the IPv6 CIDR using the AWS CLI\nRun the following command to provision the CIDR.\naws ec2 create-vpc --region\nus-west-2\n--ipv6-ipam-pool-id\nipam-pool-0053b7d2b4fc3f730\n--cidr-block\n10.0.0.0/16\n--ipv6-netmask-length\n56\n--profile\nmember-account\nIn the output, you'll see the VPC being created.\n{\n\"Vpc\":\n{\n\"CidrBlock\": \"10.0.0.0/16\",\n        \"DhcpOptionsId\": \"dopt-2afccf50\",\n        \"State\": \"pending\",\n        \"VpcId\": \"vpc-00b5573ffc3b31a29\",\n        \"OwnerId\": \"123456789012\",\n        \"InstanceTenancy\": \"default\",\n        \"Ipv6CidrBlockAssociationSet\": [\n{\n\"AssociationId\": \"vpc-cidr-assoc-01b5703d6cc695b5b\",\n                \"Ipv6CidrBlock\": \"2605:9cc0:409::/56\",\n                \"Ipv6CidrBlockState\":\n{\n\"State\": \"associating\"\n                },\n                \"NetworkBorderGroup\": \"us-east-1\",\n                \"Ipv6Pool\": \"ipam-pool-0053b7d2b4fc3f730\"\n            }\n        ],\n        \"CidrBlockAssociationSet\": [\n{\n\"AssociationId\": \"vpc-cidr-assoc-09cccb07d4e9a0e0e\",\n                \"CidrBlock\": \"10.0.0.0/16\",\n                \"CidrBlockState\":\n{\n\"State\": \"associated\"\n                }\n            }\n        ],\n        \"IsDefault\": false\n    }\n}\nView the VPC allocation in IPAM.\naws ec2 get-ipam-pool-allocations --region\nus-west-2\n--ipam-pool-id\nipam-pool-0053b7d2b4fc3f730\n--profile\nipam-account\nIn the output, you'll see allocation in IPAM.\n{\n\"IpamPoolAllocations\": [\n{\n\"Cidr\": \"2605:9cc0:409::/56\",\n            \"IpamPoolAllocationId\": \"ipam-pool-alloc-5f8db726fb9e4ff0a33836e649283a52\",\n            \"ResourceId\": \"vpc-00b5573ffc3b31a29\",\n            \"ResourceType\": \"vpc\",\n            \"ResourceOwner\": \"123456789012\"\n        }\n    ]\n}\nStep 9: Advertise the CIDR\nOnce you create the VPC with CIDR allocated in IPAM, you can then start advertising\n            the CIDR you brought to AWS that is in pool that has\n--aws-service ec2\ndefined. In this tutorial, that's your Regional pool. By default the CIDR is not\n            advertised, which means it's not publicly accessible over the internet. When you run the\n            command in this section, the value for\n--region\nmust match the\n--locale\noption you entered when you created the Regional pool that\n            will be used for the BYOIP CIDR.\nThis step must be done by the IPAM account.\nStart advertising the CIDR using the AWS CLI\nRun the following command to advertise the CIDR.\naws ec2 advertise-byoip-cidr --region\nus-west-2\n--cidr\n2605:9cc0:409::/48\n--profile\nipam-account\nIn the output, you'll see the CIDR is advertised.\n{\n\"ByoipCidr\":\n{\n\"Cidr\": \"2605:9cc0:409::/48\",                                              \n        \"State\": \"advertised\"                                                      \n    }                                                                              \n}\nStep 10: Cleanup\nFollow the steps in this section to clean up the resources you've provisioned and\n            created in this tutorial. When you run the commands in this section, the value for\n--region\nmust match the\n--locale\noption you entered when\n            you created the Regional pool that will be used for the BYOIP CIDR.\nClean up using the AWS CLI\nRun the following command to view the VPC allocation managed in IPAM.\nThis step must be done by the IPAM account.\naws ec2 get-ipam-pool-allocations --region\nus-west-2\n--ipam-pool-id\nipam-pool-0053b7d2b4fc3f730\n--profile\nipam-account\nThe output shows the allocation in IPAM.\n{\n\"IpamPoolAllocations\": [\n{\n\"Cidr\": \"2605:9cc0:409::/56\",\n            \"IpamPoolAllocationId\": \"ipam-pool-alloc-5f8db726fb9e4ff0a33836e649283a52\",\n            \"ResourceId\": \"vpc-00b5573ffc3b31a29\",\n            \"ResourceType\": \"vpc\",\n            \"ResourceOwner\": \"123456789012\"\n        }\n    ]\n}\nRun the following command to stop advertising the CIDR. When you run the\n                    command in this step, the value for\n--region\nmust match the\n--locale\noption you entered when you created the Regional pool\n                    that will be used for the BYOIP CIDR.\nThis step must be done by the IPAM account.\naws ec2 withdraw-byoip-cidr --region\nus-west-2\n--cidr\n2605:9cc0:409::/48\n--profile\nipam-account\nIn the output, you'll see the CIDR State has changed from\nadvertised\nto\nprovisioned\n.\n{\n\"ByoipCidr\":\n{\n\"Cidr\": \"2605:9cc0:409::/48\",\n        \"State\": \"provisioned\"\n    }\n}\nRun the following command to delete the VPC. When you run the command in\n                    this section, the value for\n--region\nmust match the\n--locale\noption you entered when you created the Regional pool\n                    that will be used for the BYOIP CIDR.\nThis step must be done by the member account.\naws ec2 delete-vpc --region\nus-west-2\n--vpc-id\nvpc-00b5573ffc3b31a29\n--profile\nmember-account\nYou will not see any output when you run this command.\nRun the following command to view the VPC allocation in IPAM. It can take\n                    some time for IPAM to discover that the VPC has been deleted and remove this\n                    allocation. When you run the commands in this section, the value for\n--region\nmust match the\n--locale\noption you\n                    entered when you created the Regional pool that will be used for the BYOIP\n                    CIDR.\nThis step must be done by the IPAM account.\naws ec2 get-ipam-pool-allocations --region\nus-west-2\n--ipam-pool-id\nipam-pool-0053b7d2b4fc3f730\n--profile\nipam-account\nThe output shows the allocation in IPAM.\n{\n\"IpamPoolAllocations\": [\n{\n\"Cidr\": \"2605:9cc0:409::/56\",                                                                   \n            \"IpamPoolAllocationId\": \"ipam-pool-alloc-5f8db726fb9e4ff0a33836e649283a52\",                                        \n            \"ResourceId\": \"vpc-00b5573ffc3b31a29\",                                                               \n            \"ResourceType\": \"vpc\",                                                                               \n            \"ResourceOwner\": \"123456789012\"                                                                      \n        }                                                                                                        \n    ]                                                                                                            \n}\nRerun the command and look for the allocation to be removed. You cannot continue to clean up and deprovision the IPAM pool CIDR \n                        until you see that the allocation has been removed from IPAM.\naws ec2 get-ipam-pool-allocations --region\nus-west-2\n--ipam-pool-id\nipam-pool-0053b7d2b4fc3f730\n--profile\nipam-account\nThe output shows the allocation removed from IPAM.\n{\n\"IpamPoolAllocations\": []\n}\nDelete the RAM shares and disable RAM integration with AWS\n                    Organizations. Complete the steps in\nDeleting a resource\n                        share in AWS RAM\nand\nDisabling\n                        resource sharing with AWS Organizations\nin the\nAWS RAM User Guide\n, in that order, to delete the\n                    RAM shares and disable RAM integration with AWS Organizations.\nThis step must be done by the IPAM account and management account\n                    respectively. If you are using the AWS CLI to delete the RAM shares and disable\n                    RAM integration, use the\n--profile\nipam-account\nand\n--profile\nmanagement-account\noptions.\nRun the following command to deprovision the Regional pool CIDR.\nThis step must be done by the IPAM account.\naws ec2 deprovision-ipam-pool-cidr --region\nus-east-1\n--ipam-pool-id\nipam-pool-0053b7d2b4fc3f730\n--cidr\n2605:9cc0:409::/48\n--profile\nipam-account\nIn the output, you'll see the CIDR pending deprovision.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"2605:9cc0:409::/48\",\n        \"State\": \"pending-deprovision\"\n    }\n}\nDeprovisioning takes time to complete. Continue to run the command until you see the CIDR state\ndeprovisioned\n.\naws ec2 get-ipam-pool-cidrs --region\nus-east-1\n--ipam-pool-id\nipam-pool-0053b7d2b4fc3f730\n--cidr\n2605:9cc0:409::/48\n--profile\nipam-account\nIn the output, you'll see the CIDR pending deprovision.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"2605:9cc0:409::/48\",\n        \"State\": \"deprovisioned\"\n    }\n}\nRun the following command to delete the Regional pool.\nThis step must be done by the IPAM account.\naws ec2 delete-ipam-pool --region\nus-east-1\n--ipam-pool-id\nipam-pool-0053b7d2b4fc3f730\n--profile\nipam-account\nIn the output, you can see the delete state.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-0053b7d2b4fc3f730\",\n        \"SourceIpamPoolId\": \"ipam-pool-07f2466c7158b50c4\",\n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0053b7d2b4fc3f730\",\n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",\n        \"IpamScopeType\": \"public\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n        \"Locale\": \"us-east-1\",\n        \"PoolDepth\": 2,\n        \"State\": \"delete-in-progress\",\n        \"Description\": \"reg-ipv6-pool\",\n        \"AutoImport\": false,\n        \"Advertisable\": true,\n        \"AddressFamily\": \"ipv6\"\n    }\n}\nRun the following command to deprovision the top-level pool CIDR.\nThis step must be done by the IPAM account.\naws ec2 deprovision-ipam-pool-cidr --region\nus-east-1\n--ipam-pool-id\nipam-pool-07f2466c7158b50c4\n--cidr\n2605:9cc0:409::/48\n--profile\nipam-account\nIn the output, you'll see the CIDR pending deprovision.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"2605:9cc0:409::/48\",\n        \"State\": \"pending-deprovision\"\n    }\n}\nDeprovisioning takes time to complete. Run the following command to check the status of deprovisioning.\naws ec2 get-ipam-pool-cidrs --region\nus-east-1\n--ipam-pool-id\nipam-pool-07f2466c7158b50c4\n--profile\nipam-account\nWait until you see\ndeprovisioned\nbefore you continue to the next step.\n{\n\"IpamPoolCidr\":\n{\n\"Cidr\": \"2605:9cc0:409::/48\",                                                                         \n        \"State\": \"deprovisioned\"                                                                           \n    }                                                                                                            \n}\nRun the following command to delete the top-level pool.\nThis step must be done by the IPAM account.\naws ec2 delete-ipam-pool --region\nus-east-1\n--ipam-pool-id\nipam-pool-07f2466c7158b50c4\n--profile\nipam-account\nIn the output, you can see the delete state.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-0053b7d2b4fc3f730\",\n        \"SourceIpamPoolId\": \"ipam-pool-07f2466c7158b50c4\",\n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0053b7d2b4fc3f730\",\n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",\n        \"IpamScopeType\": \"public\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n        \"Locale\": \"us-east-1\",\n        \"PoolDepth\": 2,\n        \"State\": \"delete-in-progress\",\n        \"Description\": \"reg-ipv6-pool\",\n        \"AutoImport\": false,\n        \"Advertisable\": true,\n        \"AddressFamily\": \"ipv6\"\n    }\n}\nRun the following command to delete the IPAM.\nThis step must be done by the IPAM account.\naws ec2 delete-ipam --region\nus-east-1\n--ipam-id\nipam-090e48e75758de279\n--profile\nipam-account\nIn the output, you'll see the IPAM response. This means that the IPAM was deleted.\n{\n\"Ipam\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamId\": \"ipam-090e48e75758de279\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n        \"PublicDefaultScopeId\": \"ipam-scope-0087d83896280b594\",\n        \"PrivateDefaultScopeId\": \"ipam-scope-08b70b04fbd524f8d\",\n        \"ScopeCount\": 2,\n        \"OperatingRegions\": [\n{\n\"RegionName\": \"us-east-1\"                                             \n            },\n{\n\"RegionName\": \"us-west-2\"\n            }     \n        ]\n    }\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIPv4 CIDR\nTransfer a BYOIP IPv4 CIDR to IPAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoip-ipam-transfer-ipv4.html": "Tutorial: Transfer a BYOIP IPv4 CIDR to IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nStep 1: Create AWS CLI named profiles and IAM roles\nStep 2: Get your IPAM\u00e2\u0080\u0099s public scope\n                ID\nStep 3: Create an IPAM pool\nStep 4: Share the IPAM pool using AWS RAM\nStep 5: Transfer an existing BYOIP IPV4 CIDR to IPAM\nStep 6: View the CIDR in IPAM\nStep 7: Cleanup\nTutorial: Transfer a BYOIP IPv4 CIDR to IPAM\nFollow these steps to transfer an existing IPv4 CIDR to IPAM. If you already have an IPv4\n        BYOIP CIDR with AWS, you can move the CIDR to IPAM from a public IPv4 pool. You cannot\n        move an IPv6 CIDR to IPAM.\nThis tutorial assumes you have already successfully brought an IP address range to AWS using the process described in\nBring your own IP addresses (BYOIP) in Amazon EC2\nand now you want to transfer that IP address range to IPAM.  If you are bringing a new IP address to AWS for the first time,\n        complete the steps in\nTutorial: Bring your IP addresses to IPAM\n.\nIf you transfer a public IPv4 pool to IPAM, there is no impact on existing allocations.\n        Once you transfer a public IPv4 pool to IPAM, depending on the resource type, you may be\n        able to monitor the existing allocations. For more information, see\nMonitor CIDR usage by resource\n.\nImportant\nThis tutorial assumes you have already completed the steps in\nCreate an IPAM\n.\nEach step of this tutorial must be done by one of two AWS accounts:\nThe account for the IPAM administrator. In this tutorial, this account will be called the IPAM account.\nThe account in your organization which owns the BYOIP CIDR. In this tutorial, this account will be called the BYOIP CIDR owner account.\nContents\nStep 1: Create AWS CLI named profiles and IAM roles\nStep 2: Get your IPAM\u00e2\u0080\u0099s public scope\n                ID\nStep 3: Create an IPAM pool\nStep 4: Share the IPAM pool using AWS RAM\nStep 5: Transfer an existing BYOIP IPV4 CIDR to IPAM\nStep 6: View the CIDR in IPAM\nStep 7: Cleanup\nStep 1: Create AWS CLI named profiles and IAM roles\nTo complete this tutorial as a single AWS user, you can use AWS CLI named profiles to switch\n        from one IAM role to another.\nNamed profiles\nare\n        collections of settings and credentials that you \n        refer to when using the\n--profile\noption with the AWS CLI. \n        For more\n        information about how to create IAM roles and named profiles for AWS accounts, see\nUsing an IAM role in the AWS CLI\nin the\nAWS Identity and Access Management User\n            Guide\n.\nCreate one role and one named profile for each of the three AWS accounts you will use in this tutorial:\nA profile called\nipam-account\nfor the AWS account that is the IPAM administrator.\nA profile called\nbyoip-owner-account\nfor the AWS account in your organization which owns the BYOIP CIDR.\nAfter you have created the IAM roles and named profiles, return to this page and go to the next step. You will notice throughout the rest of this tutorial that the sample AWS CLI commands use the\n--profile\noption with one of the named profiles to indicate which account must run the command.\nStep 2: Get your IPAM\u00e2\u0080\u0099s public scope\n                ID\nFollow the steps in this section to get your IPAM\u00e2\u0080\u0099s public scope ID. This step should\n            be performed by the\nipam-account\naccount.\nRun the following command to get your public scope ID.\naws ec2 describe-ipams --region\nus-east-1\n--profile\nipam-account\nIn the output, you'll see your public scope ID. Note the values for\nPublicDefaultScopeId\n. You will need it in the next step.\n{\n\"Ipams\": [\n{\n\"OwnerId\": \"123456789012\",\n            \"IpamId\": \"ipam-090e48e75758de279\",\n            \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n            \"PublicDefaultScopeId\": \"ipam-scope-0087d83896280b594\",\n            \"PrivateDefaultScopeId\": \"ipam-scope-08b70b04fbd524f8d\",\n            \"ScopeCount\": 2,\n            \"Description\": \"my-ipam\",\n            \"OperatingRegions\": [\n{\n\"RegionName\": \"us-east-1\"\n                },\n{\n\"RegionName\": \"us-west-2\"\n                }\n            ],\n            \"Tags\": []\n        }\n    ]\n}\nStep 3: Create an IPAM pool\nFollow the steps in this section to create an IPAM pool. This step should be performed\n            by the\nipam-account\naccount. The IPAM pool you create must be a\n            top-level pool with the\n--locale\noption matching the BYOIP CIDR AWS\n            Region. You can only transfer a BYOIP to a top-level IPAM pool.\nImportant\nWhen you create the pool, you must include\n--aws-service ec2\n. The service you select determines the AWS service where the CIDR will be advertisable. Currently, the only option is\nec2\n, which means that the CIDRs allocated from this pool will be advertisable for the Amazon EC2 service (for Elastic IP addresses) and the Amazon VPC service (for CIDRs associated with VPCs).\nTo create an IPv4 address pool for the transferred BYOIP CIDR using the\n                AWS CLI\nRun the following command to create an IPAM pool. Use the ID of the public\n                    scope of the IPAM that you retrieved in the previous step.\naws ec2 create-ipam-pool --region\nus-east-1\n--profile\nipam-account\n--ipam-scope-id\nipam-scope-0087d83896280b594\n--description\n\"top-level-pool\"\n--locale\nus-west-2\n--aws-service ec2 --address-family\nipv4\nIn the output, you'll see\ncreate-in-progress\n, which indicates that pool creation is in progress.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-0a03d430ca3f5c035\",\n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0a03d430ca3f5c035\",\n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",\n        \"IpamScopeType\": \"public\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n        \"Locale\": \"us-west-2\",\n        \"PoolDepth\": 1,\n        \"State\": \"create-in-progress\",\n        \"Description\": \"top-level-pool\",\n        \"AutoImport\": false,\n        \"AddressFamily\": \"ipv4\",\n        \"Tags\": [],\n        \"AwsService\": \"ec2\"\n    }\n}\nRun the following command until you see a state of\ncreate-complete\nin the output.\naws ec2 describe-ipam-pools --region\nus-east-1\n--profile\nipam-account\nThe following example output shows the state of the pool. You will need the\nOwnerId\nin the next step.\n{\n\"IpamPools\": [\n{\n\"OwnerId\": \"123456789012\",\n            \"IpamPoolId\": \"ipam-pool-0a03d430ca3f5c035\",\n            \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0a03d430ca3f5c035\",\n            \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",\n            \"IpamScopeType\": \"public\",\n            \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n            \"Locale\": \"us-west-2\",\n            \"PoolDepth\": 1,\n            \"State\": \"create-complete\",\n            \"Description\": \"top-level-pool\",\n            \"AutoImport\": false,\n            \"AddressFamily\": \"ipv4\",\n            \"Tags\": [],\n            \"AwsService\": \"ec2\"\n        }\n    ]\n}\nStep 4: Share the IPAM pool using AWS RAM\nFollow the steps in this section to share an IPAM pool using AWS RAM so that another AWS account can transfer an existing BYOIP IPV4 CIDR to the IPAM pool and use the IPAM pool. This\n            step should be performed by the\nipam-account\naccount.\nTo share an IPv4 address pool using the\n                AWS CLI\nView the AWS RAM permissions available for IPAM pools. You need both ARNs to complete the steps\n                    in this section.\naws ram list-permissions --region\nus-east-1\n--profile\nipam-account\n--resource-type ec2:IpamPool\n{\n\"permissions\": [\n{\n\"arn\": \"arn:aws:ram::aws:permission/AWSRAMDefaultPermissionsIpamPool\",\n           \"version\": \"1\",\n           \"defaultVersion\": true,\n           \"name\": \"AWSRAMDefaultPermissionsIpamPool\",\n           \"resourceType\": \"ec2:IpamPool\",\n           \"status\": \"ATTACHABLE\",\n           \"creationTime\": \"2022-06-30T13:04:29.335000-07:00\",\n           \"lastUpdatedTime\": \"2022-06-30T13:04:29.335000-07:00\",\n           \"isResourceTypeDefault\": true\n        },\n{\n\"arn\": \"arn:aws:ram::aws:permission/AWSRAMPermissionIpamPoolByoipCidrImport\",\n            \"version\": \"1\",\n            \"defaultVersion\": true,\n            \"name\": \"AWSRAMPermissionIpamPoolByoipCidrImport\",\n            \"resourceType\": \"ec2:IpamPool\",\n            \"status\": \"ATTACHABLE\",\n            \"creationTime\": \"2022-06-30T13:03:55.032000-07:00\",\n            \"lastUpdatedTime\": \"2022-06-30T13:03:55.032000-07:00\",\n            \"isResourceTypeDefault\": false\n        }\n    ]\n}\nCreate a resource share to enable the\nbyoip-owner-account\naccount to\n                    import BYOIP CIDRs to IPAM. The value for\n--resource-arns\nis the\n                    ARN of the IPAM pool that you created in the previous section. The value for\n--principals\nis the account ID of the BYOIP CIDR owner account.\n                    The value for\n--permission-arns\nis the ARN of the\nAWSRAMPermissionIpamPoolByoipCidrImport\npermission.\naws ram create-resource-share --region\nus-east-1\n--profile\nipam-account\n--name\nPoolShare2\n--resource-arns\narn:aws:ec2::123456789012:ipam-pool/ipam-pool-0a03d430ca3f5c035\n--principals\n111122223333\n--permission-arns arn:aws:ram::aws:permission/AWSRAMPermissionIpamPoolByoipCidrImport\n{\n\"resourceShare\":\n{\n\"resourceShareArn\": \"arn:aws:ram:us-east-1:123456789012:resource-share/7993758c-a4ea-43ad-be12-b3abaffe361a\",\n        \"name\": \"PoolShare2\",                                                                                      \n        \"owningAccountId\": \"123456789012\",                                                                                         \n        \"allowExternalPrincipals\": true,                                                                             \n        \"status\": \"ACTIVE\",                                                                                          \n        \"creationTime\": \"2023-04-28T07:32:25.536000-07:00\",                                                          \n        \"lastUpdatedTime\": \"2023-04-28T07:32:25.536000-07:00\"                                                        \n        }                                                                                                                \n}\n(Optional) If you want to allow the\nbyoip-owner-account\naccount to\n                    allocate IP address CIDRS from the IPAM pool to public IPv4 pools after the\n                    transfer is complete, copy the ARN for\nAWSRAMDefaultPermissionsIpamPool\nand create a second resource\n                    share. The value for\n--resource-arns\nis the ARN of the IPAM pool\n                    that you created in the previous section. The value for\n--principals\nis the account ID of the BYOIP CIDR owner account.\n                    The value for\n--permission-arns\nis the ARN of the\nAWSRAMDefaultPermissionsIpamPool\npermission.\naws ram create-resource-share --region\nus-east-1\n--profile\nipam-account\n--name\nPoolShare1\n--resource-arns\narn:aws:ec2::123456789012:ipam-pool/ipam-pool-0a03d430ca3f5c035\n--principals\n111122223333\n--permission-arns arn:aws:ram::aws:permission/AWSRAMDefaultPermissionsIpamPool\n{\n\"resourceShare\":\n{\n\"resourceShareArn\": \"arn:aws:ram:us-east-1:123456789012:resource-share/8d1e229b-2830-4cf4-8b10-19c889235a2f\",\n        \"name\": \"PoolShare1\",                                                                                      \n        \"owningAccountId\": \"123456789012\",                                                                                         \n        \"allowExternalPrincipals\": true,                                                                             \n        \"status\": \"ACTIVE\",                                                                                          \n        \"creationTime\": \"2023-04-28T07:31:25.536000-07:00\",                                                          \n        \"lastUpdatedTime\": \"2023-04-28T07:31:25.536000-07:00\"                                                        \n        }                                                                                                                \n}\nAs a result of creating the resource share in RAM, the byoip-owner-account account can\n            now move CIDRs to IPAM.\nStep 5: Transfer an existing BYOIP IPV4 CIDR to IPAM\nFollow the steps in this section to transfer an existing BYOIP IPV4 CIDR to IPAM. This\n            step should be performed by the\nbyoip-owner-account\naccount.\nTo transfer the BYOIP CIDR to IPAM, the BYOIP CIDR owner must have these permissions\n            in their IAM policy:\nec2:MoveByoipCidrToIpam\nec2:ImportByoipCidrToIpam\nTo transfer a BYOIP CIDR to the IPAM pool using the AWS CLI\nRun the following command to transfer the CIDR. Ensure that the\n--region\nvalue is the AWS Region of the BYOIP CIDR.\naws ec2 move-byoip-cidr-to-ipam --region\nus-west-2\n--profile\nbyoip-owner-account\n--ipam-pool-id\nipam-pool-0a03d430ca3f5c035\n--ipam-pool-owner\n123456789012\n--cidr\n130.137.249.0/24\nIn the output, you'll see the CIDR pending provision.\n{\n\"ByoipCidr\":\n{\n\"Cidr\": \"130.137.249.0/24\",                                              \n        \"State\": \"pending-transfer\"                                                      \n    }                                                                              \n}\nEnsure that the CIDR has been transferred. Run the following\n                    command until you see a state of\ncomplete-transfer\nin the output.\naws ec2 move-byoip-cidr-to-ipam --region\nus-west-2\n--profile\nbyoip-owner-account\n--ipam-pool-id\nipam-pool-0a03d430ca3f5c035\n--ipam-pool-owner\n123456789012\n--cidr\n130.137.249.0/24\nThe following example output shows the state.\n{\n\"ByoipCidr\":\n{\n\"Cidr\": \"130.137.249.0/24\",                                              \n        \"State\": \"complete-transfer\"                                                      \n    }                                                                              \n}\nStep 6: View the CIDR in IPAM\nFollow the steps in this section to view the CIDR in IPAM. This step should be\n            performed by the\nipam-account\naccount.\nTo view the transferred BYOIP CIDR in IPAM pool using the AWS CLI\nRun the following command to view the allocation managed in IPAM. Ensure that\n                    the\n--region\nvalue is the AWS Region of the BYOIP CIDR.\naws ec2 get-ipam-pool-allocations --region\nus-west-2\n--profile\nipam-account\n--ipam-pool-id\nipam-pool-0d8f3646b61ca5987\nThe output shows the allocation in IPAM.\n{\n\"IpamPoolAllocations\": [\n{\n\"Cidr\": \"130.137.249.0/24\",\n            \"IpamPoolAllocationId\": \"ipam-pool-alloc-5dedc8e7937c4261b56dc3e3eb53dc46\",\n            \"ResourceId\": \"ipv4pool-ec2-0019eed22a684e0b3\",\n            \"ResourceType\": \"ec2-public-ipv4-pool\",\n            \"ResourceOwner\": \"111122223333\"\n        }\n    ]\n}\nStep 7: Cleanup\nFollow the steps in this section to remove the resources you created in this tutorial.\n            This step should be performed by the\nipam-account\naccount.\nTo cleanup the resources created in this tutorial using the AWS CLI\nTo delete the IPAM pool shared resource, run the following command to get the first resource\n                    share ARN:\naws ram get-resource-shares --region\nus-east-1\n--profile\nipam-account\n--name\nPoolShare1\n--resource-owner SELF\n{\n\"resourceShares\": [\n{\n\"resourceShareArn\": \"arn:aws:ram:us-east-1:123456789012:resource-share/8d1e229b-2830-4cf4-8b10-19c889235a2f\",\n            \"name\": \"PoolShare1\",\n            \"owningAccountId\": \"123456789012\",\n            \"allowExternalPrincipals\": true,\n            \"status\": \"ACTIVE\",\n            \"creationTime\": \"2023-04-28T07:31:25.536000-07:00\",\n            \"lastUpdatedTime\": \"2023-04-28T07:31:25.536000-07:00\",\n            \"featureSet\": \"STANDARD\"\n        }\n    ]\n}\nCopy the resource share ARN and use it to delete the IPAM pool resource share.\naws ram delete-resource-share --region\nus-east-1\n--profile\nipam-account\n--resource-share-arn\narn:aws:ram:us-east-1:123456789012:resource-share/8d1e229b-2830-4cf4-8b10-19c889235a2f\n{\n\"returnValue\": true\n}\nIf you created an additional resource share in\nStep 4: Share the IPAM pool using AWS RAM\n, repeat the previous two steps\n                    to get the second resource share ARN for\nPoolShare2\nand delete the\n                    second resource share.\nRun the following command to get the allocation ID for the BYOIP CIDR. Ensure\n                    that the\n--region\nvalue matches the AWS Region of the BYOIP\n                    CIDR.\naws ec2 get-ipam-pool-allocations --region\nus-west-2\n--profile\nipam-account\n--ipam-pool-id\nipam-pool-0d8f3646b61ca5987\nThe output shows the allocation in IPAM.\n{\n\"IpamPoolAllocations\": [\n{\n\"Cidr\": \"130.137.249.0/24\",\n            \"IpamPoolAllocationId\": \"ipam-pool-alloc-5dedc8e7937c4261b56dc3e3eb53dc46\",\n            \"ResourceId\": \"ipv4pool-ec2-0019eed22a684e0b3\",\n            \"ResourceType\": \"ec2-public-ipv4-pool\",\n            \"ResourceOwner\": \"111122223333\"\n        }\n    ]\n}\nRelease the last IP address in the CIDR from\n                    the public IPv4 pool. Enter the IP address with a netmask of /32. You must rerun\n                    this command for each IP address in the CIDR range. If your CIDR is a\n/24\n, you\n                    will have to run this command to deprovision each of the 256 IP addresses in the\n/24\nCIDR. When you run the command in this section, the value for\n--region\nmust match the Region of your IPAM.\nThis step must be done by the\nbyoip-owner-account\naccount.\naws ec2 deprovision-public-ipv4-pool-cidr --region\nus-east-1\n--profile\nbyoip-owner-account\n--pool-id\nipv4pool-ec2-0019eed22a684e0b3\n--cidr\n130.137.249.255/32\nIn the output, you'll see the deprovisioned CIDR.\n{\n\"PoolId\": \"ipv4pool-ec2-0019eed22a684e0b3\",                                                                                       \n    \"DeprovisionedAddresses\": [                                                                                                       \n        \"130.137.249.255\"                                                                                                             \n    ]                                                                                                                                 \n}\nView your BYOIP CIDRs again and ensure there are no more provisioned\n                    addresses. When you run the command in this section, the value for\n--region\nmust match the Region of your IPAM.\nThis step must be done by the\nbyoip-owner-account\naccount.\naws ec2 describe-public-ipv4-pools --region\nus-east-1\n--profile\nbyoip-owner-account\nIn the output, you'll see the IP addresses count in your public IPv4 pool.\n{\n\"PublicIpv4Pools\": [\n{\n\"PoolId\": \"ipv4pool-ec2-0019eed22a684e0b3\",\n            \"Description\": \"\",\n            \"PoolAddressRanges\": [],\n            \"TotalAddressCount\": 0,\n            \"TotalAvailableAddressCount\": 0,\n            \"NetworkBorderGroup\": \"us-east-1\",\n            \"Tags\": []\n        }\n    ]\n}\nRun the following command to delete the top-level pool.\naws ec2 delete-ipam-pool --region\nus-east-1\n--profile\nipam-account\n--ipam-pool-id\nipam-pool-0a03d430ca3f5c035\nIn the output, you can see the delete state.\n{\n\"IpamPool\":\n{\n\"OwnerId\": \"123456789012\",\n        \"IpamPoolId\": \"ipam-pool-0a03d430ca3f5c035\",\n        \"IpamPoolArn\": \"arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0a03d430ca3f5c035\",\n        \"IpamScopeArn\": \"arn:aws:ec2::123456789012:ipam-scope/ipam-scope-0087d83896280b594\",\n        \"IpamScopeType\": \"public\",\n        \"IpamArn\": \"arn:aws:ec2::123456789012:ipam/ipam-090e48e75758de279\",\n        \"Locale\": \"us-east-1\",\n        \"PoolDepth\": 2,\n        \"State\": \"delete-in-progress\",\n        \"Description\": \"top-level-pool\",\n        \"AutoImport\": false,\n        \"Advertisable\": true,\n        \"AddressFamily\": \"ipv4\",\n        \"AwsService\": \"ec2\"\n    }\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIPv6 CIDR\nPlan VPC IP address space for subnet IP allocations\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/iam-ipam.html": "Identity and access management in IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nIdentity and access management in IPAM\nAWS uses security credentials to identify you and to grant you access to your AWS\n        resources. You can use features of AWS Identity and Access Management (IAM) to allow other users, services, and\n        applications to use your AWS resources fully or in a limited way, without sharing your\n        security credentials.\nThis section describes the AWS service-linked roles that are created specifically\n        for IPAM and the managed policies attached to the IPAM service-linked roles. For more information about\n        AWS IAM roles and policies, see\nRoles terms and concepts\nin the\nIAM User Guide\n.\nFor more information on identity and access management for VPC, see\nIdentity and access management for Amazon\n            VPC\nin the\nAmazon VPC User Guide\n.\nContents\nService-linked roles for IPAM\nAWS managed policies for IPAM\nExample policy\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPlan VPC IP address space for subnet IP allocations\nService-linked roles for IPAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/iam-ipam-slr.html": "Service-linked roles for IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nPermissions granted to the service-linked\n            role\nCreate the service-linked role\nEdit the service-linked role\nDelete the service-linked role\nService-linked roles for IPAM\nService-linked roles in AWS Identity and Access Management (IAM) enable AWS services to call other AWS\n        services on your behalf. For more information about service-linked roles, see\nUsing service-linked roles\nin the\nIAM User Guide\n.\nThere is currently only one service-linked role for IPAM:\nAWSServiceRoleForIPAM\n.\nPermissions granted to the service-linked\n            role\nIPAM uses the\nAWSServiceRoleForIPAM\nservice-linked role to call\n            the actions in the attached\nAWSIPAMServiceRolePolicy\nmanaged\n            policy. For more information on the allowed actions in that policy, see\nAWS managed policies for IPAM\n.\nAlso attached to the service-linked role is an\nIAM trusted policy\nthat allows the\nipam.amazonaws.com\nservice to assume the service-linked role.\nCreate the service-linked role\nIPAM monitors the IP address usage in one or more accounts by assuming the service-linked role in an account, discovering the resources and their CIDRs, and integrating the resources with IPAM.\nThe service-linked role is created in one of two ways:\nWhen you integrate with AWS\n                    Organizations\nIf you\nIntegrate IPAM with accounts in an AWS Organization\nusing the IPAM console or using\n                    the\nenable-ipam-organization-admin-account\nAWS CLI command, the\nAWSServiceRoleForIPAM\nservice-linked role\n                    is automatically created in each of your AWS Organizations member accounts. As\n                    a result, the resources within all member accounts are discoverable by\n                    IPAM.\nImportant\nFor IPAM to create the service-linked role on your\n                                behalf:\nThe AWS Organizations management account that enables IPAM integration with AWS Organizations must have an IAM policy attached to it that permits the\n                                        following actions:\nec2:EnableIpamOrganizationAdminAccount\norganizations:EnableAwsServiceAccess\norganizations:RegisterDelegatedAdministrator\niam:CreateServiceLinkedRole\nThe IPAM account must have an IAM policy attached to it that permits the\niam:CreateServiceLinkedRole\naction.\nWhen you create an IPAM using a single AWS\n                        account\nIf you\nUse IPAM with a single account\n, the\nAWSServiceRoleForIPAM\nservice-linked role is automatically\n                    created when you create an IPAM as that account.\nImportant\nIf you use IPAM with a single AWS account, before you create an IPAM,\n                        you must ensure that the AWS account you are using has an IAM policy\n                        attached to it that permits the\niam:CreateServiceLinkedRole\naction. When you create the IPAM, you automatically create the\nAWSServiceRoleForIPAM\nservice-linked role. For more information on managing\n                        IAM policies, see\nEditing IAM\n                            policies\nin the\nIAM User Guide\n.\nEdit the service-linked role\nYou cannot edit the\nAWSServiceRoleForIPAM\nservice-linked\n            role.\nDelete the service-linked role\nIf you no longer need to use IPAM, we recommend that you delete the\nAWSServiceRoleForIPAM\nservice-linked role.\nNote\nYou can delete the service-linked role only after you delete all IPAM resources in your AWS\n            account. This ensures that you can't inadvertently remove the monitoring capability of\n            IPAM.\nFollow these steps\n            to delete the service-linked role via the AWS CLI:\nDelete your IPAM resources using\ndeprovision-ipam-pool-cidr\nand\ndelete-ipam\n. For \n                more information, see\nDeprovision CIDRs from a pool\nand\nDelete an IPAM\n.\nDisable the IPAM account with\ndisable-ipam-organization-admin-account\n.\nDisable the IPAM service with\ndisable-aws-service-access\nusing the\n--service-principal\n                        ipam.amazonaws.com\noption.\nDelete the service-linked role:\ndelete-service-linked-role\n. When you delete the service-linked role, the IPAM managed policy is also deleted. For more information, see\nDeleting a service-linked role\nin the\nIAM User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIdentity and access management in IPAM\nManaged policies for IPAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/iam-ipam-managed-pol.html": "AWS managed policies for IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nUpdates to the AWS managed policy\nAWS managed policies for IPAM\nIf you are using IPAM with a single AWS account and you create an IPAM, the\nAWSIPAMServiceRolePolicy\nmanaged policy is automatically created in your IAM account and attached to the\nAWSServiceRoleForIPAM\nservice-linked role\n.\nIf you enable IPAM integration with AWS Organizations, the\nAWSIPAMServiceRolePolicy\nmanaged policy is automatically created in your IAM account and in each of your AWS Organizations member accounts, and the managed policy is attached to the\nAWSServiceRoleForIPAM\nservice-linked role.\nThis managed policy enables IPAM to do the following:\nMonitor CIDRs associated with networking resources across all members of your AWS Organization.\nStore metrics related to IPAM in Amazon CloudWatch, such as the IP address space available in your IPAM\n                pools and the number of resource CIDRs that comply with allocation rules.\nThe following example shows the details of the managed policy that's created.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Sid\": \"IPAMDiscoveryDescribeActions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeAccountAttributes\",\n                \"ec2:DescribeAddresses\",\n                \"ec2:DescribeByoipCidrs\",\n                \"ec2:DescribeIpv6Pools\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribePublicIpv4Pools\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeSecurityGroupRules\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:DescribeVpnConnections\",\n                \"ec2:GetIpamDiscoveredAccounts\",\n                \"ec2:GetIpamDiscoveredPublicAddresses\",\n                \"ec2:GetIpamDiscoveredResourceCidrs\",\n                \"globalaccelerator:ListAccelerators\",\n                \"globalaccelerator:ListByoipCidrs\",\n                \"organizations:DescribeAccount\",\n                \"organizations:DescribeOrganization\",\n                \"organizations:ListAccounts\",\n                \"organizations:ListDelegatedAdministrators\"\n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Sid\": \"CloudWatchMetricsPublishActions\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"cloudwatch:PutMetricData\",\n            \"Resource\": \"*\",\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"cloudwatch:namespace\": \"AWS/IPAM\"\n                }\n            }\n        }\n    ]\n}\nThe first statement in the preceding example enables IPAM to monitor the CIDRs used by your single AWS account or by the members of your AWS Organization.\nThe second statement in the preceding example uses the\ncloudwatch:PutMetricData\ncondition key to allow IPAM to store IPAM\n        metrics in your\nAWS/IPAM\nAmazon CloudWatch\n            namespace\n. These metrics are used by the AWS Management Console to display data about the allocations in your IPAM pools and scopes. For more information, \n        see\nMonitor CIDR usage with the IPAM dashboard\n.\nUpdates to the AWS managed policy\nView details about updates to AWS managed policies for IPAM since this service began\n            tracking these changes.\nChange\nDescription\nDate\nAWSIPAMServiceRolePolicy\nAction added to the AWSIPAMServiceRolePolicy managed policy\n                                    (\nec2:GetIpamDiscoveredPublicAddresses\n) to enable\n                                IPAM to get public IP addresses during resource discovery.\nNovember 13, 2023\nAWSIPAMServiceRolePolicy\nActions added to the AWSIPAMServiceRolePolicy managed policy\n                                (\nec2:DescribeAccountAttributes\n,\nec2:DescribeNetworkInterfaces\n,\nec2:DescribeSecurityGroups\n,\nec2:DescribeSecurityGroupRules\n,\nec2:DescribeVpnConnections\n,\nglobalaccelerator:ListAccelerators\n, and\nglobalaccelerator:ListByoipCidrs\n) to enable IPAM to get\n                            public IP addresses during resource discovery.\nNovember 1, 2023\nAWSIPAMServiceRolePolicy\nTwo actions added to\n                                the AWSIPAMServiceRolePolicy managed policy (\nec2:GetIpamDiscoveredAccounts\nand\nec2:GetIpamDiscoveredResourceCidrs\n) to enable IPAM to get\n                                the AWS accounts and resource CIDRs being monitored during\n                                resource discovery.\nJanuary 25, 2023\nIPAM started tracking changes\nIPAM started tracking changes for its AWS managed policies.\nDecember 2, 2021\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nService-linked roles for IPAM\nExample policy\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/iam-ipam-policy-examples.html": "Example policy - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nExample policy\nThe example policy in this section contains all the relevant AWS Identity and Access Management (IAM) actions for full IPAM usage. Depending on how you are using IPAM, you may not need to include all of the IAM actions. For a full experience using the IPAM console, you may need to include additional \n        IAM actions for services such as AWS Organizations, AWS Resource Access Manager(RAM), and Amazon CloudWatch.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AssociateIpamByoasn\",\n                \"ec2:DeprovisionIpamByoasn\",\n                \"ec2:DescribeIpamByoasn\",                \n                \"ec2:DisassociateIpamByoasn\",\n                \"ec2:ProvisionIpamByoasn\",\n                \"ec2:CreateIpam\",\n                \"ec2:DescribeIpams\",\n                \"ec2:ModifyIpam\",\n                \"ec2:DeleteIpam\",\n                \"ec2:CreateIpamScope\",\n                \"ec2:DescribeIpamScopes\",\n                \"ec2:ModifyIpamScope\",\n                \"ec2:DeleteIpamScope\",\n                \"ec2:CreateIpamPool\",\n                \"ec2:DescribeIpamPools\",\n                \"ec2:ModifyIpamPool\",\n                \"ec2:DeleteIpamPool\",\n                \"ec2:ProvisionIpamPoolCidr\",\n                \"ec2:GetIpamPoolCidrs\",\n                \"ec2:DeprovisionIpamPoolCidr\",\n                \"ec2:AllocateIpamPoolCidr\",\n                \"ec2:GetIpamPoolAllocations\",\n                \"ec2:ReleaseIpamPoolAllocation\",\n                \"ec2:CreateIpamResourceDiscovery\",\n                \"ec2:DescribeIpamResourceDiscoveries\",\n                \"ec2:ModifyIpamResourceDiscovery\",\n                \"ec2:DeleteIpamResourceDiscovery\",\n                \"ec2:AssociateIpamResourceDiscovery\",\n                \"ec2:DescribeIpamResourceDiscoveryAssociations\",\n                \"ec2:DisassociateIpamResourceDiscovery\",\n                \"ec2:GetIpamResourceCidrs\",\n                \"ec2:ModifyIpamResourceCidr\",\n                \"ec2:GetIpamAddressHistory\",\n                \"ec2:GetIpamDiscoveredResourceCidrs\",\n                \"ec2:GetIpamDiscoveredAccounts\",\n                \"ec2:GetIpamDiscoveredPublicAddresses \n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"iam:CreateServiceLinkedRole\",\n            \"Resource\": \"arn:aws:iam::*:role/aws-service-role/ipam.amazonaws.com/AWSServiceRoleForIPAM\",\n            \"Condition\":\n{\n\"StringLike\":\n{\n\"iam:AWSServiceName\": \"ipam.amazonaws.com\"\n                }\n            }\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nManaged policies for IPAM\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/quotas-ipam.html": "Quotas for your IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nQuotas for your IPAM\nThis section lists the quotas related to IPAM. The Service Quotas console also provides\n        information about IPAM quotas. You can use the Service Quotas console to view default quotas and\nrequest quota increases\nfor\n        adjustable quotas. For more information, see\nRequesting a quota\n            increase\nin the\nService Quotas User Guide\n.\nName\nDefault\nAdjustable\nAmazon-provided IPv6 CIDR block netmask length\n/52\nYes. Contact the AWS Support Center as described in\nAWS service quotas\nin the\nAWS General Reference\n.\nAmazon-provided IPv6 CIDR blocks per Regional pool\n1\nYes. Contact the AWS Support Center as described in\nAWS service quotas\nin the\nAWS General Reference\n.\nAutonomous System Numbers (ASNs) that you can bring to IPAM\n5\nYes. Contact the AWS Support Center as described in\nAWS service quotas\nin the\nAWS General Reference\n.\nCIDRs per pool\n50\nYes\nIPAM administrators per organization\n1\nNo\nIPAMs per Region\n1\nNo\nPool depth (the number of pools within pools)\n10\nYes\nPools per scope\n50\nYes\nResource discovery associations per IPAM\n5\nYes\nResource discoveries per Region\n1\nNo\nResource utilization metrics\n50\nYes. Contact the AWS Support Center as described in\nAWS service quotas\nin the\nAWS General Reference\n.\nScopes per IPAM\n5\nYes\n. When you create an IPAM, a private and public default scope\n                        are created for you. If you want to create additional scopes, they will be\n                        private scopes. You cannot create additional public scopes.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExample policy\nPricing\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/pricing-ipam.html": "Pricing for IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nPricing for IPAM\nYou are charged hourly for each active IP address that IPAM monitors. An active IP address is defined as an IP address assigned to a resource such as an EC2 instance or an Elastic Network Interface (ENI). For more\n        information, see\nIPAM pricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nQuotas\nRelated information\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/related-info.html": "Related information - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nRelated information\nThe following related resources \ncan help you as you work with this service.\nAmazon VPC\n            IP Address Manager Best Practices\n: An AWS blog on best practices for planning and creating a scalable address scheme with Amazon VPC IP Address Manager.\nNetwork Address Management and Auditing at Scale with Amazon VPC IP Address\n                    Manager\n: An AWS blog that introduces Amazon VPC IP Address Manager and shows you how to\n                use the service in the AWS console.\nConfigure fine-grained access to your resources shared using AWS Resource Access Manager\n:\n                An AWS blog that explains how to share an IPAM pool with the accounts in an\n                AWS Organizations organization unit.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPricing\nDocument history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/ipam/doc-history-ipam.html": "Document history for IPAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon VPC\nIP Address Manager\nDocument history for IPAM\nThe following table describes the releases for IPAM.\nFeature\nDescription\nRelease Date\nIPAM Free and Advanced Tiers\nYou can now choose between Free Tier and Advanced Tier for your IPAM.\nNovember 17, 2023\nPublic IP insights\nPreviously, you could only view public IP insights in a single Region. You can now view public IP insights across Regions. In addition, you can now view\npublic IP address insights in Amazon CloudWatch\n.\nNovember 17, 2023\nPlan VPC IP address space for subnet IP allocations\nYou can now use IPAM to plan for subnet IP space within a VPC and monitor IP address-related metrics at the subnet and VPC level.\nNovember 17, 2023\nBring your own ASN (BYOASN)\nYou can now bring your own autonomous system number (ASN) to AWS.\nNovember 17, 2023\nAWS managed policy\n\t\t\t\t\t\t\t\tupdates\n- Update to an existing policy\nExisting AWSIPAMServiceRolePolicy updated.\nNovember 17, 2023\nAWS managed policy\n\t\t\t\t\t\t\t\tupdates\n- Update to an existing policy\nExisting AWSIPAMServiceRolePolicy updated.\nNovember 1, 2023\nResource utilization metrics\nIPAM now publishes IP utilization metrics for resources that the IPAM monitors to Amazon CloudWatch.\nAugust 2, 2023\nPublic IP insights\nPublic IP insights shows you all public IPv4 addresses used by services in this Region in your account. You can use these insights to identify public IPv4 address usage and view recommendations to release unused Elastic IP addresses.\nJuly 28, 2023\nAWS managed policy\n\t\t\t\t\t\t\t\tupdates\n- Update to an existing policy\nExisting AWSIPAMServiceRolePolicy updated.\nJanuary 25, 2023\nIntegrate IPAM with accounts outside of your organization\nYou can now manage IP addresses outside of your organization from a single IPAM account and share IPAM pools with the accounts of other AWS Organizations.\nJanuary 25, 2023\nAmazon-provided IPv6 contiguous CIDR block for IPAM pools\nWhen you create an IPAM pool in the public scope, you can now provision an Amazon-provided IPv6 contiguous CIDR block to the pool. For more information, see\nCreate IPv6 pools\n.\nJanuary 25, 2023\nInitial release\nThis release introduces Amazon VPC IP Address Manager.\nDecember 2, 2021\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nRelated information\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/what-are-global-networks.html": "What is AWS Global Networks for Transit Gateways? - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nGlobal networks concepts\nRegion availability\nHow to get started with global networks for transit gateways\nPricing\nWhat is AWS Global Networks for Transit Gateways?\nAWS Global Networks for Transit Gateways enables you to create one or more global networks and then centrally manage those global networks across AWS accounts,\n        Regions, and on-premises locations.\nNote\nIf you want to create a core network within one of your global networks you'll use AWS Cloud WAN to\n            create, manage, and monitor that core network. For more information on creating a global\n            network with a core network, see the\nAWS Cloud WAN User\n                    Guide\n.\nGlobal networks concepts\nThe following are the key concepts when using global networks to manage transit gateways.\nGlobal network\n\u00e2\u0080\u0094 A single, private\n                    network that acts as the high-level container for your network objects. A global\n                    network can contain both AWS Transit Gateways and other AWS Cloud WAN core networks. You can see\n                    these through the AWS Network Manager console.\nDevice\n\u00e2\u0080\u0094 Represents a physical or a\n                    virtual appliance in an on-premises network, data center,  AWS Cloud, or other\n                    cloud providers.\nConnection\n\u00e2\u0080\u0094 Represents connectivity\n                    between two devices. The connection can be between a physical or virtual\n                    appliance and a third-party virtual appliance inside a VPC, or it can be between\n                    physical appliances in an on-premises network.\nLink\n\u00e2\u0080\u0094 Represents a single internet\n                    connection from a site.\nSite\n\u00e2\u0080\u0094 Represents a physical\n                    on-premises location. It could be a branch, office, store, campus, or a data\n                    center.\nHome Region\nThe home Region is the AWS Region where data related to your use\n                of your AWS Global Networks for Transit Gateways global network is aggregated and stored. global networks aggregates and\n                stores this information in the home Region to provide you with a\n                central dashboard with visualized insights into your global network. Currently,\n                global networks only supports US West (Oregon) as the home Region.\nImportant\nGlobal networks aggregates and stores regional usage data associated with the\n                            transit gateways specified from the AWS Regions you're using to the\n                            US West (Oregon) Region.\nGobal networks aggregates and stores regional usage data associated with the\n                            transit gateways from the AWS GovCloud (US) Regions to the\n                            AWS GovCloud (US-West) Region.\nOnce established, you can't change the home\n                            Region.\nWe aggregate and store this regional usage data from the AWS Regions you are\n                using to US West (Oregon) using Amazon Simple Queue Service (SQS) and Amazon Simple Storage Service\n                (S3). This data includes but is not limited to:\nTopology data for registered transit gateways\nEvent data for transit gateways and VPNs\nTransit gateway IDs for registering transit gateways into a global network\n(Optional) Location data related to your device and site\n                        registrations\n(Optional) Provider and link data related to your link\n                        registrations\n(Optional) IP address and CIDR ranges used in transit gateway Connect peers\nAll movement and data aggregation occurs over a secure and encrypted channel and\n                stored with encryption at rest. We use a third-party, Mapbox, to create maps of your\n                global network. We send the resource identifiers collected during device and site\n                registrations to Mapbox to generate those maps.\nRegion availability\nAWS Global Networks for Transit Gateways is available in the following AWS Regions:\nAWS Region\nDescription\nus-east-1\nUS East (N. Virginia)\nus-east-2\nUS East (Ohio)\nus-west-1\nUS West (N. California)\nus-west-2\nUS West (Oregon)\nap-east-1\nAsia Pacific (Hong Kong)\nap-south-1\nAsia Pacific (Mumbai)\nap-northeast-3\nAsia Pacific (Osaka)\nap-northeast-2\nAsia Pacific (Seoul)\nap-southeast-1\nAsia Pacific (Singapore)\nap-southeast-2\nAsia Pacific (Sydney)\nap-northeast-1\nAsia Pacific (Tokyo)\nca-central-1\nCanada (Central)\neu-central-1\nEurope (Frankfurt)\neu-west-1\nEurope (Ireland)\neu-west-2\nEurope (London)\neu-west-3\nEurope (Paris)\neu-north-1\nEurope (Stockholm)\neu-south-1\nEurope (Milan)\nsa-east-1\nSouth America (S\u00c3\u00a3o Paulo)\naf-south-1\nAfrica (Cape Town)\nme-south-1\nMiddle East (Bahrain)\nus-gov-east-1\nAWS GovCloud (US-East)\nus-gov-west-1\nAWS GovCloud (US-West)\nHow to get started with global networks for transit gateways\nUse the following resources to help you use global networks:\nHow AWS Global Networks for Transit Gateways works\nGetting started\nVisualize transit gateway networks\nPricing\nThere are no additional fees for using global networks to manage transit gateways networks. You are\n            charged the standard fees for the network resources that you manage in your global\n            network (such as transit gateways). For more information about pricing, see\nAWS Transit Gateway pricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow global networks work\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/how-gnw-works.html": "How AWS Global Networks for Transit Gateways works - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nRegister transit gateways\nDefine and associate your on-premises\n                network\nSupported resource types\nHow AWS Global Networks for Transit Gateways works\nTo use global networks for transit gateways, you first create a\nglobal network\nto\n        represent your network. Initially, the global network is empty. You then register your\n        existing transit gateways and define your on-premises resources in the global network. This\n        enables you to visualize and monitor your AWS resources and your on-premises networks\n        through the global networks dashboard on the AWS Network Manager console.\nAfter you create your global network, you can monitor your networks through this\n        dashboard. You can view network activity and health using Amazon CloudWatch metrics and Amazon CloudWatch Events.\n        The global networks dashboard can help you identify whether issues in your network are caused by AWS\n        resources, your on-premises resources, or the connections between them.\nglobal networks does not create, modify, or delete your transit gateways and their attachments. To\n        work with transit gateways, use the Amazon VPC console and the Amazon EC2 APIs.\nContents\nRegister transit gateways\nDefine and associate your on-premises\n                network\nSupported resource types\nRegister transit gateways\nYou can register transit gateways that are in the same AWS account as your global\n            network. When you register a transit gateway, the following transit gateway attachments\n            are automatically included in your global network:\nVPCs\nSite-to-Site VPN connections\nAWS Direct Connect gateways\nTransit Gateway Connect\nTransit gateway peering connections\nWhen you register a transit gateway that has a peering attachment, you can view the\n            peer transit gateway in your global network, but you cannot view its attachments. If you\n            own the peer transit gateway, you can register it in your global network to view its\n            attachments.\nIf you delete a transit gateway, it's automatically deregistered from your global\n            network.\nMulti-Region and multi-account network\nYou can create a global network that includes transit gateways in multiple AWS\n                Regions and accounts. This enables you to monitor the global health of your AWS\n                network. In the following diagram, the global network includes a transit gateway in\n                the\nus-east-2\nRegion from Account A and a transit gateway in the\nus-west-2\nRegion from Account B. Each transit gateway has VPC and\n                VPN attachments. You can use the Network Manager console to view and monitor both of the\n                transit gateways and their attachments.\nDefine and associate your on-premises\n                network\nTo represent your on-premises network, you add\ndevices\n,\nlinks\n, and\nsites\nto your global network. \n            A site represents the physical location of your branch, office, store, campus, or \n            data center. When you add a site, you can specify the location information, \n            including the physical address and coordinates.\nA device represents the physical or virtual appliance that establishes connectivity\n            with a transit gateway over an IPsec tunnel. A link represents a single outbound\n            internet connection used by a device, for example, a 20-Mbps broadband link.\nWhen you create a device, you can specify its physical location, and the site where\n            it's located. A device can have a more specific location than the site, for example, a\n            building in a campus or a floor in a building. When you create a link, you create it for\n            a specific site. You can then associate a device with a link.\nTo connect your on-premises network to your AWS resources, associate a customer\n            gateway that's in your global network with the device. If you've created a device to\n            represent a virtual appliance sitting inside your VPC, and you've established a\n            Transit Gateway Connect peer from your virtual appliance to your AWS Transit Gateway, associate a Transit Gateway Connect peer\n            with the device to connect your virtual appliance network to your AWS resources. In\n            the following diagram, the on-premises network is connected to a transit gateway through\n            a Site-to-Site VPN connection.\nYou can have multiple devices in a site, which you can associate a device with\n            multiple links. For examples, see\nScenarios: Manage transit gateway networks with\n            AWS Global Networks for Transit Gateways\n.\nYou can work with one of our Partners in the AWS Partner Network (APN) to provision\n            and connect your on-premises networks. For more information, see\nAWS Network Manager\n.\nSupported resource types\nAfter you register a transit gateway, you can view and monitor the resources in your global\n            network.\nAmazon VPC resources\nResource\nRelated resources\nTransit gateway\nTransit gateway attachment\nTransit gateway route table\nTransit gateway attachment\nDirect Connect gateway\nTransit gateway\nTransit gateway attachment\nTransit Gateway Connect peer\nVPC\nVPN connection\nTransit gateway route table\nTransit gateway\nTransit Gateway Connect peer\nDevice\nTransit gateway attachment\nAWS VPN resources\nResource\nRelated resources\nCustomer gateway\nDevice\nVPN connection\nVPN connection\nCustomer gateway\nTransit gateway attachment\nAWS Direct Connect resources\nResource\nRelated resources\nDirect Connect connection\nVirtual interface\nDirect Connect gateway\nTransit gateway attachment\nVirtual interface\nVirtual interface\nDirect Connect connection\nDirect Connect gateway\nAWS Network Manager resources\nResource\nRelated resources\nConnection\nDevice\nDevice\nConnection\nCustomer gateway\nLink\nSite\nTransit Gateway Connect peer\nLink\nDevice\nSite\nSite\nDevice\nLink\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWhat is AWS Global Networks for Transit Gateways?\nGetting started\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/gnw-getting-started.html": "Getting started with AWS Global Networks for Transit Gateways for Transit Gateway networks - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nPrerequisites\nStep 1: Create a global\n                network\nStep 2: Register your transit\n                gateway\nStep 3: (Optional) Define and associate your\n                on-premises network resources\nStep 4: (Optional) Enable multi-account\n                access\nStep 5: View and monitor your global\n                network\nGetting started with AWS Global Networks for Transit Gateways for Transit\n            Gateway networks\nThe following tasks help you become familiar with AWS Global Networks for Transit Gateways. For more information about\n        how AWS Global Networks for Transit Gateways works, see\nHow AWS Global Networks for Transit Gateways works\n.\nIn this example, you create a global network and register your transit gateway with the global\n        network. You can also define and associate your on-premises network resources with the\n        global network.\nTasks\nPrerequisites\nStep 1: Create a global\n                network\nStep 2: Register your transit\n                gateway\nStep 3: (Optional) Define and associate your\n                on-premises network resources\nStep 4: (Optional) Enable multi-account\n                access\nStep 5: View and monitor your global\n                network\nPrerequisites\nBefore you begin, ensure that you have a transit gateway with attachments in your account or in\n            any account within your organization. For more information, see\nGetting Started with Transit\n                Gateways\n.\nThe transit gateway can be in the same AWS account as the global network or in a different\n            AWS account within the organization.\nStep 1: Create a global\n                network\nCreate a global network as a container for your transit gateway.\nTo create a global network\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nChoose\nCreate global network\n.\nEnter a name and description for the global network, and choose\nCreate global network\n.\nStep 2: Register your transit\n                gateway\nRegister a transit gateway in your global network.\nTo register the transit gateway\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit gateways\n, and then\n                    choose\nRegister transit gateway\n.\nFrom the\nSelect account\ndropdown list, choose the account\n                    that you want to register the transit gateway from.\nA list of transit gateways from that account appear in the\nSelect transit\n                        gateway to register\nsection.\nSelect one or more transit gateways from  the list, and then choose\nRegister\n                        transit gateway\n.\nStep 3: (Optional) Define and associate your\n                on-premises network resources\nYou can define your on-premises network by creating sites, links, and devices to\n            represent objects in your network. For more information, see the following\n            procedures:\nCreate a site\nCreating a link\nCreate a device\nYou associate the device with a specific site, and with one or more links. For\n                    more information, see\nAssociate a device\n.\nOn your transit gateway you can\nCreate a Site-to-Site VPN connection attachment. For more information, see\nCustomer gateway associations\n.\nCreate a transit gateway Connect attachment, and then associate the Connect\n                    peer with the device. For more information, see\nTransit Gateway Connect peer associations\n.\nYou can also work with one of our Partners in the AWS Partner Network (APN) to\n            provision and connect your on-premises network. For more information, see\nAWS Network Manager\n.\nStep 4: (Optional) Enable multi-account\n                access\nEnable multi-account access to register transit gateways from multiple accounts, allowing you to\n            view and manage transit gateways and associated resources from those registered accounts in your\n            global network. Onboarding to AWS Organizations is a prerequisite for enabling multi-account\n            access for Network Manager.\nCreate your organization using AWS Organizations.\nIf you've already done this skip this step. For more information on creating\n                    an organization using AWS Organizations, see\nCreating and\n                        managing an organization\nin the\nAWS Organizations User Guide\n.\nEnable multi-account on the Network Manager console.\nThis enables trusted access for Network Manager and allows for registering delegated\n                    administrators. For more information enabling trusted access and registering\n                    delegated administrators, see\nMulti-account\n.\nCreate your global network.\nFor more information on creating a global network, see\nCreate a global network\n.\nRegister transit gateways.\nWith multi-account enabled, you can register transit gateways from multiple accounts to\n                    your global network. For more information about registering transit gateways, see\nTransit gateway registrations\n.\nStep 5: View and monitor your global\n                network\nThe Network Manager console provides a dashboard for you to view and monitor both your transit gateway\n            network objects in your global network.\nTo access the dashboard for your global network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nThe\nOverview\npage provides an inventory of the objects in\n                    your global network for your transit gateway network. For more information about the pages\n                    in the dashboard, see\nVisualize transit gateway networks\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow global networks work\nScenarios\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/gnw-scenarios.html": "Scenarios: Manage transit gateway networks with AWS Global Networks for Transit Gateways - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nAWS-only\n                multi-Region and multi-account global network\nSingle device with a single VPN connection\nDevice with multiple VPN connections\nMulti-device and multi-link site\nSD-WAN connecting to AWS\nConnection between devices\nScenarios: Manage transit gateway networks with\n            AWS Global Networks for Transit Gateways\nThe following are common use cases and scenarios for using AWS Global Networks for Transit Gateways to manage your\n        transit gateways.\nContents\nAWS-only\n                multi-Region and multi-account global network\nSingle device with a single VPN connection\nDevice with multiple VPN connections\nMulti-device and multi-link site\nSD-WAN connecting to AWS\nConnection between devices\nAWS-only\n                multi-Region and multi-account global network\nIn this scenario, your AWS network consists of three transit gateways. You own\n            transit gateways\ntgw-1\nand\ntgw-3\n. Transit gateway\ntgw-1\nhas a peering attachment with transit gateway\ntgw-2\nthat's in a different AWS account. Your entire network is within AWS, and does not\n            consist of on-premises resources.\nFor this scenario, do the following in Network Manager:\nCreate a global network. For more information, see\nCreate a global network\n.\nRegister the transit gateways\ntgw-1\nand\ntgw-3\nwith\n                    your global network. For more information, see\nRegister a transit gateway\n.\nWhen you register\ntgw-1\n, the transit gateway peering attachment is\n            included in the global network, and you can see information about\ntgw-2\n.\n            However, any attachments for\ntgw-2\nare not included in your global network.\n            To see attachments for\ntgw-2,\nyou must enable multi-account access.\nThis enables trusted access for global networks and allows for registering delegated\n                    administrators. For more information enabling trusted access and registering\n                    delegated administrators, see\nMulti-account\n.\nRegister the\ntgw-2\ntransit gateway with your global network. For more\n                    information, see\nTransit gateway registrations\n.\nSingle device with a single VPN connection\nIn the following scenario, your global network consists of a single site with a single\n            device and link. The site is connected to your AWS network through a Site-to-Site VPN attachment on\n            a transit gateway. Your transit gateway also has two VPC attachments.\nFor this scenario, do the following in Network Manager:\nCreate a global network. For more information, see\nCreate a global network\n.\nRegister the transit gateway. For more information, see\nRegister a transit gateway\n.\nCreate a site, device, and link. For more information, see\nSites\n,\nDevices\n, and\nLinks\n.\nAssociate the device with the site and with the link. For more information,\n                    see\nAssociate a device\n.\nAssociate the customer gateway (for the transit gateway Site-to-Site VPN attachment) with\n                    the device, and optionally, the link. For more information, see\nCustomer gateway associations\n.\nDevice with multiple VPN connections\nIn the following scenario, your on-premises network consists of a device with two\n            Site-to-Site VPN connections to AWS. The device is associated with two customer gateways on two\n            different transit gateways. Each VPN connection uses a separate link. To indicate which\n            link applies to which VPN connection, you associate the customer gateway with both the\n            device and the corresponding link.\nFor this scenario, do the following in global networks:\nCreate a global network. For more information, see\nCreate a global network\n.\nRegister the transit gateways. For more information, see\nRegister a transit gateway\n.\nCreate a site, device, and link. For more information, see\nSites\n,\nDevices\n, and\nLinks\n.\nAssociate the device with the site and both links. For more information, see\nAssociate a device\n.\nAssociate each customer gateway with the device and the corresponding link.\n                    For more information, see\nCustomer gateway associations\n.\nMulti-device and multi-link site\nIn the following scenario, your on-premises network consists of a site with two\n            devices and two separate Site-to-Site VPN connections to AWS.  For example, in a single building or\n            campus, you might have multiple devices connected to AWS resources. Each device is\n            associated with a customer gateway that's attached to your transit gateway.\nYour AWS network is also connected to your on-premises network though an AWS Direct Connect\n            gateway, which is an attachment on your transit gateway.\nFor this scenario, do the following in global networks:\nCreate a global network. For more information, see\nCreate a global network\n.\nRegister the transit gateway. For more information, see\nRegister a transit gateway\n.\nCreate one site, two devices, and two links. For more information, see\nSites\n,\nDevices\n, and\nLinks\n.\nAssociate each device with the corresponding link. For more information, see\nAssociate a device\n.\nAssociate each customer gateway with the corresponding device and link. For\n                    more information, see\nCustomer gateway associations\n.\nSD-WAN connecting to AWS\nIn the following example, your on-premises network consists of two sites. The Chicago\n            site has two devices and the New York site has one device. Your AWS network consists of\n            two transit gateways. All devices are associated with customer gateways (Site-to-Site VPN\n            attachments) on both transit gateways.\nYour on-premises network is managed using SD-WAN. The SD-WAN controller creates Site-to-Site VPN\n            connections to the transit gateways, and creates the device, site, and link resources in\n            Network Manager. This automates connectivity and enables you to get a full view of your network in\n            global networks. The SD-WAN controller can also use global networks events and metrics to enhance its\n            dashboard.\nFor more information about Partners who can help you set up your Site-to-Site VPN connections,\n            see\nAWS Network Manager\n.\nConnection between devices\nIn the following scenario, your AWS network consists of a transit gateway with a\nConnect attachment\nto a VPC that contains a virtual\n            appliance on an EC2 instance. A Transit Gateway Connect peer (GRE tunnel) is established between the\n            transit gateway and the appliance. The appliance is connected to a physical device in your\n            on-premises network through a connection.\nFor this scenario, do the following in global networks:\nCreate a global network. For more information, see\nCreate a global network\n.\nRegister the transit gateway. For more information, see\nRegister a transit gateway\n.\nCreate a site, device, and link for your on-premises network. For more\n                    information, see\nSites\n,\nDevices\n, and\nLinks\n.\nAssociate the device with the site and with the link. For more information,\n                    see\nAssociate a device\n.\nCreate a device for the EC2 virtual device. For visualization in the global networks\n                    console, specify the AWS location of the device (for example, the Availability\n                    Zone). For more information, see\nDevices\n.\nCreate a connection between the on-premises device and the virtual device. For\n                    more information, see\nConnections\n.\nAssociate the Transit Gateway Connect peer with the on-premises device. For more information,\n                    see\nTransit Gateway Connect peer associations\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGetting started\nWork with global networks\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/working-with-gnws.html": "Work with global networks - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nWork with global networks\nYou can work with global networks; using the global networks console or the AWS CLI.\nContents\nMulti-account\nGlobal networks\nTransit gateway registrations\nSites\nLinks\nDevices\nConnections\nCustomer gateway associations\nTransit Gateway Connect peer associations\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nScenarios\nMulti-account\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/nm-multi-account.html": "Multi-account - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nPrerequisites\nEnable trusted access\nRegister a delegated\n        administrator\nManage IAM role deployments\nDeregister a delegated administrator\nDisable trusted access\nMulti-account\nWith AWS Global Networks for Transit Gateways, you can manage, monitor, and visualize global network resources from\n    multiple AWS accounts associated with a single organization. For more information about\n    multi-account, see\nManage multiple accounts in global networks with AWS Organizations\n.\nImportant\nWe strongly recommended that you use the global networks console for enabling multi-account\n          settings with global networks, because the console automatically creates all required\n          roles and permissions for multi-account access. Choosing an alternative approach requires\n          an advanced level of expertise, and opens the multi-account set up for your global network\n          to be more prone to error.\nMulti-account is not available in the AWS GovCloud (US-West) and the\n          AWS GovCloud (US-East) Regions.\nPrerequisites\nTo enable multi-account, you first set up an account in AWS Organizations. This first account\n      becomes the management account. Using this account, you can then add other accounts as member\n      accounts to your organization. For more information about how multi-account support works, see\nCreating and managing an organization\nin the\nAWS Organizations User\n        Guide\n.\nTasks\nEnable trusted access\nRegister a delegated administrator\nManage IAM role deployments\nDeregister a delegated administrator\nDisable trusted access\nTroubleshoot self-managed role\n            deployments\nEnable trusted access\nEnabling trust is a one-time task that deploys the required service-linked roles (SLRs)\n      and custom Identity and Access Management (IAM) roles to all accounts in your organization\n      that can be assumed by the management account or\ndelegated\n        administrators\nfor access across multiple accounts. For more information about\n      trusted access, see\nTrusted access\n.\nTo enable multi-account trusted access\nLog into the global networks console at\nhttps://console.aws.amazon.com/networkmanager/home/\n, using the AWS Organizations management\n          account.\nChoose\nGet started\n.\nIn the navigation pane, choose\nEnable trusted access\n.\nFrom the\nPermission level\ndropdown list in\nEnable\n            trusted access,\nchoose the Permission level for the Network Manager console switch\n          role\nIAMRoleForAWSNetworkManagerCrossAccountResourceAccess\n. This role is\n          deployed to all member accounts and is assumed by the delegated administrator or\n          management account when accessing resources from other accounts using the global networks\n          console. You can choose only one permission level for all accounts. Permission can be one\n          of the following:\nRead-only\n\u00e2\u0080\u0094 Assign this permission if the delegated\n              administrator and management accounts only need to review information about resources\n              from other accounts in the global network while using the console switch role, but\n              don't need to make any changes.\nAdmin\n\u00e2\u0080\u0094 Assign this permission if the delegated administrator\n              and management accounts need to be able to modify resources from other accounts in the\n              global network while using the global networks console switch role.\nChoose\nEnable trusted access\n.\nDepending on your organization size, it might take a few minutes or more to enable\n          trusted access. During this time the\nState\nshown in the\nTrusted access\nsection displays\nEnabling in\n            progress\n. When access is enabled, the\nState\nchanges to\nEnabled\n. Additionally, the\nIAM role deployments\n            status\nsection at the bottom of the page displays the status of the IAM\n          roles being deployed to member accounts of the organization.\nAfter trusted access is enabled, you can register delegated administrators.\nRegister a delegated administrator\nUse the AWS Global Networks for Transit Gateways console to register delegated administrators. You can register up to ten\n      delegated administrators. Delegated administrators can assume the SLR and IAM roles deployed\n      while enabling trusted access for access across multiple accounts. For more information about\n      delegated administrators, see\nDelegated administrators\n.\nTo register a delegated administrator\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\nwith the AWS Organizations management account.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nIn the navigation pane, choose\nSettings\n.\nIn the\nDelegated Administrators\nsection, choose\nRegister delegated administrator\n.\nFrom the\nAWS account ID\ndropdown list, choose one or more\n          AWS Organizations accounts that you want to delegate administrator permissions to.\nChoose\nRegister delegated administrator\n.\nWhen the delegated administrator is registered, you can then register transit gateways from any\n          transit gateways from any account within your organization to the global network in the delegated\n          administrator account. For more information about registering transit gateways in the global network\n          of a delegated administrator account, see\nTransit gateway registrations\n.\nManage IAM role deployments\nThe\nIAM role deployments status\nsection displays the current role\n      deployments status for all member accounts set up in your account.\nMember account ID\n\u00e2\u0080\u0094 The account ID for the account set up in\n          AWS Organizations. This includes member accounts and members that have been registered as delegated\n          administrators.\nCloudWatch role status\n\u00e2\u0080\u0094 The status of the account's\n          Amazon CloudWatch role. If you enable multi-account using the Network Manager console,\n          this is\nStackSets-managed\nif deployed successfully. Otherwise, this\n          is\nSelf-managed\n.\nConsole role status\n\u00e2\u0080\u0094 The status of the account's Network Manager\n          console role. If you enable multi-account using the Network Manager console, this is\nStackSets-managed\nif deployed successfully. Otherwise, this is\nSelf-managed\n.\nReview required\n\u00e2\u0080\u0094 This applies only to\nSelf-managed\nroles. A review is required to ensure that the\n          permissions set up for the account are correct. For more information, see\nMulti-account access roles for AWS Global Networks for Transit Gateways\n.\nIf you make changes to your role policies, or if you've updated a self-managed role, you\n      can deploy the updated policy to your AWS Organizations accounts.\nTo retry the IAM role deployment status\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\nwith the AWS Organizations management account.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nIn the navigation pane, choose\nSettings\n.\nIn the\nIAM role deployments status\nsection, choose\nRetry role deployment\n.\nDepending on your organization size and the number of member accounts in your\n          organization, this could take several minutes. During this time you won't be able to\n          register or deregister any new delegated administrators.\nDeregister a delegated administrator\nDeregistering delegated administrators removes that account's permission to manage global\n      networks for your organization. All registered transit gateways from other member accounts are\n      deregistered from the specific delegated administrator's global networks. For more information\n      about how deregistering delegated administrators works, see\nDeregister delegated\n                    administrators\n.\nTo deregister a delegated administrator\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\nwith the AWS Organizations management account.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nIn the navigation pane, choose\nSettings\n.\nIn the\nDelegated Administrators\nsection, choose one or more\n          accounts that you want to deregister.\nDepending on your organization size and the number of delegated administrators you're\n          deregistering, this could take several minutes. During this time you won't be able to\n          register any new delegated administrators.\nDisable trusted access\nDisabling trusted access removes the trust relationship between the Network Manager service\n      access and your organization. Network Manager is no longer able to perform actions within your\n      organization or access information about your organization. Trusted access remains for AWS CloudFormation\n      StackSets in the event that your organization is using that service outside of Network Manager. For\n      more information on disabling AWS CloudFormation StackSets, see\nDisabling trusted access with AWS CloudFormation Stacksets\nin the\nAWS Organizations User\n        Guide\n.\nTransit gateways from other accounts are deregistered from global networks owned by the\n      management account and can no longer provide access to their attached resources. For more\n      information about disabling trusted access, see\nDisable trusted access\n.\nYou must first deregister all delegated administrators before you can disable trusted\n      access. If you have registered delegated administrators, you will be prompted to deregister\n      them during the disable trusted access process.\nYou can enable trusted access again after disabling it. However you will need to set up\n      the list of delegated administrators again.\nTo disable trusted access\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\nwith the AWS Organizations management account.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nIn the navigation pane, choose\nSettings\n.\nIn the\nTrusted Access\nsection, choose\nDisable trusted\n            access\n.\nIf you have any registered delegated administrators, you can deregister them by\n          choosing\nDeregister delegated administrators\n.\nChoose\nDisable trusted access\non the confirmation dialog box to\n          confirm that you want to disable trusted access.\nDepending on the size of your organization, it might take several minutes or longer to\n          disable trusted access. The\nState\ndisplays\nDisabling in\n            progress\n. During this time you won't be able to re-enable trusted access.\n          When finished, the Status changes to\nDisabled\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWork with global networks\nTroubleshoot self-managed roles\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/nm-multi-account-troubleshooting.html": "Troubleshoot self-managed role deployments - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nIAM role exists\nTroubleshoot self-managed role\n            deployments\nAWS Global Networks for Transit Gateways uses AWS CloudFormation StackSets to deploy the required\nIAMRoleForAWSNetworkManagerCrossAccountResourceAccess\nrole and the CloudWatch\n        monitoring\nCloudWatch-CrossAccountSharingRole\nrole in your AWS Organizations member\n        accounts for cross-account access. For a CloudFormation StackSets-managed deployment, IAM\n        roles must have the required policies attached, as well as the trusted relationship to allow\n        registered delegated administrators and the management account the ability to assume these\n        roles. In a self-managed deployment, you own the responsibility to attach the appropriate\n        policies and to manage the trusted relationship required for the delegated administrator and\n        management accounts to access multiple accounts.\nImportant\nWe strongly recommend that you use the global networks console for enabling multi-account\n            settings using the global networks console as this automatically sets up all required roles\n            and permissions for multi-account access. Choosing an alternative approach requires an\n            advanced level of expertise and opens the multi-account setup for your global network to\n            be more prone to error.\nIf the CloudFormation StackSets deployment fails, and the\nReview required\nmessage is\nIAM role exists\n, follow the steps below in\nIAM role exists\nto change\n        the role from\nSelf-managed\nto\nStackSets-managed\n.\n        For any message other than\nIAM role exists\n, file an AWS Support\n        case. For more information on creating a support case, see\nCreating a\n            support case\nin the\nAWS Support User Guide\n.\nIAM role exists\nIf the IAM role has the exact same name in a current the member account, these roles\n            appear in the\nIAM role deployments status\nwith a status of\nSelf-managed\n. In order to change this to StackSets-managed,\n            delete the IAM role from the member account with the duplicate role name. After\n            deleting the IAM role, use the global networks console to retry the role deployment. For the\n            steps to retry a role deployment, see\nManage IAM role deployments\nto retry the role deployment.\nTo change a role from self-managed to StackSets-managed\nAccess the AWS Identity and Access Management (IAM) console at\nhttps://console.aws.amazon.com/iamv2/home?#/\nwith the member account that has a self-managed role\n                    status.\nIn the navigation pane, choose\nRoles\n.\nIn the\nRoles\nfield, search for the role name you want to\n                    delete.\nChoose the role, and then choose\nDelete\n.\nConfirm that you want to delete the role.\nWarning\nThis might break other functionality if a custom role has other attached\n                        policies or trusted relationships.\nAccess the global networks console at\nhttps://console.aws.amazon.com/networkmanager/home/\nwith the AWS Organizations management\n                    account.\nChoose\nGet started\n.\nIn the navigation pane, choose\nSettings\n.\nIn the\nIAM role deployment status section\n, choose\nRetry role deployment\n.\nDepending on the size of your organization, it might take several minutes or\n                    longer to disable trusted access. During this time you won't be able to\n                    re-enable trusted access.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMulti-account\nGlobal networks\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/global-networks.html": "Global networks - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nCreate a global network\nView a global network\nUpdate a global network\nDelete a global network\nGlobal networks\nA global network is a container for your network objects. When you create a global\n    network, it's empty. After you create it, you can register your transit gateways and\n    define your on-premises networks in the global network.\nTasks\nCreate a global network\nView a global network\nUpdate a global network\nDelete a global network\nCreate a global network\nCreate a global network.\nTo create a global network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nChoose\nCreate global network\n.\nEnter a\nName\nand\nDescription\nfor\n          your global network.\n(Optional) In Additional settings, add\nKey\nand\nValue\ntags that further help identify an Network\n          Manager resource. To add multiple tags, choose\nAdd tag\nfor each tag you want to add.\nChoose\nNext\n.\nTo create a AWS Transit Gateway network only, clear the\nAdd core network in\n          your global network\ncheck box on the\nCreate global\n            network -\noptional\npage, and then choose\nNext\n.\nNote\nCore networks are only used with AWS Cloud WAN. If you're creating global network for AWS Cloud WAN and want to create a core network, see\nCreate a core network policy\nin\n          the\nAWS Cloud WAN User Guide\n.\nReview the information for the global network you\nTo create a global network using the AWS CLI\nUse the\ncreate-global-network\ncommand.\nView a global network\nYou can view the details of your global network and information about the network\n      objects in your global network.\nTo view your global network information\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nThe\nOverview\npage displays an inventory of the\n          objects in both your core network and transit gateway network.  To view\n          details about the global network resource (such as its ARN), choose\nDetails\n. For more information about the other pages\n          on the dashboard, see\nVisualize transit gateway networks\n.\nTo view global network details using the AWS CLI\nUse the\ndescribe-global-networks\ncommand.\nUpdate a global network\nYou can modify the description or tags for a global network.\nTo update your global network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nChoose\nEdit\n.\nFor\nDescription\n, enter a new description for the global\n          network.\nFor\nTags\n, choose\nRemove tag\nto\n          remove an existing tag, or choose\nAdd tag\nto add a new\n          tag.\nChoose\nEdit global network\n.\nTo update a global network using the AWS CLI\nUse the\nupdate-global-network\ncommand to update the description. Use the\ntag-resource\nand\nuntag-resource\ncommands to update the tags.\nDelete a global network\nYou cannot delete a global network if there are any network objects in the global\n      network, including transit gateways, links, devices, and sites. You must first\n      deregister or delete the network objects.\nTo delete your global network\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nIn the navigation pane, choose\nGlobal networks\n.\nChoose your global network and choose\nDelete\n.\nIn the confirmation dialog box, choose\nDelete\n.\nTo delete a global network using the AWS CLI\nUse the\ndelete-global-network\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTroubleshoot self-managed roles\nTransit gateway registrations\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/tgw-registrations.html": "Transit gateway registrations - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nRegister a transit gateway\nView your registered transit gateways\nDeregister a transit gateway\nTransit gateway registrations\nYou can register your existing transit gateways with a global network. Any transit\n    gateway attachments (such as VPCs, VPN connections, and AWS Direct Connect gateways) are\n    automatically included in your global network.\nYou cannot create, delete, or modify your transit gateways and their attachments using\n    the Network Manager console or APIs. To work with transit gateways, use the Amazon VPC console or the\n    Amazon EC2 APIs.\nYou can register a transit gateway with one global network only. You can register\n    transit gateways that are in the same AWS account as the global network.\nTasks\nRegister a transit gateway\nView your registered transit gateways\nDeregister a transit gateway\nRegister a transit gateway\nRegister a transit gateway with a global network. You cannot register a transit gateway with\n      more than one global network.\nTo register a transit gateway\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit\n          gateways\n.,\n          and then\n          choose\nRegister transit gateway\n.\n(Optional) If your account is enabled for multi-account access, from the\nSelect account\ndropdown list choose the account you want to\n          register transit gateways from.\nThe\nSelect transit gateway to register\nsection populates with that\n          account's transit gateways.\nChoose one or more transit gateways, and then choose\nRegister transit\n            gateway\n.\nTo register a transit gateway using the AWS CLI\nUse the\nregister-transit-gateway\ncommand.\nView your registered transit gateways\nView the registered transit gateways in your global network.\nTo access your registered transit gateways\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit\n          gateways\n.\nThe\nTransit gateways\npage lists your registered\n          transit gateways. Choose the ID of transit gateway to view its\n          details.\nTo view your registered transit gateways using the AWS CLI\nUse the\nget-transit-gateway-registrations\ncommand.\nDeregister a transit gateway\nDeregister a transit gateway from a global network.\nTo deregister a transit gateway\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit gateways\n.\nSelect your transit gateway, and choose\nDeregister\n.\nTo deregister a transit gateway using the AWS CLI\nUse the\nderegister-transit-gateway\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGlobal networks\nSites\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/sites.html": "Sites - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nCreate a site\nUpdate a site\nDelete a site\nSites\nYou can represent your on-premises network in your global network through sites,\n    devices, and links. For more information, see\nDefine and associate your on-premises\n                network\n.\n    You then associate a device with a site and one or more links.\nA site is created for a specific global network and cannot be shared with other global\n    networks.\nTasks\nCreate a site\nUpdate a site\nDelete a site\nCreate a site\nCreate a site to represent the physical location of your network. The location\n      information is used for visualization in the Network Manager console.\nTo create a site\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\n. Choose\nCreate site\n.\nFor\nName\nand\nDescription\n, enter\n          a name and description for the site.\nFor\nAddress\n, enter the physical address of the\n          site, for example,\nNew York, NY 10004\n.\nFor\nLatitude\n, enter the latitude coordinates for the\n          site, for example,\n40.7128\n.\nFor\nLongitude\n, enter the longitude coordinates for\n          the site, for example,\n-74.0060\n.\nChoose\nCreate site\n.\nCreating and viewing a site using the AWS CLI\nUse the following commands:\nTo create a site:\ncreate-site\nTo view your sites:\nget-sites\nUpdate a site\nYou can update the details of your site, including the description, address,\n      latitude, and longitude.\nTo update a site\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\n, and select your\n          site.\nChoose\nEdit\n.\nUpdate the description, address, latitude, longitude, and tags as\n          needed.\nChoose\nEdit site\n.\nUpdating a site using the AWS CLI\nUse the\nupdate-site\ncommand.\nDelete a site\nIf you no longer need a site, you can delete it. You must first disassociate the\n      site from any devices and delete any links for the site.\nTo delete a site\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\n.\nSelect the site and choose\nDelete\n.\nIn the confirmation dialog box, choose\nDelete\n.\nDeleting a site using the AWS CLI\nUse the\ndelete-site\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTransit gateway registrations\nLinks\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/links.html": "Links - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nCreate a link\nUpdate a link\nDelete a link\nLinks\nYou can represent your on-premises network in your global network through sites,\n    devices, and links. For more information, see\nDefine and associate your on-premises\n                network\n.\n    You then associate a device with a site and one or more links.\nA link is created for a specific global network and cannot be shared with other global\n    networks.\nTasks\nCreate a link\nUpdate a link\nDelete a link\nCreate a link\nCreate a link to represent an internet connection from a device. A link is created\n      for a specific site, therefore you must create a site before you create a\n      link.\nTo create a link\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\n. Choose the ID\n          of the site for which to create the link, and the choose\nLinks\n.\nChoose\nCreate link\n.\nFor\nName\nand\nDescription\n, enter\n          a name and description for the link.\nFor\nUpload speed\n, enter the upload speed in\n          Mbps.\nFor\nDownload speed\n, enter the download speed in\n          Mbps.\nFor\nProvider\n, enter the name of the service\n          provider.\nFor\nType\n, enter the type of link, for example,\nbroadband\n.\nChoose\nCreate link\n.\nCreating and viewing a link using the AWS CLI\nUse the following commands:\nTo create a link:\ncreate-link\nTo view your links:\nget-links\nUpdate a link\nYou can update the details of your link, including the bandwidth information,\n      description, provider, and type.\nTo update a link\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\nand choose the\n          ID for the site. Choose\nLinks\n.\nSelect the link and choose\nEdit\n.\nUpdate the link details as needed, then choose\nEdit\n          link\n.\nUpdating a link using the AWS CLI\nUse the\nupdate-link\ncommand.\nDelete a link\nIf you no longer need a link, you can delete it. You must first disassociate the\n      link from any devices and customer gateways.\nTo delete a link\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\nand choose the\n          ID for the site. Choose\nLinks\n.\nSelect the link and choose\nDelete\n.\nIn the confirmation dialog box, choose\nDelete\n.\nDeleting a link using the AWS CLI\nUse the\ndelete-link\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSites\nDevices\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/devices.html": "Devices - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nCreate a device\nUpdate a device\nDelete a device\nAssociate a device\nDevices\nYou can represent your on-premises network in your global network through sites,\n    devices, and links. For more information, see\nDefine and associate your on-premises\n                network\n.\n    You can then associate a device with a site and one or more links.\nYou can also create a device to represent a virtual appliance in your AWS network. For\n    more information, see\nConnection between devices\n.\nA device is created for a specific global network and cannot be shared with other\n    global networks.\nTasks\nCreate a device\nUpdate a device\nDelete a device\nAssociate a device\nCreate a device\nCreate a device to represent a physical or virtual appliance.\nTo create a device\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n. Choose\nCreate device\n.\nFor\nName\nand\nDescription\n, enter\n          a name and description for the device.\nFor\nModel\n, enter the device model number.\nFor\nSerial number\n, enter the serial number for the\n          device.\nFor\nType\n, enter the device type.\nFor\nVendor\n, enter the name of the vendor, for\n          example,\nCisco\n.\nFor\nLocation type\n, specify whether the device is\n          located in a remote location (on-premises network, data center, or other\n          cloud provider) or in AWS.\nIf you choose\nAWS Cloud\n, specify the location of\n          the device within AWS. For\nZone\n, specify the name of\n          an Availability Zone, Local Zone, Wavelength Zone, or an Outpost. For\nSubnet\n, specify the Amazon Resource Name (ARN) of a\n          subnet (for example, arn:aws:ec2:us-east-1:111111111111:subnet/subnet-abcd1234).\nFor\nAddress\n, enter the physical address of the\n          site, for example,\nNew York, NY 10004\n.\nFor\nLatitude\n, enter the latitude coordinates for\n          the site, for example,\n40.7128\n.\nFor\nLongitude\n, enter the longitude coordinates\n          for the site, for example,\n-74.0060\n.\nChoose\nCreate device\n.\nCreating and viewing a device using the AWS CLI\nUse the following commands:\nTo create a device:\ncreate-device\nTo view your devices:\nget-devices\nUpdate a device\nYou can update the details of your device, including the description, model,\n      serial number, type, vendor, and location information.\nTo update a device\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\nand select the\n          device.\nChoose\nEdit\n.\nUpdate the device details as needed, then choose\nEdit\n          device\n.\nUpdating a device using the AWS CLI\nUse the\nupdate-device\ncommand.\nDelete a device\nIf you no longer need a device, you can delete it. You must first disassociate the\n      device from any sites, links, and customer gateways.\nTo delete a device\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nSelect the site and choose\nDelete\n.\nIn the confirmation dialog box, choose\nDelete\n.\nDeleting a device using the AWS CLI\nUse the\ndelete-device\ncommand.\nAssociate a device\nYou can associate a device with a site, and a device with one or more links.\nContents\nDevice and site associations\nDevice and link associations\nDevice and site associations\nA site can have multiple devices associated with it, but a device can only be associated with a single site.\nTo associate a device and site\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n, and choose\n            the ID of your device.\nChoose\nAssociate site\n.\nFor\nSite\n, choose the name of your site from the\n            list.\nChoose\nEdit site association\n.\nYou can remove the association between a device and a site.\nTo disassociate a device and site\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n, and\n            choose the ID of your device.\nChoose\nDisassociate site\n.\nWorking with device and site associations using the AWS CLI\nWhen you create a new device using the\ncreate-device\nAWS CLI command, you can specify the site to\n          associate with the device. For an existing device, you can use the\nupdate-device\nAWS CLI command to associate or disassociate a\n          site.\nDevice and link associations\nA link can be associated with more than one device. The device must be\n        associated with a site.\nTo associate a link and a device\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n, and choose\n            the ID of your device.\nChoose\nLinks\n.\nChoose\nAssociate link\n.\nChoose the link to associate, then choose\nAssociate\n            link\n.\nYou can remove the association between a link and a device.\nTo disassociate a link and a device\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n, and choose\n            the ID of your device.\nChoose\nLinks\n.\nSelect the link and choose\nDisassociate\n.\nWorking with device and link associations using the AWS CLI\nYou can work with device associations using the following commands.\nTo associate a link with a device:\nassociate-link\nTo view your link associations:\nget-link-associations\nTo disassociate a link from a device:\ndisassociate-link\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nLinks\nConnections\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/device-connections.html": "Connections - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nCreate a connection\nUpdate a connection\nDelete a connection\nConnections\nYou can create a connection between two devices in your global network. The connection\n    can be between a physical or virtual appliance and a third-party appliance in a VPC, or\n    between physical appliances in an on-premises network.\nA connection is created for a specific global network and cannot be shared with other\n    global networks.\nTasks\nCreate a connection\nUpdate a connection\nDelete a connection\nCreate a connection\nCreate a connection between two existing devices in your global network.\nTo create a connection\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n, and choose\n          the ID of the device.\nChoose\nConnections\n, and then choose\nCreate\n          connection\n.\nFor\nName\nand\nDescription\n, enter\n          a name and description for the connection.\n(Optional) For\nLink\n, choose a link to associate with\n          the first device in the connection.\nFor\nConnected device\n, choose the ID of the second\n          device in the connection.\n(Optional) For\nConnected link\n, choose a link to\n          associate with the second device in the connection.\nChoose\nCreate connection\n.\nTo create a connection using the AWS CLI\nUse the\ncreate-connection\ncommand.\nUpdate a connection\nYou can update the information for an existing connection.\nTo update a connection\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n, and select\n          the device.\nChoose\nConnections\n, and select the connection.\nChoose\nEdit\n.\nUpdate the connection details as needed, and then choose\nEdit\n          connection\n.\nTo update a connection using the AWS CLI\nUse the\nupdate-connection\ncommand.\nDelete a connection\nIf you no longer need a connection, you can delete it.\nTo delete a connection\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n, and select\n          the device.\nChoose\nConnections\n, and select the connection.\nChoose\nDelete\n.\nWhen prompted for confirmation, choose\nDelete\n.\nTo delete a connection using the AWS CLI\nUse the\ndelete-connection\ncommand.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDevices\nCustomer gateway associations\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/cgw-association.html": "Customer gateway associations - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nCustomer gateway associations\nTo add your on-premises network to your global network, you associate a customer\n    gateway with your device, and optionally, a link. The customer gateway must already be\n    in your global network as part of a VPN attachment in your transit gateway. If you\n    specify a link, it must already be associated with the specified device.\nFor more information about creating a customer gateway, see\nCreate a Customer\n    Gateway\nin the\nAWS Site-to-Site VPN User Guide\n. For more information\n    about creating a VPN attachment to a transit gateway, see\nTransit Gateway VPN Attachments\nin\nAmazon VPC Transit Gateways\n.\nFor more information about viewing\n      the topology of your on-premises network in Network Manager, see\nVisualize transit gateway networks\n/>.\nYou can associate a customer gateway with a device and link in one of the following\n    ways:\nOn the\nTransit gateways\npage\nOn the\nDevices\npage\nTransit gateways page\nTo associate a customer gateway using the Transit gateways\n            page\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit\n              gateways\n, and then choose the ID of your transit\n              gateway.\nChoose\nOn-premises associations\n.\nSelect your customer gateway and choose\nAssociate\n.\nFor\nDevice\n, select the ID of the device to\n              associate. For\nLink\n, select the ID of the link\n              to associate.\nChoose\nEdit on-premises association\n.\nDevices page\nTo associate a customer gateway using the Devices page\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n, and\n              then choose the ID of your device.\nChoose\nOn-premises associations\n.\nChoose\nAssociate\n.\nFor\nCustomer gateway\n, select the ID of the\n              customer gateway to associate. For\nLink\n, select\n              the ID of the link to associate.\nChoose\nCreate on-premises association\n.\nYou can disassociate a customer gateway from a device or link in one of the following\n    ways:\nOn the\nTransit gateways\npage\nOn the\nDevices\npage\nTransit gateways page\nTo disassociate a customer gateway using the Transit gateways\n            page\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit\n              gateways\n, and then choose\nOn-premises\n                associations\n.\nSelect your customer gateway and choose\nDisassociate\n.\nDevices page\nTo disassociate a customer gateway using the Devices page\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n, and\n              then choose the ID of your device.\nChoose\nOn-premises associations\n.\nSelect your customer gateway and choose\nDisassociate\n.\nWorking with customer gateway associations using the AWS CLI\nYou can work with customer gateway associations using the following\n      commands.\nTo associate a customer gateway with a device and link:\nassociate-customer-gateway\nTo view your customer gateway associations:\nget-customer-gateway-associations\nTo disassociate a customer gateway from a device and link:\ndisassociate-customer-gateway\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nConnections\nTransit Gateway Connect peer associations\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/connect-peer-association.html": "Transit Gateway Connect peer associations - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nTransit Gateway Connect peer associations\nYou can associate a\nTransit Gateway Connect peer\n(in a transit gateway\n    Connect attachment) with a device, and optionally, with a link.\nIf you specify a link, it must be associated with the specified device.\nYou can create a transit gateway Transit Gateway Connect peer association in one of the following ways:\nOn the\nTransit gateways\npage\nOn the\nDevices\npage\nTransit gateways page\nTo associate a Transit Gateway Connect peer using the Transit gateways page\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit\n              gateways\n, and then choose the ID of your transit\n              gateway.\nChoose\nConnect peer associations\n.\nSelect the Transit Gateway Connect peer and choose\nEdit\n.\nFor\nDevice\n, select the ID of the device to\n              associate. For\nLink\n, select the ID of the link\n              to associate.\nChoose\nEdit Connect peer association\n.\nDevices page\nTo associate a Transit Gateway Connect peer using the Devices page\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n, and\n              choose the ID of the device.\nChoose\nConnect peer associations\n.\nChoose\nAssociate\n.\nFor\nConnect peer\n, choose the\n              Transit Gateway Connect peer.\n(Optional) For\nLink\n, choose the link for the\n              Transit Gateway Connect peer association.\nChoose\nCreate Connect peer\n              association\n.\nYou can disassociate a Transit Gateway Connect peer from a device in one of the following\n    ways:\nOn the\nTransit gateways\npage\nOn the\nDevices\npage\nTransit gateways page\nTo disassociate a Transit Gateway Connect peer using the Transit gateways\n            page\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit\n              gateways\n, and then choose\nConnect peer\n                associations\n.\nSelect the Transit Gateway Connect peer and choose\nDisassociate\n.\nDevices page\nTo disassociate a Transit Gateway Connect peer using the Devices page\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n, and\n              then choose the ID of your device.\nChoose\nConnect peer associations\n.\nSelect the Transit Gateway Connect peer and choose\nDisassociate\n.\nWorking with Transit Gateway Connect peer associations using the AWS CLI\nYou can work with Transit Gateway Connect peer associations using the following commands.\nTo associate a Transit Gateway Connect peer with a device:\nassociate-transit-gateway-connect-peer\nTo view your Transit Gateway Connect peer associations:\nget-transit-gateway-connect-peer-associations\nTo disassociate a Transit Gateway Connect peer from a device:\ndisassociate-transit-gateway-connect-peer\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCustomer gateway associations\nVisualize and monitor transit gateway networks and transit gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/tgw-visualize-networks.html": "Visualize and monitor transit gateway networks and transit gateways - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nVisualize and monitor transit gateway networks and transit gateways\nThe AWS Global Networks for Transit Gateways console uses dashboard visualizations to help you view and monitor all aspects\n        of your transit gateway networks and transit gateways. Some of the dashboards include:\nWorld maps that pinpoint where your network resources, such as edge locations,\n                devices, and attachments, are located.\nMonitoring that uses CloudWatch Events to track 15-months' worth of statistics, giving you a\n                better perspective on how your networks are performing.\nEvent tracking that streams real-time events to an events dashboard.\nTopological and logical diagrams of your transit gateway networks and transit gateways.\nThere are separate dashboards for your transit gateway networks and transit gateways.\nTopics\nVisualize transit gateway networks\nVisualize transit gateways\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTransit Gateway Connect peer associations\nVisualize transit gateway networks\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/nm-monitoring-console.html": "Visualize transit gateway networks - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nOverview\nGeography\nTopology tree\nEvents\nMonitoring\nRoute analyzer\nVisualize transit gateway networks\nUse the global networks dashboard to view details about transit gateways in your global network.\nTopics\nOverview\nGeography\nTopology tree\nEvents\nMonitoring\nRoute analyzer\nOverview\nThe Overview page displays details about your transit gateway network, the VPN status,\n            the Connect peer status, and any network events affecting your transit gateways.\nTo access transit gateway network details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nOn the\nOverview\npage you contains the following information:\nYour transit gateway network\nInventory\n:\nIcon\nDescription\nTransit gateways\nThe total\n                                                number of registered transit gateways in your global\n                                                network. Choose the link to open the\nTransit gateways\npage to view\n                                                more information about your transit\n                                            gateways.\nSites\nThe total number of sites associated with your transit\n                                            gateways. Choose the link to open the\nSites\npage to view more information about your transit gateway sites.\nDevices\nThe total number of devices associated with your transit\n                                            gateways. Choose the link to open the\nDevices\npage to view more information\n                                            about your transit gateway devices.\nThe\nTransit gateways VPN status\n.  The following is\n                        displayed:\nID\n\u00e2\u0080\u0093 The ID of the transit gateway. Choose\n                                the link to open details about the transit gateway.\nName\n\u00e2\u0080\u0093 Name of the transit gateway.\nRegion\n\u00e2\u0080\u0093 Region where the transit gateway is\n                                located\nDown VPN\n\u00e2\u0080\u0093 The percentage of your total\n                                transit gateway VPNs that are down.\nImpaired VPN\n\u00e2\u0080\u0093The percentage of your total\n                                VPNs that are impaired.\nUp VPN\n\u00e2\u0080\u0093 The percentage of your total VPNs\n                                that are up.\nThe\nTransit gateways connect peer status\n.  The\n                        following is displayed:\nID\n\u00e2\u0080\u0093 The ID of the transit gateway.\nName\n\u00e2\u0080\u0093 Name of the transit gateway.\nRegion\n\u00e2\u0080\u0093 Region where the transit peer is\n                                located\nDown Connect peer\n\u00e2\u0080\u0093 The percentage of your\n                                total transit gateway Connect peers that are down.\nImpaired Connect peer\n\u00e2\u0080\u0093 The percentage of\n                                your total transit gateway Connect peers that are impaired.\nUp VPN\n\u00e2\u0080\u0093 The percentage of your total transit\n                                gateway Connect peers that are up.\nThe\nNetwork events summary\ndisplays CloudWatch Events number of\n                            core network attachments per edge, shown as a stacked column chart.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nGeography\nThe Geography page displays a world map showing the locations of your transit gateway\n            network.\nTo access a geographic map of your transit gateways\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nGeography\ntab.\nA world map displays, showing you the locations of the following:\nAWS\nTGWs\nand\nVPCs\n.\nThe\nConnectivity\nof\nVPNs\n,\nDirect Connects\n, and\nConnect\n                                peers\n.\nOn-premises\nSites\nand\nDevices\n.\nNot associated\nSites\nand\nDevices\n.\nIn\n                    the following example, there are four AWS Regions,\nus-west-1\nus-west-2\n,\nus-east-1\n, and\nus-east-2\n. Each Region is labeled and represented by a\n                    number, indicating the number of transit gateways in that Region. For example,\nus-east-2\nis represented by the number\n3\n, indicating that there are three network resources\n                    associated with the us-west-2 Region.\nIf your account is a delegated administrator in a multi-account environment,\n                    you can view details about the transit gateways for different accounts.\nChoose the number representing a Region. For example, choose\n3\n. The following information displays:\nThe right pane shows the AWS Region, us-east-2.\nA bottom panel shows with a\nTransit Gateways\ndropdown list option, displaying each transit gateway in that\n                            Region. In this example, there are\n3\ntransit gateways in us-east-2. Choose a transit gateway from the dropdown\n                            list to view details about that transit gateway. In this example, you\n                            can see that the\nResource Account ID\nfor this\n                            transit gateway is another account in the multi-account environment,\n98765432101\n.\nTo view more details about the transit gateway, choose the ID link to open the\nTransit gateway details\npage for the gateway.\nIf your global network is part of a multi-account environment, you can choose\n                    an\nID\nfrom a member account and view details about that\n                    attachment. The\nResource Account ID\ncolumn displays the\n                    account ID that the transit gateway belongs to.\nViewing details about a member's resources prompts you to use the Network Manager\n                    console to switch roles to the member account where the resource is\n                    located.\nNote\nSwitching roles logs you out of the current account and into the member\n                        account associated with the attachment.\nTo view resource details in a member account\nWhen choosing a link to a member account, you're prompted to switch console roles:\nThe following values populate the\nSwitch Role\nscreen. Keep the following values:\nAccount\n\u00e2\u0080\u0094 The account ID for the member account\n                                    that the resource is associated with.\nRole\n\u00e2\u0080\u0094\nIAMRoleForAWSNetworkManagerCrossAccountResourceAccess\nis the required IAM role for accessing resources across multiple\n                                    accounts.\nChoose\nSwitch Role\n.\nYou're logged out of your current account and into that member\n                            account. A new tab opens showing the details of the resource. For\n                            example, if you choose a VPC resource, the VPC resource page opens for\n                            the member account that owns the resource.\nDepending on the delegated permission level assigned to the delegated\n                            administrators and the management account when trusted access was\n                            enabled, you can either view information (read-only permission) about the\n                            resource or add/modify (administrator permission) the resource.\nTo return to the original member account, choose one\n                            of the following:\nOn your current tab, choose the browser\nBack\nbutton. On the\nSwitch\n                                        Role\nlogin screen, enter the\nAccount\nID of the account you want, and\n                                    then choose\nSwitch Role\n.\nIf you haven't closed it, choose the tab for the account\n                                    you've just logged out of, and then choose\nReload\n.\nTopology tree\nThe\nTopology tree\npage shows a logical diagram of your transit\n            gateway network.\nTo access the topology tree for a transit gateway network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nTopology tree\ntab.\nBy default, the\nTopology tree\npage displays all\nSites\n,\nDevices\n, and\nCustomer Gateways\nof your transit gateway and the logical\n                    relationships between them. You can filter the network tree to show specific\n                    resources types only to view information about the specific resource it\n                    represents. The line colors represent the state of the relationships between\n                    AWS and the on-premises resources.\nThe following example shows the topology tree for two edge locations,\nus-west-1\nand\nus-east-1\n.\nIn the\nTopology tree\n, choose an attachment. The\n                    attachment details display in the left pane.\nIf your global network is part of a multi-account environment, you can choose\n                    a\nResource ID\nfrom a member account and view details about\n                    that attachment.\nViewing details about a member's resources prompts you to switch Network Manager\n                    console roles to the member account where the resource is located.\nNote\nSwitching roles logs you out of the current account and into the delegated\n                        administrator account associated with the attachment.\nTo view resource details in a member account\nWhen choosing a link to a member account, you're prompted to switch console roles:\nThe following values populate the\nSwitch Role\nscreen. Keep the following values:\nAccount\n\u00e2\u0080\u0094 The account ID for the member account\n                                    that the resource is associated with.\nRole\n\u00e2\u0080\u0094\nIAMRoleForAWSNetworkManagerCrossAccountResourceAccess\nis the required IAM role for accessing resources across multiple\n                                    accounts.\nChoose\nSwitch Role\n.\nYou're logged out of your current account and into that member\n                            account. A new tab opens showing the details of the resource. For\n                            example, if you choose a VPC resource, the VPC resource page opens for\n                            the member account that owns the resource.\nDepending on the delegated permission level assigned to the delegated\n                            administrators and the management account when trusted access was\n                            enabled, you can either view information (read-only permission) about the\n                            resource or add/modify (administrator permission) the resource.\nTo return to the original member account, choose one\n                            of the following:\nOn your current tab, choose the browser\nBack\nbutton. On the\nSwitch\n                                        Role\nlogin screen, enter the\nAccount\nID of the account you want, and\n                                    then choose\nSwitch Role\n.\nIf you haven't closed it, choose the tab for the account\n                                    you've just logged out of, and then choose\nReload\n.\nEvents\nTrack your transit gateway events using CloudWatch Events that delivers a near-real-time stream of\n            system events that describe changes in your resources. Using simple rules that you can\n            quickly set up, you can match events and route them to one or more target functions or\n            streams. For more information about CloudWatch Events, see the\nAmazon CloudWatch Events User\n                    Guide\n.\nTo access transit gateway network events\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nEvents\ntab.\nThe\nEvents\nsection updates with the CloudWatch transit events\n                    that occurred during the time frame.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nMonitoring\nYou can monitor your transit gateways using Amazon CloudWatch which collects raw data and\n            processes it into readable, near-real-time metrics. These statistics are kept for 15\n            months, so that you can access historical information and gain a better perspective on\n            how your network is performing. You can also set alarms that watch for certain\n            thresholds, and send notifications or take actions when those thresholds are met. For\n            more information, see the\nAmazon CloudWatch Events User\n                    Guide\n.\nOn the monitoring page you can view usage metrics for your transit gateways, filtering\n            by specific transit gateways.\nTo access transit gateway network monitoring details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nMonitoring\ntab.\nChoose a transit gateway that you want to monitor.\nIf you're using an account that's set up as a delegated administrator between\n                    accounts, you can choose a transit gateway from one of those other accounts. The transit gateway\n                    list displays the ID, the Region, and the account ID.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nThe page updates the following transit gateway monitors:\nBytes in\nBytes out\nBytes dropped \u00e2\u0080\u0093 black hole\nBytes dropped \u00e2\u0080\u0093 no route\nPackets in\nPackets out\nPackets dropped \u00e2\u0080\u0093 black hole\nPackets dropped \u00e2\u0080\u0093 no route\n(Optional) Choose\nAdd to dashboard\nto add this metric to\n                    your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the Amazon CloudWatchUser Guide.\nNote\nThe\nAdd to dashboard\noption only works if your\n                        registered transit gateway is in the US West (Oregon) Region.\nRoute analyzer\nThe Route Analyzer analyzes the routing path between a specified source and destination.\nNote\nRoute Analyzer checks the routes on Transit Gateway route tables only\nTo analyze transit gateway routes\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nRoute Analyzer\ntab.\nIn the\nSource\nsection,\nChoose the source\nTransit Gateway\nfor the route\n                            that you want to analyze.\nIf you're logged on to an account that's set up as a delegated\n                            administrator between accounts, you can choose a transit gateway from one of those\n                            other accounts. The transit gateway list displays the ID, the\n                            Region, and the account ID.\nChoose the source\nTransit Gateway attachment\nfor\n                            the route.\nEnter either the IPv4 or IPv6\nIP address\n.\nClear the\nInclude return path in results\ncheck\n                            box if you don't want . This is chosen by default.\nChoose if this is a\nMiddlebox appliance\n. For more\n                            information on middlebox configurations, see\nRoute analysis with a middlebox configuration\n.\nIn the Destination section,\nChoose the destination\nTransit Gateway\n.\nIf you're logged on to an account that's set up as a delegated\n                            administrator between accounts, you can choose a transit gateway from one of those\n                            other accounts. The transit gateway list displays the ID, the\n                            Region, and the account ID.\nChoose the destination\nTransit Gateway attachment\nfor the route.\nEnter either the IPv4 or IPv6\nIP address\n.\nChoose\nRun route analysis\n.\nThe Results of route analysis return the\nSource\nand\nDestination\ntransit gateways and the current\nStatus\n. An error message is returned if no information\n                    is found in the transit gateway route table. For more information on route\n                    tables, see\nTransit gateway route tables\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVisualize and monitor transit gateway networks and transit gateways\nVisualize transit gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/nm-visualize-tgw.html": "Visualize transit gateways - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nOverview\nTopology tree\nEvents\nMonitoring\nOn-premises associations\nConnect peer associations\nTags\nVisualize transit gateways\nThe AWS Global Networks for Transit Gateways console provides a dashboard where you can visualize and monitor your transit gateways . It\n        includes information about network resources, their geographic locations, the network\n        topology, and the logical network associations.\nTopics\nOverview\nTopology tree\nEvents\nMonitoring\nOn-premises associations\nConnect peer associations\nTags\nOverview\nTo access the transit gateway resource inventory\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway networks\n.\nThe\nTransit gateways\npage opens, showing a list of your transit gateways.\nChoose the\nID\nof the transit gateway you want to see more information about.\nOn the\nOverview\npage you can view the following\n                    information:\nYour transit gateway details.\nThe transit gateway attachments, along with information about each of\n                            those attachments.\nUse the following legend to understand the icons on this page:\nIcon\nDescription\nVPC\nThe total number of VPC attachments in your transit gateway network.\nVPN\nThe total number of VPN\n                                        attachments in your transit gateway.\nDirect Connect Gateway\nThe total number of Direct Connect gateways attached to\n                                        your transit gateway.\nConnect\nThe total number of Connect peer attachments in your\n                                        transit gateway.\nTransit Gateway\nThe total number of Transit Gateways.\nThe\nDetails\nsection shows information about your global\n                    network: the transit gateway\nID\n, its\nName\n, the\nRegion\nwhere it's located, and the current\nState\nof the gateway.\nNote\nTo see details about a different transit gateway, choose the dropdown list and then\n                    choose the transit gateway.\nThe\nTransit Gateway attachment\nsection displays details\n                    about your attachments: the Transit Gateway\nID\n, the\nResource ID\n, and the\nResource\n                    Type\n.\nThe\nVPNs\nsection displays details about your VPN\n                    attachments: the VPN\nID\n, the\nDevice\nusing the VPN attachment, and any\nLink\nassociated with the\n                    attachment.\nThe\nConnect peers\nsection displays details about your\n                    Connect peer attachments: the name of the\nConnect peer\nand\n                    the\nDevice\nusing that Connect peer.\nThe\nNetwork events summary\nsection shows the network\n                    events for that transit gateway. You must first onboard CloudWatch Events to see network\n                    events. Choose\nOnboard CloudWatch Insights\nto enable viewing\n                    network events.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nTopology tree\nThe\nTopology tree\npage shows a logical diagram of your transit\n            gateways.\nTo view a transit gateway topology tree\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway networks\n.\nThe\nTransit gateways\npage opens, showing a list of your transit gateways.\nChoose the\nID\nof the transit gateway you want to see more information about.\nChoose the\nTopology tree\ntab.\nBy default, the\nTopology tree\npage displays all\nSites\n,\nDevices\n, and\nCustomer Gateways\nof your transit gateway and the logical\n                    relationships between them. You can filter the network tree to show specific\n                    resources types only to view information about the specific resource it\n                    represents. The line colors represent the state of the relationships between\n                    AWS and the on-premises resources.\nIn the\nTopology tree\n, choose a resource. The resource\n                    details display in the right pane.\nIf your global network is part of a multi-account environment, you can choose\n                    a\nResource ID\nfrom a member account and view details about\n                    that attachment.\nViewing details about a member's resources prompts you to switch Network Manager\n                    console roles to the member account where the resource is located.\nNote\nSwitching roles logs you out of the current account and into the delegated\n                        administrator account associated with the attachment.\nTo view resource details in a member account\nWhen choosing a link to a member account, you're prompted to switch console roles:\nThe following values populate the\nSwitch Role\nscreen. Keep the following values:\nAccount\n\u00e2\u0080\u0094 The account ID for the member account\n                                    that the resource is associated with.\nRole\n\u00e2\u0080\u0094\nIAMRoleForAWSNetworkManagerCrossAccountResourceAccess\nis the required IAM role for accessing resources across multiple\n                                    accounts.\nChoose\nSwitch Role\n.\nYou're logged out of your current account and into that member\n                            account. A new tab opens showing the details of the resource. For\n                            example, if you choose a VPC resource, the VPC resource page opens for\n                            the member account that owns the resource.\nDepending on the delegated permission level assigned to the delegated\n                            administrators and the management account when trusted access was\n                            enabled, you can either view information (read-only permission) about the\n                            resource or add/modify (administrator permission) the resource.\nTo return to the original member account, choose one\n                            of the following:\nOn your current tab, choose the browser\nBack\nbutton. On the\nSwitch\n                                        Role\nlogin screen, enter the\nAccount\nID of the account you want, and\n                                    then choose\nSwitch Role\n.\nIf you haven't closed it, choose the tab for the account\n                                    you've just logged out of, and then choose\nReload\n.\nEvents\nTrack your transit gateway events using CloudWatch Events that delivers a near-real-time stream of\n            system events that describe changes in your resources. Using simple rules that you can\n            quickly set up, you can match events and route them to one or more target functions or\n            streams. For more information about CloudWatch Events, see the\nAmazon CloudWatch Events User\n                Guide\n.\nTo track transit gateway events\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nEvents\ntab.\nThe\nEvents\nsection updates with the CloudWatch transit events\n                    that occurred during the time frame.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nMonitoring\nYou can monitor your transit gateways using Amazon CloudWatch which collects raw data and\n            processes it into readable, near-real-time metrics. These statistics are kept for 15\n            months, so that you can access historical information and gain a better perspective on\n            how your network is performing. You can also set alarms that watch for certain\n            thresholds, and send notifications or take actions when those thresholds are met. For\n            more information, see the\nAmazon CloudWatch Events User\n                Guide\n.\nOn the monitoring page you can view usage metrics for your transit gateways, filtering\n            by specific transit gateways.\nTo view transit monitoring details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway networks\n.\nThe\nTransit gateways\npage opens, showing a list of your transit gateways.\nChoose the\nID\nof the transit gateway you want to see more information about.\nChoose the\nMonitoring\ntab.\nIf you want to choose a different transit gateway to monitor, choose that\n                    transit gateway from the dropdown list.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nThe page updates the following transit gateway monitors:\nBytes in\nBytes out\nBytes dropped \u00e2\u0080\u0093 black hole\nBytes dropped \u00e2\u0080\u0093 no route\nPackets in\nPackets out\nPackets dropped \u00e2\u0080\u0093 black hole\nPackets dropped \u00e2\u0080\u0093 no route\n(Optional) Choose\nAdd to dashboard\nto add this metric to\n                    your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the Amazon CloudWatchUser Guide.\nNote\nThe\nAdd to dashboard\noption only works if your\n                        registered transit gateway is in the US West (Oregon) Region.\nOn-premises associations\nThe\nOn-premises\npage displays information about your on-premises\n            devices for this transit gateway. On this page you can associate or disassociate any of your\n            devices..\nTo view on-premises associations\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway networks\n.\nThe\nTransit gateways\npage opens, showing a list of your transit gateways.\nChoose the\nID\nof the transit gateway you want to see more information about.\nChoose the\nOn-premises associations\ntab.\nThe\nTransit Gateway\non-premises association page displays\n                    the\nCustomer gateway\n,\nDevice\n,\nLink\n, and\nState\nof the\n                    transit gateway.\nTo associate a device\nChoose the\nCustomer gateway\nyou want to associate a\n                    device with.\nChoose\nAssociate\n.\nOn the\nEdit on-premises association\npage, choose the\nDevice\nand optional\nLink\nfor the\n                    association.\nChoose\nEdit on-premises association\n.\nTo disassociate an on-premises device\nChoose the\nCustomer gateway\nyou want to disassociate.\nChoose\nDisassociate\n.\nConnect peer associations\nThe Connect peer associations page displays information about your Connect peers for\n            this transit gateway. You can also disassociate any of your devices.\nTo access Connect peer associations\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway networks\n.\nThe\nTransit gateways\npage opens, showing a list of your transit gateways.\nChoose the\nID\nof the transit gateway you want to see more information about.\nChoose the\nConnect peer associations\ntab.\nThe\nConnect peer  associations\npage displays the\nConnect peer\n,\nDevice\n,\nLink\n, and\nState\nof the\n                    transit gateway.\nTo disassociate a Connect peer device\nChoose the\nConnect peer\nyou want to disassociate.\nChoose\nDisassociate\n.\nTags\nThe Tags page displays the tags associated with the transit gateway. You can edit any\n            of your transit gateway tags.\nNote\nEditing transit gateway tags is done through the Amazon Virtual Private Cloud console at\nconsole.aws.amazon.com/vpc/home\n.\nTo view and edit transit gateway tags\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway networks\n.\nThe\nTransit gateways\npage opens, showing a list of your transit gateways.\nChoose the\nID\nof the transit gateway you want to see more information about.\nChoose the\nTags\ntab.\nA list of the transit gateway  key-value tags displays.\nTo add, edit, or delete any tags, choose\nEdit tags\nto\n                    open the Amazon Virtual Private Cloud console at\nconsole.aws.amazon.com/vpc/home\n. See\nAdd or edit tags for a\n                            transit gateway\nin the\nAWS Transit Gateway User Guide\nfor\n                    the steps to add or edit transit gateway tags.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVisualize transit gateway networks\nMetrics and events\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/monitoring-overview.html": "Using Amazon CloudWatch metrics and events with your global network - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nUsing Amazon CloudWatch metrics and events with your global\n            network\nAWS provides the following monitoring tools to watch the resources in your global network,\n        report when something is wrong, and take automatic actions when appropriate.\nAmazon CloudWatch\nmonitors your AWS resources and the applications\n                that you run on AWS in real time. You can collect and track metrics, create\n                customized dashboards, and set alarms that notify you or take actions when a\n                specified metric reaches a threshold that you specify. For more information, see the\nAmazon CloudWatch User Guide\n.\nAmazon CloudWatch Events\ndelivers a near-real-time stream of system events\n                that describe changes in AWS resources. CloudWatch Events enables automated event-driven\n                computing, as you can write rules that watch for certain events and trigger\n                automated actions in other AWS services when these events happen. For more\n                information, see the\nAmazon CloudWatch Events User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVisualize transit gateways\nMonitoring with CloudWatch metrics\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/monitoring-cloudwatch-metrics.html": "Monitoring your global and core networks with Amazon CloudWatch metrics - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nMonitoring your global and core networks with\n                Amazon CloudWatch metrics\nYou can monitor AWS Global Networks for Transit Gateways using CloudWatch, which collects raw data and processes it into\n            readable, near-real-time metrics. These statistics are kept for 15 months, so that you\n            can access historical information and gain a better perspective on how your web\n            application or service is performing. You can also set alarms that watch for certain\n            thresholds, and send notifications or take actions when those thresholds are met. For\n            more information, see the\nAmazon CloudWatch User Guide\n.\nYou can view CloudWatch metrics in your global network for your registered transited\n            gateways, your associated Site-to-Site VPN connections, and your on-premises resources. You can\n            view metrics per transit gateway and per transit gateway attachment, per global\n            network.\nFor more information about the supported metrics, see the following topics:\nCloudWatch metrics\n                        for your transit gateways\nMonitoring VPN\n                        tunnels using Amazon CloudWatch\nCloudWatch metrics for on-premises resources\nFor examples of creating alarms, see\nCreating Amazon CloudWatch Alarms\nin the\nAmazon CloudWatch User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMetrics and events\nCloudWatch metrics for on-premises resources\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/cw-metrics-on-premises.html": "CloudWatch metrics for on-premises resources - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nDevice metrics\nMetric dimensions for devices\nLink metrics\nMetric dimensions for links\nCloudWatch metrics for on-premises resources\nglobal networks publishes data points to Amazon CloudWatch for your on-premises resources, including\n                devices and links. CloudWatch enables you to retrieve statistics about those data\n                points as an ordered set of time series data, known as metrics. Each data point has\n                an associated timestamp and an optional unit of measurement.\nYou can use metrics to verify that your system is performing as expected. For\n                example, you can create a CloudWatch alarm to monitor a specified metric and initiate an\n                action (such as sending a notification to an email address) if the metric goes\n                outside what you consider an acceptable range.\nDevice metrics\nThe\nAWS/NetworkManager\nnamespace includes the following metrics\n                    for devices.\nMetric\nDescription\nBytesIn\nThe number of bytes received by the device.\nBytesOut\nThe number of bytes sent by the device.\nVpnTunnelsDown\nThe number of VPN tunnels on the device that have a DOWN\n                                    status. Static VPN tunnels with a DOWN status, and BGP VPN\n                                    tunnels with any state other than ESTABLISHED, are included in\n                                    the count.\nMetric dimensions for devices\nTo filter the metrics for your devices, use the following dimensions.\nDimension\nDescription\nDeviceId\nFilters the metric data by the device.\nLink metrics\nThe\nAWS/NetworkManager\nnamespace includes the following metrics\n                    for links.\nMetric\nDescription\nBytesIn\nThe number of bytes received by the on-premises network using\n                                    this link.\nBytesOut\nThe number of bytes sent from the on-premises network using\n                                    this link.\nMetric dimensions for links\nTo filter the metrics for your links, use the following dimensions.\nDimension\nDescription\nLinkId\nFilters the metric data by the link.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMonitoring with CloudWatch metrics\nViewing global network CloudWatch metrics\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/viewing-metrics.html": "Viewing global network CloudWatch metrics - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nViewing global network CloudWatch metrics\nThere are various options for viewing CloudWatch metrics for your global network,\n                including the following:\nViewing metrics for the global network and filtering by transit\n                        gateway\nViewing metrics for a specific transit gateway and its attachments\nTo view metrics for your global network and filter by transit gateway\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nIn the navigation pane, choose\nGlobal networks\n, and\n                        choose the ID for your global network.\nIn the navigation pane, choose\nTransit gateway\n                            network\n.\nChoose\nMonitoring\n. On this page, you can filter by\n                        transit gateway to view metrics for that transit gateway.\nTo view metrics for a specific transit gateway and its attachments\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nIn the navigation pane, choose\nGlobal networks\n, and\n                        choose the ID for your global network.\nIn the navigation pane, choose\nTransit gateways\n, and\n                        choose the ID for your transit gateway.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCloudWatch metrics for on-premises resources\nMonitoring with CloudWatch Events\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/monitoring-events.html": "Monitoring your global network with CloudWatch Events - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nGetting started\nTopology change events\nRouting update events\nStatus update events\nMonitoring your global network with CloudWatch Events\nCloudWatch Events delivers a near-real-time stream of system events that describe changes in your\n            resources. Using simple rules that you can quickly set up, you can match events and\n            route them to one or more target functions or streams. For more information, see the\nAmazon CloudWatch Events User Guide\n.\nAWS Global Networks for Transit Gateways sends the following types of events to CloudWatch Events:\nTopology change events\nRouting update events\nStatus update events\nGetting started\nBefore you can view events for your global network, you must onboard to CloudWatch Logs\n                Insights. In the global networks console, choose the ID of your global network. In the\nNetwork events summary\nsection, choose\nOnboard to\n                    CloudWatch Log Insights\n.\nAn IAM principal in your account, such as an IAM user, must have sufficient\n                permissions to onboard to CloudWatch Logs Insights. Ensure that the IAM policy contains the\n                following permissions.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"events:PutTargets\",\n                \"events:DescribeRule\",\n                \"logs:PutResourcePolicy\",\n                \"logs:DescribeLogGroups\",\n                \"logs:DescribeResourcePolicies\",\n                \"events:PutRule\",\n                \"logs:CreateLogGroup\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nThe preceding policy does not grant permission to create, modify, or delete Network Manager\n                resources. For more information about IAM policies for working with Network Manager, see\nIdentity and access management for AWS Global Networks for Transit Gateways\n.\nWhen you onboard to CloudWatch Logs Insights, the following occurs:\nA CloudWatch event rule with the name\nDON_NOT_DELETE_networkmanager_rule\nis created in the\n                        US West (Oregon) Region.\nA CloudWatch Logs log group with the name\n/aws/events/networkmanagerloggroup\nis created in the\n                        US West (Oregon) Region.\nThe CloudWatch event rule is configured with the CloudWatch Logs log group as a\n                        target.\nA CloudWatch resource policy with the name\nDO_NOT_DELETE_networkmanager_TrustEventsToStoreLogEvents\nis\n                        created in the US West (Oregon) Region. To view this policy, use the\n                        following AWS CLI command:\naws logs describe-resource-policies --region\n                            us-west-2\nView transit gateway  events using the AWS Transit Gateway\n                        console\nYou can view events for your global network or view a specific transit gateway using the\n                    global networks console.\nTo view global network events\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit gateway network\n.\nChoose\nEvents\n.\nOn this page you can view events for your transit gateway network. For\n                        more information about this page, see\nEvents\n.\nTo view events for a specific transit gateway\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit gateways\n.\nChoose the\nTransit gateway ID\n.\nChoose\nEvents\n.\nOn this page you can view events for your transit gateway network. For\n                            more information about this page, see\nEvents\n.\nTopology change events\nTopology change events occur when there have been changes to the resources in your\n                global network. These include the following:\nEvents\nA transit gateway in the global network was\n                        deleted (TGW-DELETED)\nA VPN connection was created for a transit\n                        gateway (VPN-CONNECTION-CREATED)\nA VPN connection was deleted on a transit\n                        gateway (VPN-CONNECTION-DELETED)\nThe customer gateway for a VPN connection\n                        was changed (VPN-CONNECTION-CUSTOMER-GATEWAY-MODIFIED)\nThe target gateway for a VPN\n                        connection was changed (VPN-CONNECTION-TARGET-GATEWAY-MODIFIED)\nA VPC was attached to a transit gateway\n                        (VPC_ATTACHMENT_CREATED)\nA VPC attachment was deleted from a\n                        transit gateway (VPC-ATTACHMENT-DELETED)\nAn AWS Direct Connect gateway was attached to a\n                        transit gateway (DXGW-ATTACHMENT-CREATED)\nAn AWS Direct Connect gateway was detached from a\n                        transit gateway (DXGW-ATTACHMENT-DELETED)\nA transit gateway peering connection\n                        attachment was created (TGW_PEERING_CREATED)\nA transit gateway peering connection was deleted\n                        (TGW-PEERING-DELETED)\nA transit gateway\n                        Connect attachment was created for a transit gateway\n                        (CONNECT_ATTACHMENT_CREATED)\nA transit gateway\n                        Connect attachment was deleted for a transit gateway\n                        (CONNECT_ATTACHMENT_DELETED)\nA transit gateway Transit Gateway Connect peer was created in\n                        a Connect attachment (TGW-CONNECT-PEER-CREATED)\nA transit gateway Transit Gateway Connect peer was deleted in\n                        a Connect attachment (CONNECT_PEER_DELETED)\nA transit gateway in the global network was\n                        deleted (TGW-DELETED)\n{\n\"version\":\"0\",\n\"id\":\"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"123456789012\",\n\"time\":\"2023-01-18T22:18:44Z\",\n\"region\":\"us-west-2\",\n\"resources\":[\n    \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n    \"arn:aws:ec2:us-east-1:123456789012:transit-gateway/tgw-1234567890abcdef0\"\n],\n\"detail\":\n{\n\"changeType\":\"TGW-DELETED\",\n    \"changeDescription\":\"A Transit Gateway in the global network has been deleted.\",\n    \"region\":\"us-east-1\",\n    \"transitGatewayArn\":\"arn:aws:ec2:us-east-1:123456789012:transit-gateway/tgw-1234567890abcdef0\"}}\nA VPN connection was created for a transit\n                        gateway (VPN-CONNECTION-CREATED)\n{\n\"version\":\"0\",\n\"id\":\"7636f496-ba9f-b1cc-22a6-8c90bbca8540\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"123456789012\",\n\"time\":\"2023-01-18T19:52:42Z\",\n\"region\":\"us-west-2\",\n\"resources\":[\n    \"arn:aws:networkmanager::123456789012:global-network/global-network-0d9a76b06783d76f4\",\n    \"arn:aws:ec2:us-east-1:123456789012:vpn-connection/vpn-01c3c3738ab9f83c5\"\n],\n\"detail\":\n{\n\"changeType\":\"VPN-CONNECTION-CREATED\",\n    \"changeDescription\":\"A Site-to-Site VPN connection has been created.\",\n    \"region\":\"us-east-1\",\n    \"transitGatewayAttachmentArn\":\"arn:aws:ec2:us-east-1:123456789012:transit-gateway-attachment/tgw-attach-0e40588e9833c6a2a\",\n    \"vpnConnectionArn\":\"arn:aws:ec2:us-east-1:123456789012:vpn-connection/vpn-01c3c3738ab9f83c5\",\n    \"customerGatewayArn\":\"arn:aws:ec2:us-east-1:123456789012:customer-gateway/cgw-094a06ef52c577ded\",\n    \"outsideIpAddresses\":[\"54.166.146.158\",\"3.93.214.172\"],\n    \"routing\":\"dynamic_route\",\n    \"accelerated\":false,\n    \"isPrivateVpn\":false,\n    \"transitGatewayArn\":\"arn:aws:ec2:us-east-1:123456789012:transit-gateway/tgw-05445dc6cef2b29f5\"\n    }\n}\nA VPN connection was deleted on a transit\n                        gateway (VPN-CONNECTION-DELETED)\n{\n\"version\":\"0\",\n\"id\":\"877fe5fd-4c95-1553-84ef-cfa271121081\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"996240009049\",\n\"time\":\"2023-01-19T19:43:12Z\",\n\"region\":\"us-west-2\",\n\"resources\":[\n    \"arn:aws:networkmanager::996240009049:global-network/global-network-0d9a76b06783d76f4\",\n    \"arn:aws:ec2:us-east-1:996240009049:vpn-connection/vpn-01c3c3738ab9f83c5\"\n    ],\n\"detail\":\n{\n\"changeType\":\"VPN-CONNECTION-DELETED\",\n    \"changeDescription\":\"A Site-to-Site VPN connection has been deleted.\",\n    \"region\":\"us-east-1\",\n    \"transitGatewayAttachmentArn\":\"arn:aws:ec2:us-east-1:996240009049:transit-gateway-attachment/tgw-attach-0e40588e9833c6a2a\",\n    \"vpnConnectionArn\":\"arn:aws:ec2:us-east-1:996240009049:vpn-connection/vpn-01c3c3738ab9f83c5\",\n    \"customerGatewayArn\":\"arn:aws:ec2:us-east-1:996240009049:customer-gateway/cgw-094a06ef52c577ded\",\n    \"isPrivateVpn\":false,\n    \"transitGatewayArn\":\"arn:aws:ec2:us-east-1:996240009049:transit-gateway/tgw-05445dc6cef2b29f5\"\n    }\n}\nThe customer gateway for a VPN connection\n                        was changed (VPN-CONNECTION-CUSTOMER-GATEWAY-MODIFIED)\n{\n\"version\":\"0\",\n\"id\":\"76594f68-2b9f-7885-895e-58ece42ac48a\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"503089527312\",\"time\":\"2023-06-28T19:25:12Z\",\n\"region\":\"us-west-2\",\n\"resources\":[\n    \"arn:aws:networkmanager::503089527312:global-network/global-network-02ca0cea3b9bde060\",\n    \"arn:aws:ec2:us-east-1:503089527312:vpn-connection/vpn-0822025a9ea3dde43\"\n],\n\"detail\":\n{\n\"changeType\":\"VPN-CONNECTION-CUSTOMER-GATEWAY-MODIFIED\",\n    \"changeDescription\":\"The customer gateway of a Site-to-Site VPN connection has been modified\",\n    \"region\":\"us-east-1\",\n    \"vpnConnectionArn\":\"arn:aws:ec2:us-east-1:503089527312:vpn-connection/vpn-0822025a9ea3dde43\",\n    \"previousCustomerGatewayArn\":\"arn:aws:ec2:us-east-1:503089527312:customer-gateway/cgw-0a3cfed9de6df9903\",\n    \"currentCustomerGatewayArn\":\"arn:aws:ec2:us-east-1:503089527312:customer-gateway/cgw-0a3cfed9de6df9903\",\n    \"transitGatewayArn\":\"arn:aws:ec2:us-east-1:503089527312:transit-gateway/tgw-07b643f6653bbadf2\"\n    }\n}\nThe target gateway for a VPN\n                        connection was changed (VPN-CONNECTION-TARGET-GATEWAY-MODIFIED)\n{\n\"version\":\"0\",\n\"id\":\"668a4e46-a757-3663-dc32-308c5ac5d87f\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"503089527312\",\n\"time\":\"2023-06-27T18:27:24Z\",\n\"region\":\"us-west-2\",\n\"resources\":[\n    \"arn:aws:networkmanager::503089527312:global-network/global-network-02ca0cea3b9bde060\",\n    \"arn:aws:ec2:us-east-1:503089527312:vpn-connection/vpn-0822025a9ea3dde43\"\n],\n\"detail\":\n{\n\"changeType\":\"VPN-CONNECTION-TARGET-GATEWAY-MODIFIED\",\n    \"changeDescription\":\"The target gateway of a Site-to-Site VPN connection has been modified\",\n    \"region\":\"us-east-1\",\n    \"vpnConnectionArn\":\"arn:aws:ec2:us-east-1:503089527312:vpn-connection/vpn-0822025a9ea3dde43\",\n    \"previousTargetGatewayArn\":\"arn:aws:ec2:us-east-1:503089527312:transit-gateway/tgw-042d968af9229a6c8\",\n    \"currentTargetGatewayArn\":\"arn:aws:ec2:us-east-1:503089527312:transit-gateway/tgw-07b643f6653bbadf2\",\n    \"transitGatewayArn\":\"arn:aws:ec2:us-east-1:503089527312:transit-gateway/tgw-042d968af9229a6c8\"\n    }\n}\nA VPC was attached to a transit gateway\n                        (VPC_ATTACHMENT_CREATED)\n{\n\"version\":\"0\",\n\"id\":\"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"123456789012\",\n\"time\":\"2023-01-18T19:52:52Z\",\n\"region\":\"us-west-2\",\n\"resources\": [\n    \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n    \"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"\n],\n\"detail\":\n{\n\"changeType\":\"VPC_ATTACHMENT_CREATED\",\n    \"changeDescription\":\"A VPC attachment has been created for a Core Network.\",\n    \"edgeLocation\":\"us-east-2\",\n    \"attachmentArn\":\"arn:aws:networkmanager::123456789012:attachment/attachment-1234567890abcdef0\",\n    \"vpcArn\":\"arn:aws:ec2:us-east-2:111122223333:vpc/vpc-1234567890abcdef0\",\n    \"coreNetworkArn\":\"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"\n    }\n}\nA VPC attachment was deleted from a\n                        transit gateway (VPC-ATTACHMENT-DELETED)\n{\n\"account\": \"123456789012\",\n  \"region\": \"us-west-2\",\n  \"detail-type\": \"Network Manager Topology Change\",\n  \"source\": \"aws.networkmanager\",\n  \"version\": \"0\",\n  \"time\": \"2019-06-30T23:18:50Z\",\n  \"id\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n  \"resources\": [\n     \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n     \"arn:aws:ec2:us-east-1:123456789012:transit-gateway/tgw-1234567890abcdef0\"\n  ],\n  \"detail\":\n{\n\"changeType\": \"VPC-ATTACHMENT-DELETED\",\n     \"changeDescription\": \"A VPC attachment has been deleted.\",\n     \"region\": \"us-east-1\",\n     \"transit-gateway-arn\": \"arn:aws:ec2:us-east-1:123456789012:transit-gateway/tgw-11111111111122222\",\n     \"transit-gateway-attachment-arn\": \"arn:aws:ec2:us-east-1:123456789012:transit-gateway-attachment/tgw-attach-1234567890abcdef0\",\n     \"vpc-arn\": \"arn:aws:ec2:us-east-1:123456789012:vpc/vpc-1234567890abcdef0\"\n  }\n}\nAn AWS Direct Connect gateway was attached to a\n                        transit gateway (DXGW-ATTACHMENT-CREATED)\n{\n\"version\":\"0\",\n\"id\":\"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"123456789012\",\n\"time\":\"2023-01-19T18:57:29Z\",\n\"region\":\"us-west-2\",\n\"resources\":[\n    \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n    \"arn:aws:ec2:us-west-1:123456789012:transit-gateway/tgw-1234567890abcdef0\"],\n    \"detail\":\n{\n\"changeType\":\"DXGW-ATTACHMENT-CREATED\",\n        \"changeDescription\":\"A Direct Connect Gateway attachment has been created.\",\n        \"region\":\"us-west-1\",\n        \"transitGatewayAttachmentArn\":\"arn:aws:ec2:us-west-1:123456789012:transit-gateway-attachment/tgw-attach-1234567890abcdef0\",\n        \"directConnectGatewayArn\":\"arn:aws:directconnect::123456789012:dx-gateway/a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n        \"transitGatewayArn\":\"arn:aws:ec2:us-west-1:123456789012:transit-gateway/tgw-1234567890abcdef0\"\n    }\n}\nAn AWS Direct Connect gateway was detached from a\n                        transit gateway (DXGW-ATTACHMENT-DELETED)\n{\n\"version\":\"0\",\n\"id\":\"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"123456789012\",\n\"time\":\"2023-01-19T19:16:23Z\",\n\"region\":\"us-west-2\",\n\"resources\":[\n    \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n    \"arn:aws:ec2:us-west-1:123456789012:transit-gateway/tgw-1234567890abcdef0\"\n],\n\"detail\":\n{\n\"changeType\":\"DXGW-ATTACHMENT-DELETED\",\n    \"changeDescription\":\"A Direct Connect Gateway attachment has been deleted.\",\n    \"region\":\"us-west-1\",\n    \"transitGatewayAttachmentArn\":\"arn:aws:ec2:us-west-1:123456789012:transit-gateway-attachment/tgw-attach-1234567890abcdef0\",\n    \"directConnectGatewayArn\":\"arn:aws:directconnect::123456789012:dx-gateway/a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n    \"transitGatewayArn\":\"arn:aws:ec2:us-west-1:123456789012:transit-gateway/tgw-1234567890abcdef0\"\n    }\n}\nA transit gateway peering connection\n                        attachment was created (TGW_PEERING_CREATED)\n{\n\"version\":\"0\",\n\"id\":\"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"123456789012\",\n\"time\":\"2023-01-18T22:28:51Z\",\n\"region\":\"us-west-2\",\n\"resources\":[\n    \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n    \"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"\n],\n\"detail\":\n{\n\"changeType\":\"TGW_PEERING_CREATED\",\n    \"changeDescription\":\"A Transit Gateway peering has been created for a Core Network.\",\n    \"edgeLocation\":\"us-east-1\",\n    \"peeringArn\":\"arn:aws:networkmanager::123456789012:peering/peering-1234567890abcdef0\",\n    \"transitGatewayArn\":\"arn:aws:ec2:us-east-1:123456789012:transit-gateway/tgw-1234567890abcdef0\",\n    \"coreNetworkArn\":\"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"\n    }\n}\nA transit gateway peering connection was deleted\n                        (TGW-PEERING-DELETED)\n{\n\"version\":\"0\",\n\"id\":\"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"503089527312\",\n\"time\":\"2023-06-27T19:55:59Z\",\n\"region\":\"us-west-2\",\n\"resources\":[\n    \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n    \"arn:aws:ec2:us-east-1:111122223333:transit-gateway/tgw-1234567890abcdef0\"\n],\n\"detail\":\n{\n\"changeType\":\"TGW-PEERING-DELETED\",\n    \"changeDescription\":\"A Transit Gateway peering attachment has been deleted.\",\n    \"region\":\"us-east-1\",\n    \"transitGatewayAttachmentArn\":\"arn:aws:ec2:us-east-1:111122223333:transit-gateway-attachment/tgw-attach-1234567890abcdef0\",\n    \"peeredTransitGatewayArn\":\"arn:aws:ec2:us-east-1:111122223333:transit-gateway/tgw-1234567890abcdef0\",\n    \"transitGatewayArn\":\"arn:aws:ec2:us-east-1:111122223333:transit-gateway/tgw-1234567890abcdef0\"\n    }\n}\nA transit gateway\n                        Connect attachment was created for a transit gateway\n                        (CONNECT_ATTACHMENT_CREATED)\n{\n\"version\":\"0\",\n\"id\":\"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"123456789012\",\n\"time\":\"2022-11-21T23:23:46Z\",\n\"region\":\"us-west-2\",\n\"resources\":[\n    \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n    \"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"\n    ],\n\"detail\":\n{\n\"changeType\":\"CONNECT_ATTACHMENT_CREATED\",\n    \"changeDescription\":\"A Connect attachment has been created for a Core Network.\",\n    \"edgeLocation\":\"us-east-1\",\n    \"attachmentArn\":\"arn:aws:networkmanager::123456789012:attachment/attachment-1234567890abcdef0\",\n    \"transportAttachmentArn\":\"arn:aws:networkmanager::123456789012:attachment/attachment-1234567890abcdef0\",\n    \"protocol\":\"GRE\",\n    \"coreNetworkArn\":\"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"\n    }\n}\nA transit gateway\n                        Connect attachment was deleted for a transit gateway\n                        (CONNECT_ATTACHMENT_DELETED)\n{\n\"version\":\"0\",\n\"id\":\"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n\"detail-type\":\"Network Manager Topology Change\",\n\"source\":\"aws.networkmanager\",\n\"account\":\"123456789012\",\n\"time\":\"2023-01-19T19:26:26Z\",\n\"region\":\"us-west-2\",\"resources\":[\n    \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n    \"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"\n    ],\n\"detail\":\n{\n\"changeType\":\"CONNECT_ATTACHMENT_DELETED\",\n    \"changeDescription\":\"A Connect attachment has been deleted for a Core Network.\",\n    \"edgeLocation\":\"us-east-1\",\n    \"attachmentArn\":\"arn:aws:networkmanager::123456789012:attachment/attachment-1234567890abcdef0\",\n    \"transportAttachmentArn\":\"arn:aws:networkmanager::123456789012:attachment/attachment-1234567890abcdef0\",\n    \"coreNetworkArn\":\"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"\n    }\n}\nA transit gateway Transit Gateway Connect peer was created in\n                        a Connect attachment (TGW-CONNECT-PEER-CREATED)\n{\n\"version\": \"0\", \n\"id\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\", \n\"detail-type\": \"Network Manager Topology Change\", \n\"source\": \"aws.networkmanager\", \n\"account\": \"123456789012\", \n\"time\": \"2023-06-27T17:22:45Z\", \n\"region\": \"us-west-2\", \n\"resources\": [ \n    \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\", \n    \"arn:aws:ec2:us-east-1:111122223333:transit-gateway/tgw-1234567890abcdef0\" \n], \n\"detail\":\n{\n\"changeType\": \"TGW-CONNECT-PEER-CREATED\", \n    \"changeDescription\": \"A TGW Connect Peer has been created in a Connect attachment.\", \n    \"region\": \"us-east-1\", \n    \"transitGatewayAttachmentArn\": \"arn:aws:ec2:us-east-1:111122223333:transit-gateway-attachment/tgw-attach-1234567890abcdef0\", \n    \"connectPeerArn\": \"arn:aws:ec2:us-east-1:111122223333:transit-gateway-connect-peer/tgw-connect-peer-1234567890abcdef0\", \n    \"peerAddress\": \"10.1.2.3\", \n    \"transitGatewayAddress\": \"10.0.0.1\", 111122223333\n    \"transitGatewayArn\": \"arn:aws:ec2:us-east-1:111122223333:transit-gateway/tgw-1234567890abcdef0\" \n    } \n}\nA transit gateway Transit Gateway Connect peer was deleted in\n                        a Connect attachment (CONNECT_PEER_DELETED)\n{\n\"version\": \"0\",\n    \"id\": \"437f664b-cc6c-ccb8-b322-2c185ebe0c10\",\n    \"detail-type\": \"Network Manager Topology Change\",\n    \"source\": \"aws.networkmanager\",\n    \"account\": \"738040852526\",\n    \"time\": \"2023-11-13T20:49:34Z\",\n    \"region\": \"us-west-2\",\n    \"resources\": [\n        \"arn:aws:networkmanager::738040852526:global-network/global-network-02e49afd6fa01d0c3\",\n        \"arn:aws:networkmanager::738040852526:core-network/core-network-0d6ee69cdc931f7b5\"\n    ],\n    \"detail\":\n{\n\"changeType\": \"CONNECT_PEER_DELETED\",\n        \"changeDescription\": \"A Connect peer has been deleted in a Connect attachment.\",\n        \"edgeLocation\": \"eu-west-2\",\n        \"attachmentArn\": \"arn:aws:networkmanager::738040852526:attachment/attachment-05e447f0df042a011\",\n        \"connectPeerArn\": \"arn:aws:networkmanager::738040852526:connect-peer/connect-peer-024b3172d38112df5\",\n        \"coreNetworkArn\": \"arn:aws:networkmanager::738040852526:core-network/core-network-0d6ee69cdc931f7b5\"\n    }\n}\nRouting update events\nRouting update events occur when there have been changes to the transit gateway route\n                    tables in your global network. These include the following:\nEvents\nA transit gateway attachment's route\n                        table changed (CONNECT_PEER_DELETED)\nA route was created in a transit gateway\n                        route table (TGW-ROUTE-INSTALLED)\nA route was deleted in a\n                        transit gateway route table gateway (TGW-ROUTE-UNINSTALLED)\nA transit gateway attachment's route\n                        table changed (CONNECT_PEER_DELETED)\n{\n\"version\": \"0\",\n    \"id\": \"437f664b-cc6c-ccb8-b322-2c185ebe0c10\",\n    \"detail-type\": \"Network Manager Topology Change\",\n    \"source\": \"aws.networkmanager\",\n    \"account\": \"738040852526\",\n    \"time\": \"2023-11-13T20:49:34Z\",\n    \"region\": \"us-west-2\",\n    \"resources\": [\n        \"arn:aws:networkmanager::738040852526:global-network/global-network-02e49afd6fa01d0c3\",\n        \"arn:aws:networkmanager::738040852526:core-network/core-network-0d6ee69cdc931f7b5\"\n    ],\n    \"detail\":\n{\n\"changeType\": \"CONNECT_PEER_DELETED\",\n        \"changeDescription\": \"A Connect peer has been deleted in a Connect attachment.\",\n        \"edgeLocation\": \"eu-west-2\",\n        \"attachmentArn\": \"arn:aws:networkmanager::738040852526:attachment/attachment-05e447f0df042a011\",\n        \"connectPeerArn\": \"arn:aws:networkmanager::738040852526:connect-peer/connect-peer-024b3172d38112df5\",\n        \"coreNetworkArn\": \"arn:aws:networkmanager::738040852526:core-network/core-network-0d6ee69cdc931f7b5\"\n    }\n}\nA route was created in a transit gateway\n                        route table (TGW-ROUTE-INSTALLED)\n{\n\"version\": \"0\", \n\"id\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\", \n\"detail-type\": \"Network Manager Routing Update\", \n\"source\": \"aws.networkmanager\", \n\"account\": \"123456789012\", \n\"time\": \"2023-06-27T15:24:32Z\", \n\"region\": \"us-west-2\", \n\"resources\": [ \n    \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\", \n    \"arn:aws:ec2:us-east-1:111122223333:transit-gateway/tgw-1234567890abcdef0\" \n], \n\"detail\":\n{\n\"changeType\": \"TGW-ROUTE-INSTALLED\", \n    \"changeDescription\": \"Routes in one or more Transit Gateway route tables have been installed.\", \n    \"region\": \"us-east-1\", \n    \"transitGatewayRouteTableArns\": [ \n        \"arn:aws:ec2:us-east-1:111122223333:transit-gateway-route-table/tgw-rtb-1234567890abcdef0\" \n    ], \n    \"sequenceNumber\": 1687879467281, \n    \"routes\": [\n{\n\"destinationCidrBlock\": \"11.0.0.0/16\", \n        \"attachments\": [\n{\n\"tgwAttachmentId\": \"tgw-attach-1234567890abcdef0\", \n              \"resourceId\": \"vpc-1234567890abcdef0\", \n              \"attachmentType\": \"vpc\" \n            } \n            ], \n        \"routeType\": \n            \"route_propagated\", \n            \"routeState\": \"active\", \n            \"propagatedRouteFamily\": \n                \"connected\" } \n            ], \n   \"transitGatewayArn\": \"arn:aws:ec2:us-east-1:111122223333:transit-gateway/tgw-1234567890abcdef0\" \n}\nA route was deleted in a\n                        transit gateway route table gateway (TGW-ROUTE-UNINSTALLED)\n{\n\"version\": \"0\",\n  \"id\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n  \"detail-type\": \"Network Manager Routing Update\",\n  \"source\": \"aws.networkmanager\",\n  \"account\": \"123456789012\",\n  \"time\": \"2022-02-30T23:18:50Z\",\n  \"region\": \"us-east-1\",\n  \"resources\": [\n    \"arn:aws-us-east-1:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n    \"arn:aws-us-east-1:ec2:us-east-1:111122223333:transit-gateway/tgw-1234567890abcdef0\"\n  ],\n  \"detail\":\n{\n\"changeType\": \"TGW-ROUTE-UNINSTALLED\",\n    \"changeDescription\": \"Routes in one or more Transit Gateway route tables have been uninstalled.\",\n    \"region\": \"us-east-1\",\n    \"transitGatewayRouteTableArns\": [\n      \"arn:aws-us-east-1:ec2:us-east-1:111122223333:transit-gateway-route-table/tgw-rtb-1234567890abcdef0\"\n    ],\n    \"sequenceNumber\": 1648147298451,\n    \"routes\": [\n{\n\"destinationCidrBlock\": \"10.10.10.0/16\",\n      \"attachments\": [],\n      \"routeType\": \"route_static\",\n      \"routeState\": \"blackhole\"\n    }\n    ],\n    \"transitGatewayArn\": \"arn:aws-us-east-1:ec2:us-east-1:111122223333:transit-gateway/tgw-1234567890abcdef0\"\n  }\n}\nStatus update events\nStatus update events occur when there have been changes to the status of the\n                connectivity of your VPN connections in the global network. These include the\n                following:\nEvents\nA VPN tunnel's IPsec session\n                        went down (VPN-CONNECTION-IPSEC-DOWN)\nA VPN tunnel's IPsec session went up\n                        (after being down) (VPN-CONNECTION-IPSEC-UP)\nA VPN tunnel's BGP session went down\n                        (VPN-CONNECTION-BGP-DOWN)\nA VPN tunnel's BGP session went\n                        up (after being down) (VPN-CONNECTION-BGP-ESTABLISH)\nA Transit Gateway Connect peer (GRE tunnel) BGP\n                        session went down (CONNECT_PEER_BGP_DOWN)\nA Transit Gateway Connect peer (GRE tunnel) BGP\n                        session went up after being down) (CONNECT_PEER_BGP_UP)\nA VPN tunnel's IPsec session\n                        went down (VPN-CONNECTION-IPSEC-DOWN)\n{\n\"version\": \"0\",\n    \"id\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"detail-type\": \"Network Manager Status Update\",\n    \"source\": \"aws.networkmanager\",    \n    \"account\": \"123456789012\",\n    \"time\": \"2023-01-31T19:48:05Z\",\n    \"region\": \"us-west-2\",\n    \"resources\": [\n        \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n        \"arn:aws:ec2:us-west-2:111122223333:vpn-connection/vpn-1234567890abcdef0\"\n     ],\n    \"detail\":\n{\n\"changeType\": \"VPN-CONNECTION-IPSEC-DOWN\",\n        \"changeDescription\": \"IPsec for a VPN connection has gone down.\",\n        \"region\": \"us-west-2\",\n        \"transitGatewayAttachmentArn\": \"arn:aws:ec2:us-west-2:111122223333:transit-gateway-attachment/tgw-attach-1234567890abcdef0\",\n        \"vpnConnectionArn\": \"arn:aws:ec2:us-west-2:111122223333:vpn-connection/vpn-1234567890abcdef0\",\n        \"outsideIpAddress\": \"35.84.102.207\",\n        \"transitGatewayArn\": \"arn:aws:ec2:us-west-2:111122223333:transit-gateway/tgw-1234567890abcdef0\"\n    }\n}\nA VPN tunnel's IPsec session went up\n                        (after being down) (VPN-CONNECTION-IPSEC-UP)\n{\n\"version\": \"0\",\n    \"id\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"detail-type\": \"Network Manager Status Update\",\n    \"source\": \"aws.networkmanager\",\n    \"account\": \"123456789012\",\n    \"time\": \"2023-01-31T19:34:54Z\",\n    \"region\": \"us-west-2\",\n    \"resources\": [\n        \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n        \"arn:aws:ec2:us-west-2:111122223333:vpn-connection/vpn-1234567890abcdef0\"\n    ],\n    \"detail\":\n{\n\"changeType\": \"VPN-CONNECTION-IPSEC-UP\",\n        \"changeDescription\": \"IPsec for a VPN connection has come up.\",\n        \"region\": \"us-west-2\",\n        \"transitGatewayAttachmentArn\": \"arn:aws:ec2:us-west-2:111122223333:transit-gateway-attachment/tgw-attach-1234567890abcdef0\",\n        \"vpnConnectionArn\": \"arn:aws:ec2:us-west-2:111122223333:vpn-connection/vpn-1234567890abcdef0\",\n        \"outsideIpAddress\": \"52.37.214.193\",\n        \"transitGatewayArn\": \"arn:aws:ec2:us-west-2:111122223333:transit-gateway/tgw-1234567890abcdef0\"\n    }\n}\nA VPN tunnel's BGP session went down\n                        (VPN-CONNECTION-BGP-DOWN)\n{\n\"version\": \"0\",\n    \"id\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"detail-type\": \"Network Manager Status Update\",\n    \"source\": \"aws.networkmanager\",\n    \"account\": \"123456789012\",\n    \"time\": \"2023-01-31T19:48:23Z\",\n    \"region\": \"us-west-2\",\n    \"resources\": [\n        \"arn:aws:networkmanager::123456789012:global-network/global-network-0c243052669618f74\",\n        \"arn:aws:ec2:us-west-2:111122223333:vpn-connection/vpn-0fdb136628eff65a8\"\n    ],\n    \"detail\":\n{\n\"changeType\": \"VPN-CONNECTION-BGP-DOWN\",\n        \"changeDescription\": \"BGP for a VPN connection has gone down.\",\n        \"region\": \"us-west-2\",\n        \"transitGatewayAttachmentArn\": \"arn:aws:ec2:us-west-2:111122223333:transit-gateway-attachment/tgw-attach-1234567890abcdef0\",\n        \"vpnConnectionArn\": \"arn:aws:ec2:us-west-2:111122223333:vpn-connection/vpn-1234567890abcdef0\",\n        \"outsideIpAddress\": \"54.190.210.71\",\n        \"peerAsn\": \"65001\",\n        \"transitGatewayArn\": \"arn:aws:ec2:us-west-2:111122223333:transit-gateway/tgw-1234567890abcdef0\"\n    }\n}\nA VPN tunnel's BGP session went\n                        up (after being down) (VPN-CONNECTION-BGP-ESTABLISH)\n{\n\"version\": \"0\",\n    \"id\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"detail-type\": \"Network Manager Status Update\",\n    \"source\": \"aws.networkmanager\",\n    \"account\": \"123456789012\",\n    \"time\": \"2023-01-31T19:34:40Z\",\n    \"region\": \"us-west-2\",\n    \"resources\": [\n        \"arn:aws:networkmanager::123456789012:global-network/global-network-1234567890abcdef0\",\n        \"arn:aws:ec2:us-west-2:111122223333:vpn-connection/vpn-1234567890abcdef0\"\n    ],\n    \"detail\":\n{\n\"changeType\": \"VPN-CONNECTION-BGP-ESTABLISH\",\n        \"changeDescription\": \"BGP for a VPN connection has been established.\",\n        \"region\": \"us-west-2\",\n        \"transitGatewayAttachmentArn\": \"arn:aws:ec2:us-west-2:111122223333:transit-gateway-attachment/tgw-attach-1234567890abcdef0\",\n        \"vpnConnectionArn\": \"arn:aws:ec2:us-west-2:111122223333:vpn-connection/vpn-1234567890abcdef0\",\n        \"outsideIpAddress\": \"52.37.214.193\",\n        \"peerAsn\": \"65001\",\n        \"transitGatewayArn\": \"arn:aws:ec2:us-west-2:111122223333:transit-gateway/tgw-1234567890abcdef0\"\n    }\n}\nA Transit Gateway Connect peer (GRE tunnel) BGP\n                        session went down (CONNECT_PEER_BGP_DOWN)\n{\n\"version\": \"0\",\n    \"id\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"detail-type\": \"Network Manager Status Update\",\n    \"source\": \"aws.networkmanager\",\n    \"account\": \"123456789012\",\n    \"time\": \"2023-03-01T19:57:34Z\",\n    \"region\": \"us-west-2\",\n    \"resources\": [\"arn:aws:networkmanager::123456789012:global-network/global-network-07a82dd610af0cc57\", \"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"],\n    \"detail\":\n{\n\"changeType\": \"CONNECT_PEER_BGP_DOWN\",\n        \"changeDescription\": \"BGP for a Connect peer has gone down.\",\n        \"edgeLocation\": \"ap-southeast-1\",\n        \"attachmentArn\": \"arn:aws:networkmanager::123456789012:attachment/attachment-1234567890abcdef0\",\n        \"connectPeerArn\": \"arn:aws:networkmanager::123456789012:connect-peer/connect-peer-1234567890abcdef0\",\n        \"peerAsn\": \"65011\",\n        \"coreNetworkAddress\": \"192.0.2.0\",\n        \"coreNetworkArn\": \"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"\n    }   \n}\nA Transit Gateway Connect peer (GRE tunnel) BGP\n                        session went up after being down) (CONNECT_PEER_BGP_UP)\n{\n\"version\": \"0\",\n    \"id\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"detail-type\": \"Network Manager Status Update\",\n    \"source\": \"aws.networkmanager\",\n    \"account\": \"123456789012\",\n    \"time\": \"2023-03-01T19:57:49Z\",\n    \"region\": \"us-west-2\",\n    \"resources\": [\"arn:aws:networkmanager::123456789012:global-network/global-network-07a82dd610af0cc57\", \"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"],\n    \"detail\":\n{\n\"changeType\": \"CONNECT_PEER_BGP_UP\",\n        \"changeDescription\": \"BGP for a Connect peer has been established.\",\n        \"edgeLocation\": \"ap-southeast-1\",\n        \"attachmentArn\": \"arn:aws:networkmanager::123456789012:attachment/attachment-1234567890abcdef0\",\n        \"connectPeerArn\": \"arn:aws:networkmanager::123456789012:connect-peer/connect-peer-1234567890abcdef0\",\n        \"peerAsn\": \"65011\",\n        \"coreNetworkAddress\": \"192.0.2.0\",\n        \"coreNetworkArn\": \"arn:aws:networkmanager::123456789012:core-network/core-network-1234567890abcdef0\"\n    }\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nViewing global network CloudWatch metrics\nRoute Analyzer\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/route-analyzer.html": "Route Analyzer - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nRoute Analyzer basics\nPerforming a route analysis\nExample: Route analysis for peered transit\n                gateways\nExample: Route analysis with a\n                middlebox configuration\nRoute Analyzer\nIn your global network, you can use the Route Analyzer to perform an analysis of the\n        routes in your transit gateway route tables. The Route Analyzer analyzes the routing path\n        between a specified source and destination, and returns information about the connectivity\n        between components. You can use the Route Analyzer to do the following:\nVerify that the transit gateway route table configuration will work as expected\n                before you start sending traffic.\nValidate your existing route configuration.\nDiagnose route-related issues that are causing traffic disruption in your global\n                network.\nNote\nRoute Analyzer does not work with intra-Region peering.\nContents\nRoute Analyzer basics\nPerforming a route analysis\nExample: Route analysis for peered transit\n                gateways\nExample: Route analysis with a\n                middlebox configuration\nRoute Analyzer basics\nTo use the Route Analyzer, you indicate the path for the traffic from a source to a\n            destination. For the source, you specify the transit gateway, the transit gateway\n            attachment from which the traffic originates, and a source IPv4 or IPv6 address. The\n            Route Analyzer analyzes the routes in the associated transit gateway route table for\n            the transit gateway attachment. For the destination, you specify a target IPv4 or IPv6\n            address, and the destination transit gateway and transit gateway attachment.\nIf you've configured a middlebox appliance in your VPC, you can indicate the location\n            of the appliance in the route analysis. This enables you to specify multiple network\n            hops in a route between a source and destination, to help you analyze the route of the\n            traffic. We store this information for use in future analyses. You can update your\n            middlebox appliances later on as needed.\nYou can also analyze the return path for traffic from the specified destination back\n            to the source.\nThe following rules apply when using the Route Analyzer:\nThe Route Analyzer analyzes routes in transit gateway route tables only. It\n                    does not analyze routes in VPC route tables or in your customer gateway devices.\nThe transit gateways must be registered in your global network.\nThe Route Analyzer does not analyze security group rules or network ACL\n                    rules. To capture information about accepted and rejected IP traffic in your\n                    VPC, you can use\nVPC flow\n                    logs\n.\nThe Route Analyzer only returns information for the return path if it can\n                    successfully return information for the forward path.\nPerforming a route analysis\nTo use the Route Analyzer, you must use the AWS Global Networks for Transit Gateways console.\nTo analyze your routes\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nRoute Analyzer\ntab.\nUnder\nSource\n, do the following:\nChoose the transit gateway and the transit gateway attachment.\nFor\nIP address\n, enter a source IPv4 or IPv6\n                            address.\nUnder\nDestination\n, do the following:\nChoose the transit gateway and the transit gateway attachment.\nFor\nIP address\n, enter a target IPv4 or IPv6\n                            address.\n(Optional) To analyze the return path, ensure that you enable\nInclude return path in results\n. If enabled, you must\n                    specify an IP address under\nSource\n.\nTo specify middlebox appliances in the routing path, choose\nMiddlebox appliance?\n. We store this information for use  \n                    in future analyses. You can update your middlebox appliances later on as needed.\nChoose\nRun route analysis\n.\nThe results are displayed under\nResults of route\n                    analysis\n. If you specified\nMiddlebox appliance?\n,\n                    choose\nYes\nor\nNo\nfor each of the\n                    attachments to indicate the location of the appliances and to complete the route\n                    analysis.\nYou can choose the ID of any of the resources in the path to view more\n                    information about the resources.\nExample: Route analysis for peered transit\n                gateways\nIn the following example, transit gateway 1 has two VPC attachments, and a peering\n            attachment to transit gateway 2. Transit gateway 2 has a Site-to-Site VPN attachment to your\n            on-premises network. You want to use the Route Analyzer to ensure that the VPCs and\n            Site-to-Site VPN connections can route traffic to each other through the transit gateways.\nIn the Route Analyzer, do the following:\nUnder\nSource\n, specify transit gateway 1 and the transit\n                    gateway attachment for VPC A. Specify an IP address from the CIDR block of VPC\n                    A, for example,\n10.0.0.7\n.\nUnder\nDestination\n, specify transit gateway 2 and the VPN\n                    attachment. Specify an IP address from the range of the on-premises network, for\n                    example,\n172.31.0.8\n.\nEnsure that\nInclude return path in results\nis\n                    selected.\nRun the route analysis. In the results, verify the path between the source and\n                    destination. For example, the following results indicate that there is a forward\n                    path from transit gateway 1 to transit gateway 2, but no return path. Check the\n                    route table for transit gateway 2, and ensure that there is a static route that\n                    points to the peering attachment.\nTo run the analysis between VPC B and the VPN connection, modify the\n                    information under\nSource\n. Choose the transit gateway\n                    attachment for VPC B, and specify an IP address from the CIDR block of VPC B,\n                    for example,\n10.2.0.9\n.\nReload the results and verify the path between the source and\n                    destination.\nFor more information about the routing configuration for this scenario, see the\ntransit gateway peering example\n.\nExample: Route analysis with a\n                middlebox configuration\nIf you've configured a VPC to act as a middlebox appliance for inspecting traffic that\n            flows to other parts of your network, you can indicate the location of the appliance in\n            the route analysis. In the following example, the transit gateway has two VPC\n            attachments and a VPN attachment. VPC A runs a firewall appliance (middlebox) that\n            inspects the traffic that flows between the VPN connection and VPC B.\nIn the Route Analyzer, you can specify the location of the middlebox appliance as\n            follows:\nUnder\nSource\n, specify the transit gateway and the VPN\n                    attachment. Specify an IP address from the range of the on-premises network, for\n                    example,\n10.0.0.7\n.\nUnder\nDestination\n, specify the transit gateway and the\n                    attachment for VPC B. Specify an IP address from the CIDR block of VPC B, for\n                    example,\n172.31.0.8\n.\nFor\nMiddlebox appliance?\n, choose\nInclude\n.\nRun the route analysis.\nFor the\nMiddlebox appliance?\nsections for the transit\n                    gateway attachment for VPC A, choose\nYes\n.\nYou can choose the ID of any resource in the path to view more information\n                    about that resource.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMonitoring with CloudWatch Events\nManage multiple accounts\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/tgw-nm-multi.html": "Manage multiple accounts in global networks with AWS Organizations - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nTrusted access\nDelegated administrators\nManage multiple accounts in global networks with AWS Organizations\nAWS Global Networks for Transit Gateways allows you to centrally manage, monitor, and visualize network resources from\n        multiple accounts within an organization in a single global network. To manage resources\n        from multiple accounts in global networks, you first set up an organization using AWS Organizations. The first\n        account that you use to create an organization becomes the management account. Using this\n        account, you can add other accounts as member accounts to your organization. From the\n        management account, you can designate one or more accounts within the organization as\n        delegated administrator accounts by registering them using the global networks console. For more\n        information about setting up an organization, see\nCreating and managing an\n            organization\nin the\nAWS Organizations User Guide\n.\nTo enable multi-account access in the global networks console, you first enable trusted access for\n        the Network Manager service, and then register a delegated administrator account for your\n        organization.\nImportant\nWe strongly recommended that you use the global networks console for enabling multi-account\n                        settings with global networks, because the console automatically creates all required\n                        roles and permissions for multi-account access. Choosing an alternative approach requires\n                        an advanced level of expertise, and opens the multi-account set up for your global network\n                        to be more prone to error.\nMulti-account is not available in the AWS GovCloud (US-West) and the\n                        AWS GovCloud (US-East) Regions.\nWith multi-account support, you can create a single global network for any of your\n        AWS accounts, and then register transit gateways from those accounts using the global networks console.\n        Multi-account is supported in all AWS Regions where global networks is supported. For more\n        information about multi-account, see\nMulti-account\n.\nTopics\nTrusted access\nDelegated administrators\nTrusted access\nTrusted access creates\nAWSServiceAccess\nfor global networks and AWS CloudFormation StackSets\n            with AWS Organizations. Enabling trusted access provides required permissions for AWS Organizations to\n            deploy service-linked roles (SLRs) to all member accounts within your organization.\nEnable trusted access\nWhen you enable trusted access from the global networks console, you select a one-time\n                permission level\n                (\nIAMRoleForAWSNetworkManagerCrossAccountResourceAccess\n) as either\n                administrator or read-only for each of the management and delegated administrator\n                accounts.\nAdmin\n\u00e2\u0080\u0094 Assign this permission if the delegated\n                        administrator and management accounts need to be able to modify resources\n                        from other accounts in the global network while using the global networks console\n                        switch role.\nRead-only\n\u00e2\u0080\u0094 Assign this permission if the delegated\n                        administrator and management accounts only need to review information about\n                        resources from other accounts in the global network while using the\n                        global networks console switch role, but don't need to make any changes.\nThe global networks console manages all of this when calling the Network Manager API.\nWhen you enable trusted access, the following roles are deployed in your\n                organization using AWS CloudFormation StackSets and AWS Identity and Access Management (IAM) services:\nThe Network Manager SLR (\nAWSServiceRoleForNetworkManager\n) to\n                        all member accounts\nThe  AWS CloudFormation StackSets member SLR\n                            (\nAWSServiceRoleForCloudFormationStackSetsOrgMember\n) to all\n                        member accounts\nThe  Network Manager SLR (\nAWSServiceRoleForNetworkManager\n) to\n                        the management account\nThe AWS CloudFormation StackSets admin\n                            (\nAWSServiceRoleForCloudFormationStackSetsOrgAdmin\n) SLR to\n                        the management account\nThe  Amazon CloudWatch sharing role\n                            (\nCloudWatch-CrossAccountSharingRole\n) to all member\n                        accounts\nThe global networks console switch role\n                            (\nIAMRoleForAWSNetworkManagerCrossAccountResourceAccess\n) to\n                        all member accounts\nThe Amazon CloudWatch monitoring role\n                            (\nAWSServiceRoleForCloudWatchCrossAccount\n) to the management\n                        account\nFor more information about enabling trusted access, see\nEnable trusted access\n.\nDisable trusted access\nNote\nDisabling trusted access through the global networks console removes\nAWSServiceAccess\nfor global networks with AWS Organizations. Disabling\n                        trusted access removes global networks access to perform tasks within your\n                        organization. AWS Organizations won't allow you to disable an organization's trusted\n                        access for the Network Manager service if there are any delegated administrators\n                        that haven't been deregistered from that organization.\nDisabling trusted access through the global networks console won't remove\nAWSServiceAccess\nfor AWS CloudFormation StackSets with AWS Organizations. You\n                            can manually remove the service access for AWS CloudFormation StackSets by using the\n                            AWS CloudFormation StackSet console or by using the Organizations API/CLI. For more\n                            information on disabling trusted access for AWS CloudFormation StackSets, see\nDisable trusted access with AWS CloudFormation StackSets\nin the\nAWS Organizations User Guide\n.\nDisabling trusted access won't remove any SLRs that were deployed when\n                            enabling trusted access.\nWhen you disable trusted access, the following are affected in global networks:\nAll transit gateways owned by other accounts in your organization. You won't be\n                            able to see transit gateways or their attached resources from other accounts in\n                            your organization that were registered to your global network.\nIAM roles deployed in all member accounts managed by the Network Manager\n                            service. Disabling trusted access doesn't remove accounts, transit gateways, or\n                            resources but does deregister them from other delegated administrator's\n                            global networks. These can be added back in as needed by re-enabling\n                            trusted access. For more information about the\nDeleteStackSet\nAPI, see\nDeleteStackSet\nin the\nAWS CloudFormation\n                                API Reference\n.\nFor more information about disabling trusted access, see\nDisable trusted access\n.\nDelegated administrators\nMember accounts in your organization with delegated administrator access are able to\n            leverage service-linked roles and assume IAM roles for access across multiple\n            accounts. Only member accounts that are part of your AWS Organizations can be registered as\n            delegated administrators. Your organization can have up to ten registered delegated\n            administrators. Before you register a delegated administrator, you must enable global networks trusted\n            access for your organization. For more information, see\nEnable trusted access\n.\nImportant\nUsing your AWS Organizations management account to manage your global\n                network in global networks is not recommended because the required service-linked roles are\n                not propagated to this account. For more information on service-linked roles, see\nAWS Global Networks for Transit Gateways service-linked roles\n.\nRegister delegated administrators\nAfter it's registered, a delegated administrator has the same permissions as the\n                management account. A delegated administrator for the Network Manager service can leverage\n                the SLRs in the member accounts that were deployed when trusted access was enabled\n                and can view transit gateways from other member accounts and can register them to your global\n                network. This allows transit gateways and associated resources to appear in your global\n                network topology. In addition AWS CloudFormation StackSets is updated to include the delegated\n                administrator accounts in the trusted relationship of the deployed IAM roles in\n                the member accounts.\nFor information about registering a delegated administrator, see\nRegister a delegated administrator\n.\nDeregister delegated\n                    administrators\nDeregistering a delegated administrator removes that account's permission to\n                leverage SLRs and assume IAM roles in other member accounts that were set up using\n                AWS Organizations.\nAfter it's deregistered, the delegated administrator no longer has the same\n                permissions as the management account. The following occurs:\nA delegated administrator is no longer able to leverage the deployed SLRs\n                        in the member accounts that were deployed when trusted access was\n                        enabled.\nAll registered transit gateways from other member accounts are deregistered from any\n                        global network for the specific delegated administrator. The network\n                        topology is updated to no longer show resources from other member\n                        accounts.\nAWS CloudFormation StackSets are updated with the removal of the delegated\n                        administrator account. That account is no longer able to assume any IAM\n                        roles deployed in other member accounts.\nFor information about deregistering a delegated administrator, see\nDeregister a delegated administrator\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nRoute Analyzer\nIdentity and access management\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/nm-security-iam.html": "Identity and access management for AWS Global Networks for Transit Gateways - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nHow Network Manager works with IAM\nExample policies\nIdentity and access management for AWS Global Networks for Transit Gateways\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely control access\n        to AWS resources. IAM administrators control who can be\nauthenticated\n(signed in) and\nauthorized\n(have permissions) to use AWS Global Networks for Transit Gateways resources. IAM is an AWS service that you can use\n        with no additional charge. You can use features of IAM to allow other users, services, and\n        applications to use your AWS resources fully or in a limited way, without sharing your\n        security credentials.\nBy default, IAM users don't have permission to create, view, or modify AWS resources.\n        To allow an IAM user to access resources, such as a global network, and perform tasks, you\n        must:\nCreate an IAM policy that grants the IAM user permission to use the specific\n                resources and API actions they need\nAttach the policy to the IAM user  or to the group to which the IAM user\n                belongs\nWhen you attach a policy to a user or group of users, it allows or denies the user\n        permissions to perform the specified tasks on the specified resources.\nImportant\nIf you grant access to a global network in Network Manager, you grant access to all AWS \n            service data associated with the registered transit gateways across all Regions.\nContents\nHow Network Manager works with IAM\nExample policies to manage global networks\nAWS Global Networks for Transit Gateways service-linked roles\nAWS managed policies for AWS Global Networks for Transit Gateways\nMulti-account access roles for AWS Global Networks for Transit Gateways\nHow Network Manager works with IAM\nWith IAM identity-based policies, you can specify allowed or denied actions and\n            resources, and specify the conditions under which actions are allowed or denied. Network Manager\n            supports specific actions, resources, and condition keys. For a complete list, see\nActions, Resources, and Condition Keys for Network Manager\nin\n            the\nIAM User Guide\n.\nTo learn about all of the elements that you use in a JSON policy, see\nIAM JSON Policy Elements\n                Reference\nin the\nIAM User Guide\n.\nActions\nPolicy actions in Network Manager use the following prefix before the action:\nnetworkmanager:\n. For example, to grant someone permission to create\n                a global network with the\nCreateGlobalNetwork\nAPI operation, you\n                include the\nnetworkmanager:CreateGlobalNetwork\naction in their policy.\nFor a list of global networks actions, see the\nNetwork Manager API Reference\n.\nResources\nThe Resource element specifies the object or objects to which the action applies.\n                Statements must include either a Resource or a NotResource element. You specify a\n                resource using an ARN or using the wildcard (*) to indicate that the statement\n                applies to all resources.\nThe global network resource has the following ARN.\narn:$\n{\nPartition}:networkmanager::$\n{\nAccount}:global-network/$\n{\nGlobalNetworkId}\nFor example, to specify the\nglobal-network-1122334455aabbccd\nglobal\n                network in your statement, use the following ARN.\n\"Resource\": \"arn:aws:networkmanager::123456789012:global-network/global-network-1122334455aabbccd\"\nFor more information about the format of ARNs, see\nAmazon Resource Names (ARNs)\n.\nCondition keys\nThe\nCondition\nelement (or\nCondition\nblock\n) lets you specify conditions in which a\n                statement is in effect. The\nCondition\nelement is optional. You can\n                build conditional expressions that use\ncondition operators\n, such as equals or less than, to match the\n                condition in the policy with values in the request.\nIf you specify multiple\nCondition\nelements in a statement, or\n                multiple keys in a single\nCondition\nelement, AWS evaluates them using\n                a logical\nAND\noperation. If you specify multiple values for a single\n                condition key, AWS evaluates the condition using a logical\nOR\noperation. All of the conditions must be met before the statement's permissions\n                are granted.\nYou can also use placeholder variables when you specify conditions. For example,\n                you can grant an IAM user permission to access a resource only if it is tagged\n                with their IAM user name. For more information, see\nIAM Policy Elements:\n                    Variables and Tags\nin the\nIAM User\n                    Guide\n.\nYou can attach tags to global networks resources or pass tags in a request to global networks. To\n                control access based on tags, you provide tag information in the\ncondition\n                    element\nof a policy using the\naws:ResourceTag/\nkey-name\n,\naws:RequestTag/\nkey-name\n, or\naws:TagKeys\ncondition keys.\nTo see all AWS global condition keys, see\nAWS Global\n                    Condition Context Keys\nin the\nIAM User Guide\n.\nglobal networks also supports the following condition keys:\nnetworkmanager:tgwArn\n\u00e2\u0080\u0094Controls which transit gateways\n                        can be registered or deregistered in your global network.\nnetworkmanager:cgwArn\n\u00e2\u0080\u0094Controls which customer gateways\n                        can be associated or disassociated from devices and links in your global\n                        network.\nnetworkmanager:tgwConnectPeerArn\n\u00e2\u0080\u0094Controls which\n                        Transit Gateway Connect peers can be associated or disassociated from devices and\n                        links in your global network.\nExample policies to manage global networks\nThe following are example IAM policies for working with global networks.\nAdministrator access\nThe following IAM policy grants full access to the Amazon EC2, global networks, AWS Direct Connect, and\n                CloudWatch APIs. This enables administrators to create and manage transit gateways and\n                their attachments (such as VPCs and AWS Direct Connect gateways), create and manage global networks\n                resources, and monitor global networks using CloudWatch metrics and events. The policy\n                also grants user permissions to create any required service-linked roles.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"ec2:*\",\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"networkmanager:*\",\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"cloudwatch:*\",\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"events:*\",\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"directconnect:*\",\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"iam:CreateServiceLinkedRole\",\n            \"Resource\": \"arn:aws:iam::*:role/aws-service-role/*\"\n        }\n    ]\n}\nRead-only access\nThe following IAM policy grants read-only access to the Amazon EC2, global networks, AWS Direct Connect,\n                CloudWatch, and CloudWatch Events APIs. This enables users to use the global networks console to view and\n                monitor global networks and their associated resources, and view metrics and events\n                for the resources. Users cannot create or modify any resources.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:Get*\",\n                \"ec2:Describe*\"\n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"networkmanager:Get*\",\n                \"networkmanager:Describe*\"\n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"cloudwatch:List*\",\n                \"cloudwatch:Get*\",\n                \"cloudwatch:Describe*\"\n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:Describe*\",\n                \"logs:Get*\",\n                \"logs:List*\",\n                \"logs:StartQuery\",\n                \"logs:StopQuery\",\n                \"logs:TestMetricFilter\",\n                \"logs:FilterLogEvents\"\n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"events:List*\",\n                \"events:TestEventPattern\",\n                \"events:Describe*\"\n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": \"directconnect:Describe*\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nControlling the use of transit gateways and customer gateways\nThe following IAM policy enables users to work with global networks resources, but they\n                are explicitly denied permission to do the following:\nRegister or deregister a specific transit gateway\n                        (\ntgw-aabbccdd112233445\n) in the global network.\nAssociate or disassociate a specific customer gateway\n                        (\ncgw-11223344556677abc\n) in the global network.\nThe policy uses the\nnetworkmanager:tgwArn\nand\nnetworkmanager:cgwArn\ncondition keys to enforce these\n            conditions.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"networkmanager:*\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n{\n\"Effect\": \"Deny\",\n            \"Action\": [\n                \"networkmanager:RegisterTransitGateway\",\n                \"networkmanager:DeregisterTransitGateway\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ],\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"networkmanager:tgwArn\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:transit-gateway/tgw-\naabbccdd112233445\n\"\n                }\n            }\n        },\n{\n\"Effect\": \"Deny\",\n            \"Action\": [\n                \"networkmanager:AssociateCustomerGateway\",\n                \"networkmanager:DisassociateCustomerGateway\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ],\n            \"Condition\":\n{\n\"StringEquals\":\n{\n\"networkmanager:cgwArn\": \"arn:aws:ec2:\nregion\n:\naccount-id\n:customer-gateway/cgw-\n11223344556677abc\n\"\n                }\n            }\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nManage multiple accounts\nAWS Global Networks for Transit Gateways service-linked role\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/nm-service-linked-roles.html": "AWS Global Networks for Transit Gateways service-linked roles - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nPermissions granted by the service-linked\n                role\nCreate the service-linked role\nEdit the service-linked role\nDelete the service-linked role\nSupported Regions\nAWS Global Networks for Transit Gateways service-linked roles\nAWS Global Networks for Transit Gateways uses service-linked roles for the permissions that it requires to call other\n        AWS services on your behalf. These service-linked roles are not propagated to your\n        AWS Organizations management account.\nPermissions granted by the service-linked\n                role\nglobal networks uses a Network Manager service-linked role named\nAWSServiceRoleForNetworkManager\nto call\n            the actions on your behalf when you work with global networks.\nThe\nAWSServiceRoleForNetworkManager\nservice-linked role trusts the following service\n            to assume the role:\nnetworkmanager.amazonaws.com\nThe following IAM policy is attached to the role.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"directconnect:DescribeDirectConnectGateways\",\n                \"directconnect:DescribeConnections\",\n                \"directconnect:DescribeDirectConnectGatewayAttachments\",\n                \"directconnect:DescribeLocations\",\n                \"directconnect:DescribeVirtualInterfaces\",\n                \"ec2:DescribeCustomerGateways\",\n                \"ec2:DescribeTransitGatewayAttachments\",\n                \"ec2:DescribeTransitGatewayRouteTables\",\n                \"ec2:DescribeTransitGateways\",\n                \"ec2:DescribeVpnConnections\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:GetTransitGatewayRouteTableAssociations\",\n                \"ec2:GetTransitGatewayRouteTablePropagations\",\n                \"ec2:SearchTransitGatewayRoutes\",\n                \"ec2:DescribeTransitGatewayPeeringAttachments\",\n                \"ec2:DescribeTransitGatewayConnects\",\n                \"ec2:DescribeTransitGatewayConnectPeers\",\n                \"ec2:DescribeRegions\",\n                \"organizations:DescribeAccount\",\n                \"organizations:DescribeOrganization\",\n                \"organizations:ListAccounts\", \n                \"organizations:ListAWSServiceAccessForOrganization\",\n                \"organizations:ListDelegatedAdministrators\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nCreate the service-linked role\nYou don't need to manually create the\nAWSServiceRoleForNetworkManager\nrole. global networks\n            creates this role for you when you create your first global network.\nFor global networks to create a service-linked role on your behalf, you must have the required\n            permissions. For more information, see\nService-Linked Role Permissions\nin the\nIAM User Guide\n.\nEdit the service-linked role\nYou can edit the description of\nAWSServiceRoleForNetworkManager\nusing IAM. For more\n            information, see\nEditing\n                a Service-Linked Role\nin the\nIAM User Guide\n.\nDelete the service-linked role\nIf you no longer need to use global networks, we recommend that you delete the\nAWSServiceRoleForNetworkManager\nrole.\nYou can delete this service-linked role only after you delete your global network. For\n            information about how to delete your global network, see\nDelete a global network\n.\nYou can use the IAM console, the IAM CLI, or the IAM API to delete service-linked roles.\n            For more information, see\nDeleting a Service-Linked Role\nin the\nIAM User Guide\n.\nAfter you delete\nAWSServiceRoleForNetworkManager\n, Network Manager will create the role again when\n            you create a new global network.\nSupported Regions for Network Manager Service-Linked Roles\nglobal networks supports the custom-linked roles in all of AWS Regions where the service is\n            available. For more information, see\nAWS endpoints\nin the\nAWS General Reference\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIdentity and access management\nAWS managed policies\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/security-iam-awsmanpol.html": "AWS managed policies for AWS Global Networks for Transit Gateways - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nAWS managed policy:\n            AWSNetworkManagerReadOnlyAccess\nAWS managed policy:\n            NetworkAdministrator\nAWS managed policy:\n            AWSNetworkManagerServiceRolePolicy\nPolicy updates\nAWS managed policies for AWS Global Networks for Transit Gateways\nTo add permissions to users, groups, and roles, it is easier to use AWS managed policies\n      than to write policies yourself. It takes time and expertise to\ncreate IAM customer\n         managed policies\nthat provide your team with only the permissions they need. To get\n      started quickly, you can use our AWS managed policies. These policies cover common use cases\n      and are available in your AWS account. For more information about AWS managed policies,\n      see\nAWS managed policies\nin the\nIAM User Guide\n.\nAWS services maintain and update AWS managed policies. You can't change the\n      permissions in AWS managed policies. Services occasionally add additional permissions to an\n      AWS managed policy to support new features. This type of update affects all identities\n      (users, groups, and roles) where the policy is attached. Services are most likely to update an\n      AWS managed policy when a new feature is launched or when new operations become available.\n      Services do not remove permissions from an AWS managed policy, so policy updates won't break\n      your existing permissions.\nAdditionally, AWS supports managed policies for job functions that span multiple\n      services. For example, the\nReadOnlyAccess\nAWS managed\n      policy provides read-only access to all AWS services and resources. When a service launches\n      a new feature, AWS adds read-only permissions for new operations and resources. For a list\n      and descriptions of job function policies, see\nAWS managed policies for\n         job functions\nin the\nIAM User Guide\n.\nAWS managed policy:\n            AWSNetworkManagerReadOnlyAccess\nYou can attach the\nAWSNetworkManagerReadOnlyAccess\npolicy to your IAM\n         identities. This policy grants permissions that allow registered delegated administrators\n         and the management account\nread-only\naccess to global networks. For more\n         information, see\nMulti-account access roles for AWS Global Networks for Transit Gateways\n.\nAWS managed policy:\n            NetworkAdministrator\nYou can attach the\nNetworkAdministrator\npolicy to your IAM identities.\n         This policy grants permissions that allow registered delegated administrators and the\n         management account\nadministrator\naccess to global networks. For more\n         information, see\nMulti-account access roles for AWS Global Networks for Transit Gateways\n.\nAWS managed policy:\n            AWSNetworkManagerServiceRolePolicy\nThis policy is attached to the service-linked role named\nAWSServiceRoleForNetworkManager\nto allow global networks to call API actions\n         on your behalf when you work with global networks. For more information, see\nAWS Global Networks for Transit Gateways service-linked roles\n.\nglobal networks updates to AWS managed\n            policies\nView details about updates to AWS managed policies for Network Manager since this service\n         began tracking these changes in April 2021. For automatic alerts about changes to this\n         page, subscribe to the RSS feed on the Network Manager Document history page.\nChange\nDescription\nDate\nAWSNetworkManagerServiceRolePolicy\nglobal networks added permission to call the following API\n                           action:\nGetTransitGatewayRouteTablePropagations\nJuly 12, 2022\nNetworkAdministrator\nglobal networks began using administrative permissions in member accounts for\n                     multi-account access.\nMay 24, 2022\nNetworkManagerReadOnlyAccess\nglobal networks began using read-only permissions in member accounts for\n                     multi-account access.\nMay 24, 2022\nAWServiceRoleForNetworkManager\nupdated existing policy\nglobal networks added permission to call the following API\n                           actions:\norganizations:DescribeAccount\n,\norganizations:DescribeOrganization\n,\norganizations:ListAccounts\n,\norganizations:ListAWSServiceAccessForOrganization\n,\norganizations:ListDelegatedAdministrators\n.\nMay 24, 2022\nNWSServiceRoleForNetworkManager\nupdated existing policy.\nglobal networks added permissions to call the following API actions:\nec2:DescribeRegions\n.\nDecember 2, 2021\nAWSServiceRoleForNetworkManager\n: updated existing policy\nglobal networks added permissions to call the following API actions:\ndirectconnect:DescribeDirectConnectGateways\n,\nec2:DescribeVpnConnections\n,\nec2:DescribeVpcs\n,\nec2:GetTransitGatewayRouteTableAssociations\n,\nec2:SearchTransitGatewayRoutes\n,\nec2:DescribeTransitGatewayPeeringAttachments\n,\nec2:DescribeTransitGatewayConnects\nand\nec2:DescribeTransitGatewayConnectPeers\n.\nJune 1, 2021\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS Global Networks for Transit Gateways service-linked role\nMulti-account access roles\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/nm-custom-multi-role.html": "Multi-account access roles for AWS Global Networks for Transit Gateways - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nCloudWatch-CrossAccountSharingRole\nIAMRoleForAWSNetworkManagerCrossAccountResourceAccess\nPermission templates\nMulti-account access roles for AWS Global Networks for Transit Gateways\nAWS Global Networks for Transit Gateways uses AWS CloudFormation StackSets to deploy and manage the following two custom IAM roles\n        in AWS Organizations member accounts to support multi-account permissions. These two roles are\n        deployed to every member account in the organization when\nAWSServiceAccess\nis\n        enabled (trusted access). For more information about multi-account, see\nManage multiple accounts in global networks with AWS Organizations\n.\nThe custom IAM roles are created automatically through the\nNetwork Manager\nservice when you enable multi-account access using the global networks console. We strongly recommend\n        that you use the console for enabling multi-account. Choosing an alternative approach\n        requires an advanced level of expertise, and opens the multi-account for your global network\n        to be more prone to error.\nCloudWatch-CrossAccountSharingRole\nThis policy provides delegated administrators and the management accounts access to\n            CloudWatch monitoring data from other member accounts. The following is an example of the\n            template.\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: Enables CloudWatch in central monitoring accounts to assume permissions to view CloudWatch data in the current account\n\nResources:\n  CloudWatch-CrossAccountSharingRole:\n    Type: AWS::IAM::Role\n    Properties:\n      RoleName: CloudWatch-CrossAccountSharingRole\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal:\n              AWS: [\n                \"arn:aws:iam::<account1-id>:root\",\n                \"arn:aws:iam::<account2-id>:root\",\n                \"arn:aws:iam::<account3-id>:root\"\n              ]\n            Action:\n              - sts:AssumeRole\n      Path: \"/\"\n      ManagedPolicyArns:\n          - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess\nIAMRoleForAWSNetworkManagerCrossAccountResourceAccess\nThe\nIAMRoleForAWSNetworkManagerCrossAccountResourceAccess\nIAM policy\n            role, based on your selection when enabling trusted access through the global networksconsole,\n            enables either administrative or read-only global networks console switch role access. An\n            associated administrative or read-only template is also deployed along with the policy.\n            For information about these templates, see\nPermission templates\n.\nThe following is an example of the administrator role template.\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: Enables admin cross account resource access through switch role\n\nResources:\n  IAMRoleForAWSNetworkManagerCrossAccountResourceAccess:\n    Type: AWS::IAM::Role\n    Properties:\n      RoleName: IAMRoleForAWSNetworkManagerCrossAccountResourceAccess\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal:\n              AWS: [\n                \"arn:aws:iam::<account1-id>:root\",\n                \"arn:aws:iam::<account2-id>:root\",\n                \"arn:aws:iam::<account3-id>:root\"\n              ]\n            Action:\n              - sts:AssumeRole\n      Path: \"/\"\n      ManagedPolicyArns:\n          - arn:aws:iam::aws:policy/NetworkAdministrator\nThe following is the read-only role template.\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: Enables read only cross account resource access through switch role\nResources:\n IAMRoleForAWSNetworkManagerCrossAccountResourceAccess:\n Type: AWS::IAM::Role\n Properties:\n    RoleName: IAMRoleForAWSNetworkManagerCrossAccountResourceAccess\n    AssumeRolePolicyDocument:\n    Version: '2012-10-17'\n    Statement:\n      - Effect: Allow\n        Principal:\n          AWS: [\n            \"arn:aws:iam::<account1-id>:root\",\n            \"arn:aws:iam::<account2-id>:root\",\n            \"arn:aws:iam::<account3-id>:root\"\n          ]\n       Action:\n         - sts:AssumeRole\n    Path: \"/\"\n    ManagedPolicyArns:\n        - arn:aws:iam::aws:policy/AWSNetworkManagerReadOnlyAccess\n        - arn:aws:iam::aws:policy/AWSDirectConnectReadOnlyAccess\n        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess\n        - arn:aws:iam::aws:policy/AmazonRoute53ReadOnlyAccess\nPermission templates\nWhen choosing the\nIAMRoleForAWSNetworkManagerCrossAccountResourceAccess\npermission, an associated administrative or read-only template is also passed to AWS CloudFormation\n            StackSets. These templates contain a list of accounts that are able to assume these\n            roles. These accounts include the AWS Organizations management account and all registered\n            delegated administrators for the Network Manager service. Deregistering a delegated\n            administrator removes it from this list so that it can no longer assume these roles.\n            Disabling trusted access deletes the AWS CloudFormation StackSets, and in turn all member account\n            stacks and custom IAM roles in those accounts that were StackSets-managed for\n            multi-account.\nTemplate policies for\n                IAMRoleForAWSNetworkManagerCrossAccountResourceAccess\nThis policy enables administrator permission for the delegated administrator and\n                    management accounts to modify resources from other accounts in the global\n                    network while using the Network Manager console switch role.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"autoscaling:Describe*\",\n                \"cloudfront:ListDistributions\",\n                \"cloudwatch:DeleteAlarms\",\n                \"cloudwatch:DescribeAlarms\",\n                \"cloudwatch:GetMetricStatistics\",\n                \"cloudwatch:PutMetricAlarm\",\n                \"directconnect:*\",\n                \"ec2:AcceptVpcEndpointConnections\",\n                \"ec2:AllocateAddress\",\n                \"ec2:AssignIpv6Addresses\",\n                \"ec2:AssignPrivateIpAddresses\",\n                \"ec2:AssociateAddress\",\n                \"ec2:AssociateDhcpOptions\",\n                \"ec2:AssociateRouteTable\",\n                \"ec2:AssociateSubnetCidrBlock\",\n                \"ec2:AssociateVpcCidrBlock\",\n                \"ec2:AttachInternetGateway\",\n                \"ec2:AttachNetworkInterface\",\n                \"ec2:AttachVpnGateway\",\n                \"ec2:CreateCarrierGateway\",\n                \"ec2:CreateCustomerGateway\",\n                \"ec2:CreateDefaultSubnet\",\n                \"ec2:CreateDefaultVpc\",\n                \"ec2:CreateDhcpOptions\",\n                \"ec2:CreateEgressOnlyInternetGateway\",\n                \"ec2:CreateFlowLogs\",\n                \"ec2:CreateInternetGateway\",\n                \"ec2:CreateNatGateway\",\n                \"ec2:CreateNetworkAcl\",\n                \"ec2:CreateNetworkAclEntry\",\n                \"ec2:CreateNetworkInterface\",\n                \"ec2:CreateNetworkInterfacePermission\",\n                \"ec2:CreatePlacementGroup\",\n                \"ec2:CreateRoute\",\n                \"ec2:CreateRouteTable\",\n                \"ec2:CreateSecurityGroup\",\n                \"ec2:CreateSubnet\",\n                \"ec2:CreateTags\",\n                \"ec2:CreateVpc\",\n                \"ec2:CreateVpcEndpoint\",\n                \"ec2:CreateVpcEndpointConnectionNotification\",\n                \"ec2:CreateVpcEndpointServiceConfiguration\",\n                \"ec2:CreateVpnConnection\",\n                \"ec2:CreateVpnConnectionRoute\",\n                \"ec2:CreateVpnGateway\",\n                \"ec2:DeleteCarrierGateway\",\n                \"ec2:DeleteEgressOnlyInternetGateway\",\n                \"ec2:DeleteFlowLogs\",\n                \"ec2:DeleteNatGateway\",\n                \"ec2:DeleteNetworkInterface\",\n                \"ec2:DeleteNetworkInterfacePermission\",\n                \"ec2:DeletePlacementGroup\",\n                \"ec2:DeleteSubnet\",\n                \"ec2:DeleteTags\",\n                \"ec2:DeleteVpc\",\n                \"ec2:DeleteVpcEndpointConnectionNotifications\",\n                \"ec2:DeleteVpcEndpointServiceConfigurations\",\n                \"ec2:DeleteVpcEndpoints\",\n                \"ec2:DeleteVpnConnection\",\n                \"ec2:DeleteVpnConnectionRoute\",\n                \"ec2:DeleteVpnGateway\",\n                \"ec2:DescribeAccountAttributes\",\n                \"ec2:DescribeAddresses\",\n                \"ec2:DescribeAvailabilityZones\",\n                \"ec2:DescribeCarrierGateways\",\n                \"ec2:DescribeClassicLinkInstances\",\n                \"ec2:DescribeCustomerGateways\",\n                \"ec2:DescribeDhcpOptions\",\n                \"ec2:DescribeEgressOnlyInternetGateways\",\n                \"ec2:DescribeFlowLogs\",\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeInternetGateways\",\n                \"ec2:DescribeKeyPairs\",\n                \"ec2:DescribeMovingAddresses\",\n                \"ec2:DescribeNatGateways\",\n                \"ec2:DescribeNetworkAcls\",\n                \"ec2:DescribeNetworkInterfaceAttribute\",\n                \"ec2:DescribeNetworkInterfacePermissions\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribePlacementGroups\",\n                \"ec2:DescribePrefixLists\",\n                \"ec2:DescribeRouteTables\",\n                \"ec2:DescribeSecurityGroupReferences\",\n                \"ec2:DescribeSecurityGroupRules\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeStaleSecurityGroups\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeTags\",\n                \"ec2:DescribeVpcAttribute\",\n                \"ec2:DescribeVpcClassicLink\",\n                \"ec2:DescribeVpcClassicLinkDnsSupport\",\n                \"ec2:DescribeVpcEndpointConnectionNotifications\",\n                \"ec2:DescribeVpcEndpointConnections\",\n                \"ec2:DescribeVpcEndpointServiceConfigurations\",\n                \"ec2:DescribeVpcEndpointServicePermissions\",\n                \"ec2:DescribeVpcEndpointServices\",\n                \"ec2:DescribeVpcEndpoints\",\n                \"ec2:DescribeVpcPeeringConnections\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:DescribeVpnConnections\",\n                \"ec2:DescribeVpnGateways\",\n                \"ec2:DescribePublicIpv4Pools\",\n                \"ec2:DescribeIpv6Pools\",\n                \"ec2:DetachInternetGateway\",\n                \"ec2:DetachNetworkInterface\",\n                \"ec2:DetachVpnGateway\",\n                \"ec2:DisableVgwRoutePropagation\",\n                \"ec2:DisableVpcClassicLinkDnsSupport\",\n                \"ec2:DisassociateAddress\",\n                \"ec2:DisassociateRouteTable\",\n                \"ec2:DisassociateSubnetCidrBlock\",\n                \"ec2:DisassociateVpcCidrBlock\",\n                \"ec2:EnableVgwRoutePropagation\",\n                \"ec2:EnableVpcClassicLinkDnsSupport\",\n                \"ec2:ModifyNetworkInterfaceAttribute\",\n                \"ec2:ModifySecurityGroupRules\",\n                \"ec2:ModifySubnetAttribute\",\n                \"ec2:ModifyVpcAttribute\",\n                \"ec2:ModifyVpcEndpoint\",\n                \"ec2:ModifyVpcEndpointConnectionNotification\",\n                \"ec2:ModifyVpcEndpointServiceConfiguration\",\n                \"ec2:ModifyVpcEndpointServicePermissions\",\n                \"ec2:ModifyVpcPeeringConnectionOptions\",\n                \"ec2:ModifyVpcTenancy\",\n                \"ec2:MoveAddressToVpc\",\n                \"ec2:RejectVpcEndpointConnections\",\n                \"ec2:ReleaseAddress\",\n                \"ec2:ReplaceNetworkAclAssociation\",\n                \"ec2:ReplaceNetworkAclEntry\",\n                \"ec2:ReplaceRoute\",\n                \"ec2:ReplaceRouteTableAssociation\",\n                \"ec2:ResetNetworkInterfaceAttribute\",\n                \"ec2:RestoreAddressToClassic\",\n                \"ec2:UnassignIpv6Addresses\",\n                \"ec2:UnassignPrivateIpAddresses\",\n                \"ec2:UpdateSecurityGroupRuleDescriptionsEgress\",\n                \"ec2:UpdateSecurityGroupRuleDescriptionsIngress\",\n                \"elasticbeanstalk:Describe*\",\n                \"elasticbeanstalk:List*\",\n                \"elasticbeanstalk:RequestEnvironmentInfo\",\n                \"elasticbeanstalk:RetrieveEnvironmentInfo\",\n                \"elasticloadbalancing:*\",\n                \"logs:DescribeLogGroups\",\n                \"logs:DescribeLogStreams\",\n                \"logs:GetLogEvents\",\n                \"route53:*\",\n                \"route53domains:*\",\n                \"sns:CreateTopic\",\n                \"sns:ListSubscriptionsByTopic\",\n                \"sns:ListTopics\"\n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AcceptVpcPeeringConnection\",\n                \"ec2:AttachClassicLinkVpc\",\n                \"ec2:AuthorizeSecurityGroupEgress\",\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:CreateVpcPeeringConnection\",\n                \"ec2:DeleteCustomerGateway\",\n                \"ec2:DeleteDhcpOptions\",\n                \"ec2:DeleteInternetGateway\",\n                \"ec2:DeleteNetworkAcl\",\n                \"ec2:DeleteNetworkAclEntry\",\n                \"ec2:DeleteRoute\",\n                \"ec2:DeleteRouteTable\",\n                \"ec2:DeleteSecurityGroup\",\n                \"ec2:DeleteVolume\",\n                \"ec2:DeleteVpcPeeringConnection\",\n                \"ec2:DetachClassicLinkVpc\",\n                \"ec2:DisableVpcClassicLink\",\n                \"ec2:EnableVpcClassicLink\",\n                \"ec2:GetConsoleScreenshot\",\n                \"ec2:RejectVpcPeeringConnection\",\n                \"ec2:RevokeSecurityGroupEgress\",\n                \"ec2:RevokeSecurityGroupIngress\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateLocalGatewayRoute\",\n                \"ec2:CreateLocalGatewayRouteTableVpcAssociation\",\n                \"ec2:DeleteLocalGatewayRoute\",\n                \"ec2:DeleteLocalGatewayRouteTableVpcAssociation\",\n                \"ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations\",\n                \"ec2:DescribeLocalGatewayRouteTableVpcAssociations\",\n                \"ec2:DescribeLocalGatewayRouteTables\",\n                \"ec2:DescribeLocalGatewayVirtualInterfaceGroups\",\n                \"ec2:DescribeLocalGatewayVirtualInterfaces\",\n                \"ec2:DescribeLocalGateways\",\n                \"ec2:SearchLocalGatewayRoutes\"\n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetBucketLocation\",\n                \"s3:GetBucketWebsite\",\n                \"s3:ListBucket\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:GetRole\",\n                \"iam:ListRoles\",\n                \"iam:PassRole\"\n            ],\n            \"Resource\": \"arn:aws:iam::*:role/flow-logs-*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"networkmanager:*\"\n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AcceptTransitGatewayVpcAttachment\",\n                \"ec2:AssociateTransitGatewayRouteTable\",\n                \"ec2:CreateTransitGateway\",\n                \"ec2:CreateTransitGatewayRoute\",\n                \"ec2:CreateTransitGatewayRouteTable\",\n                \"ec2:CreateTransitGatewayVpcAttachment\",\n                \"ec2:DeleteTransitGateway\",\n                \"ec2:DeleteTransitGatewayRoute\",\n                \"ec2:DeleteTransitGatewayRouteTable\",\n                \"ec2:DeleteTransitGatewayVpcAttachment\",\n                \"ec2:DescribeTransitGatewayAttachments\",\n                \"ec2:DescribeTransitGatewayRouteTables\",\n                \"ec2:DescribeTransitGatewayVpcAttachments\",\n                \"ec2:DescribeTransitGateways\",\n                \"ec2:DisableTransitGatewayRouteTablePropagation\",\n                \"ec2:DisassociateTransitGatewayRouteTable\",\n                \"ec2:EnableTransitGatewayRouteTablePropagation\",\n                \"ec2:ExportTransitGatewayRoutes\",\n                \"ec2:GetTransitGatewayAttachmentPropagations\",\n                \"ec2:GetTransitGatewayRouteTableAssociations\",\n                \"ec2:GetTransitGatewayRouteTablePropagations\",\n                \"ec2:ModifyTransitGateway\",\n                \"ec2:ModifyTransitGatewayVpcAttachment\",\n                \"ec2:RejectTransitGatewayVpcAttachment\",\n                \"ec2:ReplaceTransitGatewayRoute\",\n                \"ec2:SearchTransitGatewayRoutes\"\n            ],\n            \"Resource\": \"*\"\n        },\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:CreateServiceLinkedRole\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\":\n{\n\"StringLike\":\n{\n\"iam:AWSServiceName\": [\n                        \"transitgateway.amazonaws.com\"\n                    ]\n                }\n            }\n        }\n    ]\n}\nThis policy enables read-only permission for the delegated administrator and\n                    management accounts to review information about resources from other accounts in\n                    the global network while using the global networks console switch role, but doesn't allow\n                    either account to make changes.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"networkmanager:Describe*\",\n                \"networkmanager:Get*\",\n                \"networkmanager:List*\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS managed policies\nTag resources\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/gnw-tagging.html": "Tag global networks transit gateway resources - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nSupported resources\nTagging restrictions\nTag global networks transit gateway resources\nA\ntag\nis a metadata label that either you or AWS\n        assigns to an AWS resource. Each tag consists of a\nkey\nand a\nvalue\n. For tags that you assign, you define the key\n        and the value. For example, you might define the key as\npurpose\nand the value\n        as\ntest\nfor one\n        resource.\nTags help you do the following:\nIdentify and organize your AWS resources. Many AWS services support tagging,\n                so you can assign the same tag to resources from different services to indicate that\n                the resources are related.\nControl access to your AWS resources. For more information, see\nControlling access to AWS resources using tags\nin the\nIAM User Guide\n.\nSupported resources\nThe following global networks resources support tagging:\nGlobal networks\nDevices\nSites\nLinks\nTagging restrictions\nThe following basic restrictions apply to tags on global networks resources:\nMaximum number of tags that you can assign to a resource: 200\nMaximum key length: 128 Unicode characters\nMaximum value length: 256 Unicode characters\nValid characters for key and value: a-z, A-Z, 0-9, space, and the following\n                    characters: _ . : / = + - and @\nKeys and values are case sensitive\nYou cannot use\naws:\nas a prefix for keys; it's reserved for AWS use\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMulti-account access roles\nLog API calls using CloudTrail\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/nm-logging-using-cloudtrail.html": "Log AWS Global Networks for Transit Gateways API calls using AWS CloudTrail - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nGlobal Networks information in CloudTrail\nLog AWS Global Networks for Transit Gateways API calls using AWS CloudTrail\nAWS Global Networks for Transit Gateways works with AWS CloudTrail, a service that provides a record of actions taken by a user,\n    role, or an AWS service in Global Networks. CloudTrail captures all API calls for Global Networks as events. The calls\n    that are captured include calls from the Global Networks console and code calls to the Global Networks API operations.\n    If you create a trail, you can enable continuous delivery of CloudTrail events to an Amazon S3 bucket,\n    including events for Global Networks. If you don't configure a trail, you can still view the most recent\n    events in the CloudTrail console in\nEvent history\n. Using the information\n    collected by CloudTrail, you can determine what request was made to Global Networks, the IP address from which\n    the request was made, who made the request, when it was made, and additional details.\nTo learn more about CloudTrail, see the\nAWS CloudTrail User Guide\n.\nGlobal Networks information in CloudTrail\nCloudTrail is enabled on your AWS account when you create the account. When activity occurs in\n      Global Networks, that activity is recorded in a CloudTrail event along with other AWS service\n      events in\nEvent history\n. You can view, search, and download recent events \n        in your AWS account. For more information, see\nViewing Events with CloudTrail Event\n        History\n.\nFor an ongoing record of events in your AWS account, including events for Global Networks, create a\n            trail. A\ntrail\nenables CloudTrail to deliver log files to an Amazon S3 bucket.\n      By default, when you create a trail in the console, the trail applies to all AWS\n            Regions. The trail logs events from all Regions in the AWS partition, and delivers the\n            log files to the Amazon S3 bucket that you specify. Additionally, you can configure other\n            AWS services to further analyze and act upon the event data collected in CloudTrail logs.\n            For more information, see the following:\nOverview for Creating a Trail\nCloudTrail Supported Services and Integrations\nConfiguring Amazon SNS Notifications\n          for CloudTrail\nReceiving CloudTrail Log\n          Files from Multiple Regions\nand\nReceiving CloudTrail Log\n            Files from Multiple Accounts\nAll Global Networks actions are logged by CloudTrail and are documented in the\nNetwork Manager API Reference\n. For example, calls to the\nCreateGlobalNetwork\naction generate\n      entries in the CloudTrail log files.\nEvery event or log entry contains information about who generated the request. The\n      identity information helps you determine the following:\nWhether the request was made with root or AWS Identity and Access Management (IAM user) credentials\nWhether the request was made with temporary security credentials for a role or\n                    federated user\nWhether the request was made by another AWS service\nFor more information, see the\nCloudTrail userIdentity\n        Element\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTag resources\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/nm-quotas.html": "AWS Global Networks for Transit Gateways Quotas - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nGeneral quotas\nAWS Global Networks for Transit Gateways Quotas\nYour AWS account has the quotas shown in the following table for AWS Global Networks for Transit Gateways.\nThe Service Quotas console also provides information about global networks quotas. You can use the\n        Service Quotas console to view default quotas and\nrequest quota increases\nfor\n        adjustable quotas. For more information, see\nRequesting a quota\n            increase\nin the\nService Quotas User Guide\n.\nGeneral quotas\nThe following global networks general quotas apply.\nQuota\nDefault\nAdjustable\nGlobal networks per AWS account\n5\nYes\nNumber of devices per global network\n200\nYes\nNumber of sites per global network\n200\nYes\nNumber of links per global network\n200\nYes\nNumber of connections per global network\n200\nYes\nNumber of registered delegated administrators for an organization in\n                            AWS Organizations\n10\nYes\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nLog API calls using CloudTrail\nDocument history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/tgwnm/doc-history.html": "Document history for AWS Global Networks for Transit Gateways - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Global Networks for Transit Gateways User Guide\nDocument history for AWS Global Networks for Transit Gateways\nChange\nDescription\nDate\nThe\nAWS Network Manager User Guide\nwas renamed to the\nAWS Global Networks for Transit Gateways User Guide\n.\nThe\nNetwork Manager User Guide\nwas renamed to the\nAWS Global Networks for Transit Gateways User Guide\n, as the AWS Network Manager console  was reorganized.\n                    AWS Global Networks for Transit Gateways are now a part of the greater-feature Network Manager console.\nNovember 28, 2022\nNew AWS managed role\nThe\nNetwork Manager User Guide\nwas updated, as Network Manager as\n                    permission for a new role,\nGetTransitGatewayRouteTablePropagations\nwas added to AWS managed policies.\nJuly 12, 2022\nMulti-account support\nThe\nNetwork Manager User Guide\nwas updated, as Network Manager now\n                    supports multi-account, which allows you to centrally manage multiple AWS Organizations\n                    accounts and transit gateways in a single global network.\nMay 24, 2022\nDocumentation updated for AWS Cloud WAN\nThe\nAWS Network Manager User Guide\nwas updated, as Network Manager\n                    supports both AWS Transit Gateways and AWS Cloud WAN.\nDecember 2, 2021\nCreated a new\nAWS Network Manager User Guide\nNetwork Manager documentation was removed from the\nAWS Transit Gateway\nUser Guide\nand included\n                    as part of a new, standalone\nAWS Network Manager User Guide\n.\nDecember 2, 2021\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/what-is-cloudwan.html": "What is AWS Cloud WAN? - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nGlobal and core network key\n        concepts\nHome Region\nRegion availability\nWhat is AWS Cloud WAN?\nAWS Cloud WAN is a managed wide-area networking (WAN) service that you can use to build, manage,\n    and monitor a unified global network that connects resources running across your cloud and\n    on-premises environments. It provides a central dashboard from which you can connect on-premises\n    branch offices, data centers, and Amazon Virtual Private Clouds (VPCs) across the AWS global\n    network. You can use simple network policies to centrally configure and automate network\n    management and security tasks, and get a complete view of your global network. For key concepts\n    and terms about global and core networks, see\nGlobal and core network key concepts\n.\nNote\nAWS Cloud WAN is designed to work with a core network. You can create a core network at the time\n      you create your global network, or you can create one later on. If you want to create a global\n      network without using a core network, use AWS Global Networks for Transit Gateways. For more\n      information, see the\nAWS Global\n          Networks for Transit Gateways User Guide\n.\nThere are a number of ways you can work with AWS Cloud WAN to create and maintain your core network, policies, segments, and attachments:\nAWS Management console\nThe AWS Management console provides a web interface for you to create your global and\n        core networks, policy versions, segments, and attachments. For more information on using the\n        console to create and maintain your global and core networks, see\nGetting started\n.\nAWS Command Line Interface (AWS CLI)\nProvides command-line support for a broad set of AWS services using the command line.\n        For more information see the\nAmazon EC2 command line\n          reference\n, which includes AWS Transit Gateway and Amazon VPC and the\nAWS Global Networks for Transit Gateways API\n        Reference\n.\nAWS\nSDKs\nProvides language-specific API operations and takes care of a number of connection\n        details, such as calculating signatures, handling request retries, and handling errors. For\n        more information, see the\nAWS Global Networks for Transit Gateways API Reference\n.\nQuery API\nProvides low-level API actions using HTTPS requests. Using the Query API is the most direct\n        way to access Amazon VPC, but it requires that your application handle low-level details\n        such as generating the hash to sign the request, and handling errors. For more information,\n        see the\nAmazon EC2\n            API Reference\n.\nGlobal and core network key concepts\nThe following are the key concepts for AWS Cloud WAN:\nGlobal network\nA single, private network that acts as the high-level container for your\n          network objects. A global network can contain both AWS Transit Gateways and other AWS Cloud WAN\n          core networks. These can be seen in the Network Manager console.\nCore network\nThe part of your global network managed by AWS. This includes Regional\n          connection points and attachments, such as VPNs, VPCs, and Transit Gateway\n          Connects. Your core network operates in the Regions that are defined in your\n          core network policy document.\nCore network policy\nA core network policy document is a single document applied to your core\n          network that captures your intent and deploys it for you. The core network\n          policy is a declarative language that defines segments, AWS Region routing,\n          and how attachments should map to segments. With a core network policy, you can\n          describe your intent for access control and traffic routing, and AWS Cloud WAN handles\n          the configuration details. Some examples of advanced architectures that you can\n          create with policy include creating a segment for shared services (for example,\n          service directories or authentication services), providing internet access\n          through a firewall for a segment, automatically assigning VPCs to segments based\n          on tags, and defining which AWS Regions a segment is available in.\nOver time you might find that you want to make adjustments or additions to\n          your core network policy. With a policy, you can make any changes or additions\n          to your core network and apply those changes through an updated JSON policy. You\n          can do this using either the visual editor on the console, or through an\n          included JSON editor. You can maintain multiple versions of a policy, although\n          only one policy can be in effect. At any time, you can update your core network\n          to use a new policy or revert to a previous version.\nAttachments\nAttachments are any connections or resources that you want to add to your core\n          network. Supported attachments include VPCs, VPNs, Transit Gateway route table\n          attachments, and Connect attachments.\nCore Network Edge\nThe Regional connection point managed by AWS in each Region, as defined in\n          the core network policy. Every attachment connects to a Core Network Edge. Under\n          the hood, this is an AWS Transit Gateway, and it inherits many of the same\n          properties.\nIn your core network policy document, you define the AWS Region where you\n          want connectivity. At any time, you can add or remove AWS Regions using the\n          policy document. For each AWS Region that you define in the policy document,\n          AWS Cloud WAN then creates a Core Network Edge router in the specified Region. All Core\n          Network Edges in your core network create full-mesh peering with each other to\n          form a highly resilient network. Traffic across the AWS global network uses\n          redundant connections and multiple paths.\nNetwork segments\nSegments are dedicated routing domains, which means that by default, only\n          attachments within the same segment can communicate. You can define segment\n          actions that share routes across segments in the core network policy. In a\n          traditional network, a segment is similar to a globally consistent Virtual\n          Routing and Forwarding (VRF) table, or a Layer 3 IP VPN over an MPLS\n          network.\nAWS Cloud WAN supports built-in segmentation, which means that you can more easily\n          manage network isolation across your AWS and on-premises locations. Using\n          network segments, you can divide your global network into separate isolated\n          networks. For example, you might want to isolate traffic between different parts\n          of your business, such as between retail sites or IT networks.\nYou can create a segment and define whether resources that ask for access\n          require approval. You can also define explicit route filters to be applied\n          before those routes can be attached to a segment. Each attachment connects to\n          one segment. Each segment will create a dedicated routing domain. You can create\n          multiple network segments within your global network. Resources connected to the\n          same segment can only communicate within the segment. Optionally, resources in\n          the same segment can be isolated from each other, with access only to shared\n          services. With segments, AWS maintains a consistent configuration across\n          AWS Regions for you, instead of you needing to synchronize configuration\n          across every device in your network.\nSegment actions and attachment policies\nSegment actions define how routing works between segments. After you create a\n          segment, you can choose to map attachments to the segments either by explicitly\n          mapping a resource to a segment (for example, \"\nVpcId:\n            \"vpc-2f09a348\n) or by creating and using attachment policies. Instead of\n          manually associating a segment to each attachment, attachments are tagged. Those\n          tags are then associated with the applicable segment. When attachments are\n          mapped to segments, you can choose how routes are shared between segments. For\n          example, you might want to share access to a VPN across multiple segments, or\n          allow access between two types of branch offices. You can also choose to\n          configure centralized internet routing for a segment, or route traffic between\n          segments through a firewall.\nCore network owner\nand\nAttachment\n          owner\nWhen creating a core network within a global network, the user that creates\n          the core network automatically becomes the owner of the core network. A core\n          network owner has full control and visibility over all parts of the AWS Cloud WAN\n          network. The core network owner can then share a core network across accounts or\n          across an organization using AWS Resource Access Manager. For more information, see\nShare a core network\n. The account to which the core network is\n          shared becomes an attachment owner. An attachment owner has permission only to\n          create connections, attachments, or tags, but no permission for any core network\n          tasks. A core network owner can also be an attachment owner.\nA core network owner can:\nCreate, update, restore, delete, or share a Cloud WAN network.\nCreate, update, download, run, delete, or restore core network policy\n              versions.\nCreate, update, or delete core network attachments.\nAccept or reject core network attachments.\nCreate, update, or remove attachment tags.\nVisualize network topology and policy change sets.\nTrack network events, routes, and performance.\nCreate sites, links, devices, and other transit gateway associations.\nAn attachment owner can:\nCreate, update, or delete VPC attachments.\nAdd, update, or remove attachment tags.\nPeering\nYou can interconnect your core network edge and transit gateway in the same AWS Region\n          using a peering connection. You can create one or more route table attachments\n          over a peering connection to peer a transit gateway route table through a Cloud WAN\n          network segment, allowing you to deploy end-to-end network segmentation across\n          your transit gateway and Cloud WAN-based networks.\nHome Region\nThe home Region is the AWS Region where data related to your use of\n      your AWS Cloud WAN core network is aggregated and stored. Cloud WAN aggregates and stores this\n      information in the home Region to provide you with a central dashboard\n      with visualized insights into your global network. Currently, Cloud WAN only supports\n      US West (Oregon) as the home Region.\nImportant\nCloud WAN aggregates and stores Regional usage data associated with the\n            core network edges specified in your core network policy from the\n            AWS Regions you're using to the US West (Oregon) Region.\nWhen it has been established, you can't change the home Region.\nAWS aggregates and stores this Regional usage data from the AWS Regions that you\n      are using to US West (Oregon), using Amazon Simple Queue Service (SQS) and Amazon Simple Storage Service\n      (S3). This data includes but is not limited to:\nTopology data for registered transit gateways\nEvent data for transit gateways and VPNs\nTransit gateway IDs for registering transit gateways into a global network\n(Optional) Location data related to your device and site registrations\n(Optional) Provider and link data related to your link registrations\n(Optional) IP address and CIDR ranges used in Cloud WAN and transit gateway Connect\n          peers\nAll movement and data aggregation occurs over a secure and encrypted channel and\n      stored with encryption at rest. We use a third-party, Mapbox, to create maps of your\n      global network. We send the resource identifiers collected during device and site\n      registrations to Mapbox to generate those maps.\nRegion availability\nAWS Cloud WAN is available in the following AWS Regions:\nAWS Region\nDescription\nus-east-1\nUS East (N. Virginia)\nus-east-2\nUS East (Ohio)\nus-west-1\nUS West (N. California)\nus-west-2\nUS West (Oregon)\naf-south-1\nAfrica (Cape Town)\nap-northeast-1\nAsia Pacific (Tokyo)\nap-northeast-2\nAsia Pacific (Seoul)\nap-northeast-3\nAsia Pacific (Osaka)\nap-south-1\nAsia Pacific (Mumbai)\nap-southeast-1\nAsia Pacific (Singapore)\nap-southeast-2\nAsia Pacific (Sydney)\nca-central-1\nCanada (Central)\neu-central-1\nEurope (Frankfurt)\neu-north-1\nEurope (Stockholm)\neu-west-1\nEurope (Ireland)\neu-west-2\nEurope (London)\neu-west-3\nEurope (Paris)\neu-south-1\nEurope (Milan)\nme-south-1\nMiddle East (Bahrain)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGetting started\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-getting-started.html": "Getting started with AWS Cloud WAN - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nPrerequisites\nSteps to create your global and core network\nGetting started with AWS Cloud WAN\nTo get started with AWS Cloud WAN, you first create your global network. Your global network\n    contains all of your network resources, such as core networks, sites, devices, and attachments.\n    During the creation process, you can choose to create your core network and core network policy\n    simultaneously. Or you can choose to create the core network, and then create a policy at a\n    later time. Creating a core network and policy creates the structure of your core network and\n    implements it. Until you finish creating your core network and core network policy, you won't be\n    able to do anything in your global network. After the structure is implemented, you can then add\n    attachments, devices, or sites, and you can register existing transit gateways.\nPrerequisites\nThere are no prerequisites for setting up AWS Cloud WAN. However, some features are not available\n      to you unless you set them up in advance. These features are described in the following\n      table:\nPrerequisite\nDescription\nEvents and metrics\nBefore viewing events on the Events dashboard, you must complete a one-time\n                setup that registers your events with CloudWatch Logs Insights. Until you register\n                your events, you'll be unable to view any of your events on the dashboard. See\nOnboard CloudWatch Logs Insights\nfor the steps to register your events.\nTransit gateways\nA transit gateway must first be created on the\n                Amazon Virtual Private Cloud console at\nconsole.aws.amazon.com/vpc/home\n.\nTransit gateways that you have created in Amazon VPC can then be registered in\n                AWS Cloud WAN to be part of your AWS Cloud WAN global network.\nSteps to create your global and core network\nThe following high-level steps provide links to the required and optional procedures for\n      setting up the structure of your AWS Cloud WAN global and core network.\nStep 1:\nCreate a global network\n.\nStep 2:\nCreate a core network and core network policy\n.\nStep 3:\nCreate an attachment\n.\nStep 4:\n(Optional)\nCreate a core network policy\n            version\n.\nStep 5:\n(Optional)\nRegister a transit gateway\n.\nStep 6:\n(Optional)\nAdd a device\n.\nStep 7:\n(Optional)\nCreate a site\n.\nAfter getting your AWS Cloud WAN network set up, you can work with and modify any aspect of the\n      network. Steps for working with your global and core network can be found in\nWork with AWS Cloud WAN\n. For example, you can:\nAdd new segments and implement an updated policy version.\nAdd, edit, or remove attachments, devices, and sites.\nAdd new resource tags to further help identify your network resources.\nView logical and topological trees of your global and core networks.\nYou can also view visualizations of your global and core networks as topological trees and\n      logical diagrams, and you can monitor and track events. See\nVisualize and monitor global and core networks\nfor the ways you can visualize and monitor your\n      global and core networks.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWhat is AWS Cloud WAN?\nCreate a global network\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/create-global-network.html": "Create a global network - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nCreate a global network\nThe first step in setting up AWS Cloud WAN is to create a global network. A global network is a\n        single, private network that acts as the high-level container for your network objects. A\n        Global Network can contain both an AWS Transit Gateway and other Cloud WAN core networks. These will\n        appear in the AWS Network Manager console. After you create a global network, you can then\n        create a core network at the same time. You can also choose to create a core network later\n        on.\nNote\nIf you're only creating and managing a global network without a core network, use\n            AWS Global Networks for Transit Gateways. For more information, see the\nAWS Global Networks for Transit Gateways User\n                    Guide\n.\nYou can either create a global network using the AWS console or through the command line\n        or API.\nTo create a global network using the AWS console\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal\n                    Networks\n.\nChoose\nCreate global network\n.\nEnter a\nName\nand\nDescription\nfor your\n                global network.\n(Optional) In\nAdditional settings\n, add\nKey\nand\nValue\ntags that further help\n                identify an Network Manager resource. To add multiple tags, choose\nAdd\n                    tag\nfor each tag that you want to add.\n(Optional) Do one of the following:\nKeep the\nAdd core network in your global\n                            network\ncheck box selected, and then choose\nNext\nto set up your core network and policies. For\n                        detailed instructions, see\nCreate a core network while creating a\n                global network\n.\nSet up your core network later on.\nClear the\nAdd core network in your global\n                                    network\ncheck box, and then choose\nNext\nto review your global network details.\nChoose\nEdit\nfor any detail that you want to\n                                change, and then choose\nCreate global network\n.\nThe\nGlobal networks\npage appears with a\n                                confirmation box that your global network was created successfully.\n                                Later, when you're ready to add your core network, see\nCreate a core network after creating a\n                global network\n.\nTo create a global network using the command line or API\ncreate-global-network\nNext step:\nCreate a core network and core network policy\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGetting started\nCreate a core network and core network policy\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-core-network-policy.html": "Create a core network and core network policy - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nCreate a core network while creating a\n                global network\nCreate a core network after creating a\n                global network\nCreate a core network and core network policy\nAfter you've created your global network, you can create a core network within your global\n        network. When you create your core network, you also create the core network policy that\n        deploys your network structure as it sets up the permissions. When the core network has been\n        created, you can then create attachments within the network, and set up transit gateways and\n        devices. At any time, you can also modify your policy and deploy a new version to better\n        suit your business needs. For steps to create a new version of a policy, see\nCreate a core network policy\n            version\n.\nNote\nYou can only have one core network for each of your global networks.\nCreate a core network while creating a\n                global network\nTo create a core network while creating a global network\nPrerequisite:\nCreate a global network\n.\nCreate the core network. See\nCreate a global network\n.\nOn the\nCreate core network\npage, under\nCore\n                        network general settings\n, enter a\nName\nand\nDescription\nto identify the core network.\n(Optional) Choose\nAdditional settings\nto add one or more\nKey\nand\nValue\ntags to help\n                    identify this network resource.\n(Optional) Under\nCore network policy settings\n, set the\n                    beginning and ending\nASN range\n(Autonomous System Number).\n                    Format the range as\nxxxxx - xxxxx\n.\nASN is the Border Gateway Protocol (BGP) for the new core network. Valid\n                    ranges are\n64512\n\u00e2\u0080\u0093\n65334\nand\n4200000000\n\u00e2\u0080\u0093\n4294967294\n. The\nASN range\nis left-closed and right-open. This means\n                    that the leftmost number is included in the range but the rightmost number is\n                    not. For example, if you choose an ASN range of\n64900-64903\n, the actual available ASN range is\n64900\nthrough\n64902\n.\n64903\nis not included.\nImportant\nWhile the\nASN range\nis optional, we recommend that\n                        you define a range in your initial core network policy. Once created, that\n                        ASN range is locked into that policy and can't be changed. If you connect\n                        the core network to any network using BGP, define the ASN range in the\n                        initial policy in order to prevent ASN overlap.\nChoose the\nEdge locations\n. These are the Regions where your\n                    edges are located. You can have more than one edge location, but you must choose\n                    at least one. You can select multiple edge locations from the dropdown\n                    list.\nEnter a\nName\nto identify the segment. The name can include up\n                    to 100 alphanumeric characters. Blank spaces and hyphens are not allowed. For\n                    example, if this core network is going to be used for development work, you can\n                    name the segment\ndevelopment\n.\nChoose\nNext\nto review the global network details. Choose\nEdit\nto make any changes.\nChoose\nCreate global network\n.\nYour\n                    global network is created. The core network policy starts creating and deploying\n                    your core network.\nImportant\nA core network is not deployed instantaneously after creation. It can\n                        sometimes take several minutes or longer to complete, depending on the\n                        number of edge locations. While the core network is being created, you can't\n                        create any attachments within your core network or create policy versions.\n                        To view the status of the deployment, in the navigation pane, choose\nPolicy versions\n. While the policy is being\n                        implemented, the\nChange set state\nis\nExecuting\n. After the policy is implemented, the\nAlias\nis\nLIVE\n, and the\nChange set state\nchanges to\nExecution\n                            succeeded\n.\nAfter your policy is LIVE and the core network has been created, you can begin\n                    to add attachments to your core network. See\nCreate an attachment\n.\nCreate a core network after creating a\n                global network\nFollow these steps to create a core network after creating a global network. You can\n            only have one core network per global network. If the global network you choose to\n            create a core network for already has an associated core network, you'll be unable to\n            create a new one without first deleting the existing core network.\nTo create a core network after creating a global network\nAccess the AWS Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal\n                        networks\n.\nOn the\nGlobal networks\npage, if you have multiple global\n                    networks, choose the global link that doesn't already have a\nCore\n                        network\n.\nNote\nYou can only have one core network for each global network.\nUnder\nCore network\nin the navigation pane, choose\nCreate core network\n.\nThe page displays a message that a core network is not enabled.\nChoose\nCreate core network\n.\nOn the\nCreate core network\npage, enter an optional\nName\nand\nDescription\nfor the core\n                    network. The name can include up to 100 alphanumeric characters.\n(Optional) Under\nAdditional settings\n, add one or more\nKey\nand\nValue\ntags to help\n                    identify this core network.\nChoose the\nEdge locations\n. These are the Regions where\n                    your edges are located. You can have more than one edge location, but you must\n                    choose at least one. You can select multiple edge locations from the dropdown\n                    list.\nEnter a\nSegment name\nand\nSegment\n                        description\nto identify the segment. The name can include up to\n                    100 alphanumeric characters. Blank spaces and hyphens are not allowed. For\n                    example, if this core network is going to be used for development work, you can\n                    name the segment\ndevelopment\n.\nChoose\nCreate core network\n.\nYour global network is created, and the core network policy starts creating\n                    and deploying your core network. For information on viewing the status of the\n                    deployment, see\n.\nImportant\nA core network is not deployed instantaneously after creation. It can\n                        sometimes take several minutes or longer to complete, depending on the\n                        number of edge locations. While the core network is being created, you can't\n                        create any attachments within your core network or create policy versions.\n                        To view the status of the deployment, in the navigation pane, choose\nPolicy versions\n. While the policy is being\n                        implemented, the\nChange set state\nis\nExecuting\n. After the policy is implemented, the\nAlias\nis\nLIVE\n, and the\nChange set state\nchanges to\nExecution\n                            succeeded\n.\nAfter your policy is LIVE and the core network has been created, you can begin\n                    to add attachments to your core network. See\nCreate an attachment\n.\nTo view policy deployment status\nWhile the policy is deploying, the\nCore network\npage\n                        displays a message that no live core network can be found. To see the status\n                        of the policy deployment, continue with the following step.\nThe\nPolicy versions\npage displays the current status\n                        of the deployment. To view the current status of the deployment, choose the\nProgress\ndetails status bar. The Events section of\n                        the page shows the following:\nType\n\u00e2\u0080\u0094 What's being deployed for the policy.\n                                For example, this might be a core network or a segment.\nAction\n\u00e2\u0080\u0094 The action being taken for the Type.\n                                This can be\nAdd\n,\nState\n\u00e2\u0080\u0094 The current state of the deployment.\nEdge locations\n\u00e2\u0080\u0094 Any locations for the policy\n                                type.\nIdentifier\n\u00e2\u0080\u0094 The identifier path for the\n                                policy type.\nStart time\n\u00e2\u0080\u0094 The timestamp when deployment of\n                                the policy type started.\nEnd time\n\u00e2\u0080\u0094 The timestamp when deployment of\n                                the policy type finished.\nAfter your policy is LIVE and the core network has been created, you can\n                        begin to add attachments to your core network. See\nCreate an attachment\n.\nNext step:\nCreate an attachment\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a global network\nCreate an attachment\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-create-attachment.html": "Create an attachment - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nCreate an attachment\nWhen you attach a VPC to a core network edge, you must specify one subnet from each\n        Availability Zone to be used by the core network edge to route traffic. Specifying one\n        subnet from an Availability Zone enables traffic to reach resources in every subnet in that\n        Availability Zone. Limits mentioned on the\nTransit\n            Gateway attachment to VPC\npage of the\nTransit Gateway User\n            Guide\napplies also to core network VPC attachments. You can only add\n        attachments after your core network is deployed and the core network policy is in\n        place.\nYou can work with core network attachments using the Amazon VPC Console or the command line or\n        API.\nAttachment states can be one of the following. Attachment states appear on the Attachments\n        page of the AWS Cloud WAN console.\nCreating\n\u00e2\u0080\u0094 Creation of an attachment is in process.\nDeleting\n\u00e2\u0080\u0094 Deletion of an attachment is in process.\nPending network update\n\u00e2\u0080\u0094 Waiting for the connection of\n                attachments to the core network.\nPending tag acceptance\n\u00e2\u0080\u0094\n                Waiting for the core network owner to review the tag\n                change for an attachment.\nPending attachment acceptance\n\u00e2\u0080\u0094 Waiting for the core network\n                owner to accept or reject an attachment.\nRejected\n\u00e2\u0080\u0094 The core network owner rejected the\n                attachment.\nAvailable\n\u00e2\u0080\u0094 The attachment is fully functional.\nFailed\n\u00e2\u0080\u0094 The attachment failed to attach to the core\n                network. For example, this might be due to an input error or a service linked role\n                issue.\nThe following are the supported core network attachment types. You can create an\n        attachment using either the Network Manager console or through the command line/API.\nConnect\nConnect peer\nTransit gateway route table\nVPC\nVPN\nNext step:\n(Optional)\nCreate a core network policy\n            version\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a core network and core network policy\nAdd a Connect attachment\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-connect-attachment.html": "Add a Connect attachment - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nTunnel-less Connect\nAdd a Connect attachment using the\n                console\nAdd a Connect attachment using the\n                command line or API\nAdd a Connect attachment\nYou can create a transit gateway Connect attachment to establish a connection between a\n        core network edge and third-party virtual appliances (such as SD-WAN appliances) running in\n        Amazon VPC. A Connect attachment supports both the Generic Routing Encapsulation (GRE) tunnel\n        protocol and Tunnel-less connect protocol for high performance, and the Border Gateway\n        Protocol (BGP) for dynamic routing. After you create a Connect attachment, you can create\n        one or more GRE or Tunnel-less Connect tunnels (also referred to as Transit Gateway Connect\n        peers) on the Connect attachment to connect the core network edge and the third-party\n        appliance. You establish two BGP sessions over the  tunnel to exchange routing information.\n        The two BGP sessions are for redundancy. A Connect attachment uses an existing VPC\n        attachment as the underlying transport mechanism. This is referred to as the transport\n        attachment.\nThe Core Network Edge identifies matched GRE packets from the third-party appliance as\n        traffic from the Connect attachment. It treats any other packets, including GRE packets with\n        incorrect source or destination information, as traffic from the transport\n        attachment.\nYou can create a Connect attachment through either the AWS Network Manager console or using the\n        CLI/SDK.\nNote\nA Connect attachment must be created in the same AWS account that owns the core\n            network.\nTunnel-less Connect\nAWS Cloud WAN supports Tunnel-less Connect for VPC Connect attachments. Tunnel-less Connect provides a simpler way to\n            build a global SD-WAN using AWS. Third-party SD-WAN appliances can peer with Cloud WAN\n            using Border Gateway Protocol (BGP) without needing to deploy IPsec or GRE-based tunnels\n            between the appliance and Cloud WAN. This allows you to deploy a Cloud WAN core network\n            across multiple AWS Regions and to connect one or more of your third-party SD-WAN\n            appliances to core network edges in each Region. Because Tunnel-less Connect has no\n            tunneling overhead, it provides better performance and peak bandwidth on TLC\n            attachments. IPSec provides 1.25G, allowing you to combine up to eight tunnels while\n            providing up to the entire VPC attachment bandwidth. GRE supports only 5G, which means\n            you'd need to deploy specialized techniques, such as ECMP (Equal Cost Multi-pathing),\n            for scaling bandwidth across tunnels.\nYou can use the console or API to specify the Tunnel-less Connect protocol.\nIn order to use Tunnel-less Connect, note the following:\nYour SD-WAN appliance must support BGP. The appliance must be deployed in a\n                    VPC and use a Connect attachment enabled for the tunnel-less operation in order\n                    to connect your SD-WAN appliance to a core network edge.\nAttachment policy tags or resource names are used to associate the Tunnel-less Connect\n                    attachment to the SD-WAN segment.\nBoth Connect (GRE) and Connect (Tunnel-less) attachments can co-exist in the\n                    same VPC. There is a maximum of single Connect (Tunnel-less) attachment per VPC.\nTunnel-less Connect and any underlying transport VPC attachments must be\n                    associated to the same core network segment.\nInside CIDR blocks cannot be used when creating a Tunnel-less Connect\n                    peer\nRouting\nTunnel-less Connect uses BGP for dynamic routing. Therefore, any third-party SD-WAN appliance\n                you want to use for Tunnel-less Connect must support BGP. SD-WAN appliances peer with a core\n                network using the Connect attachment functioning in a tunnel-less manner. It uses\n                native BGP to dynamically exchange routing and reachability information between\n                SD-WAN appliance in the VPC and the core network edge. We recommend using a\n                different autonomous number (ASN) on your SD-WAN appliance from the one configured\n                on the core network edge.\nTunnel-less Connect also supports also supports Multiprotocol extension for BGP (MP- BGP) in\n                order to support both IPv4/IPv6 address families.\nYou'll need to configure the following in the VPC route table used for\n                Tunnel-less Connect:\nThe core network edge BGP IP address. This is necessary to bring up the\n                        BGP session between the core network edge and the SD-WAN appliance.\nIf your third-party appliance is in a different subnet from the VPC\n                        attachment, you'll need to add all destination prefixes.\nFor more information about route tables, see\nConfigure route tables\nin the\nAmazon VPC User Guide\n.\nThird-party appliance limitations\nAn AWS Cloud WAN tunnel-less attachment peer (third-party appliance) can be located in\n                the same subnet as the VPC attachment (transport attachment) subnet or a different\n                subnet. The following limitations apply if your third-party appliance is located\n                either in the same subnet as the Cloud WAN VPC attachment or in different subnets.\nFor third-party appliances in the same subnet as the Cloud WAN VPC\n                    attachment:\nWhen the third-party appliance is in the same subnet as the VPC\n                        attachment, routes are dynamically exchanged using BGP with the core network\n                        edge. For the dataplane to function correctly, no VPC route table\n                        modifications are required except for adding the core network BGP addresses\n                        to establish BGP peering.\nThe BGP IPv4 prefixes advertised by the core network edge to your\n                        third-party appliance will have the core network attachment's Elastic\n                        Network Interface's (ENI) IPv4 address as the next-hop address, which\n                        differs from the core network BGP address peering.\nThe BGP IPv6 prefixes advertised by the core network edge to your\n                        third-party appliance will use the EUI-64 Address of the core network\n                        attachment's ENI as the next-hop.\nFor third-party appliances in a different subnets from the Cloud WAN VPC\n                    attachment:\nIf the third-party appliance is in a different subnet from the VPC\n                        attachment, you can still establish dynamic route exchange the core network\n                        edge using BGP. However, in addition to adding the core network BGP\n                        addresses for peering, you must modify the VPC route table for the dataplane\n                        to function correctly. This includes adding the prefixes received from the\n                        core network edge BGP peer into the route table. You can create a summary\n                        route that encompasses the longest prefixes advertised by the core network\n                        edge.\nThe BGP IPv4 prefixes advertised by the core network edge to your\n                        third-party appliance will have the core network BGP address as the\n                        next-hop.\nThe BGP IPv6 prefixes advertised by the core network edge to your\n                        third-party appliance will use IPv4-mapped IPv6 addresses of the core\n                        network BGP address as the next-hop.\nIt's recommended that you place your third-party appliance in the same subnet as\n                the Cloud WAN VPC attachment for more seamless integration with Tunnel-less\n                connect.\nAdd a Connect attachment using the\n                console\nThe following steps add a Connect attachment using the console.\nTo add a Connect attachment using the console\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network link for the core network you want to add an attachment to.\nIn the navigation pane under he name of the global network, choose\nAttachments\n.\nChoose\nCreate attachment\n.\nEnter a\nName\nidentifying the attachment.\nFrom the\nEdge location\ndropdown list, choose the location where the attachment is located.\nChoose\nConnect\n.\nFrom the\nConnect attachment\nsection, choose the Connect\n                    protocol. This will be either:\nGRE\nTunnel-less (No encapsulation)\nChoose the\nTransport Attachment ID\nthat will be used for\n                    the Connect attachment.\n(Optional) In the\nTags\nsection, add\nKey\nand\nValue\ntags to further help\n                    identify this resource. You can add multiple tags by choosing\nAdd\n                        tag\n, or remove any tag by choosing\nRemove\n                        tag\n.\nChoose\nCreate attachment\n.\nAdd a Connect attachment using the\n                command line or API\nUse the command line or API to create an AWS Cloud WAN Connect attachment.   When using the\nCreateConnectAttachment\nAPI pass the following:\n\"Protocol\" :\n                \"NO_ENCAP\"\n.\nTo create a Connect attachment using the command line or API\nUse\ncreate-connect-attachment\n. See\ncreate-connect-attachment\n.\nIf you're creating a Tunnel-less Connect attachment, you must then use the following command line or\n            API to create the Connect peer:\ncreate-connect-peer\n. See\ncreate-connect-peer\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate an attachment\nAdd a Connect peer\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-connect-peer-attachment.html": "Add a Connect peer - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nAdd a GRE Connect peer using the\n                console\nAdd a Tunnel-less Connect peer\n                using the console\nAdd a Connect peer using the command line or\n                API\nAdd a Connect peer\nYou can create a either a GRE Connect peer or a Tunnel-less Connect peer for an existing\n        Connect attachment using either the AWS Cloud WAN console or the command line/API.\nAdd a GRE Connect peer using the\n                console\nThe following steps add a GRE Connect peer using the console.\nTo add a Connect peer using the console\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nChoose an attachment with a resource type of\nConnect\n.\nThe\nDetails\ntab displays the\nConnect\n                        protocol\n. Make sure to choose a Connect attachment where the\n                    Connect protocol is\nGRE\n.\nChoose the\nConnect peers\ntab.\nChoose\nCreate Connect peer\n.\nEnter a\nName\nto identify the Connect peer.\n(Optional) For the\nCore network GRE address\n, enter  the\n                GRE outer IP address for the core network edge. By default, the first available\n                address from the Inside CIDR block is used.\nFor the\nPeer GRE address\n, enter the GRE outer IP address for\n                the Core Network Edge. By default, the first available address from the Inside CIDR\n                block is used.\nFor\nBGP Inside CIDR blocks IPv4\n, enter the range of inside\n                IPv4 addresses used for BGP peering. Use a\n/29\nCIDR block from the\n169.254.0.0/16\nrange.\n(Optional) For\nBGP Inside CIDR blocks IPv6\n, enter the range\n                of inside IPv6 addresses used for BGP peering. Use a\n/125\nCIDR block\n                from the\nfd00::/8\nrange.\nFor\nPeer ASN\n, specify the Border Gateway Protocol (BGP)\n                    Autonomous System Number (ASN) for the appliance. You can use an existing ASN\n                    that's assigned to your network. If you do not have one, you can use any ASN in\n                    the\n1-4294967294\nrange.\nThe default is the same ASN as the core network edge. If you configure the\nPeer ASN\nto be different than the core network edge ASN\n                (eBGP), you must configure ebgp-multihop with a time-to-live (TTL) value of\n2\n.\n(Optional) In the\nTags\nsection, add\nKey\nand\nValue\npairs to further\n                help identify this resource. You can add multiple tags by choosing\nAdd\n                    tag\n, or remove any tag by choosing\nRemove\n                        tag\n.\nChoose\nCreate Connect peer\n.\nAdd a Tunnel-less Connect peer\n                using the console\nThe following steps add a Tunnel-less Connect peer using the console.\nTo add a Tunnel-less Connect peer using the console\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nChoose an attachment with a resource type of\nConnect\n.\nThe\nDetails\ntab displays the\nConnect\n                            protocol\n. Make sure to choose a Connect attachment where the\n                        Connect protocol is\nNO_ENCAP\n.\nChoose the\nConnect peers\ntab.\nChoose\nCreate Connect peer\n.\nEnter a\nName\nto identify the Tunnel-less Connect\n                        peer.\nFor the\nPeer BGP  address\n, enter the appliance's IPv4\n                        address.\nNote\nBGP peering primarily uses IPv4 addresses, but it does support IPv6\n                            addres exchange through MP-BGP. To establsih BGP sessions for IPv6\n                            Unicast, you must have IPv4 Unicast addressing.\nFor the\nPeer ASN\n, specify the BGP ASN for the\n                        appliance.\nYou can use an existing ASN that's assigned to your network. If you do not\n                        have one, you can use any ASN in the\n1-4294967294\nrange. The\n                        default is the same ASN as the core network edge. If you configure the\nPeer ASN\nto be different from the core network edge\n                        ASN (eBGP), you must configure ebgp-multihop with a time-to-live (TTL) value\n                        of 2.\nFor\nSubnet\n, choose the subnet of the appliance.\nNote\nWe recommend you run your appliance in the same subnet as your\n                        transport VPC attachment.\n(Optional) In the\nTags\nsection, add\nKey\nand\nValue\npairs to further\n                        help identify this resource. You can add multiple tags by choosing\nAdd\n                            tag\n, or remove any tag by choosing\nRemove\n                                tag\n.\nChoose\nCreate Connect peer\n.\nAdd a Connect peer using the command line or\n                API\nUse the command line or API to create an AWS Cloud WAN Connect peer.\nTo create a Connect peer using the command line or API\nUse\ncreate-connect-peer\n. See\ncreate-connect-peer\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAdd a Connect attachment\nAdd a transit gateway route table attachment\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-tgw-attachment.html": "Add a transit gateway route table attachment - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nAdd a transit gateway route table attachment using the\n                console\nAdd a transit gateway route table attachment using the\n                command line or API\nAdd a transit gateway route table attachment\nAdd a transit gateway route table attachment to your AWS Cloud WAN core network. You can create a transit gateway\n        route table attachment using either the console or the command line/API. Before creating the\n        attachment you must first have created your transit gateway route table. For more information about\n        creating transit gateway route tables, see\nRouting\nin the\nAWS Transit Gateway User Guide\n.\nAdd a transit gateway route table attachment using the\n                console\nThe following steps add a transit gateway route table attachment using the console.\nTo add a transit gateway route table attachment using the console\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network link for the core network you want to add an attachment to.\nIn the navigation pane under he name of the global network, choose\nAttachments\n.\nChoose\nCreate attachment\n.\nEnter a\nName\nidentifying the attachment.\nFrom the\nEdge location\ndropdown list, choose the location where the attachment is located.\nFrom the\nAttachment type\ndropdown list, choose\nTransit gateway route table\n.\nIn the\nTransit gateway route table attachment\nsection, choose\n                the\nTransit gateway peering\nthat will be used for the route\n                table attachment. For information on creating a peering, see\nCreate a peering\n.\nFrom the\nTransit gateway route table\ndropdown list, choose\n                the route table that you want to be used for the peering. For information on\n                creating a transit gateway route table, see\nTransit gateway route tables\nin the\nAWS Transit Gateway Guide\n.\n(Optional) In the\nTags\nsection, add\nKey\nand\nValue\ntags to help identify this resource. You can add\n                multiple tags by choosing\nAdd tag\n, or remove any tag by\n                choosing\nRemove tag\n.\nChoose\nCreate attachment\n.\nAdd a transit gateway route table attachment using the\n                command line or API\nUse the command line or API to create an AWS Cloud WAN transit gateway route table attachment.\nTo create a transit gateway route table attachment using the command line or API\nUse\ncreate-transit-gateway-route-table-attachment\n. See\ncreate-transit-gateway-route-table-attachment\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAdd a Connect peer\nAdd a VPC attachment\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-vpc-attachment.html": "Add a VPC attachment - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nAppliance mode\nAdd a VPC attachment using the console\nAdd a VPC attachment using the command\n                line or API\nShared subnets\nAdd a VPC attachment\nWhen you attach a VPC to a core network edge in AWS Cloud WAN, you must specify one subnet from\n        each Availability Zone to be used by the core network edge to route traffic. Specifying one\n        subnet from an Availability Zone enables traffic to reach resources in every subnet in that\n        Availability Zone. For more information about limits to core network VPC attachments, see\nTransit\n            Gateway attachment to a VPC\nin the\nTransit Gateway User\n            Guide\n.\nImportant\nYou cannot select a subnet from a Local Zone while creating a Cloud WAN VPC\n            attachment. Doing so will result in an error. For more information about Local Zones,\n            see the\nAWS Local Zones User Guide\n.\nAppliance mode\nIf you plan to configure a stateful network appliance in your VPC, you can enable\n            appliance mode support for the VPC attachment in which the appliance is located when you\n            create an attachment. This ensures that Cloud WAN uses the same Availability Zone for\n            that VPC attachment for the lifetime of the flow of traffic between a source and\n            destination. It also allows Cloud WAN to send traffic to any Availability Zone in the\n            VPC as long as there is a subnet association in that zone. While appliance mode is only\n            supported on VPC attachments, the network flow can enter the core network from any other\n            Cloud WAN attachment type, including VPC, VPN, and Connect attachments. Cloud WAN\n            appliance mode also works for network flows that have sources and destinations across\n            different AWS Regions in your core network. Network flows can potentially be\n            rebalanced across different Availability Zones if you don't initially enable appliance\n            mode but later edit the attachment configuration to enable it.\nYou can enable or disable appliance mode using either the console or the command\n            line/API.\nNote\nWhen you create a VPC attachment you can't create a core network VPC\n                    attachment that uses only IPv6 subnets. A core network VPC attachment must also\n                    support IPv4 addresses.\nAppliance mode is only supported for VPC attachments.\nAdd a VPC attachment using the console\nThe following steps add a VPC attachment using the console.\nTo add a VPC attachment\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network link for the core network you want to add an attachment to.\nIn the navigation pane under he name of the global network, choose\nAttachments\n.\nChoose\nCreate attachment\n.\nEnter a\nName\nidentifying the attachment.\nFrom the\nEdge location\ndropdown list, choose the location where the attachment is located.\nChoose\nVPC\n.\nIn the VPC attachment section, choose\nAppliance mode support\nappliance mode is supported.\nChoose\nIPv6 support\nif the attachment supports IPv6.\nFrom the\nVPC IP\ndropdown list, choose the VPC ID to\n                attach to the core network.\nAfter choosing the VPC ID, you're prompted to choose the\nAvailability\n                    Zone\nand\nSubnet Id\nin which to create the core\n                network VPC attachment. The Availability Zones that are listed are those edge\n                locations that you chose when you created your core network. You must choose at\n                least one Availability Zone and subnet ID.\n(Optional) In the\nTags\nsection, add\nKey\nand\nValue\npairs to further\n                help identify this resource. You can add multiple tags by choosing\nAdd\n                    tag\n, or remove any tag by choosing\nRemove\n                        tag\n.\nChoose\nCreate attachment\n.\nAdd a VPC attachment using the command\n                line or API\nUse the command line or API to create an AWS Cloud WAN VPC attachment\nTo create a VPC attachment using the command line or API\nUse\ncreate-vpc-attachment\n. See\ncreate-vpc-attachment\n.\nTo enable appliance mode, add\n--options ApplianceModeSupport=true\nto the command.\nShared subnets\nA VPC owner can create VPC attachments in a shared VPC subnet. Participants cannot. The Cloud WAN or core network owner must first share their core network with the VPC owner via AWS RAM for the VPC owner to be able to create VPC attachments.\nFor more information, see\nShare your VPC with other accounts\nin the\nAmazon VPC User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAdd a transit gateway route table attachment\nAdd a Site-to-Site VPN attachment\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-vpn-attachment.html": "Add a Site-to-Site VPN attachment - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nAdd a Site-to-Site VPN attachment using the\n                console\nAdd a Site-to-Site VPN attachment using the command line or\n                API\nAdd a Site-to-Site VPN attachment\nTo attach a Site-to-Site VPN connection to your\n        core network edge, you must first create a Site-to-Site VPN connection with\nTarget Gateway\n            Type\nset to\nNot Associated\n. See\nCreating an\n            AWS Cloud WAN Site-to-Site VPN attachment\nin the\nAWS Site-to-Site VPN User Guide\n.\nYou can create a Site-to-Site VPN attachment using either the Network Manager console or using the command\n        line/API.\nNote\nYour Site-to-Site VPN must be attached to a core network before you can start configuring\n                    a customer gateway. AWS doesn't provision these endpoints until the Site-to-Site VPN is\n                    attached to the core network.\nA Site-to-Site VPN attachment must be created in the same AWS account that owns the\n                    core network.\nAdd a Site-to-Site VPN attachment using the\n                console\nTo attach a Site-to-Site VPN connection to your\n            core network edge, you must first create a Site-to-Site VPN connection with\nTarget Gateway\n                Type\nset to\nNot Associated\n. See\nCreating an\n                    AWS Cloud WAN Site-to-Site VPN attachment\nin the\nAWS Site-to-Site VPN User Guide\n.\nThe following steps add a Site-to-Site VPN attachment using the console\nTo add a Site-to-Site VPN attachment using the console\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network link for the core network you want to add an attachment to.\nIn the navigation pane under he name of the global network, choose\nAttachments\n.\nChoose\nCreate attachment\n.\nEnter a\nName\nidentifying the attachment.\nFrom the\nEdge location\ndropdown list, choose the location where the attachment is located.\nChoose\nVPN\n.\nFrom the\nVPN attachment\nsection, choose the VPN ID to be\n                used for the VPN attachment.\n(Optional) In the\nTags\nsection, add\nKey\nand\nValue\npairs to further\n                help identify this resource. You can add multiple tags by choosing\nAdd\n                    tag\n, or remove any tag by choosing\nRemove\n                        tag\n.\nChoose\nCreate attachment\n.\nAdd a Site-to-Site VPN attachment using the command line or\n                API\nUse the command line or API to create an AWS Cloud WAN Site-to-Site VPN attachment.\nTo create a Site-to-Site VPN attachment using the command line or API\nUse\ncreate-site-to-site-vpn-attachment\n. See\ncreate-site-to-site-vpn-attachment\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAdd a VPC attachment\nRegister a transit gateway\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-register-tgw.html": "Register a transit gateway - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nRegister a transit gateway\nPrerequisite:\nA transit gateway must first be created on\n        the Amazon Virtual Private Cloud console at\nconsole.aws.amazon.com/vpc/home\n. For the steps to create a transit gateway, see\nWorking with transit gateways\nin the\nAmazon VPC Transit Gateways Guide\nTransit gateways that you've created in Amazon VPC can be registered in AWS Cloud WAN to be part\n        of your AWS Cloud WAN global network.\nTo register a transit gateway in AWS Cloud WAN\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nChoose\nTransit gateways\n.\nFor\nSelect Transit Gateway\n, choose the transit gateway that you want to\n                register.\nChoose\nRegister Transit Gateway\n.\nNext step:\n(Optional)\nCreate a site\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAdd a Site-to-Site VPN attachment\nCreate a site\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-sites.html": "Create a site - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nCreate a site\nA site represents the physical location of your network, using location information. Sites\n        are used in dashboard visualizations.\nTo create a site\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\n.\nChoose\nCreate site\n.\nFor\nName\nand\nDescription\n, enter a name\n                and description for the site.\nFor\nAddress\n, enter the physical address of the site, for\n                example, New York, NY 10004.\nFor\nLatitude\n, enter the latitude coordinates for the site\n                (for example,\n40.7128\n).\nFor\nLongitude\n, enter the longitude coordinates for the site\n                (for example,\n-74.0060\n).\n(Optional) Under\nAdditional settings\n, add one or more\nKey\nand\nValue\ntags to help identify\n                this site.\nChoose\nCreate site\n.\nNext step:\n(Optional)\nAdd a device\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nRegister a transit gateway\nAdd a device\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-devices.html": "Add a device - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nAdd a device\nDevices represent a physical or virtual appliance.\nWhen you've created a device, you have options for further refining it. For more\n        information on working with devices in AWS Cloud WAN, see\nWorking with devices\n.\nTo add a device\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose\nCreate Device\n.\nFor Name and Description, enter a name and description for the device.\nFor\nModel\n, enter the device model number.\nFor\nSerial number\n, enter the serial number for the device.\nFor\nType\n, enter the device type.\nFor\nVendor\n, enter the name of the vendor, for example,\nCisco\n.\nFor\nLocation type\n, specify whether the device is located in a\n                remote location (\nOn-premises, Data center/ Other Cloud\n                Provider\n) or in the\nAWS Cloud\n.\nIf you choose\nAWS Cloud\n, specify the location of the device\n                within AWS:\nFor the\nZone\n, specify the name of an\nAvailability Zone\n,\nLocal Zone\n,\nWavelength Zone\n, or an\nOutpost\n.\nFor the\nSubnet\n, specify the Amazon Resource Name\n                        (ARN) of the subnet (for example,\narn:aws:ec2:useast-1:111111111111:subnet/subnet-abcd1234\n).\nFor\nAddress\n, enter the physical location of the site (for\n                example\nNew York, NY 10004\n).\nFor\nLatitude\n, enter the latitude coordinates for the site\n                (for example,\n40.7128\n).\nFor\nLongitude\n, enter the longitude coordinates for the site\n                (for example,\n-74.0060\n).\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a site\nWork with AWS Cloud WAN\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-working-with.html": "Work with AWS Cloud WAN - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nWork with AWS Cloud WAN\nWith your global and core networks in place, you can modify and change different aspects\n    of your global network and core networks.\nTopics\nGlobal and core networks\nCreate a core network policy\n            version\nCore network policies\nAttachments\nAWS Cloud WAN peerings and routing\nShare a core network\nShared attachments and peerings\nTag core resources\nSites and links\nDevices\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAdd a device\nGlobal and core networks\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-networks-working-with.html": "Global and core networks - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nGlobal networks\nCore networks\nGlobal and core networks\nA core network owner can maintain all aspects of global and core networks, including\n        viewing, deleting, and updating networks.\nGlobal networks\nView, edit, or delete any of your current global networks.\nTopics\nView and edit global network\n                    information\nDelete a global network\nView and edit global network\n                    information\nTo view details about a global network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nChoose the\nDetails\ntab.\nOn the\nDetails\npage you can edit the following:\n(Optional) To edit the description of your global network, in the\nDetails\nsection, choose\nEdit\n. In the\nDescription\nfield, enter a new description\n                                for your global network, and then choose\nEdit global\n                                    network\n.\n(Optional) To edit, add, or delete tags, in the\nTags\nsection, choose\nEdit\n                                    tags\n.\nTo edit any current tag, change the\nKey\nor\nValue\ntext as needed.\nTo add additional\nKey\nand\nValue\ntags, choose\nAdd\n                                            tag\nfor each tag that you want to add.\nTo remove any existing tag, choose\nRemove\n                                            tag\n.\nDelete a global network\nWhen you delete a global network, the deletion cannot be undone. Before you delete\n                a global network, you must first delete any core networks that are associated with\n                it. For more information on deleting core networks, see\nDelete a core network\n.\nTo delete a global network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nChoose the\nDetails\ntab.\nOn the\nDetails\npage,  choose\nDelete\n, and then confirm that you are deleting the\n                        global network.\nCore networks\nView, edit, or delete  core networks.\nTopics\nView or edit core network\n                    information\nDelete a core network\nView or edit core network\n                    information\nTo view or edit details about a core network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nChoose the\nDetails\ntab.\nOn the\nDetails\npage, you can edit the following:\n(Optional) To edit the description of your core network, in the\nDetails\nsection, choose\nEdit\n. In the\nDescription\nfield, enter a new description\n                                for your core network, and then choose\nEdit core\n                                    network\n.\n(Optional) To edit, add, or delete tags, in the\nTags\nsection, choose\nEdit\n                                    tags\n.\nTo edit any current tag, change the\nKey\nor\nValue\ntext as needed.\nTo add additional\nKey\nand\nValue\ntags, choose\nAdd\n                                            tag\nfor each tag you want to add.\nTo remove any existing tag, choose\nRemove\n                                            tag\n.\nDelete a core network\nWhen you delete a core network, the deletion cannot be undone. After you have\n                deleted all core networks that are associated with a global network, you can then\n                delete a global network. For more information on deleting global networks, see\nDelete a global network\n.\nTo delete a core network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nChoose the\nDetails\ntab.\nOn the\nDetails\npage, choose\nDelete\n, and then confirm that you are deleting the\n                        core network.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWork with AWS Cloud WAN\nCreate a core network policy\n            version\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-create-policy-version.html": "Create a core network policy version - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nCreate a policy version using the\n                AWS Cloud WAN console\nCreate a policy version using the JSON\n                editor\nCreate a core network policy\n            version\nYou can create a core network policy version at any time from the console, using visual\n        editor mode or JSON mode. When you create a policy version, you can configure settings that\n        determine how your network works. When you create a new policy version, a change set of the\n        proposed core network changes is added. You can then review the changes and deploy the\n        new core network and core network policy when you're ready.\nWhen you create a new policy version, the policy version ID increments from the previous\n        LIVE version. For example, if the current policy version ID is\n1\n, and you\n        create a new version of that policy, the new version is numbered\n2\n. The latest\n        version is displayed on the Policy versions screen with a\nLATEST\nstatus, indicating that the new policy is ready to deploy.\nChange set states can be any of the following:\nReady to execute\n\u00e2\u0080\u0094 A policy version change set and a new\n                policy version have been created. This policy version was verified with no issues\n                and is in a state where it can be deployed as the new LIVE policy. You can have\n                multiple policy versions in this state, but you can only have one LIVE policy. When\n                deployed, the policy change set state changes to\nExecution\n                    succeeded\n. For the steps to deploy a policy change set state, see\nDeploy a policy version\n.\nExecution succeeded\n\u00e2\u0080\u0094 The policy version was deployed as the\n                new LIVE policy.\nOut of date\n\u00e2\u0080\u0094 If you have multiple policy version change\n                sets, any policy version that's older than the current LIVE policy is set to\n                out-of-date, indicating that it's older than the LIVE policy. You can restore an\n                out-of-date policy. For instructions, see\nRestore an out-of-date policy\n                version\n.\nFailed generation\n\u00e2\u0080\u0094 An error prevented the policy from\n                generating. Choose the Failed generation link to see details about the failure.\nPending generation\n\u00e2\u0080\u0094 A policy version was created and is\n                waiting to be generated. When the version has been generated, the change set state\n                changes to\nReady to execute\n. If policy generation failed, this\n                state changes to\nFailed generation\n.\nYou can create a core network policy version using either the AWS Cloud WAN console or by\n        creating a JSON file.\nCreate a policy version using the\n                AWS Cloud WAN console\nCreate a policy version using the JSON\n                editor\nCreate a policy version using the\n                AWS Cloud WAN console\nUse the AWS Cloud WAN console to create a core network policy version following these tasks:\nConfigure the network\n                        settings.\nCreate network policy segments within\n                        your core network.\nCreate segment sharing\n                        and segment route actions.\nCreate policy\n                    attachments.\nCreate a policy version using the JSON\n                editor\nYou can create a core network policy version by using the AWS Cloud WAN JSON editor. In the\n            JSON editor, you add the parameters of your core network and policies. For a description\n            of the required and optional parameters in the JSON file, see\nCore network policy parameters\n.\nNote\nFamiliarity with creating JSON files is required.\nTo create a policy version using a JSON editor\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nCloud WAN\n.\nOn the\nGlobal networks\npage, choose the global network ID that for the core network you want to create a policy version for, and then choose\nCore network\n.\nIn the navigation pane, choose\nPolicy versions\n.\nChoose\nCreate policy version\n.\nIn\nChoose policy view mode\n, choose\nJSON\n.\nIn the JSON editor, create your new policy. You can create a new policy\n                    version using a blank form, or copy and modify the contents of a policy version\n                    that you've downloaded.\nFor the required and optional parameters in your JSON policy, see\nCore network policy parameters\n.\nFor the steps to download a previous policy version, see\nDownload a policy\nChoose\nCreate policy\n.\nA new policy version is generated.\nThe\nChange set state\non the\nPolicy\n                        version\npage displays\nPending generation\nwhile the new policy generates. The state changes when the policy either\n                    generates successfully or fails to generate.\nNext step:\nOptional:\nRegister a transit gateway\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGlobal and core networks\nNetwork configuration\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-core-network-config.html": "Network configuration - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nNetwork configuration\nYou can use the\nNetwork configuration\npage to configure the Border\n        Gateway Protocol (BGP) Autonomous System Number (ASN) for your core network. The valid\n        ranges are\n64512 - 65534\nand\n4200000000 -\n            4294967294\n. You can also configure the Inside CIDR blocks that are used for\n        BGP peering on Connect peers. For more information on Transit Gateway Connect attachment and\n        Connect peers, see the\nTransit Gateway\n            Connect\ndocumentation. Using the network configuration, you can also configure\n        the edge locations where you want the Core Network Edges to be available. At any time, you\n        can add or remove edge locations through the network configuration.\nTo configure the network settings\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nCloud WAN\n.\nOn the\nGlobal networks\npage, choose the global network ID that for the core network you want to create a policy version for, and then choose\nCore network\n.\nIn the navigation pane, choose\nPolicy versions\n.\nChoose\nCreate policy version\n.\nIn\nChoose policy view mode\n, choose\nVisual\n                    editor\n.\nThe\nNetwork configuration\ndisplays general settings for the\n                policy.\nIn\nGeneral settings,\nchoose\nEdit\n.\nThe\nVersion\ncan't be changed for a policy\n                        version.\nChoose\nVPN ECMP support\nif the core network should\n                        forward traffic over multiple-cost routes using VPN.\nChoose\nEdit general settings\n.\nIn the\nASN ranges\nsection, do the following:\nChoose\nCreate\n.\nFor\nASN range\n, enter the ASN range for the policy\n                        version. For example, enter\n64512-65334\n.\nNote\nThe\nASN range\nis left-closed and right-open. This\n                        means that the leftmost number is included in the range but the rightmost\n                        number is not. For example, if you choose an ASN range of\n64900-64903\n, the actual available ASN range is\n64900\nthrough\n64902\n.\n64903\nis not included.\nChoose\nCreate ASN range\n.\nIn the\nInside CIDR blocks\nsection, do the following:\nChoose\nCreate\n.\nFor\nCIDR\n, enter the CIDR block that you want to use\n                        for BGP peering on Connect peers.\nChoose\nCreate inside CIDR block\n.\nIn the\nEdge locations\nsection, do the following:\nChoose\nCreate\n.\nFrom the\nLocation\ndropdown list, choose the\nRegion\nwhere you want the Core Network Edge router\n                        to be created. You can choose only one Region.\nFor\nASN\n, enter the ASN number for the Region.\nFor\nInside CIDR block\n, enter the CIDR block that you\n                        want to use for BGP peering on Connect peers. You can enter multiple CIDR\n                        blocks by choosing\nAdd\nfor each block that you want to\n                        add. Choose\nRemove\nfor any block that you don't\n                        want.\nNote\nYou can't leave any blank destination CIDR blocks. Choose\nRemove\nto delete any empty blocks.\nChoose\nCreate edge locations\n.\nNext, add your\nSegments\n. For detailed instructions, see\nSegments\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCreate a core network policy\n            version\nSegments\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-segments.html": "Segments - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nSegments\nYou can use a network segment to divide your global network into separate isolated\n        networks. On the segments page, you create a segment, and then define the attachment\n        communication mapping. Each segment creates a dedicated routing domain. You can create\n        multiple network segments within your global network. Resources that are connected to the\n        same segment can only communicate within the segment. Optionally, you can also set resources\n        in the same segment to be isolated from each other, with access only to shared services.\n        With segments, AWS maintains a consistent configuration across AWS Regions for you,\n        meaning that you don't need to synchronize configuration across every device in your\n        network.\nTo configure a segment\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nCloud WAN\n.\nOn the\nGlobal networks\npage, choose the global network ID that for the core network you want to create a policy version for, and then choose\nCore network\n.\nIn the navigation pane, choose\nPolicy versions\n.\nChoose\nCreate policy version\n.\nChoose\nSegments\n.\nIn the\nSegments\nsection, Choose\nCreate\n.\nEnter the\nSegment name\nand\nSegment\n                    description\nto identify the segment.\nFrom the\nEdge locations\ndropdown list, choose one or more\n                segments to create.\nChoose\nRequire acceptance\nif you require approval for\n                attachments to be mapped to this segment.\nChoose\nIsolated attachments\nif you need this segment\n                isolated. Attachments in isolated segments can't communicate with other segments,\n                and attachments in other segments can't communicate with the isolated\n                segment.\nFor\nSegment filter\n, choose if you want to\nAllow\n                    all\nshared routes from other segments,\nAllow\n                    selected\nroutes, or\nDeny selected\nroutes.\nChoose\nCreate policy\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nNetwork configuration\nSegment actions\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-network-actions-routes.html": "Segment actions - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nSegment sharing\nSegment routes\nSegment actions\nSegment actions allow you to optionally share your segments or create routes.\nSegment sharing\nCreate a shared segment between two segments.\nSegment sharing is bidirectional by default. When you create a segment share between\n            two segments, routes from both segments are automatically advertised to each other. For\n            example, you might share a segment named\ntest\nwith another segment\n            named\ndev\n. Routes from\ntest\nare advertised to\ndev\n, and vice versa. To make routes in shared segments\n            unidiredtional, create a deny list filter to share routes from one segment to the other,\n            but not vice versa. Using the previous example, you could make a deny list filter that\n            prevents routes from\ntest\nbeing advertised to\ndev\n.\n            For more information on creating the deny list for a segment, see\nSegments\n.\nTo create a shared segment\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nCloud WAN\n.\nOn the\nGlobal networks\npage, choose the global network ID that for the core network you want to create a policy version for, and then choose\nCore network\n.\nIn the navigation pane, choose\nPolicy versions\n.\nChoose\nCreate policy version\n.\nChoose\nSegment actions\n.\n(Optional) In the\nSharing\nsection, choose\nCreate\n, and then do the following:\nFrom the\nSegment\ndropdown list, choose the core\n                            network segment that you want to share.\nFor the\nSegment filter\n, choose whether you want\n                            to allow all shared routes from other segments, to allow only selected\n                            routes, or to deny selected routes. The default is\nAllow\n                                all\n.\nChoose\nCreate sharing\n.\nSegment routes\nCreate a segment route for a policy version.\nTo create a segment route\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nCloud WAN\n.\nOn the\nGlobal networks\npage, choose the global network ID that for the core network you want to create a policy version for, and then choose\nCore network\n.\nIn the navigation pane, choose\nPolicy versions\n.\nChoose\nCreate policy version\n.\n(Optional) In the\nRoutes\nsection, choose\nCreate\n, and then do the following:\nFrom the\nSegment\ndropdown list, choose the core\n                            network segment that you want to share.\nFor\nDestination CIDR Block\n, enter a static route.\n                            You can enter multiple CIDR blocks by choosing\nAdd\nfor each block that you want to add. Choose\nRemove\nfor any blocks that you don't want.\nNote\nYou can't leave any blank destination CIDR blocks. Choose\nRemove\nto delete any empty blocks.\nChoose\nBlackhole\nif you want to \"black hole\" the\n                            route. If you make this choice, you can't add any attachments to the\n                            route.\nFrom the\nAttachments\nlist, choose any attachments\n                            that you want to include in this route.\nChoose\nCreate segment route\n.\n(Optional) Add\nAttachment policies\n. For more information,\n                    see\nAttachment policies\n.\nChoose\nCreate route\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSegments\nAttachment policies\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-attachments.html": "Attachment policies - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nExample attachment policy\nAttachment policies\nAttachment policies control how your attachments map to your segments.\nTo create an attachment policy\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\nchoose\nCloud WAN\n.\nOn the\nGlobal networks\npage, choose the global network ID that for the core network you want to create a policy version for, and then choose\nCore network\n.\nIn the navigation pane, choose\nPolicy versions\n.\nChoose\nCreate policy version\n.\n(Optional) Choose\nAttachment policies\n.\nChoose\nCreate\n.\nFor the\nRule number\n, enter the rule number to apply to\n            this attachment. Rule numbers determine the order in which rules are run.\nEnter an optional\nDescription\nto identify the attachment policy.\nIn the\nAction\nsection, choose how you want to associate\n            the attachment to the segment. Choose one of the following:\nSegment name\n\u00e2\u0080\u0094 associates the attachment by the segment\n                        name. After choosing this option, the segment to attach to from the\nAttach to segment\ndropdown list.\nAttachment tag value\n\u00e2\u0080\u0094 associates the attachment by the\n                        tag's value in a key-value pair. Enter the tag value in the\nAttachment tag\nvalue field.\nChoose one of the following:\nInherit segments acceptance value\nif the attachment\n                        inherits the acceptance setting from a segment when a segment was created.\n                        This can't be changed.\nRequires attachment acceptance\nif you require\n                        approval for attachments to be mapped to this segment.\nIf no acceptance option is chosen, attachments are automatically\n                    mapped to the segment.\n(Optional) For\nCondition logic\n, further refine how the attachment\n                is associated with the segment:\nChoose\nOR\n\u00e2\u0080\u0094 if you want to associate the attachment with\n                        the segment by either the\nSegment\n                            name\n/\nAttachment tag value\n,\nor\nby the chosen conditions.\nChoose\nAND\n\u00e2\u0080\u0094 if you want to associate the attachment with\n                        the segment by either the\nSegment\n                            name\n/\nAttachment tag value\nand\nby the chosen conditions.\nIf no acceptance option is chosen, attachments are automatically mapped to the\n                segment.\nIn\nConditions\n, set the condition logic by doing the\n                following:\nFrom the\nType\ndropdown list, choose one of the\n                    following condition types:\nResource Id\n\u00e2\u0080\u0094 Set an\nOR\nor\nAND\ncondition that uses a Resource\n                                ID.\nAttachment type\n\u00e2\u0080\u0094 Set an\nOR\nor\nAND\ncondition that matches a specific\n                                attachment type.\nAccount\n\u00e2\u0080\u0094 Set an\nOR\nor\nAND\ncondition that matches an\n                                account.\nTag name\n\u00e2\u0080\u0094 Set an\nOR\nor\nAND\ncondition that matches a specific tag\n                                name.\nTag value\n\u00e2\u0080\u0094 Set an\nOR\nor\nAND\ncondition that matches a specific tag\n                                value.\nFrom the\nOperator\ndropdown list, choose the\n                        operator. The operator determines the relationship of the Type.\nEquals\n\u00e2\u0080\u0094 Filters results that match the passed\nCondition value\n.\nNot equals\n\u00e2\u0080\u0094 Filters results that do not match\n                                the passed\nCondition value\n. This option is not\n                                used for\nAttachment type\n.\nBegins with\n\u00e2\u0080\u0094 Filters results that start with the\n                                passed\nCondition value\n. This option is not used\n                                for\nAttachment type\n.\nContains\n\u00e2\u0080\u0094 Filters results that match a substring\n                                within a string. This option is not used for\nAttachment\n                                    type\n.\nAny\n\u00e2\u0080\u0094 Filters results that match any field. This\n                                option is not used for\nAttachment type\n.\nIn the\nCondition values\nfield, enter the value that\n                        corresponds to the\nType\nand\nOperator\n. This option is not used for\nAttachment type\n.\nChoose\nAdd\nto include additional conditions or choose\nRemove\nto delete any conditions.\nChoose\nCreate attachment policy\n.\nChoose\nCreate policy\n.\nExample attachment policy\nThe following shows a JSON containing three attachment policies for a core network.\nThere are three segments,\nDevelopmentSegment\n,\nTestingSegment\n, and\nProductionSegment\n, which were\n                    first created on the\nSegments\ntab of the\nCreate\n                        policy\npage. When these segments were created,\nDevelopmentSegment\nwas set to automatically accept attachments,\n                    while\nTestingSegment\nand\nProductionSegment\nwere\n                    required to accept attachments.\nProductionSegment\nwas also limited\n                    to\nus-east-1\nonly and only\nTestingSegment\nis allowed\n                    to advertise to this segment.\nRule numbers are manually assigned to each attachment policy for rule\n                    processing. Rules are then processed in numerical order according to the number\n                    assigned to them. In this example, the following rule numbers are used:\n100\nfor\nDevelopmentSegment\n,\n200\nfor\nTestingSegment\n, and\n300\nfor\nProductionSegment\n. This indicates that rule\n100\nwill be run first, followed by rule\n200\nand then rule\n300\n. Once an attachment matches a rule, no further rules are\n                    processed for that attachment. Rule\n300\nfor\nProductionSegment\nadditionally indicates that the policy will\n                    only accept\nvpc\nattachments and only if the request comes from\nus-east-2\n.\nFor more information on the parameters used in the JSON file, see\nCore network policy parameters\n.\n{\n\"version\": \"2021.12\",\n  \"core-network-configuration\":\n{\n\"vpn-ecmp-support\": true\n  },\n  \"segments\": [\n{\n\"name\": \"DevelopmentSegment\",\n      \"require-attachment-acceptance\": false\n    },\n{\n\"name\": \"TestingSegment\",\n      \"require-attachment-acceptance\": true\n    },\n{\n\"name\": \"ProductionSegment\",\n      \"edge-locations\": [\n        \"us-east-1\"\n      ],\n      \"require-attachment-acceptance\": true,\n      \"isolate-attachments\": true,\n      \"allow-filter\": [\n        \"TestingSegment\"\n      ]\n    }\n  ],\n  \"attachment-policies\": [\n{\n\"rule-number\": 100,\n      \"condition-logic\": \"or\",\n      \"conditions\": [],\n      \"action\":\n{\n\"association-method\": \"constant\",\n        \"segment\": \"DevelopmentSegment\"\n      }\n    },\n{\n\"rule-number\": 200,\n      \"condition-logic\": \"or\",\n      \"conditions\": [],\n      \"action\":\n{\n\"association-method\": \"constant\",\n        \"segment\": \"TestingSegment\",\n        \"require-acceptance\": true\n      }\n    },\n{\n\"rule-number\": 300,\n      \"condition-logic\": \"and\",\n      \"conditions\": [\n{\n\"type\": \"region\",\n          \"operator\": \"equals\",\n          \"value\": \"us-east-2\"\n        },\n{\n\"type\": \"attachment-type\",\n          \"operator\": \"equals\",\n          \"value\": \"vpc\"\n        }\n      ],\n      \"action\":\n{\n\"association-method\": \"constant\",\n        \"segment\": \"ProductionSegment\",\n        \"require-acceptance\": true\n      }\n    }\n  ]\n}\nUsing the\nVisual editor\n, the same policies display as follows:\nNote that if an attachment policy uses the\nand\ncondition, each\n            condition appears on a separate row of the editor. In this example, since rule number\n            300 uses\nregion\nand\nattachment-type\nconditions, each of those conditions appear on separate rows.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSegment actions\nCore network policies\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-change-sets.html": "Core network policies - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nUpdate a policy version\nView a policy change set\nCompare policy change set versions\nDeploy a policy version\nRestore an out-of-date policy\n                version\nDelete a policy version\nDownload a policy\nCore network policies\nYou can update, delete, or restore an out-of-date AWS Cloud WAN policy. You can also download a\n        policy as a JSON file, and then edit the JSON file to create a new policy version. For\n        examples of JSON policies, see\nCore network policy examples\n.\nWhen you make an update to a policy version, it creates a new change set for that new\n        policy version. When a change set has been created, you can then implement it as your new\n        core network policy.\nTopics\nUpdate a policy version\nView a policy change set\nCompare policy change set versions\nDeploy a policy version\nRestore an out-of-date policy\n                version\nDelete a policy version\nDownload a policy\nCore network policy parameters\nCore network policy examples\nUpdate a policy version\nBefore deploying a new policy version, review the proposed change set.\nTo access a core network policy change set\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n, and then\n                    choose\nPolicy versions\n.\nUnder\nPolicy version ID\n, choose the policy version that\n                    you want to edit, and then choose\nEdit\n.\nChange any information on the\nNetwork configuration\n,\nSegments\n,\nSegment actions\n, or\nAttachment policies\ntabs. For more information about\n                    creating policy versions, see\nCreate a core network policy\n            version\n.\nChoose\nCreate policy\n. This creates a new version of the\n                    policy. The policy version is incremented by one from the last version.\nThe\nChange set state\nof the new version is set to\nPending generation\non the Policy versions page, and the\n                    alias is set to\nLATEST\n, indicating that this is the most\n                    recent version of the policy. When a policy version has been generated, the\nChange set state\nchanges to\nReady to\n                        execute\n. You can then implement the new policy version as your\nLIVE\npolicy. See\nDeploy a policy version\n.\nView a policy change set\nView proposed changes to a policy before deploying those changes to become the new\n            live policy.\nA policy version is never implemented automatically. After creating a version of a\n            policy, you can implement the policy version as your new\nLIVE\npolicy.\nTo view a core policy version change set\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n, and then\n                    choose\nPolicy versions\n.\nIn the\nPolicy versions section\n, choose the check box that\n                    you want to see policy changes for.\nChoose\nView or apply change set\n. This creates a new\n                    version of the policy. The policy version is incremented by one from the last\n                    policy version.\nThe\nChange set\npage displays the\nType\nof change being affected, for example, a core\n                    network segment, and the\nAction\nthat's associated with that\n                    type, for example, adding a new segment.\nIn\nNew Values\nand\nPrevious values\n,\n                    choose\nDetails\nto view the change in a JSON format.\nIn the\nCompare\ncolumn, choose\nCompare\nto view a line-by-line comparison of the\n                    current live policy with the proposed policy change.\nCompare policy change set versions\nCompare two policy versions against each other using the console. The comparison\n            returns line-by-line changes between the two policies in JSON format with changes\n            highlighted.\nTo compare policy versions\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n, and then\n                    choose\nPolicy versions\n.\nUnder\nPolicy version ID\n, choose the policy version that\n                    you want to compare against another policy.\nChoose\nView or apply change set\n.\nOn the Change set page, choose\nCompare with LIVE\n.\nFrom the\nSource\nand\nTarget\ndropdown\n                    lists, choose the policy versions that you want to compare.\n(Optional) From the\nPolicy section\ndropdown list, choose\n                    a specific policy section to compare. Options are:\nAll\n\u00e2\u0080\u0094 Compares all policy changes between the two\n                            policies. This is the default view.\nNetwork configuration\n\u00e2\u0080\u0094 Compares Border Gateway\n                            Protocol (BGP), Autonomous System Number (ASN), and core network edge\n                            locations.\nSegments\n\u00e2\u0080\u0094 Compares segment additions, deletions,\n                            or modifications.\nSegment actions\n\u00e2\u0080\u0094 Compares segment sharing and\n                            filtering.\nAttachment policies\n\u00e2\u0080\u0094 Compare how attachments map\n                            to segments.\nChoose\nCompare\n.\nThe\nResults of comparison\nsection displays the changes\n                    between the two policies. In the following example, the\nSegments\nof a current LIVE\nSource\npolicy are compared against the segment changes to an undeployed\nTarget\npolicy. The comparison shows that a new segment,\nsandbox\n, will be added when deploying the\nTarget\npolicy version.\nBy default, the changes for each policy display in separate policy windows. To\n                    see the results of the comparison line-by-line in a single window, turn the\nSplit\ntoggle off.\nDeploy a policy version\nA policy version is never deployed automatically. After creating a version of a\n            policy, you can deploy the policy version as your new\nLIVE\npolicy.\nTo implement a core policy version\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n, and then\n                    choose\nPolicy versions\n.\nOn the\nPolicy versions\npage, choose the policy that you\n                    want to deploy.\nChoose\nView or apply change set\n.\n(Optional) Do either of the following:\nTo review the proposed changes to the policy, choose\nDetails\nin the\nNew values\ncolumn.\nTo review the values of the original policy, choose\nDetails\nin the\nPrevious\n                                values\ncolumn.\nChoose\nApply change set\nto deploy the policy to become\n                    the new LIVE policy.\nOn the Policy versions page, the status of the policy deployment is\nExecuting policy\n.\nTo view the deployment details and progress, choose the policy link. The\nPolicy version - X\npage appears.\nThe\nPolicy details\npage displays information\n                            about the policy that you're deploying.\nThe\nJSON\npage displays policy information as a\n                            JSON file.\nThe\nExecution progress\npage displays the status\n                            of the policy deployment. You can view all events related to the\n                            deployment or you can view specific events. For example, you might want\n                            to view the deployment status of core network edges.\nWhen finished, the\nAlias\nchanges to\nLIVE/LATEST\nand the\nChange set\n                        state\nchanges to\nExecution succeeded\n. The\nChange set state\nof any previous policies that were in\n                    a\nReady to execute\nchange set state change to\nOut\n                        of date\n. This indicates that those policies are now considered\n                    older than the current LIVE policy.\nRestore an out-of-date policy\n                version\nAn out-of-date policy can be restored as a new version of a policy.\nTo restore an out-of-date policy version\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n, and then\n                    choose\nPolicy versions\n.\nUnder\nPolicy version ID\n, choose the out-of-date policy\n                    version that you want to restore, and then choose\nRestore\n.\nThe\nPolicy version ID\nis incremented by one from the last\n                    version listed on the\nPolicy versions\npage, and the\nChange set state\ndisplays as\nPending\n                        generation.\nWhen generated, the\nChange set state\nchanges to\nReady to execute\n, and the\nAlias\nchanges to\nLATEST\n. If any previous policies were in the\nReady to execute\nchange set state, those change to\nOut of date\n. This indicates that those policies are now\n                    considered older than the\nLATEST\n.\nDelete a policy version\nAny policy except your current LIVE policy can be deleted.\nTo delete a core policy version\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n, and then\n                    choose\nPolicy versions\n.\nUnder\nPolicy version ID\n, choose the policy version that\n                    you want to delete, and then choose\nDelete\n.\nConfirm that you want to delete the policy version, and then choose\nDelete\nagain.\nDeleted policy versions are removed from the\nPolicy\n                        versions\npage.\nDownload a policy\nDownload any policy version or your current LIVE policy as a JSON file.\nTo download a core policy\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n, and then\n                    choose\nPolicy versions\n.\nUnder\nPolicy version ID\n, choose the policy version that\n                    you want to download, and then choose\nDownload\n.\nThe policy downloads to your system as a JSON file. You can make changes to\n                    this JSON file as needed. You can create a new policy version using the contents\n                    of this file by pasting them into the Cloud WAN JSON editor. For the steps to\n                    create a policy using the JSON editor, see\nCreate a policy version using the JSON\n                editor\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAttachment policies\nCore network policy parameters\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policies-json.html": "Core network policy parameters - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\ncore-network-configuration\nsegments\nsegment-actions\nattachment-policies\nCore network policy parameters\nThe following sections describe the parameters that you use to create a core network\n        policy version using JSON. Your JSON file contains two sections that describe the policy\n        network settings and segments. You can then add two optional sections for defining segment\n        actions and attachment policies.\nFor example JSON policies, see\nCore network policy examples\n.\nTopics\ncore-network-configuration\nsegments\nsegment-actions\nattachment-policies\ncore-network-configuration\nThe core network configuration section defines the Regions where a core network should\n            operate.\nFor AWS Regions that are defined in the policy, the core network creates a Core\n            Network Edge where you can connect attachments. After it's created, each Core Network\n            Edge is peered with every other defined Region and is configured with\n            consistent segment and routing across all Regions. Regions can't be\n            removed until the associated attachments are deleted.\ncore-network-configuration\nis required.\nParameters\nThe following parameters are used in\ncore-network-configuration\n:\nasn-ranges\n\u00e2\u0080\u0094 The Autonomous System Numbers (ASNs) to assign to\n                        Core Network Edges. By default, the core network automatically assigns an\n                        ASN for each Core Network Edge, but you can optionally define the ASN in the\nedge-locations\nfor each Region. The ASN\n                        uses an array of integer ranges only from\n64512\nto\n65534\nand\n4200000000\nto\n4294967294\n. No other ASN ranges can be used.\nFor example, you might have the following:\n\"asn-ranges\": [\n                 \"64512-65534\",\n                 \"4200000000-4294967294\"\n                 ],\ninside-cidr-blocks\n\u00e2\u0080\u0094 (Optional) The Classless Inter-Domain\n                        Routing (CIDR) block range used to create tunnels for AWS Transit Gateway Connect.\n                        The format is standard AWS CIDR range (for example,\n10.0.1.0/24\n). You can optionally define the inside CIDR in\n                        the Core Network Edges section per Region. The minimum is a\n/24\nfor IPv4 or\n/64\nfor IPv6. You can provide multiple\n/24\nsubnets or a larger CIDR range. If you define a larger\n                        CIDR range, new Core Network Edges will be automatically assigned\n/24\nand\n/64\nsubnets from the larger CIDR. an\n                        Inside CIDR block is required for attaching Connect attachments to a Core\n                        Network Edge.\nvpn-ecmp-support\n\u00e2\u0080\u0094 (Optional) Indicate whether the core\n                        network forwards traffic over multiple equal-cost routes using VPN. The\n                        value can either be\ntrue\nor\nfalse\n. The default is\ntrue\n.\nedge-locations\n\u00e2\u0080\u0094 An array of AWS Region locations where you're\n                        creating Core Network Edges. The array is composed of the following\n                        parameters:\nlocation\n\u00e2\u0080\u0094 An AWS Region code, such as\nus-east-1\n.\nasn\n\u00e2\u0080\u0094 (Optional) The ASN of the Core Network Edge in an\n                                AWS Region. By default, the ASN will be a single integer\n                                automatically assigned from\nasn-ranges\n.\ninside-cidr-blocks\n\u00e2\u0080\u0094 (Optional) The local CIDR blocks for\n                                this Core Network Edge for AWS Transit Gateway Connect attachments. By\n                                default, this CIDR block will be one or more optional IPv4 and IPv6\n                                CIDR prefixes auto-assigned from\ninside-cidr-blocks\n.\nsegments\nThe segments section defines the different segments in the network. Here you can\n            provide descriptions, change defaults, and provide explicit regional, operational, and\n            route filters. The names defined for each segment are used in the segment-actions and\n            attachment-policies section. Each segment is created and operates as a completely\n            separate routing domain. By default, attachments can only communicate with other\n            attachments in the same segment.\nsegments\nis a required section.\nParameters\nThe following parameters are used in\nsegments\n:\nsegments\n\u00e2\u0080\u0094 At least one segment must be defined and composed of\n                        the following parameters:\nname\n\u00e2\u0080\u0094 The name of the segment. The\nname\nis a string used in other parts of the policy document, as well as\n                                in the console for metrics and other reference points. Valid\n                                characters are a\u00e2\u0080\u0093z, A\u00e2\u0080\u0093Z, and 0\u00e2\u0080\u00939.\nNote\nThere is no ARN or ID for a segment.\ndescription\n\u00e2\u0080\u0094 (Optional) A user-defined string describing\n                                the segment.\nedge-locations\n\u00e2\u0080\u0094 (Optional) Allows you to define a more\n                                restrictive set of Regions for a segment. The edge\n                                location must be a subset of the locations that are defined for\nedge-locations\nin the core-network-configuration.\n                                These locations use the AWS Region code. For example, you might\n                                want to use\nus-east-1\nas an edge\n                                location.\nisolate-attachments\n\u00e2\u0080\u0094 (Optional) This Boolean setting\n                                determines whether attachments on the same segment can communicate\n                                with each other. The default value is\nfalse\n. When set\n                                to\ntrue\n, the only routes available will either be\n                                shared routes through the share actions, which are attachments in\n                                other segments, or static routes. For example, you might have a\n                                segment dedicated to\ndevelopment\nthat should never\n                                allow VPCs to talk to each other, even if they\u00e2\u0080\u0099re on the same\n                                segment. In this example, you would keep the default parameter of\ntrue\n.\nNote\nRoutes coming from a route table attachment are not affected\n                                by the\nisolate-attachments\nparameter. You are\n                                responsible for managing routes propagating from their attached\n                                route tables. Routes flowing into the route table attachment\n                                from other attachments within the segment follow the standard\nisolate-attachments\nbehavior\nrequire-attachment-acceptance\n\u00e2\u0080\u0094 (Optional) This Boolean\n                                setting determines whether attachment requests are automatically\n                                approved or require acceptance. The default is\ntrue\n,\n                                indicating that attachment requests require acceptance. For example,\n                                you might use this setting to allow a\nsandbox\nsegment\n                                to allow any attachment request so that a core network or attachment\n                                administrator does not need to review and approve attachment\n                                requests. In this example,\nrequire-attachment-acceptance\nis set to\ntrue\n.\ndeny-filter\n\u00e2\u0080\u0094 (Optional) An array of segments that\n                                disallows routes from the segments listed in the array. It is\n                                applied only after routes have been shared in\nsegment-actions\n. If a segment is listed in the\ndeny-filter\n, attachments between the two segments\n                                will never have routes shared across them. For example, you might\n                                have a financial\npayment\nsegment that should\n                                never share routes with a\ndevelopment\nsegment,\n                                regardless of how many other share statements are created. Adding\n                                the\npayments\nsegment to the\ndeny-filter\nparameter prevents any shared routes\n                                from being created with other segments.\nallow-filter\n(optional) \u00e2\u0080\u0094 An array of segments that\n                                explicitly allows only routes from the segments that are listed in\n                                the array. Use the\nallow-filter\nsetting if a segment has a well-defined group of\n                                other segments that connectivity should be restricted to. It is\n                                applied after routes have been shared in\nsegment-actions\n. If a segment is listed in\nallow-filter\n, attachments between the two segments\n                                will have routes if they are also shared in the\nsegment-actions\narea. For example, you might have a\n                                segment named\nvideo-producer\nthat should only\n                                ever share routes with a\nvideo-distributor\nsegment, no\n                                matter how many other share statements are created.\nNote\nYou can use either\nallow-filter\nor\ndeny-filter\n, but you can't use\n                                both of them simultaneously. These are optional fields used to more\n                                explicitly control segment sharing. These parameters are not\n                                required in order to receive or send routes between segments.\nsegment-actions\nsegment-actions\ndefine how routing works between segments. By default,\n            attachments can only communicate with other attachments in the same segment. You can use\nsegment-actions\nto:\nshare\nattachments across segments. Use the\nshare\naction so that attachments from two different segments can reach each other. For\n                    example, if you\u00e2\u0080\u0099ve set a segment to\nisolate-attachments\n, the\n                    segment can't reach anything unless it has a\nshare\nrelationship\n                    with other segments. The\nshare\nstatement creates routes between\n                    attachments in the provided segments. If you're creating a share between one\n                    segment and an array of segments, the segment to share allows attachments from\n                    the segments in the array. However, sharing does not occur between the segments\n                    within the array. For example, if a segment named\nshared-service\nis\n                    defined as a segment with a\nshare-with\narray of segments named\nprod\nand\nprod2\n, the network policy will allow the\n                    attachments in both\nprod\nand\nprod2\nto reach\nshared-service\n. But the network policy will not allow sharing\n                    of attachments between\nprod\nand\nprod2\n.\ncreate-route\nto define a static route in a segment.\nNote\nSharing routes occurs between segments. All attachments connected to the same\n                segment will share a similar routing behavior globally. If some attachments differ\n                from other attachments in the same segment, those attachments should be within their\n                own segments. This is intentional to prevent a proliferation of segments where one\n                segment equals one attachment.\nsegment-actions\nis an optional section.\nParameters\nThe following parameters are used in\nsegment-actions\n:\naction\n\u00e2\u0080\u0094 The action to take for the chosen segment. The\naction\nmust be either\nshare\nor\ncreate-route\n. The following parameters are described for\n                        these actions.\nshare\nparameters. If the action to take is share, the following\n                    parameters are required.\nshare\nis the default action\n                    behavior.\nsegment\n\u00e2\u0080\u0094 The name of the segment created in the\nsegments\nsection to share.\nmode\n\u00e2\u0080\u0094\nattachment-route\nis the only\n                                supported value. This mode places the attachment and return routes\n                                in each of the\nshare-with\nsegments. For example, if\n                                there are static routes or routes shared from other segments, those\n                                will not be shared through the\nattachment-route\nmode\n.\nshare-with\n\u00e2\u0080\u0094 An array of segments that will have\n                                reachability with the segment defined. The core network will create\n                                mutual advertisements between these\nshare-with\nsegments\n                                and the defined segment attachments.\nFor example, if you create a\nshare\nbetween a segment\n                                named\nshared-services\nand share-with \u00e2\u0080\u009cA\u00e2\u0080\u009d and \u00e2\u0080\u009cB\u00e2\u0080\u009d,\n                                this allows the attachments from \u00e2\u0080\u009cA\u00e2\u0080\u009d and \u00e2\u0080\u009cB\u00e2\u0080\u009d to reach \u00e2\u0080\u009cShared\n                                services\u00e2\u0080\u009d. \u00e2\u0080\u009cA\u00e2\u0080\u009d and \u00e2\u0080\u009cB\u00e2\u0080\u009d cannot reach each other, and any static\n                                routes or routes propagated from other segments are not shared among\n                                these segments.\nUse\n\u00e2\u0080\u009c\u00e2\u0080\u009d\nas a wild card to reference all segments instead\n                                of explicitly calling out segments individually.\nexcept\n\u00e2\u0080\u0094 Explicitly exclude segments, typically used when\n                                sharing with\n                                \u00e2\u0080\u009c\n*\n\u00e2\u0080\u009d.\ncreate-route\nparameters. If the action is\ncreate-route\n, the following are the required and optional\n                    parameters.\nsegment\n\u00e2\u0080\u0094 The name of the segment created in the\nsegments\nsection, which must be a static route. If\n                                you need to duplicate the static route in multiple segments, use\n                                multiple\ncreate-route\nstatements.\ndestination-cidr-blocks\n\u00e2\u0080\u0094 The static route to create. A\n                                segment should have the same routing behavior for a certain\n                                destination. This means if one Region has a route to\n                                a destination, other Regions should also have that\n                                route, but with potentially different paths. You can define the IPv4\n                                and IPv6 CIDR notation for each AWS Region. For example,\n10.1.0.0/16\nor\n2001:db8::/56\n. This is\n                                an array of CIDR notation strings.\ndestinations\n\u00e2\u0080\u0094 Defines the list of attachments to send\n                                the traffic to, with up to one\nattachment-id\nper\n                                Region. Because a segment is a global object, you\n                                should design your routing so that every AWS Region has an\n                                attachment in the destinations list. Regions that do\n                                not have attachments in this list will receive a propagated version\n                                of this route through cross-Region peering\n                                connections, and will use the static route of another\n                                Region. If multiple attachments are defined for a\n                                single Region, a single attachment will be chosen at\n                                random (deterministically random). This is the same case for\n                                multiple attachments that are defined across multiple remote\n                                Regions.  Instead of an array of attachments, you\n                                can also provide a\nblackhole\n, which drops all traffic\n                                to the\ndestination-cidr-blocks\n.\nNote\nAWS Cloud WAN does not propagate blackhole routes.\ndescription\n\u00e2\u0080\u0094 (Optional) A user-defined description to\n                                help further identify this route.\nattachment-policies\nIn a core network, all attachments use the\nattachment-policies\nsection to\n            map an attachment to a segment. Instead of manually associating a segment to each\n            attachment, attachments use tags. The tags are then used to associate the attachment\n            to the specified segment. A core network supports the following types of\n            attachments:\nTransit Gateway Connect \u00e2\u0080\u0094\nconnect\nVPC \u00e2\u0080\u0094\nvpc\nVPN \u00e2\u0080\u0094\nsite-to-site-vpn\nTransit Gateway route table \u00e2\u0080\u0094\ntransit-gateway-route-table\nFor example, to attach a VPC to a core network, either the VPC owner or the core\n            network owner would create a core network attachment in the core network using either\n            the AWS Cloud WAN console or the Network Manager\ncreate-attachment\ncommand line or API. The\n            attachment itself will have tags analyzed by the attachment policy, and not the tags\n            associated with the VPC resource. A tag on the attachment such as\n\u00e2\u0080\u009cenvironment\u00e2\u0080\u009d :\n                \u00e2\u0080\u009cdevelopment\u00e2\u0080\u009d\nwould then map to a\ndevelopment\nsegment.\n            Attachment policy rules can also use available metadata from within the conditions, such\n            as\naccount ID\n,\ntype\nof attachment, the\nresource\n                ID\n(for example,\nvpc-id\n), or the AWS Region.\nRules are assigned numbers for processing, and are processed in order by number, from\n            lowest to highest. When a match is made, the action is taken and no further rules are\n            processed. A single attachment can only be associated to a single segment. If no rules\n            are matched (for example, there might be a misspelled tag value), the attachment won't\n            be associated to a segment.\nWhen an attachment matches a rule, the attachment attaches to the segment defined\nsegment\n. Each attachment can either be associated without acceptance or\n            require a separate action to approve the attachment association. By default, every\n            segment requires all attachments to be accepted. The acceptance requirement can be\n            turned off with\n\u00e2\u0080\u009crequire-attachment-acceptance\u00e2\u0080\u009d : false\nin the\nsegment\ndefinition. When\nrequire-acceptance\nis\nfalse\n, any attachment that maps to the segment is automatically added.\n            For example, a developer\nsandbox\nsegment might want to allow any attachment\n            with the correct tag to be added to the network. With the\nattachment-policies\n, you can add additional controls on a per-rule\n            basis. For example, if attachments from the\nus-east-2\nRegion require acceptance but other Regions do not, you\n            can set the\n\u00e2\u0080\u009crequire-acceptance\u00e2\u0080\u009d : true\nsetting on a rule that is specific\n            to\nus-east-2\n.\nYou can apply multiple conditions using either\nand\nor\nor\nlogic to create a single rule. For example, you can state that if the account is\n111122223333\nand includes the tag\n\u00e2\u0080\u009cstage\u00e2\u0080\u009d :\n                \u00e2\u0080\u009cdevelopment\u00e2\u0080\u009d\nit should map to a specified segment. If you don't want to use\n            tags to map attachments, you could use the\nresource-id\nto manually map each\n            incoming connection to a segment. However, this approach requires changing the policy\n            document every time new attachments are added and can reduce the operability of your\n            current LIVE policy.\nattachment-policies\nis an optional section.\nParameters\nThe following parameters are used in\nattachment-policies\n:\nrule-number\n\u00e2\u0080\u0094 An integer from\n1\nto\n65535\nindicating the rule's order number. Rules are\n                        processed in order from the lowest numbered rule to the highest. Rules stop\n                        processing when a rule is matched. It's important to make sure that you\n                        number your rules in the exact order that you want them processed.\ndescription\n\u00e2\u0080\u0094 (Optional) A user-defined description that\n                        further helps identify the rule.\ncondition-logic\n\u00e2\u0080\u0094 Evaluates a condition on either\nand\nor\nor\n. This is a mandatory parameter only\n                        if you have more than one condition. The conditions themselves are\n                        unordered, so the\ncondition-logic\napplies to all of the\n                        conditions for a rule, which also means nested conditions of\nand\nor\nor\nare not supported. Use\nand\nif you want to the rule to match on all of the\n                        conditions, or use\nor\nif you want the rule to match on one of\n                        the conditions.\nconditions\n\u00e2\u0080\u0094 An array composed of one of the four following\n                        types:\ntype\nwhere the\nvalue\nis\nany\n\u00e2\u0080\u0094\n                                This matches any request. For example, you could use any if you're\n                                only using one segment that everything should map to. Or, you could\n                                use this as a fallback segment if you want all attachments that\n                                don't match a rule to map to a known segment.\ntype\nwhere\nvalue\n=\nresource-id\n|\naccount-id\n|\nregion\n|\nattachment-type\noperator\n=\nequals\n|\nnot-equals\n|\ncontains\n|\nbegins-with\nThis type is the\nvalue\ncompared against the\noperator\n. For example, you might use the\ncondition\ntype\nin the following way:\nwhere the\nresource-id\nuses the resource\n                                        associated with the attachment (for example,\nvpc-1234567890123456\n)\nwhere the\naccount-id\nuses the account ID of\n                                        the requesting attachment (for example,\n111122223333\n)\nwhere the\nRegion\nuses the\n                                        Region code for the requesting attachment\n                                        (for example,\nus-east-1\n), and\nwhere the\nattachment-type\nuses\nvpc\n,\nsite-to-site-vpn\n,\nconnect\n, or\ntransit-gateway-route-table\nstrings\ntype\nwhere the\nvalue\nis\ntag-exists\n\u00e2\u0080\u0094 A string that matches against any of\n                                the keys defined on the attachment. Use this type when the value of\n                                the tag is not important, or if there is only a key without a\n                                value.\ntype\nwhere the\nvalue\nis\ntag-value\n\u00e2\u0080\u0094 Evaluates the following key value\n                                parameters:\nkey\n\u00e2\u0080\u0094 A string that matches against any of\n                                        the keys defined on the attachment. It must be an exact\n                                        match of the key.\noperator\n\u00e2\u0080\u0094 The operation to perform against\n                                        the key value. Must be one of\nequals\n|\nnot-equals\n|\ncontains\n|\nbegins-with\n.\nvalue\n\u00e2\u0080\u0094 The value of the key to be evaluated\n                                        for the operator.\nIn this example,\n\u00e2\u0080\u009ctype\u00e2\u0080\u009d : \u00e2\u0080\u009ctag-value\u00e2\u0080\u009d,\n\u00e2\u0080\u009ckey\u00e2\u0080\u009d : \u00e2\u0080\u009cproject\u00e2\u0080\u009d,\n\u00e2\u0080\u009coperator\u00e2\u0080\u009d : \u00e2\u0080\u009cbegins-with\u00e2\u0080\u009d,\n\u00e2\u0080\u009cvalue\u00e2\u0080\u009d : \u00e2\u0080\u009csta\u00e2\u0080\u009d\nAny condition where the value of\nproject\nbegins with\nsta\nis matched against the condition. This would\n                                return\nstaging\n,\nstage\n, etc.\ndescription\n\u00e2\u0080\u0094 A user-defined description to help further\n                        identify the attachment policy.\naction\n\u00e2\u0080\u0094 The action to take when a condition is true.\nassociation-method\n\u00e2\u0080\u0094 Defines how a segment is mapped.\n                                Values can be\nconstant\nor\ntag\n.\nconstant\nstatically defines the segment to\n                                associate the attachment to.\ntag\nuses the value of a\n                                tag to dynamically try to map to a segment.\nsegment\n\u00e2\u0080\u0094 The name of the segment to share as defined\n                                in the\nsegments\nsection. This is used only when the\nassociation-method\nis constant.\ntag-value-of-key\n\u00e2\u0080\u0094 Maps the attachment to the value\n                                of a known key. This is used with the\nassociation-method\nis\ntag\n. For example a tag of\n\u00e2\u0080\u009cstage\u00e2\u0080\u009d :\n                                    \u00e2\u0080\u009ctest\u00e2\u0080\u009d,\nwill map to a segment named\ntest\n.\n                                The value must exactly match the name of a segment. This allows you\n                                to have many segments, but use only a single rule without having to\n                                define multiple nearly identical conditions. This prevents creating\n                                many similar conditions that all use the same keys to map to\n                                segments.\nrequire-acceptance\n\u00e2\u0080\u0094 Determines if this mapping\n                                should override the segment value for\nrequire-attachment-acceptance\n. You can only set\n                                this to\ntrue\n, indicating that this setting applies only\n                                to segments that have\nrequire-attachment-acceptance\nset\n                                to\nfalse\n. If the segment already has the default\nrequire-attachment-acceptance\n, you can set this to\n                                inherit segment\u00e2\u0080\u0099s acceptance value.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCore network policies\nCore network policy examples\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-examples.html": "Core network policy examples - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nCore network policy examples\nThis section provides example JSON AWS Cloud WAN policies. You can modify any of these examples\n        for your own use. For a description of the required and optional parameters in the JSON\n        file, see\nCore network policy parameters\n.\nTopics\nExample: One segment, one AWS Region\nExample: Two segments and multiple\n            AWS Regions\nExample: Edge consolidation with isolated VPCs\nExample: Three-stage development environment using both tag values and manual shared services mapping\nExample: Distributed WAN without VPCs\nExample: Insert firewalls between on-premises and VPCs\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCore network policy parameters\nExample: One segment, one AWS Region\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-examples-one-segment-region.html": "Example: One segment, one AWS Region - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nExample: One segment, one AWS Region\nThis policy sets up one network in\nus-east-1\nwith the name\nmy-network\n. Any attachment is automatically added to the network\n        without requiring approval.\n{\n\"version\": \"2021.12\",\n    \"core-network-configuration\":\n{\n\"asn-ranges\": [\"64512-65534\"],\n        \"edge-locations\": [\n{\n\"location\": \"us-east-1\"}\n        ]\n    },\n    \"segments\": [\n{\n\"name\": \"mynetwork\",\n            \"require-attachment-acceptance\": false\n        }\n    ],\n    \"attachment-policies\": [\n{\n\"rule-number\": 100,\n        \"condition-logic\": \"and\",\n        \"conditions\": [\n{\n\"type\": \"any\" }],\n        \"action\":\n{\n\"association-method\": \"constant\",\n            \"segment\": \"mynetwork\"\n            }\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCore network policy examples\nExample: Two segments, multiple Regions\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-examples-two-segments-regions.html": "Example: Two segments and multiple AWS Regions - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nExample: Two segments and multiple\n            AWS Regions\nThis policy sets up two networks,\nSecured\nand\nNon-Secured\n,\n        across three AWS Regions. Attachments with the tag\n\"Network\" : \"Secured\"\nmap\n        to\n\"Secured\"\n, while attachments with the tag\n\"Network\" :\n            \"Non-Secured\"\nmap to\n\"Non-Secured\"\n. All attachments require\n        acceptance. Attachments can only talk within their segment but not across segments.\n{\n\"version\": \"2021.12\",\n    \"core-network-configuration\":\n{\n\"asn-ranges\": [\"64512-65534\"],\n        \"edge-locations\": [\n{\n\"location\": \"us-east-1\"},\n{\n\"location\": \"us-east-2\"},\n{\n\"location\": \"eu-west-1\"}\n        ]\n    },\n    \"segments\": [\n{\n\"name\": \"secured\"},\n{\n\"name\": \"nonSecured\"}\n    ],\n    \"attachment-policies\": [\n{\n\"rule-number\": 100,\n            \"conditions\": [\n{\n\"type\": \"tag-value\",\n                \"key\": \"Network\",\n                \"value\": \"Secured\",\n                \"operator\": \"equals\"\n            }],\n            \"action\":\n{\n\"association-method\": \"constant\",\n            \"segment\": \"secured\"\n            }\n        },\n{\n\"rule-number\": 200,\n            \"conditions\": [\n{\n\"type\": \"tag-value\",\n                \"key\": \"Network\",\n                \"value\": \"Non-Secured\",\n                \"operator\": \"equals\"\n        }],\n        \"action\":\n{\n\"association-method\": \"constant\",\n            \"segment\": \"non-secured\"\n            }\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExample: One segment, one AWS Region\nExample: Edge consolidation\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-examples-edge-consolidation.html": "Example: Edge consolidation with isolated VPCs - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nExample: Edge consolidation with isolated VPCs\nThis policy creates two segments,\ndevelopment\nand\nhybrid\n. If an\n        attachment comes from a VPC, it will be mapped automatically to the development segment.\n        VPCs that are attached to the development segment cannot talk to each other, and can talk\n        only to the VPN. The development segment has a default route that points to the two\n        attachments (one for each Region) and routes all traffic back on-premises.\n{\n\"version\": \"2021.12\",\n    \"core-network-configuration\":\n{\n\"asn-ranges\": [\"64512-65534\"],\n        \"edge-locations\": [\n{\n\"location\": \"us-east-1\"},\n{\n\"location\": \"eu-west-1\"}\n        ]\n    },\n    \"segments\": [\n{\n\"name\": \"development\",\n            \"isolate-attachments\": true,\n            \"require-attachment-acceptance\": false\n        },\n{\n\"name\": \"hybrid\"}\n    ],\n    \"segment-actions\": [\n{\n\"action\": \"share\",\n            \"mode\": \"attachment-route\",\n            \"segment\": \"development\",\n            \"share-with\": [\"hybrid\"]\n        },\n{\n\"action\": \"create-route\",\n            \"destination-cidr-blocks\": [\"0.0.0.0/0\"],\n            \"segment\": \"development\",\n            \"destinations\": [\"attachment-12355678901234567\", \"attachment-23456789012345678\"]\n        }\n    ],\n    \"attachment-policies\": [\n{\n\"rule-number\": 10,\n            \"conditions\": [\n{\n\"type\": \"attachment-type\",\n                    \"operator\": \"equals\",\n                    \"value\": \"vpc\"\n                }\n            ],\n            \"action\":\n{\n\"association-method\": \"constant\",\n                \"segment\": \"development\"\n            }\n        },\n{\n\"rule-number\": 20,\n            \"conditions\": [\n{\n\"type\": \"attachment-type\",\n                \"operator\": \"equals\",\n                \"value\": \"vpn\"\n            }],\n            \"action\":\n{\n\"association-method\": \"constant\",\n                \"segment\": \"hybrid\"\n            }\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExample: Two segments, multiple Regions\nExample: Development environment with tags and shared services\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-examples-three-stage.html": "Example: Three-stage development environment using both tag values and manual shared services mapping - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nExample: Three-stage development environment using both tag values and manual shared services mapping\nThis policy creates a common software development lifecycle policy. It includes three\n        development stages: development, testing, and production. VPCs in any one of these segments\n        can\u00e2\u0080\u0099t talk to each other because\nisolate-attachments\nis set to true. These VPC\n        attachments are tagged with their stage, which directly maps to the name of the segment that\n        they should belong to. If developers use the Development or Testing stages, the VPC is\n        automatically mapped without approval, but Production requires approval. There is an\n        additional\nsharedservices\nsegment, which includes both a VPC and a site-to-site\n        VPN. These attachments don\u00e2\u0080\u0099t use tags, but are instead mapped by their explicit resource-ID.\n        The\nsharedservices\nsegment is shared with the isolated development environments\n        so that they can reach on-premises through VPN and can also reach the shared services\n        VPC.\n{\n\"version\": \"2021.12\",\n    \"core-network-configuration\":\n{\n\"asn-ranges\": [\"64512-65534\"],\n        \"edge-locations\": [\n{\n\"location\": \"us-east-1\"},\n{\n\"location\": \"us-west-2\"}\n        ]\n    },\n    \"segments\": [\n{\n\"name\": \"development\",\n            \"isolate-attachments\": true,\n            \"require-attachment-acceptance\": false\n        },\n{\n\"name\": \"testing\",\n            \"isolate-attachments\": true,\n            \"require-attachment-acceptance\": false\n        },\n{\n\"name\": \"production\",\n            \"isolate-attachments\": true,\n            \"require-attachment-acceptance\": true\n        },\n{\n\"name\": \"sharedServices\"}\n    ],\n    \"segment-actions\": [\n{\n\"action\": \"share\",\n            \"mode\": \"attachment-route\",\n            \"segment\": \"sharedservices\",\n            \"share-with\": \"*\"\n        }\n    ],\n    \"attachment-policies\": [\n{\n\"rule-number\": 1000,\n            \"conditions\": [\n{\n\"type\": \"tag-exists\",\n                \"key\": \"Stage\"\n            }],\n            \"action\":\n{\n\"association-method\": \"tag\",\n                \"tag-value-of-key\": \"Stage\"\n            }\n        },\n{\n\"rule-number\": 1500,\n            \"conditions\": [\n{\n\"type\": \"resource-id\",\n                \"operator\": \"equals\",\n                \"value\": \"vpc-1234567890123456\"\n            }],\n            \"action\":\n{\n\"association-method\": \"constant\",\n                \"segment\": \"sharedservices\"\n            }\n        },\n{\n\"rule-number\": 1600,\n            \"conditions\": [\n{\n\"type\": \"resource-id\",\n                \"operator\": \"equals\",\n                \"value\": \"vpn-1234567890123456\"\n            }],\n            \"action\":\n{\n\"association-method\": \"constant\",\n                \"segment\": \"sharedservices\"\n            }\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExample: Edge consolidation\nExample: Distributed WAN\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-examples-distributed-wan.html": "Example: Distributed WAN without VPCs - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nExample: Distributed WAN without VPCs\nThis network policy creates a network across four Regions for a global wide area network\n        (WAN). This WAN has no connectivity to AWS workloads, and is using the AWS network only\n        as transport between sites and for internet access for sales offices. The IoT network is\n        still under security scrutiny, so attachments within the IoT segment cannot reach each\n        other. However, in this example, SD-WAN has been deployed to the engineering sites and parts\n        of the IoT network. Engineering needs direct access to the IoT network, which is currently a\n        mixture of VPN and SD-WAN. In some cases, the SD-WAN network takes a direct route between\n        sites. When crossing the engineering and IoT segments, it uses the AWS backbone as\n        transport. Because the SD-WAN solution uses Transit Gateway Connect, there is a general pool\n        assigned for Core Network Edge IP address pools. To reduce effort, the administrators\n        allowed the\nAssign-to\ntag to define which segment the new attachments should be\n        mapped to, but all attachments need to be approved (using the default value for\nrequire-attachment-acceptance\n).\n{\n\"version\": \"2021.12\",\n    \"core-network-configuration\":\n{\n\"asn-ranges\": [\"64512-65534\"],\n        \"inside-cidr-blocks\": [\"100.65.0.0/16\"],\n        \"edge-locations\": [\n{\n\"location\": \"eu-central-1\"},\n{\n\"location\": \"us-west-2\"},\n{\n\"location\": \"us-east-1\"},\n{\n\"location\": \"eu-west-1\"}\n        ]\n    },\n    \"segments\": [\n{\n\"name\": \"sales\"},\n{\n\"name\": \"testing\"},\n{\n\"name\": \"iot\",\n        \"isolate-attachments\": true\n        },\n{\n\"name\": \"internet\"},\n{\n\"name\": \"engineering\"}\n    ],\n    \"segment-actions\": [\n{\n\"action\": \"share\",\n        \"mode\": \"attachment-route\",\n        \"segment\": \"internet\",\n        \"share-with\": [\"sales\"]\n        },\n{\n\"action\": \"share\",\n        \"mode\": \"attachment-route\",\n        \"segment\": \"iot\",\n        \"share-with\": [\"engineering\"]\n        },\n{\n\"action\": \"create-route\",\n            \"destination-cidr-blocks\": [\"0.0.0.0/0\"],\n            \"segment\": \"sales\",\n            \"destinations\": [\n                \"attachment-12355678901234567\",\n                \"attachment-23456789012345678\",\n                \"attachment-35567890123456790\",\n                \"attachment-4567890123456789a\"\n            ]\n        }\n    ],\n    \"attachment-policies\": [\n{\n\"rule-number\": 1000,\n            \"conditions\": [\n{\n\"type\": \"tag-exists\",\n                \"key\": \"Assign-to\"\n                }\n            ],\n            \"action\":\n{\n\"association-method\": \"tag\",\n                \"tag-value-of-key\": \"Assign-to\"\n            }\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExample: Development environment with tags and shared services\nExample: Insert firewalls\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-examples-firewalls.html": "Example: Insert firewalls between on-premises and VPCs - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nExample: Insert firewalls between on-premises and VPCs\nIn this policy, the goal is to send all traffic from on-premises to AWS through a\n        firewall. The customer has a VPC with a firewall (AWS Network Firewall, Gateway Load Balancer, or EC2/Marketplace\n        offering) already configured in the VPC. The firewall is responsible for inspecting traffic\n        from on-premises to AWS, and from AWS VPCs in the Internal-apps segment to the\n        internet.\nSimilar to\nExample: Edge\n            consolidation\n, the VPC and VPNs are mapped to segments based on the attachment\n        type. The one exception is the firewall VPC, which needs its own specific segment so that it\n        can be shared separately with the other segments. In order to force the traffic coming in\n        from the VPN to a firewall, static routes are configured that point to the firewall. In this\n        case, the AWS VPCs in the Internal-apps segment are using the\n172.16.0.0/16\nCIDR space. All other private (RFC1918) space is advertised from the VPN connection. In this\n        case, the policy uses the share and static-route options to define how each of the three\n        segments receive the correct routes to send traffic through a middle box.\n{\n\"version\": \"2021.12\",\n    \"core-network-configuration\":\n{\n\"asn-ranges\": [\"64512-65534\"],\n        \"edge-locations\": [\n{\n\"location\": \"us-east-1\"},\n{\n\"location\": \"us-west-2\"}\n        ]\n    },\n    \"segments\": [\n{\n\"name\": \"internalApps\"},\n{\n\"name\": \"firewall\"},\n{\n\"name\": \"onPremises\"}\n    ],\n    \"segment-actions\": [\n{\n\"action\": \"create-route\",\n            \"destination-cidr-blocks\": [\"0.0.0.0/0\"],\n            \"segment\": \"internal-apps\",\n            \"destinations\": [\"attachment-deadbeef901234567\",\"attachment-eeeeee00000000000\"],\n            \"description\": \"Send all internet headed on-premises through the firewall\"\n        },\n{\n\"action\": \"create-route\",\n            \"destination-cidr-blocks\": [\"0.0.0.0/0\"],\n            \"segment\": \"on-premises\",\n            \"destinations\": [ \"attachment-deadbeef901234567\", \"attachment-eeeeee00000000000\"],\n            \"description\": \"Send all traffic received from the VPN through the firewall\"\n            },\n{\n\"action\": \"share\",\n            \"mode\": \"attachment-route\",\n            \"segment\": \"firewall\",\n            \"share-with\": [\"internal-apps\", \"on-premises\"]\n        }\n    ],\n    \"attachment-policies\": [\n{\n\"rule-number\": 500,\n            \"description\": \"We\u00e2\u0080\u0099ll do our specific policies before we do attachment types.\",\n            \"conditions\": [\n{\n\"type\": \"tag-value\",\n                \"key\": \"core-network\",\n                \"operator\": \"equals\",\n                \"value\": \"firewall\"\n            }],\n            \"action\":\n{\n\"association-method\": \"constant\",\n                \"segment\": \"firewall\"\n            }\n        },\n{\n\"rule-number\": 1000,\n            \"description\": \"Let\u00e2\u0080\u0099s assume all VPCs are internal apps\",\n            \"conditions\": [\n{\n\"type\": \"attachment-type\",\n                \"operator\": \"equals\",\n                \"value\": \"vpc\"\n            }],\n            \"action\":\n{\n\"association-method\": \"constant\",\n                \"segment\": \"internal-apps\"\n            }\n        },\n{\n\"rule-number\": 1500,\n            \"description\": \"Let\u00e2\u0080\u0099s also assume all VPNs are from on-premises\",\n            \"conditions\": [\n{\n\"type\": \"attachment-type\",\n                \"operator\": \"equals\",\n                \"value\": \"site-to-site-vpn\"\n            }],\n            \"action\":\n{\n\"association-method\": \"constant\",\n                \"segment\": \"on-premises\"\n            }\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExample: Distributed WAN\nAttachments\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-attachments-working-with.html": "Attachments - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nViewing and editing\n                attachments\nAttachment acceptance\nDelete attachments\nAttachments\nYou can modify or delete any of your core network attachments on the\nAttachments\npage by using either the AWS Cloud WAN console or the command\n        line or API.\nViewing and editing\n                attachments\nThis section describes viewing and editing your core network attachments either by\n            using the console, or by using the command line or API.\nNote\nYou can only view transit gateway route table attachments or modify tags.\nTopics\nConnect\n                    attachments\nConnect peer\n                    attachments\nVPC attachments\nSite-to-Site VPN attachments\nTransit gateway route table\n                    attachments\nView and edit attachments using the command\n                    line or API\nConnect\n                    attachments\nTo view and edit a Connect peer attachment\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nSelect the check box for an attachment where the\nResource\n                            Type\nis\nConnect\n. Details about the\n                        attachment are displayed, as well as any Connect peers and tags that are\n                        associated with the attachment. You can add new Connect peers and add,\n                        remove, or edit tags.\nTo add a new Connect peer attachment, see\nAdd a Connect peer\n.\nTo add or edit attachment Tags, choose the\nTags\ntab. The current list of tags\n                                associated with this attachment are displayed. Choose\nEdit\n                                    tags\nto modify or delete current tags, and to add new\n                                tags.\nChoose\nEdit\n.\nOn the\nEdit attachment\npage, you can edit the subnet\n                        configuration and the tags.\nIf you made any changes, choose\nEdit attachment\nto\n                        save the changes. The\nAttachments\npage displays along\n                        with a confirmation that the attachment was modified successfully.\nConnect peer\n                    attachments\nTo view and edit a Connect peer attachment\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nSelect the check box for an attachment where the\nResource\n                            Type\nis\nConnect\n. Details about the\n                        attachment are displayed in the lower part of the page. In this section, you\n                        can also edit the attachment Tags by choosing the\nTags\ntab.\nChoose\nEdit\n.\nOn the\nEdit attachment\npage, you can edit the subnet\n                        configuration and the tags.\nIf you made any changes, choose\nEdit attachment\nto\n                        save the changes. The\nAttachments\npage displays along\n                        with a confirmation that the attachment was modified successfully.\nVPC attachments\nTo view and edit a VPC attachment\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nSelect the check box for an attachment where the\nResource\n                            Type\nis\nVPC\n. Details about the\n                        attachment are displayed in the lower part of the page. In this section, you\n                        can also edit the attachment Tags by choosing the\nTags\ntab.\nChoose\nEdit\n.\nOn the\nEdit attachment\npage, do any of the\n                        following:\nEnable or disable appliance mode support.\nEnable or disable IPv6 support.\nAdd or remove subnets IDs.\nAdd or remove tags.\nIf you made any changes, choose\nEdit attachment\nto\n                        save the changes. The\nAttachments\npage displays along\n                        with a confirmation that the attachment was modified successfully.\nSite-to-Site VPN attachments\nTo view and edit a Site-to-Site VPN attachment\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nSelect the check box for an attachment where the\nResource\n                            Type\nis\nVPN\n. Details about the\n                        attachment are displayed in the lower part of the page. You can add, remove,\n                        or edit the current attachment tags by choosing the\nTags\ntab.\nChoose\nEdit\n.\nOn the\nEdit attachment\npage, you can edit the subnet\n                        configuration and the tags.\nIf you made any changes, choose\nEdit attachment\nto\n                        save your changes. The\nAttachments\npage displays along\n                        with a confirmation that the attachment was modified successfully.\nTransit gateway route table\n                    attachments\nYou can only view transit gateway route table attachments or modify tags.\nTo view a transit gateway route table attachment\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nSelect the check box for an attachment where the\nResource\n                            Type\nis\nTransit gateway route table\n.\n                        Details about the attachment are displayed in the lower part of the page. In\n                        this section, you can also edit the attachment Tags by choosing the\nTags\ntab.\nIn the details section, choose the\nTags\ntab.\nChoose\nAdd/Update\ntags.\nIn the\nTags\nsection, add\nKey\nand\nValue\ntags to help identify this transit gateway route table.\n                        You can add multiple tags by choosing\nAdd tag\n, or\n                        remove any tag by choosing\nRemove tag\n.\nWhen finished, choose\nEdit attachment\n.\nIf you made any changes, choose\nEdit attachment\nto\n                        save the changes. The\nAttachments\npage displays along\n                        with a confirmation that the attachment was modified successfully.\nView and edit attachments using the command\n                    line or API\nUse the command line or API to view and edit any of your core network\n                attachments.\nTo view or edit a core network attachment using the command line or\n                    API\nFor a Connect attachment, see\nget-connect-attachment\n.\nFor a Connect peer attachment, see\nget-connect-peer\n.\nFor a VPC attachment, see\nget-vpc-attachment\n.\nFor a Site-to-Site VPN attachment, see\nget-site-to-site-vpn-attachment\n.\nFor a transit gateway route table attachment, see\nget-transit-gateway-route-table-attachment\n.\nYou can only view transit gateway route table attachments.\nAttachment acceptance\nWhen you create an attachment and associate it to a segment that requires an\n            acceptance from the core network owner, the newly created attachment goes into a\nPending attachment acceptance\nstate. The core network owner has\n            to review the attachment and choose to accept or reject the request.\nTo accept or reject an attachment using the console\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nSelect the check box for the specific attachment that is in the\nPending attachment acceptance\nstate. Details about the\n                    attachment are displayed in the lower part of the page.\nChoose\nAccept\nor\nReject\n.\nIf you chose\nAccept\n, the attachment goes into a\nCreating (Accept)\nstate. If you chose\nReject\n, the attachment goes into a\nRejected\n                        (Reject)\nstate.\nDelete attachments\nYou can delete any attachment from your core network. Deleted attachments can't be\n            recovered. This section including the steps to delete an attachment using the AWS Cloud WAN\n            console or by using the command line or API.\nTo delete an attachment using the console\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nSelect the check box for the attachment that you want to delete.\nChoose\nDelete\n.\nConfirm that you want to delete the attachment by choosing\nDelete\nagain.\nThe attachment is removed from the\nAttachments\npage.\nUse the command line or API to delete any of your core network attachments.\nTo delete a core network attachment using the command line or API\nFor a Connect, transit gateway route table, VPC, or Site-to-Site VPN\n                    attachment, see\ndelete-attachment\n.\nFor a Connect peer attachment, see\ndelete-transit-gateway-connect-peer\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExample: Insert firewalls\nPeerings and routing\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-peerings.html": "AWS Cloud WAN peerings and routing - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nRoute evaluation\nLimitations\nCreate a peering\nView peering details\nDelete a peering\nEdit peering tags\nAWS Cloud WAN peerings and routing\nAWS Cloud WAN peering connections allow you to interconnect your core network edge with an\n        AWS Transit Gateway in the same Region. Peering connections between Cloud WAN and\n        transit gateways support dynamic routing with automatic exchange of routes using BGP. You can use\n        route table attachments on the peering connection to selectively exchange routes between a\n        specific transit gateway route table and a Cloud WAN network segment for end-to-end segmentation and\n        network isolation.\nThe peering connection supports policy-based routing to implement segment isolation across\n        peering connections. Using this capability, routes are selectively propagated between a\n        route table in transit gateway and a core network segment. You first need to create the peering\n        connection and associate a policy table to the transit gateway peering attachment. A policy table\n        contains rules for matching network traffic by a specific route table or segment, and then\n        maps traffic that matches the rule to a target route table for determining routing behavior.\nWhen you create a peering connection, you can either create a new policy table or use an\n        existing policy table for association with the peering attachment. As you create your route\n        table attachments, the policy table is populated automatically with the policy rules that\n        match network traffic by a segment or routing domain, and then maps the traffic that matches\n        the rule to a target route table. For more information about transit gateway peering, see\nTransit gateway peering\n            attachments\nin the\nAWS Transit Gateway\n        Guide\n.\nTopics\nRoute evaluation\nLimitations\nCreate a peering\nView peering details\nDelete a peering\nEdit peering tags\nRoute evaluation\nLimits apply when creating a transit gateway peering connection between your transit gateways in AWS Cloud WAN.\nCloud\n            WAN evaluates routes in the following order:\nThe most specific route for the destination\nFor routes with the same destination IP address, but different targets, the\n                    following route priority is used:\nStatic routes\nVPC-propagated routes in the same Region\nDynamic routing (BGP attributes):\nAS path length\nMED\nAWS Direct Connect gateway-propagated routes in the same\n                            Region.\nAWS Transit Gateway Connect-propagated routes in the same\n                            Region.\nAWS Site-to-Site VPN-propagated routes in the same Region.\nRoutes propagated over the AWS network backbone.\nLimitations\nLimits apply when creating a transit gateway peering connection between your transit gateways in AWS Cloud WAN.\nThe following limitations apply when creating a peering:\nA transit gateway used for peering must be in the same Region as the\n                    core network.\nThe Autonomous System Number (ASN) of a transit gateway and the core network must be\n                    different.\nA transit gateway connection to Cloud WAN only supports dynamically propagated routes.\n                    An error is returned if you try to add a static route.\nCreate a peering\nCreate a transit gateway peering.\nImportant\nBefore creating a peering, make sure that the account you use to create the\n                peering has the following permissions:\nec2:CreateTransitGatewayPolicyTable\nec2:AcceptTransistGatewayPeering\nec2:AssociateTransitGatewayPolicyTable\nTo create a peering\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nPeerings\n.\nChoose\nCreate peering\n.\n(Optional) Enter a\nname\nidentifying the peering.\nFrom the\nEdge location\ndropdown list, choose the edge\n                    location where the peering is located.\nFrom the\nTransit gateway\ndropdown list, choose a transit gateway to\n                    be used for the peering.\nNote\nThe core ASN and the transit gateway ASN must be unique. ASNs must be unique for\n                        peerings to succeed.\nChoose one of the following\nAssociate policy table\noptions:\nNew\n\u00e2\u0080\u0094 Creates a new policy routing table.\nExisting\n\u00e2\u0080\u0094 Allows you to associate this peering\n                            with an existing policy table. If you choose this option, you'll be\n                            prompted to choose an existing\nTransit gateway policy\n                                table\nto associate with the peering. For information on\n                            creating a transit gateway policy table, see\nTransit Gateway policy\n                                tables\nin the\nAWS Transit Gateway\n                                Guide\n.\n(Optional) If the transit gateway is not registered in your global network, choose\nRegister the specific transit gateway to the global network\nto\n                    simultaneously register the transit gateway to the global network. If your transit gateway is\n                    already registered, this option does not display.\n(Optional) In the\nTags\nsection, add\nKey\nand\nValue\ntags to help\n                    identify this resource. You can add multiple tags by choosing\nAdd\n                        tag\n, or remove any tag by choosing\nRemove\n                        tag\n.\nChoose\nCreate peering\n.\nThe\nCreate peering progress\ndisplays the current status\n                    of the peering deployment. When deployment is complete, the\nState\nof the peering on the\nPeerings\npage displays\nAvailable\n.\n                    You can then use this peering to create a transit gateway route table attachment. See\nAdd a transit gateway route table attachment\nView peering details\nView information about a transit gateway used for peering.\nTo view peering details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nPeerings\n.\nChoose the\nPeering ID\nof the peer that you want to view\n                    details for.\nIn the\nDetails\nsection, choose the\nResource\n                        ID\nlink.\nThe\nTransit gateways\npage appears in a new window.\n                    Depending on your permissions, you can add or modify your transit gateways or transit gateway route\n                    tables. For more information on working with transit gateways, see the\nAWS Transit Gateway\n                    Guide\n.\nDelete a peering\nDelete a transit gateway peering.\nTo delete a peering\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nPeerings\n.\nChoose the\nPeering ID\nof the peer that you want to\n                    delete.\nChoose\nDelete\n.\nIn the confirmation box, choose\nDelete\n.\nThe\nPeering\npage displays a confirmation that you deleted\n                    the transit gateway peering.\nEdit peering tags\nEdit the tags that are associated with transit gateway peering.\nTo edit peering tags\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nPeerings\n.\nChoose the\nPeering ID\nof the peer that you want to add or\n                    modify tags for.\nIn the\nPeering name\nsection, choose the\nTags\ntab.\nChoose\nEdit tags\n.\nDo any of the following:\nTo add a new tag, choose\nAdd tag\n, and then add a\n                            new\nKey\nand\nValue\n.\nTo remove an existing tag, choose\nRemove tag\nfor\n                            the tag that you want to delete.\nTo edit an existing tag, change the\nKey\nor\nValue\ntext as needed.\nChoose\nEdit tags\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAttachments\nShare a core network\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-share-network.html": "Share a core network - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nShare a core network\nYou can use AWS Resource Access Manager to share a core network across accounts or across your organization.\n        By default, AWS Identity and Access Management  (IAM) users do not have permission to create or modify AWS RAM\n        resources. To allow users to create or modify resources and perform tasks, you must\n        create IAM policies that grant permission to use specific resources and API actions. You\n        then attach those policies to the users or groups that require those permissions.\nOnly the network owner can perform the following operations:\nCreate a resource share.\nCreate a core network.\nUpdate a resource share.\nView a resource share.\nView the resources shared by your account, across all resource shares.\nView the principals with whom you're sharing your resources, across all resource\n                shares. Viewing these principals provides you with the information to determine who\n                has access to your shared resources.\nDelete a resource share.\nYou can perform the following operations on resources that are shared with you:\nAccept or reject a resource share invitation.\nView a resource share.\nView the shared resources that you can access.\nView a list of all of the principals that are sharing resources with you.\nRun the\nlist-core-networks\nAPI to view information about the core\n                networks you own. See\nlist-core-networks\n.\nRun the APIs that create, view, and delete VPC attachments:\nNote\nA shared core network supports only VPC and transit gateway route table attachments.\nCreate a VPC attachment:\ncreate-vpc-attachment\nGet a VPC attachment:\nget-vpc-attachment\nDelete a VPC attachment:\ndelete-vpc-attachment\nLeave a resource share.\nWhen a core network is shared with an account, the account that accepts the shared core\n        network can't make any changes to it, but it can create VPC attachments to the shared\n        network.\nImportant\nYou must share your global resource from the N. Virginia (us-east-1) Region so that\n            all other Regions can see the global resource.\nTo share a core network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nChoose the\nSharing\ntab.\nTo create a resource share, choose\nShare core network\n.\nIn the\nResource sharing\nfield, choose an existing resource\n                share.\nFor the\nAvailable resource share\n, choose the resource that\n                you want to share, and then choose\nCreate resource share\n.\nIf there are no resources available to share, you'll need to create a new resource\n                share:\nChoose\nCreate resource share\n. See\nCreate a resource share\nin the\nAWS RAM User Guide\n.\nAfter creating the resource share in AWS RAM, return to the\nSharing\npage of your core network.\nChoose the\nRefresh\nicon. The page updates to show the\n                        new resource share that you created.\nChoose the newly added resource.\nChoose\nShare core network\n.\nOn the\nSharing\npage, you can stop sharing any core network\n        resource.\nTo stop sharing a core network share\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nChoose the\nSharing\ntab.\nTo create a resource share, choose\nShare core network\n.\nIn the\nResource sharing\nfield, choose an existing shared\n                resource.\nChoose\nStop sharing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nPeerings and routing\nShared attachments and peerings\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-shared.html": "Shared attachments and peerings - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nShared attachments and peerings\nYou can share attachments and peerings on any of your shared core networks. For more information on sharing core networks, see\nShare a core network\n.\nTopics\nShared attachments\nShared peerings\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nShare a core network\nShared attachments\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-attachments-share.html": "Shared attachments - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nShared VPC attachments\nShared transit gateway route table attachments\nView shared attachments\nDelete shared attachments\nShared attachments\nWhen a core network owner shares their core network with your account, you are then able\n        to create new VPC or transit gateway route table attachments for the shared core network. You can also\n        view the current attachments, and delete an attachment from the shared core network.\nImportant\nA shared core network currently supports only VPC and transit gateway route table attachments.\nTopics\nCreate a shared VPC attachment\nCreate a shared transit gateway route table\n                attachment\nView shared attachments\nDelete shared attachments\nCreate a shared VPC attachment\nTo create a shared VPC attachment\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, under\nShared by me\n, choose\nAttachments\n.\nChoose\nCreate attachment\n.\nEnter a\nname\nto identify the attachment.\nFrom the\nCore network\ndropdown list, choose the core network\n                    that is shared with you and that is where you want to create the VPC\n                    attachment.\nFrom the\nEdge location\ndropdown list, choose the location\n                where the attachment is located.\nFrom the\nAttachment type\ndropdown list, choose\nVPC\n.\nIn the\nVPC attachment\nsection, choose\nIPv6\n                        support\nif you want to enable IPv6 for the attachment.\nChoose\n                    the\nVPC ID\n. You're then prompted to choose the\nAvailability Zone\nand\nSubnet Id\nin\n                    which to create the core network VPC attachment. The Availability Zones that are\n                    listed are those edge locations that you chose when you created your core\n                    network. You must choose at least one Availability Zone and subnet ID.\n(Optional) In the\nTags\nsection, add\nKey\nand\nValue\npairs to  help identify this resource. You can\n                    add multiple tags by choosing\nAdd tag\n, or remove any tag by\n                    choosing\nRemove tag\n.\nChoose\nCreate attachment\n.\nThe\nAttachment\npage displays the following information about\n                your shared attachments:\nAttachment ID\nName\nEdge location\nResource Type\nResource ID\nState\nCore network\nCore network status\nChoose\nCreate attachment\nto create a new shared VPC\n                    attachment. See\nCreate an attachment\n.\nCreate a shared transit gateway route table\n                attachment\nTo create a shared transit gateway attachment\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, under\nShared by me\n, choose\nAttachments\n.\nChoose\nCreate attachment\n.\nEnter a\nname\nto identify the attachment.\nFrom the\nCore network\ndropdown list, choose the core\n                    network that is shared with you and that is where you want to create the VPC\n                    attachment.\nFrom the\nEdge location\ndropdown list, choose the location\n                    where the attachment is located.\nIn the\nVPC attachment\nsection, choose\nIPv6\n                    support\nif the attachment supports IPv6.\nFrom the\nAttachment type\ndropdown list, choose\nTransit gateway route table\n.\nFrom the\nTransit gateway peering\ndropdown list in the\nTransit gateway route table attachment\nsection, choose\n                    an existing peering to share.\n(Optional) In the\nTags\nsection, add\nKey\nand\nValue\npairs to  help\n                    identify this resource. You can add multiple tags by choosing\nAdd\n                        tag\n, or remove any tag by choosing\nRemove\n                        tag\n.\nChoose\nCreate attachment\n.\nThe\nAttachment\npage displays the following information about\n                    your shared attachments:\nAttachment ID\nName\nEdge location\nResource Type\nResource ID\nState\nCore network\nCore network status\nChoose\nCreate attachment\nto create the new shared VPC or\n                    transit gateway attachment. See\nCreate an attachment\n.\nView shared attachments\nView details about your shared VPC and transit gateway attachments.\nTo view shared attachments\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, under\nShared by me\n, choose\nAttachments\n.\nThe\nAttachment\npage displays the following information about\n                your shared attachments:\nAttachment ID\nName\nEdge location\nResource Type\nResource ID\nState\nCore network\nCore network status\nSelect the check box for the specific attachment that you want to view. Details\n                about the attachment are displayed on the lower part of the page.\n(Optional) You can edit some of the attachment information:\nChoose the attachment, and then choose\nEdit\n.\nOn the\nEdit attachment\npage, you can edit the subnet\n                        configuration and the tags.\nIf you made any changes to update the attachment, choose\nEdit\n                                attachment\n. The\nAttachments\npage\n                            displays a confirmation that the attachment was modified\n                            successfully.\nDelete shared attachments\nYou can delete your shared VPC and transit gateway attachments.\nTo delete attachments from a shared core network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, under\nShared by me\n, choose\nAttachments\n.\nSelect the check box for the specific attachment that you want to delete, and then\n                    choose\nDelete\n.\nConfirm that you want to delete the attachment by choosing\nDelete\nagain. The attachment is removed from the\nAttachments\npage.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nShared attachments and peerings\nShared peerings\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-peerings-share.html": "Shared peerings - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nCreate a shared peering\nDelete a shared peering\nEdit shared peering tags\nShared peerings\nWhen a core network owner shares their core network with your account, you are then able\n        to create new peerings for the shared core network, delete existing peerings, or manage the\n        tags associated with a peering.\nCreate a shared peering\nWhen a core network owner shares their core network with your account, you are then able\n            to create new peering attachments for the shared core network, view the current attachments,\n            and delete an attachment from the shared core network.\nImportant\nBefore creating a peering, make sure that the account you use to create the\n                peering has the following permissions:\nec2:CreateTransitGatewayPolicyTable\nec2:AcceptTransistGatewayPeering\nec2:AssociateTransitGatewayPolicyTable\nTo create a shared peering\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, under\nShared by me\n, choose\nPeerings\n.\nChoose\nCreate peering\n.\nEnter a\nname\nto identify the attachment.\nFrom the\nCore network\ndropdown list, choose the core network\n                    that is shared with you and that is where you want to create the peering.\nFrom the\nEdge location\ndropdown list, choose the location\n                where the attachment is located.\nIn the\nTransit gateway\nsection, choose  the transit gateway used for\n                the peering.\nChoose one of the following\nAssociate policy table\noptions:\nNew\n\u00e2\u0080\u0094 Creates a new policy routing table.\nExisting\n\u00e2\u0080\u0094 Allows you to associate this peering with\n                            an existing policy route table. If you choose this option, choose an\n                            existing\nTransit gateway policy table\nfrom the\n                            dropdown list to associate with the peering.\n(Optional) In the\nTags\nsection, add\nKey\nand\nValue\npairs to  help identify this resource. You can\n                    add multiple tags by choosing\nAdd tag\n, or remove any tag by\n                    choosing\nRemove tag\n.\nChoose\nCreate peering\n.\nDelete a shared peering\nDelete a transit gateway peering.\nTo delete a shared peering\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, under\nShared by me\n, choose\nPeerings\n.\nChoose the\nPeering ID\nof the peer that you want to\n                    delete.\nChoose\nDelete\n.\nIn the confirmation box, choose\nDelete\n.\nThe\nPeering\npage displays a confirmation that you deleted\n                    the transit gateway peering.\nEdit shared peering tags\nEdit the tags associated with a shared transit gateway peering.\nTo edit shared peering tags\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, under\nShared by me\n, choose\nPeerings\n.\nChoose the\nPeering ID\nof the peer that you want to add or\n                    modify tags for.\nIn the\nPeering name\nsection, choose the\nTags\ntab.\nChoose\nEdit tags\n.\nDo any of the following:\nTo add a new tag, choose\nAdd tag\n, then add a new\nKey\nand\nValue\n.\nTo remove an existing tag, choose\nRemove tag\nfor\n                            the tag that you want to delete.\nTo edit an existing tag, change the\nKey\nor\nValue\ntext as needed.\nChoose\nEdit tags\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nShared attachments\nTag core resources\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-tags.html": "Tag core resources - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nSupported resources\nAdd or remove tags\nTag acceptance\nTag core resources\nA tag is a metadata label that either you or AWS assigns to an AWS resource. Each tag\n        consists of a key and a value. For tags that you assign, you define the key and the value.\n        For example, you might define the key as\npurpose\nand the value as\ntest\nfor one resource.\nTags help you do the following:\nIdentify and organize your AWS resources. Many AWS services support tagging,\n                so you can assign the same tag to resources from different services to indicate that\n                the resources are related.\nControl access to your AWS resources. For more information on controlling access\n                to resources, see\nControlling access to AWS resources using tags\nin the\nAWS Identity and Access\n                        Management User Guide\n.\nSupported resources\nThe following core network resources support tagging:\nCore network\nCore network attachments\nConnect peer\nFor tagging support resources in Network Manager, see\nTag your Network Manager\n                resources\nin the\nNetwork Manager User Guide\n.\nAdd or remove tags\nTags have an important role in AWS Cloud WAN. In a core network, all attachments use the\n            attachment policy to map an attachment to a segment. Instead of manually associating a\n            segment to each attachment, you can add tags to attachments. You can then use the tags\n            to associate the attachments to the desired segment as defined in the attachment\n            policies. For example, a tag on an attachment that's labeled\n\u00e2\u0080\u009csegment\u00e2\u0080\u009d:\u00e2\u0080\u009cdevelopment\u00e2\u0080\u009d\nwould map to a \u00e2\u0080\u009c\ndevelopment\n\u00e2\u0080\u009d\n            segment.\nTo add or update attachment tags\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nSelect the check box for the specific attachment that you want to view or\n                    update. Details about the attachment are displayed in the lower part of the\n                    page. Choose the\nTags\ntab.\nChoose\nAdd/Update tags\n.\nRemove or add tags as needed.\nTo remove a tag, choose\nRemove tag\n, choose\nRemove tag\nfor the tag you want to delete, and\n                            then choose\nEdit tags\n.\nTo add a tag, choose\nAdd tags\n, and then choose\nAdd tag\nto add a new key-value pair. Or edit\n                            the\nValue\nof any existing tag. Choose\nEdit tags\nwhen finished.\nIf the change that you made to the tags requires a tag acceptance from the\n                    core network owner, you will see the new proposed tags in the\nProposed\n                        Tags\ntab.\nTo remove a tag\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nSelect the check box for the specific attachment that you want to remove.\n                    Details about the attachment are displayed in the lower part of the page. Choose\n                    the\nTags\ntab.\nChoose\nRemove tag\n.\nChoose\nEdit tags\nto save your changes.\nIf the removal of the tag requires acceptance from the core network owner, you\n                    will see the new proposed tags in the\nProposed Tags\ntab.\nTag acceptance\nWhen you add, update, or remove tags, and the result is a segment change that requires\n            an acceptance from the core network owner, the attachment goes into a\nPending\n                tag acceptance\nstate. The core network owner has to review segment\n            changes for the attachment, and either accept or reject the request.\nTo accept or reject an attachment tag\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nUnder\nCore network\nin the navigation pane, choose\nAttachments\n.\nSelect the check box for the specific attachment that's in a\nPending tag acceptance\nstate. Details about the\n                    attachment are displayed on the lower part of the page.\nChoose\nAccept or Reject\n, and then choose\nAccept\n                        or Reject\nagain to confirm and save your changes.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nShared peerings\nSites and links\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-sites-working-with.html": "Sites and links - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nSites\nUpdate or delete a site\nLinks\nSites and links\nUse the AWS Cloud WAN console to manage the sites and links in your core network.\nTopics\nSites\nUpdate or delete a site\nLinks\nSites\nUse the AWS Cloud WAN console to manage the physical locations of your core network.\nView details about a site\nView\n                details about a core network site using the AWS Cloud WAN console.\nTo access details about a site\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\n.\nChoose the link that you want to see site details for.\nThe\nGeneral details\npage provides information about the site.\nChoose the\nDevices\ntab. This page displays\n                        information about the devices that are connected to the site. If you don't\n                        see a device listed, you'll need to add it. For more information on adding\n                        devices, see\nAdd a device\n.\nChoose the\nLinks\ntab. This page displays the links\n                        that represent a connection from a device. If you don't see a link listed,\n                        you'll need to create the link. For the steps to create a link, see\nAdd a link\n.\nChoose the\nVPNs\ntab. This page displays site-related\n                        VPN information.\nChoose the\nMonitoring\ntab. This page displays\nData In\nand\nData Out\ninformation for your links.\nFrom the dropdown list, choose the link that you want to view information\n                        for.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nUpdate or delete a site\nUpdate or delete a core network site using the AWS Cloud WAN console.\nTo update a site\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\n.\nChoose the site that you want to update, and then\n                        choose\nEdit\n.\nOn the\nEdit site\npage, you can make changes to the\n                        following information:\nNote\nYou can't change the site\nName\n.\nDescription\nAddress\nLatitude\nLongitude\nTags\nChoose\nEdit site\n.\nTo delete a site\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\n.\nChoose the site that you want to want to delete, and then choose\nDelete\n.\nConfirm that you want to delete the site by choosing\nDelete\nagain.\nLinks\nLinks represent an internet connection from a device. A link is created for a specific\n            site, and therefore you must create a site before you create a link. For the steps to\n            create a site, see\nCreate a site\n.\nAdd a link\nAdd a link to a device.\nTo add a  link\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\n.\nChoose the link\nID\nof the site that you want to add a\n                        link to, and then choose the\nLinks\ntab.\nNote\nChoose the link. Do not select the check box.\nOn the\nLinks\npage, choose\nCreate\n                            link\n.\nFor\nName\nand\nDescription\n, enter\n                        a name and description for the link.\nFor\nUpload speed (Mbps)\n, enter the upload speed in\n                        Mbps.\nFor\nDownload speed (Mbps)\n, enter the download speed\n                        in Mbps.\n(Optional) For\nProvider\n, enter the name of the\n                        service provider.\n(Optional) For\nType\n, enter the type of link, for\n                        example,\nbroadband\n.\n(Optional) Under\nAdditional settings\n, add one or more\nKey\nand\nValue\nTags\nto help identify this link.\nChoose\nCreate link\n.\nUpdate or delete a link\nUpdate or delete current links.\nTo update a link\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\n.\nChoose the\nLinks\ntab.\nOn the\nLinks\npage, select the check box for the link\n                        that you want to update, and then choose\nEdit\n.\nModify any of the link settings as needed, including adding, editing, or\n                        removing tags.\nChoose\nEdit link\n.\nTo delete a link\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nSites\n.\nChoose the\nLinks\ntab.\nOn the\nLinks\npage, select the check box for the link\n                        that you want to delete, and then choose\nDelete\n.\nConfirm that you want to delete the link by choosing\nDelete\nagain.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTag core resources\nDevices\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-devices-working.html": "Devices - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nUpdate or delete a device\nView details about a device\nDevices\nUpdate or delete devices using the AWS Cloud WAN console.\nUpdate or delete a device\nUpdate or delete a device using the AWS Cloud WAN console.\nTo update a device\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nSelect the check box of the device that you want to update, and then\n                    choose\nEdit\n.\nChoose\nEdit device\n.\nAdd or update any of the following device information:\nDescription\nModel\nSerial number\nType\nVendor\nLocation type\nLatitude\nLongitude\nTags\nChoose\nEdit device\n.\nTo delete a device\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nSelect the check box of the device that you want to want to delete, and then\n                choose\nDelete\n.\nConfirm that you want to delete the device by choosing\nDelete\nagain.\nView details about a device\nView details of a device using the AWS Cloud WAN console.\nTo access details about a device\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose the link that you want to see device details for.\nChoose any of the following tabs to see more details:\nOverview\nLinks\nOn-premises associations\nConnect peer\n                        associations\nConnections\nVPNs\nMonitoring\nOverview\nThe\nOverview\npage provides general details about the device.\n                On this page you can associate or disassociate sites from the device, delete a\n                device, or add, edit, or remove tags.\nTo associate a device with a site\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nOn the\nOverview\npage, choose\nAssociate\n                            site\n.\nFrom the\nSite Association\ndropdown list, choose the\n                        site where the device is located.\nChoose\nEdit site association\n.\nThe\nOverview\npage displays the site association in\n                        the\nGeneral details\nsection.\nRemove the association of a device and a site.\nTo disassociate a site from a device\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nIn the General details section of the Overview page, choose\nDisassociate site\n.\nNote\nThere is no confirmation to delete the association.\nLinks\nAssociate a device with a link.\nTo associate a device with a link\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose the device link that you want to create an association\n                            for.\nChoose the\nLinks\ntab.\nChoose\nAssociate link\n.\nChoose the link that you want to associate with the site, and then\n                            choose\nCreate link\n. If you do not see the link that\n                            you want, you'll need to create it. See\nAdd a link\nRemove the association of a device and a link.\nTo disassociate a device from a link\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose the\nLinks\ntab.\nChoose the device link that you want to remove the association\n                            from.\nChoose\nDisassociate\n.\nOn-premises associations\nCreate an on-premises association.\nTo create an on-premises association\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose the\nOn-premises associations\ntab.\nChoose\nAssociate\n.\nChoose the\nCustomer gateway\n.\n(Optional) Choose the\nLink\nfor the connection\n                            from the device.\nChoose\nCreate on-premises association\n.\nTo disassociate an on-premises association\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose the\nOn-premises association\ntab.\nChoose the device link that you want to remove the association\n                            from.\nChoose\nDisassociate\n.\nConnect peer\n                        associations\nCreate a Connect peer association.\nTo create a Connect peer association\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose the\nConnect peer\ntab.\nChoose\nAssociate\n.\nChoose the\nConnect peer\n.\n(Optional) Choose the\nLink\nfor the connection\n                            from the device.\nChoose\nCreate Connect peer association\n.\nTo disassociate a Connect peer association\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose the\nConnect peer\ntab.\nChoose the device link that you want to remove the association\n                            from.\nChoose\nDisassociate\n.\nConnections\nCreate a device connection.\nTo create a device connection\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose the\nConnections\ntab.\nChoose\nCreate connection\n.\nFor\nName\nand\nDescription\n,\n                            enter a name and description for the connection.\n(Optional) For\nLink\n, choose a link to associate\n                            with the first device in the connection.\nFor\nConnected device\n, choose the ID of the second\n                            device in the connection.\n(Optional) For\nConnected link\n, choose a link to\n                            associate with the second device in the connection.\n(Optional) In the\nTags\nsection, add\nKey\nand\nValue\npairs to\n                            further help identify this resource. You can add multiple tags by\n                            choosing\nAdd tag\n, or remove any tag by choosing\nRemove tag\n.\nChoose\nCreate connection\n.\nTo delete a device connection\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose the\nOn-premises association\ntab.\nChoose the device that you want to delete the connection for.\nChoose\nDelete\n.\nVPNs\nThe VPNs page displays a list of your VPN connections for a device.\nTo access device VPN connections\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose the device that you want to view the VPN connections\n                            for.\nChoose\nVPNs\n.\nMonitoring\nMonitor device events on the AWS Cloud WAN Monitoring page.\nTo access monitoring information\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDevices\n.\nChoose the\nMonitoring\ntab.\nThe\nMonitoring\npage displays data for the\n                            following:\nData In\nData Out\nTunnel down count Average\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nSites and links\nVisualize and monitor global and core networks\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-visualize-networks.html": "Visualize and monitor global and core networks - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nVisualize and monitor global and core networks\nThe AWS Cloud WAN console uses dashboard visualizations to help you view and monitor all aspects\n        of your global and core networks. Some of the dashboards include:\nWorld maps that pinpoint where your network resources are located, including edge\n                locations, devices, and attachments.\nMonitoring data that uses CloudWatch Events to track 15-months' worth of statistics, giving\n                you a better perspective on how your networks are performing.\nEvent tracking that streams real-time events to an events dashboard.\nTopological and logical diagrams of your global and core networks.\nThere are separate dashboards for your global networks and for your core networks.\nTopics\nVisualize AWS Cloud WAN global\n            networks\nVisualize AWS Cloud WAN core networks\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nDevices\nGlobal networks\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-visualize-networks-global.html": "Visualize AWS Cloud WAN global networks - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nOverview\nDetails\nTopology graph\nTopology tree\nVisualize AWS Cloud WAN global\n            networks\nThe AWS Cloud WAN console provides a dashboard where you can visualize and monitor your global network. It includes information about the resources in your global network, their geographic locations, the network topology, and the logical network associations.\nTopics\nOverview\nDetails\nTopology graph\nTopology tree\nOverview\nOn the AWS Cloud WAN console\nOverview\npage, you can view the following\n            information:\nYour global network resource inventory, which includes any core networks and\n                    transit gateway networks.\nThe location of core network edges and transit gateways within your global\n                    network, displayed as icons on global map. Connections are shown between\n                    resources.\nUse the following legend to understand the icons on your global network map:\nIcon\nDescription\nEdge locations\nThe total number of edge locations in your global network. The\n                                number is shown in the\nInventory\nsection and as\n                                an icon on the map for each edge location in your global network.\nTransit gateways\nThe total number of\n                                transit gateways in your global network. The number is shown in the\nInventory\nsection and as an icon on the map\n                                for each transit gateway in your global network.\nDevices\nThe total number of devices in your global network. The number is\n                                shown in the\nInventory\nsection and as an icon\n                                on the map for each device in your global network.\nSites\nThe total number of sites in your global network. The number is\n                                shown in the\nInventory\nsection and as an icon\n                                on the map for each site in your global network.\nTo access your global network resource inventory list\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDashboard\n.\nThe\nOverview\npage opens by default. This page shows\n                    information about the network resources in your global network:\nThe\nInventory\nsection shows the number of\nEdge locations\nin your global network, the\n                            number of\nTransit gateways\n, the number of\nDevices\n, and the number of\nSites\n.\nIn the following example, you'll see that there are four Regions,\nus-west-2\n,\nus-east-\n1,\neu-central-1\n, and\nap-northeast-1\n. Some Regions are represented by\n                            a number (for example,\neu-central-1\nis represented\n                            by the number\n2\n,). This indicates that there are two\n                            network resources associated with that region. Choosing\n2\nopens a displays what those network resources\n                            are: one transit gateway and one edge location.\nThe\nDetails\npage shows the add\nKey\nand\nValue\npairs to further help identify this resource. You\n                    can add multiple tags by choosing\nAdd tag\n, or remove any\n                    tag by choosing\nRemove tag\n.\nChoose\nCreate attachment\n.\nDetails\nThe\nDetails\npage provides information about your global network\n            resources. You can view information about your global network, as well as edit the\n            Description, or add and remove tags.\nTo access global network details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDashboard\n.\nChoose the\nDetails\ntab.\nThe\nDetails\npage shows the following information:\nName\n\u00e2\u0080\u0094 The name that you gave to the global\n                            network when you created it.\nState\n\u00e2\u0080\u0094 The current state of the network.\n                            Possible states are\nPending\n,\nAvailable\n,\nDeleting\n, and\nUpdating\n.\nGlobal network ARN\n\u00e2\u0080\u0094 The unique Amazon Resource\n                            Number (ARN) of the global network.\nAWS account\n\u00e2\u0080\u0094 The AWS account that's associated with the global\n                            network.\nDescription\n\u00e2\u0080\u0094 The description given to the global\n                            network when it was created.\nTags\n\u00e2\u0080\u0094 The key-value tags associated with the\n                            global network when it was created.\n(Optional) Change the global network\nDescription\n. Choose\nEdit\nin the\nDetails\nsection, and\n                    then in the\nDescription -\noptional\nfield, replace the current description with a new description. Then choose\nEdit global network\nto save your change.\n(Optional) Edit, remove or add tags. In the\nTags\nsection,\n                    choose\nEdit tags\nand do any of the following. When\n                    finished, choose\nEdit global network\nto return to the\nDetails\npage.\nChoose\nAdd tag\nto add a new tag. Add\nKey\nand\nValue\npairs to\n                            help identify this resource. You can add multiple tags.\nChoose\nRemove tag\nto delete any tag. You are not\n                            prompted to confirm the deletion.\nTo edit an existing tag, enter the new\nKey\nor\nValue\ninto the applicable field.\nTopology graph\nOn the\nTopology graph\npage, you can view a topology diagram of your\n            global network that includes core network and transit gateway networks. It includes\n            information about AWS Regions, core network edges, transit gateways, segments, VPCs,\n            VPNs, and Connect attachments. Icons represent specific resource types, and lines\n            represent connections between resources. The line colors represent the state of the\n            connection between AWS and the on-premises resources. You can filter the topology view\n            to show specific segments and exclude AWS Regions and labels from being shown.\nUse the following legend to understand the icons on your topology graph:\nIcon\nDescription\nCore network edge\nThe core network edges in your global network.\nTransit Gateway\nThe transit gateways in\n                                your global network.\nVPC\nThe VPC attachments in your global\n                                network.\nConnect\nThe Connect attachments in your global network.\nSegment\nThe segments in your global network.\nDevices\nThe devices in your global network.\nRegion\nThe Regions in your global network.\nTo access the topology graph for a global network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDashboard\n.\nChoose the\nTopology graph\ntab.\nA topological representation of your global network is displayed. Connect\n                    lines are created between your resources.\n(Optional) Filter the information that is displayed in the topology by making\n                    choices for any combination of the following:\nLabel\n\u00e2\u0080\u0094 Turns resource labels on or off.\nRegion\n\u00e2\u0080\u0094 Turns the display of a Region on or\n                            off.\nSegment\n\u00e2\u0080\u0094 Turns the display Segments on or\n                            off.\nCluster\n\u00e2\u0080\u0094 Turns the display of clusters on or\n                            off.\nOn the\nTopology graph\n, choose any of your network\n                    resources to view details about that resource. A panel opens on the right-hand\n                    side of the graph.\nThe following example shows the Metrics for the\neu-west-1\nedge location.\nDepending on the resource chosen, the following information is available in\n                    the panel:\nCore network edge\n\u00e2\u0080\u0094\nDetails\n,\nMetrics\n, and\nEvents\n. See\nAWS Cloud WAN Events and metrics\nfor more information about\n                            the types of events that can be tracked.\nTransit Gateway\n\u00e2\u0080\u0094\nTransit Gateway\n                                details\n.\nVPC\n,\nConnect\n, and\nVPC\n\u00e2\u0080\u0094\nAttachment details\n.\nSegment\n\u00e2\u0080\u0094\nSegment\n                            details\n.\nDevice\n\u00e2\u0080\u0094\nDevice\n                            details\n.\nRegion\n\u00e2\u0080\u0094\nRegion\n                            details\n.\nTopology tree\nThe\nTopology tree\npage shows a logical diagram of your global network.\n            Here you can view the network tree for your global network, which includes core network\n            and transit gateway networks. By default, the page displays all resources in your global\n            network and the logical relationships between them. You can filter the network tree to\n            show specific on-premises resource types only. For example, the preceding image shows\n            sites and devices, and excludes customer gateways. You can choose any of the nodes to\n            view information about the specific resource that it represents. The line colors\n            represent the state of the relationships between AWS and any on-premises\n            resources.\nTo access the topology tree for a global network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nDashboard\n.\nChoose the\nTopology tree\ntab.\nA logical representation of your global network is displayed, along with the\n                    details of your global network configuration.\n(Optional) Filter the information that is displayed in the topology tree by\n                    making choices for any combination of the following:\nSite\n\u00e2\u0080\u0094 Turns the display of sites on or\n                            off.\nDevice\n\u00e2\u0080\u0094 Turns the display of devices on or\n                            off.\nCustomer gateway\n\u00e2\u0080\u0094 Turns the display of customer\n                            gateways on or off.\nIn the\nTopology tree\n, choose any of your network\n                    resources to view details about that resource. A panel opens on the right-hand\n                    side of the graph.\nThe following example shows the\nDetails\nfor the\nus-west-1\nedge location.\nDepending on the resource chosen, the following information is available in the\n        panel:\nEdge locations\n\u00e2\u0080\u0094\nDetails\n,\nMetrics\n, and\nEvents\n. See\nAWS Cloud WAN Events and metrics\nfor more information about the types of\n                events that can be tracked.\nVPC\n,\nConnect\n, and\nVPC\nattachments \u00e2\u0080\u0094\nAttachment details\n.\nTransit Gateways\n\u00e2\u0080\u0094\nTransit Gateway\n                    details\n.\nDevice\n\u00e2\u0080\u0094\nDevice details\n.\nSites\n\u00e2\u0080\u0094\nSite details\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVisualize and monitor global and core networks\nCore networks\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-visualize-networks-core.html": "Visualize AWS Cloud WAN core networks - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nOverview\nDetails\nSharing\nTopology graph\nTopology tree\nLogical\nRoutes\nEvents\nMonitoring\nVisualize AWS Cloud WAN core networks\nThe AWS Cloud WAN console provides a dashboard where you can visualize and monitor your global\n        network. It includes information about the resources in your global network, their\n        geographic locations, the network topology, and the logical network associations.\nTopics\nOverview\nDetails\nSharing\nTopology graph\nTopology tree\nLogical\nRoutes\nEvents\nMonitoring\nOverview\nOn the AWS Cloud WAN console\nOverview\npage, you can view the following\n            information:\nYour core network resource inventory.\nThe location of core network edges and transit gateways within your global\n                    network, displayed as icons on a map. Connections are shown between\n                    resources.\nThroughput information between core network edges.\nThe number of core network attachments per edge, shown as a stacked column\n                    chart. You can filter this chart to display specific attachment types.\nUse the following legend to understand the icons on your core network map:\nIcon\nDescription\nEdge locations\nThe total number of edge locations in your core network. The\n                                number is shown in the\nInventory\nsection and as\n                                an icon on the map for each edge location in your core network.\nSegments\nThe total number of segments in\n                                your core network. The number is shown in the\nInventory\nsection and as an icon on the map\n                                for each section in your core network.\nDevices\nThe total number of devices in your core network. The number is\n                                shown in the\nInventory\nsection and as an icon\n                                on the map for each device in your core network.\nSites\nThe total number of sites in your core network. The number is\n                                shown in the\nInventory\nsection and as an icon\n                                on the map for each site in your core network.\nTo view the core network map\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nThe\nInventory\nsection shows information about your core\n                    network: the number of\nEdge locations\nin your core network,\n                    the number of\nSegments\n, the number of\nDevices\n, and the number of\nSites\n.\nThe\nGeography\nsection displays a world map with the\n                    locations of your resources.\nThe\nThroughput\nsection shows throughput information\n                    between the core network edges.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nThe\nAttachment\nsection displays information about each\n                    attachment for each core network edge location. Choose the\nFilter by\n                        attachment type\ndropdown list. By default all attachment types\n                    are chosen. Clear the check box for any attachment type that you don't want to\n                    include in the graph. You can filter by any combination of:\nVPN\nVPC\nConnect\nDetails\nThe\nDetails\npage provides information about your core network\n            resources.\nTo view your core network details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nChoose the\nDetails\ntab.\nThe\nDetails\npage shows the following information:\nName\n\u00e2\u0080\u0094 The name that you gave to the core network\n                            when you created it.\nState\n\u00e2\u0080\u0094 The current state of the core network.\n                            Possible states are\nPending\n,\nAvailable\n,\nDeleting\n, and\nUpdating\n.\nCore network ARN\n\u00e2\u0080\u0094 The unique Amazon Resource\n                            Number (ARN) of the core network.\nAWS account\n\u00e2\u0080\u0094 The AWS account that's\n                            associated with the core network.\nDescription\n\u00e2\u0080\u0094 The description given to the core\n                            network when it was created.\nTags\n\u00e2\u0080\u0094 The key-value tags that were associated\n                            with the core network when it was created.\n(Optional) Change the core network\nDescription\n. Choose\nEdit\nin the\nCore network details\nsection, and then in the\nDescription\nfield, replace the\n                    current description with a new description. Then choose\nEdit core\n                        network\nto save your change.\n(Optional) Edit, remove or add Tags. In the\nTags\nsection\n                    choose\nEdit tags\nand do any of the following. When\n                    finished, choose\nEdit core network\nto return to the\nDetails\ntab.\nChoose\nAdd tag\nto add a new tag. Add\nKey\nand\nValue\npairs to\n                            help identify this resource. You can add multiple tags.\nChoose\nRemove tag\nto delete any tag. You are not\n                            prompted to confirm the deletion.\nTo edit an existing tag, enter the new\nKey\nor\nValue\ninto the applicable field.\nSharing\nOn the\nSharing\npage, you can view your currently shared network\n            resources. You can also use AWS Resource Access Manager (RAM) to share a core network\n            across accounts or across your organization in AWS organizations.\nTo view shared network resources\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nChoose the\nSharing\ntab.\nThe\nResource sharing\npage displays a list of the\n                    resources that you're currently sharing.\nIf you want to share a network resource. See\nShare a core network\nfor the steps to share a network\n                    resource.\nTopology graph\nOn the\nTopology graph\npage, you can view a topology diagram of\n            your core network that includes core network and transit gateway networks. It includes\n            information about AWS Regions, core network edges, segments, VPCs, VPNs, and Connect\n            attachments. Icons represent specific resource type and lines represent connections\n            between resources. The line colors represent the state of the connection between AWS\n            and the on-premises resources. You can filter the topology view to show specific\n            segment, and exclude AWS Regions and labels that are shown.\nUse the following legend to understand the icons on your core network topology graph:\nIcon\nDescription\nCore network edge\nThe core network edges in your network.\nVPC\nThe VPC attachments in your core\n                                network.\nConnect\nThe Connect attachments in your core network.\nSegment\nThe segments in your core network.\nDevices\nThe devices in your core network.\nVPN\nThe VPN attachments in your core network.\nTo view the core network topology graph\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nChoose the\nTopology graph\ntab.\nA topological representation of your global network is displayed. Connect\n                    lines are created between your resources.\n(Optional) Filter the information that is displayed in the topology by making\n                    choices for any combination of the following:\nLabel\n\u00e2\u0080\u0094 Turns resource labels on or off.\nSegment\n\u00e2\u0080\u0094 Turns the display segments on or\n                            off.\nCluster\n\u00e2\u0080\u0094 Turns the display of a Cluster on or\n                            off.\nOn the graph, choose any of your network resources to view details about that\n                    resource. A panel opens on the right-hand side of the graph.\nIn this example, the\ndevelopment\nsegment is chosen in the graph.\n                    The panel displays\nDetails\nabout the segment. Choose the\nRoutes\ntab to view the segment\n                    routes.\nDepending on the resource chosen, the following information is available in the panel:\nCore network edge\n\u00e2\u0080\u0094\nDetails\n,\nMetrics\n, and\nEvents\n. See\nAWS Cloud WAN Events and metrics\nfor more information about\n                            the types of metrics and events that can be tracked.\nVPC\n,\nConnect\n, and\nVPN\n\u00e2\u0080\u0094\nDetails\nand\nEvents\n.\nSegment\n\u00e2\u0080\u0094\nDetails\nand\nRoutes\n.\nDevice\n\u00e2\u0080\u0094 Device\nDetails\n.\nTopology tree\nThe\nTopology tree\npage shows a logical diagram of your core\n            network. Here you can view the network tree for your core network. By default, the page\n            displays all resources in your core network and the logical relationships between them.\n            You can filter the network tree to show specific on-premises resource types only. For\n            example, the preceding image shows sites and devices, and excludes customer gateways.\n            You can choose any of the nodes to view information about the specific resource it\n            represents. The line colors represent the state of the relationships between AWS and\n            the on-premises resources.\nTo view the topology tree\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nChoose the\nTopology tree\ntab.\nA logical representation of your global network is displayed, along with the\n                    details of your global network configuration.\n(Optional) Filter the information that is displayed in the topology by making\n                    choices for any combination of the following:\nSite\n\u00e2\u0080\u0094 Turns the display of sites on or\n                            off.\nDevice\n\u00e2\u0080\u0094 Turns the display of devices on or\n                            off.\nCustomer gateway\n\u00e2\u0080\u0094 Turns the display of customer\n                            gateways on or off.\nOn the tree, choose the label of any of your network resources to view details\n                    about that resource. A panel opens on the right-hand side of the tree.\nIn this example, an edge location,\nus-west-1\n, is chosen\n                    in the tree. The panel displays\nEdge location details\n.\n                    Choose any of the tabs in the panel to view more information about that edge\n                    location.\nDepending on the resource chosen, the following information is available in\n                    the panel:\nAttachments\n\u00e2\u0080\u0094 Attachment\nDetails\nand\nEvents\n. See\nAWS Cloud WAN Events and metrics\nfor more information about\n                            the types of events that can be tracked.\nDevices\n\u00e2\u0080\u0094\nDevice\n                            details\n.\nSites\n\u00e2\u0080\u0094\nSite details\n.\nNot associated\n\u00e2\u0080\u0094 There is no information to\n                            return.\nLogical\nThe\nLogical\npage shows a logical representation of the segments\n            in your core network. You can filter by a specific source or destination segment, or by\n            a source or destination attachment. You can view the network tree for your global\n            network, which includes core network and transit gateway networks. By default, the page\n            displays all resources in your global network and the logical relationships between\n            them. You can filter the network tree to show specific on-premises resource types only.\n            For example, the preceding image shows sites and devices, and excludes customer\n            gateways. You can choose any of the nodes to view information about the specific\n            resource that it represents. The line colors represent the state of the relationships\n            between AWS and any on-premises resources.\nUse the following legend to understand the icons on your core network logical graph:\nIcon\nDescription\nVPC\nThe VPC attachments in your core\n                                network.\nConnect\nThe Connect attachments in your core network.\nSegment\nThe segments in your core network.\nVPN\nThe VPN attachments in your core network.\nTo access the logical diagram for a core network\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nChoose the\nLogical\ntab.\nBy default, all segments and all attachments are displayed in the logical\n                    representation.\n(Optional) Do any of the following:\nFrom the\nSource segment\ndropdown list, choose a\n                            segment from the core network.\nFrom the\nSource attachment\ndropdown list, choose\n                            an attachment from the source segment.\nFrom the\nDestination segment\ndropdown list,\n                            choose a destination segment from the core network.\nFrom the\nDestination attachment\ndropdown list,\n                            choose an attachment from the destination segment.\nThe logical graph updates based on your choices. Choose\nClear\nto reset the page.\n(Optional) Filter the information that is displayed in the topology by making\n                    choices for any combination of the following:\nAttachments\n\u00e2\u0080\u0094 Turns the display of attachments on\n                            or off.\nShow unassociated attachments\n\u00e2\u0080\u0094 Turns the display\n                            of unassociated attachments on or off.\nOn the graph, choose any of your network resources to view details about that\n                    resource. A panel opens on the right-hand side of the graph.\nIn this example, a segment,\nsegment-b\n, is chosen in the\n                    graph. The panel displays\nSegment details\n.\nDepending on the resource chosen, the following information is available in\n                    the panel:\nVPC\n,\nConnect\n, and\nVPN\n\u00e2\u0080\u0094\nDetails\nand\nEvents\n. See\nAWS Cloud WAN Events and metrics\nfor more information about the\n                            types of events that can be tracked.\nSegment\n\u00e2\u0080\u0094\nSegment details\nand\nRoutes\n.\nRoutes\nOn the\nRoutes\npage, you can search for and view core network\n            routes. On this page, you can refine results to show routes for specific segments and\n            edge locations.\nTo access core network routes\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nChoose the\nRoutes\ntab.\nIn the\nRoutes filter\nsection, do the following:\nFrom the\nSegment\ndropdown list, choose a core\n                            network segment to filter on.\nFrom the\nEdge location\ndropdown list, choose a\n                            core network edge location to filter on.\nThe\nRoutes\ntable updates to display the routes for the\n                    chosen segment and edge location and includes the following:\nCIDR\n\u00e2\u0080\u0094 All CIDRs used by this route.\nDestinations\n\u00e2\u0080\u0094 All destination addresses.\nRoute types\n\u00e2\u0080\u0094 The type of route. This will be\n                            either\nPROPAGATED\nor\nSTATIC\n.\nRoute state\n\u00e2\u0080\u0094 The current state of a route. This\n                            will be either\nACTIVE\nor\nBLACKHOLE\n.\nEvents\nYou can monitor your core network using CloudWatch Events, which delivers a near-real-time stream\n            of system events that describe changes in your resources. Using simple rules that you\n            can quickly set up, you can match events and route them to one or more target functions\n            or streams. For more information about CloudWatch Events, see the\nAmazon CloudWatch Events User\n                    Guide\n.\nPrerequisites:\nBefore monitoring CloudWatch Events you must first\n            onboard CloudWatch Logs Insights. This is a one-time process that needs to be completed at the\n            account level. After this is set up for your core network, you'll be able to see event\n            updates on this page. For more information on AWS Cloud WAN events, see\nAWS Cloud WAN Events and metrics\n.\nTo access core network events\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nChoose the\nEvents\ntab.\nThe\nEvents\nsection updates with the CloudWatch events that\n                    occurred during the selected time frame.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nIn the following example, the\nEvents\nsection shows two\n                    events occurring within a custom 15-month time frame:\nA change set was executed successfully for a core network policy\n                            update.\nAn edge location was added to the core network.\nFor a full list of tracked events, see\nMonitor with CloudWatch Events\n.\nMonitoring\nYou can monitor your core network by using Amazon CloudWatch, which collects raw data and\n            processes it into readable, near-real-time metrics. These statistics are kept for 15\n            months, so that you can access historical information and gain a better perspective on\n            how your network is performing. You can also set alarms that watch for certain\n            thresholds, and send notifications or take actions when those thresholds are met. For\n            more information, see the\nAmazon CloudWatch Events User\n                    Guide\n.\nOn the monitoring page you can view usage metrics for your core network, filtering by\n            specific edge locations.\nTo access core network monitoring details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nChoose the\nMonitoring\ntab.\nFrom the\nCore network edge\ndropdown list, choose the core\n                    network edge that you want to monitor.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nThe page updates the following monitors:\nBytes in\nBytes out\nBytes dropped \u00e2\u0080\u0093 black hole\nBytes dropped \u00e2\u0080\u0093 no route\nPackets in\nPackets out\nPackets dropped \u00e2\u0080\u0093 black hole\nPackets dropped \u00e2\u0080\u0093 no route\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGlobal networks\nVisualize and monitor transit gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-visualize-tgw.html": "Visualize and monitor transit gateways - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nVisualize and monitor transit gateways\nThe AWS Cloud WAN console uses dashboard visualizations to help you view and monitor all aspects\n        of your transit gateways and transit gateway networks. Some of the dashboards include:\nWorld maps that pinpoint where your transit gateway resources, such as VPNs, VPCs,\n                sites, and devices are located.\nMonitoring data that uses CloudWatch Events to track 15-months' worth of statistics, giving\n                you a better perspective on how your transit gateways are performing.\nEvent tracking that streams transit gateway real-time events to an events dashboard.\nTopological and logical diagrams of your transit gateways.\nThere are separate dashboards for your transit gateway networks and for individual transit gateways.\nTopics\nTransit gateway networks\nTransit gateways\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCore networks\nTransit gateway networks\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-tgw-networks.html": "Transit gateway networks - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nOverview\nGeography\nTopology tree\nEvents\nMonitoring\nRoute analyzer\nTransit gateway networks\nView dashboard information about transit gateways that are registered in AWS Cloud WAN.\nTopics\nOverview\nGeography\nTopology tree\nEvents\nMonitoring\nRoute analyzer\nOverview\nThe\nOverview\npage displays details about your transit\n            gateways, their VPN, their Connect peer status, and any network events affecting your\n            transit gateways.\nTo access transit gateway details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nOn the\nOverview\npage, you can view the following information:\nYour transit gateway\nInventory\n:\nIcon\nDescription\nTransit gateways\nThe total number of\n                                    registered transit gateways in. Choose the link to open the\nTransit gateways\npage to view more\n                                    information about your transit gateways.\nSites\nThe total number of sites that are associated with your\n                                        transit gateways. Choose the link to open the\nSites\npage to view more information\n                                        about your transit gateway sites.\nDevices\nThe total number of devices that are associated with your\n                                        transit gateways. Choose the link to open the\nDevices\npage to view more\n                                        information about your transit gateway devices.\nTransit gateways VPN status\n:\nID\n\u00e2\u0080\u0094 The ID of the transit gateway. Choose\n                                    the link to open details about the transit gateway.\nName\n\u00e2\u0080\u0094 The name of the transit\n                                    gateway.\nRegion\n\u00e2\u0080\u0094 The Region where the transit gateway\n                                    is located.\nDown VPN\n\u00e2\u0080\u0094 The percentage of your total\n                                    transit gateway VPNs that are down.\nImpaired VPN\n\u00e2\u0080\u0094The percentage of your total\n                                    transit gateways VPNs that are impaired.\nUp VPN\n\u00e2\u0080\u0094 The percentage of your total transit\n                                    gateway VPNs that are up.\nTransit gateways connect peer status\n:\nID\n\u00e2\u0080\u0094 The ID of the transit gateway.\nName\n\u00e2\u0080\u0094 The name of the transit\n                                    gateway.\nRegion\n\u00e2\u0080\u0094 The Region where the transit peer is\n                                    located.\nDown Connect peer\n\u00e2\u0080\u0094 The percentage of your\n                                    total transit gateway Connect peers that are down.\nImpaired Connect peer\n\u00e2\u0080\u0094 The percentage of\n                                    your total transit gateway Connect peers that are\n                                    impaired.\nUp VPN\n\u00e2\u0080\u0094 The percentage of your total transit\n                                    gateway Connect peers that are up.\nThe\nNetwork events summary\ndisplays CloudWatch Events and the\n                            number of core network attachments per edge, shown as a stacked column\n                            chart.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nGeography\nThe\nGeography\npage displays a world map showing the\n            locations of your transit gateways.\nTo access transit gateway details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nGeography\ntab.\nA world map displays, showing you the locations of the following:\nAWS\nTGWs\nand\nVPCs\n.\nThe\nConnectivity\nof\nVPNs\n,\nDirect Connects\n, and\nConnect\n                                peers\n.\nOn-premises\nSites\nand\nDevices\n.\nNot associated\nSites\nand\nDevices\n.\nTopology tree\nThe\nTopology tree\npage shows a logical diagram of your\n            transit gateways.\nTo access the topology tree for a transit gateway\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nTopology tree\ntab.\nBy default, the\nTopology tree\npage displays all\nSites\n,\nDevices\n, and\nCustomer Gateways\nof your transit gateway and the\n                    logical relationships between them. You can filter the network tree to show\n                    specific resource types to view information about the specific resource\n                    represented. The line colors represent the state of the relationships between\n                    AWS and the on-premises resources.\nEvents\nTrack your transit gateway events by using CloudWatch Events, which delivers a near-real-time\n            stream of system events that describe changes in your resources. Using simple rules that\n            you can quickly set up, you can match events and route them to one or more target\n            functions or streams. For more information about CloudWatch Events, see the\nAmazon CloudWatch Events User\n                    Guide\n.\nTo track transit gateway events\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nEvents\ntab.\nThe\nEvents\nsection updates with the CloudWatch transit events\n                    that occurred during the time frame.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nMonitoring\nYou can monitor your transit gateways using Amazon CloudWatch, which collects raw data and\n            processes it into readable, near-real-time metrics. These statistics are kept for 15\n            months, so that you can access historical information and gain a better perspective on\n            how your network is performing. You can also set alarms that watch for certain\n            thresholds, and send notifications or take actions when those thresholds are met. For\n            more information, see the\nAmazon CloudWatch Events User\n                    Guide\n.\nOn the monitoring page you can view usage metrics for your transit gateways, filtering\n            by specific transit gateways.\nTo access transit monitoring details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nMonitoring\ntab.\nChoose a transit gateway that you want to monitor.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nThe page updates the following transit gateway monitors:\nBytes in\nBytes out\nBytes dropped \u00e2\u0080\u0093 black hole\nBytes dropped \u00e2\u0080\u0093 no route\nPackets in\nPackets out\nPackets dropped \u00e2\u0080\u0093 black hole\nPackets dropped \u00e2\u0080\u0093 no route\n(Optional) Choose\nAdd to dashboard\nto add this metric to\n                    your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                        Guide\n.\nNote\nThe\nAdd to dashboard\noption works only if your\n                        registered transit gateway is in the US West (Oregon) Region.\nRoute analyzer\nThe Route Analyzer analyzes the routing path between a specified source and\n            destination.\nNote\nRoute Analyzer checks the routes on Transit Gateway route tables only.\nTo analyze route information\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nTransit Gateway network\n.\nThe\nOverview\npage opens by default, showing information about your transit gateways.\nChoose the\nRoute Analyzer\ntab.\nIn the\nSource\nsection, do the following:\nChoose the source\nTransit Gateway\nfor the route\n                            that you want to analyze.\nChoose the source\nTransit Gateway attachment\nfor\n                            the route.\nEnter either the IPv4 or IPv6\nIP address\n.\nClear the\nInclude return path in results\ncheck\n                            box if you don't want to include a return path.\nIndicate whether this is a\nMiddlebox appliance\n.\n                            For more information on middlebox configurations, see\nRoute analysis with a middlebox configuration\n.\nIn the Destination section, do the following:\nChoose the destination\nTransit Gateway\n.\nChoose the destination\nTransit Gateway attachment\nfor the route.\nEnter either the IPv4 or IPv6\nIP address\n.\nChoose\nRun route analysis\n.\nThe Results of route analysis return the\nSource\nand\nDestination\ntransit gateways and the current\nStatus\n. An error message is returned if no information\n                    is found in the transit gateway route table. For more information on route\n                    tables, see\nTransit gateway route tables\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nVisualize and monitor transit gateways\nTransit gateways\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-tgws-working-with.html": "Transit gateways - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nOverview\nTopology tree\nEvents\nMonitoring\nOn-premises associations\nConnect peer\nTags\nTransit gateways\nView dashboard information about transit gateways that are registered in AWS Cloud WAN.\nTopics\nOverview\nTopology tree\nEvents\nMonitoring\nOn-premises associations\nConnect peer\nTags\nOverview\nThe\nOverview\npage displays details about your transit gateways, their VPN,\n            their Connect peer status, and any network events affecting the transit gateway.\nTo view transit gateway details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network link.\nIn the navigation pane, choose\nTransit Gateways\n.\nOn the\nTransit gateways\npage, choose the\nID\nlink that you want to view the dashboard for.\nThe\nOverview\npage opens by default.\nOn the\nOverview\npage, you can view the following sections:\nThe\nTransit Gateway\ndetails section displays the transit gateway\nID\n,\nName\n,\nRegion\n, and\nState\n. Choose\n                            a different transit gateway to view those details.\nThe\nAttachments\nsection shows the number of each\n                            resource attached to the transit gateway. The following legend describes the\n                            attachments:\nIcon\nDescription\nVPC\nThe total number of VPCs attached to your transit gateway.\nVPN\nThe total number of VPNs attached to your transit gateway.\nDirect Connect Gateways\nThe\n                                                total number of Direct Connect Gateways attached to\n                                                your transit gateway.\nConnect\nThe total number of\n                                                Connect attachments on your transit gateway.\nTransit Gateway\nThe total number of\n                                                transit gateways.\nThe\nVPNs\nsection displays the VPN\nID\n,\nDevice\n,\nLink\n,\nVPN status\n, and\nTunnel status\n.\nThe\nConnect peers\nsection displays the Connect\n                            peer\nID\n,\nDevice\n,\nLink\n,\nStatus\n, and\nBGP status\n.\nThe\nNetwork events summary\ndisplays CloudWatch Events and the\n                            number of core network attachments per edge, shown as a stacked column\n                            chart.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nTopology tree\nThe\nTopology tree\npage shows a logical diagram of each\n            AWS Transit Gateway.\nTo access the topology tree for  a transit gateway\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network link.\nIn the navigation pane, choose\nTransit Gateways\n.\nOn the\nTransit gateways\npage, choose the\nID\nlink that you want to view the dashboard for.\nThe\nOverview\npage opens by default.\nChoose the\nTopology tree\ntab.\nBy default, the\nTopology tree\npage displays the\nSites\n,\nDevices\n, and\nCustomer Gateways\nof the chosen transit gateway and the\n                    logical relationships between them. You can filter the network tree to show\n                    specific resources types to view information about the specific resource\n                    represented. The line colors represent the state of the relationships between\n                    AWS and the on-premises resources.\nEvents\nTrack your transit gateway\nEvents\nusing CloudWatch Events, which delivers a\n            near-real-time stream of system events that describe changes in your resources. Using\n            simple rules that you can quickly set up, you can match events and route them to one or\n            more target functions or streams. For more information about CloudWatch Events, see the\nAmazon CloudWatch Events User\n                    Guide.\n.\nTo track transit gateway events\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network link.\nIn the navigation pane, choose\nTransit Gateways\n.\nOn the\nTransit gateways\npage, choose the\nID\nlink that you want to view the dashboard for.\nThe\nOverview\npage opens by default.\nChoose the\nEvents\ntab.\nThe\nEvents\nsection updates with the CloudWatch transit events\n                    that occurred during the time frame for the chosen transit gateway.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nMonitoring\nOn the\nMonitor\npage, monitor your transit gateways using Amazon CloudWatch, which\n            collects raw data and processes it into readable, near-real-time metrics. These\n            statistics are kept for 15 months, so that you can access historical information and\n            gain a better perspective on how your network is performing. You can also set alarms\n            that watch for certain thresholds, and send notifications or take actions when those\n            thresholds are met. For more information, see the\nAmazon CloudWatch Events User\n                    Guide\n.\nOn the monitoring page, you can view usage metrics for your transit gateways,\n            filtering by specific transit gateways.\nTo access transit monitoring details\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network link.\nIn the navigation pane, choose\nTransit Gateways\n.\nOn the\nTransit gateways\npage, choose the\nID\nlink that you want to view the dashboard for.\nThe\nOverview\npage opens by default.\nChoose the\nMonitoring\ntab.\nMonitoring statistics display for the chosen transit gateway. Choose a\n                    different transit gateway to see those monitoring statistics.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nThe page updates the following transit gateway monitors:\nBytes in\nBytes out\nBytes dropped \u00e2\u0080\u0093 black hole\nBytes dropped \u00e2\u0080\u0093 no route\nPackets in\nPackets out\nPackets dropped \u00e2\u0080\u0093 black hole\nPackets dropped \u00e2\u0080\u0093 no route\n(Optional) Choose\nAdd to dashboard\nto add this metric to\n                    your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                        Guide\n.\nNote\nThe\nAdd to dashboard\noption works only if your\n                        registered transit gateway is in the US West (Oregon) Region.\nOn-premises associations\nThe\nOn-premises\npage displays information about your on-premises\n            devices for this transit gateway. On this page you can associate or disassociate any of your\n            devices..\nTo access  transit gateway on-premises associations\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network link.\nIn the navigation pane, choose\nTransit Gateways\n.\nOn the\nTransit gateways\npage, choose the\nID\nlink that you want to view the dashboard for.\nThe\nOverview\npage opens by default.\nChoose the\nOn-premises associations\ntab.\nThe\nTransit Gateway\non-premises association page displays\n                    the\nCustomer gateway\n,\nDevice\n,\nLink\n, and\nState\nof the\n                    transit gateway.\nTo associate a device\nChoose the\nCustomer gateway\nthat you want to associate a\n                    device with.\nChoose\nAssociate\n.\nOn the\nEdit on-premises association\npage, choose the\nDevice\nand optional\nLink\nfor the\n                    association.\nChoose\nEdit on-premises association\n.\nTo disassociate an on-premises device\nChoose the\nCustomer gateway\nthat you want to\n                    disassociate.\nChoose\nDisassociate\n.\nConnect peer\nThe Connect peer page displays information about your associated Connect peers for\n            this transit gateway. On this page you can disassociate any of your devices.\nTo access on-premises associations\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network link.\nIn the navigation pane, choose\nTransit Gateways\n.\nOn the\nTransit gateways\npage, choose the\nID\nlink that you want to view the dashboard for.\nThe\nOverview\npage opens by default.\nChoose the\nConnect peer associations\ntab.\nThe\nConnect peer  associations\npage displays the\nConnect peer\n,\nDevice\n,\nLink\n, and\nState\nof the\n                    transit gateway.\nTo disassociate a Connect peer device\nChoose the\nConnect peer\nthat you want to\n                    disassociate.\nChoose\nDisassociate\n.\nTags\nThe\nTags\npage displays the tags that are associated\n            with the transit gateway. You can edit any of your transit gateway tags.\nNote\nEditing transit gateway tags is done through the Amazon Virtual Private Cloud console at\nconsole.aws.amazon.com/vpc/home\n.\nTo view transit gateway tags\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network link.\nIn the navigation pane, choose\nTransit Gateways\n.\nOn the\nTransit gateways\npage, choose the\nID\nlink that you want to view the dashboard for.\nThe\nOverview\npage opens by default.\nChoose the\nTags\ntab.\nA list of the transit gateway key-value tags is displayed.\nTo add, edit, or delete any tags, choose\nEdit tags\nto\n                    open the Amazon Virtual Private Cloud console at\nconsole.aws.amazon.com/vpc/home\n. See\nAdd or edit tags for a\n                        transit gateway\nin the\nAWS Transit Gateway User Guide\nfor\n                    the steps to add or edit transit gateway tags.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTransit gateway networks\nAuthentication and access control\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-security.html": "Authentication and access for AWS Cloud WAN - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nIdentity and access management\nTag core network resources\nAuthentication and access for AWS Cloud WAN\nAWS Cloud WAN uses service-linked roles for the permissions that it requires to call other AWS\n        services on your behalf. For more information on the Network Manager service-lined role, see\nservice-linked role\nin the\nTransit Gateway User Guide\n.\nIdentity and access management for AWS Cloud WAN\nAWS Identity and Access Management (IAM) is an AWS service that helps an\n            administrator securely control access to AWS resources. IAM administrators control\n            who can be authenticated (signed in) and authorized (have permissions) to use AWS Cloud WAN\n            resources. IAM is an AWS service that you can use with no additional charge. You can\n            use features of IAM to allow other users, services, and applications to use your AWS\n            resources fully or in a limited way, without sharing your security credentials.\nBy default, IAM users don't have permission to create, view, or modify AWS\n            resources. To allow an IAM user to access resources, such as a global network, and\n            perform tasks, you must:\nCreate an IAM policy that grants the user permission to use the specific\n                    resources and API actions they need\nAttach the policy to the IAM user or to the group to which the user\n                    belongs\nWhen you attach a policy to a user or group of users, it allows or denies the user\n            permissions to perform the specified tasks on the specified resources.\nImportant\nIf you grant access to a global network you grant access to all AWS service data associated\n                with the core network edges across all AWS Regions. For more information, see\nIdentity and access\n                    management for AWS Network Manager\nin the\nTransit Gateway User\n                    Guide\n.\nCondition keys\nThe\nCondition\nelement (or Condition block) lets you specify\n                conditions in which a statement is in effect. The Condition element is optional. You\n                can build conditional expressions that use condition operators, such as equals or\n                less than, to match the condition in the policy with values in the request. For more\n                information, see\nIAM JSON policy elements: Condition operators\nin the\nAWS\n                    Identity and Access Management User Guide\n.\nIf you specify multiple\nCondition\nelements in a statement, or\n                multiple keys in a single\nCondition\nelement, AWS evaluates them using a\n                logical\nAND\noperation. If you specify multiple values for a single\n                condition key, AWS evaluates the condition using a logical\nOR\noperation. All of the conditions must be met before the statement's permissions are\n                granted.\nYou can also use placeholder variables when you specify conditions. For example,\n                you can grant an IAM user permission to access a resource only if it is tagged\n                with their IAM user name.\nYou can attach tags to AWS Cloud WAN resources or pass tags in a request to Cloud WAN. To\n                control access based on tags, you provide tag information in the condition element\n                of a policy using the\naws:ResourceTag/key-name\n,\naws:RequestTag/key-name\n, or\naws:TagKeys\ncondition\n                keys. See\nIAM JSON\n                    policy elements: Condition\nin the\nAWS Identity and Access\n                    Management User Guide\nfor more information.\nTo see all AWS global condition keys, see\nAWS global\n                    condition context keys\nin the\nAWS Identity and Access\n                    Management User Guide\n.\nAWS Cloud WAN supports the following condition keys:\nnetworkmanager:vpcArn\n\u00e2\u0080\u0094 Filters access by which VPC can be\n                        used to create or update an attachment.\nnetworkmanager:subnetArns\n\u00e2\u0080\u0094 Filters access by which VPC\n                        subnets can be added or removed from a VPC attachment.\nnetworkmanager:vpnConnectionArn\n\u00e2\u0080\u0094 Filters access by which\n                        site-to-site VPN can be used to create or update an attachment.\nFor more information see the following:\nFor information on supported condition keys, see\nIdentity and\n                        access management\nin the\nTransit Gateway User\n                        Guide\n.\nFor example policies to manage, see\nExample\n                        policies to manage\nin the\nTransit Gateway User\n                        Guide\n.\nTag core network resources\nA tag is a metadata label that either you or AWS assigns to an AWS resource.\n                Each tag consists of a key and a value. For tags that you assign, you define the key\n                and the value. For example, you might define the key as\npurpose\nand the\n                value as\ntest\nfor one resource. Tags help you do the following:\nIdentify and organize your AWS resources. Many AWS services support\n                    tagging, so you can assign the same tag to resources from different services to\n                    indicate that the resources are related.\nControl access to your AWS resources. For more information, see\nControlling\n                        access to AWS resources using tags\nin the\nAWS Identify\n                        and Access Management User Guide\n.\nSupported\n                    resources\nThe following core network resources support tagging:\nCore network\nCore network attachments\nConnect peer\nFor tagging supported resources, see\nTag your Network Manager\n                    resources\nin the\nTransit Gateway User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nTransit gateways\nAWS managed policies\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/security-iam-awsmanpol.html": "AWS managed policies for AWS Cloud WAN - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nAWS managed policy:\n            AWSNetworkManagerCloudWANServiceRolePolicy\nAWS managed policy:\n            AWSNetworkManagerServiceRolePolicy\nPolicy updates\nAWS managed policies for AWS Cloud WAN\nTo add permissions to users, groups, and roles, it is easier to use AWS managed policies\n      than to write policies yourself. It takes time and expertise to\ncreate IAM customer\n         managed policies\nthat provide your team with only the permissions they need. To get\n      started quickly, you can use our AWS managed policies. These policies cover common use cases\n      and are available in your AWS account. For more information about AWS managed policies,\n      see\nAWS managed policies\nin the\nIAM User Guide\n.\nAWS services maintain and update AWS managed policies. You can't change the\n      permissions in AWS managed policies. Services occasionally add additional permissions to an\n      AWS managed policy to support new features. This type of update affects all identities\n      (users, groups, and roles) where the policy is attached. Services are most likely to update an\n      AWS managed policy when a new feature is launched or when new operations become available.\n      Services do not remove permissions from an AWS managed policy, so policy updates won't break\n      your existing permissions.\nAdditionally, AWS supports managed policies for job functions that span multiple\n      services. For example, the\nReadOnlyAccess\nAWS managed\n      policy provides read-only access to all AWS services and resources. When a service launches\n      a new feature, AWS adds read-only permissions for new operations and resources. For a list\n      and descriptions of job function policies, see\nAWS managed policies for\n         job functions\nin the\nIAM User Guide\n.\nAWS managed policy:\n            AWSNetworkManagerCloudWANServiceRolePolicy\nYou can attach the\nAWSNetworkManagerCloudWANServiceRolePolicy\npolicy to\n         your IAM identities. This policy allows AWS Network Manager to access resources associated with\n         Cloud WAN. For more information, see\nAWS Cloud WAN service-linked roles\n.\nAWS managed policy:\n            AWSNetworkManagerServiceRolePolicy\nThis policy is attached to the service-linked role named\nAWSServiceRoleForNetworkManager\nto allow AWS Cloud WAN to call API actions on your\n         behalf when you work with global networks. For more information, see\nAWS Cloud WAN service-linked roles\n.\nCloud WAN updates to AWS managed\n            policies\nView details about updates to AWS managed policies for AWS Cloud WAN since this service began\n         tracking these changes in July 2022.\nChange\nDescription\nDate\nAWSServiceRoleForNetworkManagerCloudWAN\n. New policy.\nNew policy added to AWS Cloud WAN.\nJuly 12, 2022\nAWSServiceRoleForNetworkManager\n. New policy.\nNew policy added to AWS Cloud WAN.\nJuly 12, 2022\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAuthentication and access control\nService-linked roles\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cwan-using-service-linked-roles.html": "AWS Cloud WAN service-linked roles - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nAWSServiceRoleForNetworkManagerCloudWAN\nAWSServiceRoleForVPCTransitGateway\nAWSServiceRoleForNetworkManager\nCreate the service-linked role\nEdit the service-linked role\nDelete the service-linked role\nSupported Regions\nAWS Cloud WAN service-linked roles\nAWS Cloud WAN uses the following service-linked roles for the permissions that it requires to\n        call other AWS services on your behalf:\nAWSServiceRoleForNetworkManagerCloudWAN\nAWSServiceRoleForVPCTransitGateway\nAWSServiceRoleForNetworkManager\nAWSServiceRoleForNetworkManagerCloudWAN\nAWS Cloud WAN uses the service-linked role named\nAWSServiceRoleForNetworkManagerCloudWAN\nto create and announce\n            transit gateway route tables, and then propagates transit gateway routes to those tables.\nThe\nAWSServiceRoleForNetworkManagerCloudWAN\nservice-linked role trusts the following\n            service to assume the role:\nnetworkmanager.amazonaws.com\nThe following\nAWSNetworkManagerCloudWANServiceRolePolicy\npolicy\n            is attached to the role.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTransitGatewayRouteTableAnnouncement\",\n                \"ec2:DeleteTransitGatewayRouteTableAnnouncement\",\n                \"ec2:EnableTransitGatewayRouteTablePropagation\",\n                \"ec2:DisableTransitGatewayRouteTablePropagation\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nAWSServiceRoleForVPCTransitGateway\nAmazon VPC uses the service-linked role named\nAWSServiceRoleForVPCTransitGateway\nto call the following actions on your behalf when you work with a transit gateway:\nec2:CreateNetworkInterface\nec2:DescribeNetworkInterface\nec2:ModifyNetworkInterfaceAttribute\nec2:DeleteNetworkInterface\nec2:CreateNetworkInterfacePermission\nec2:AssignIpv6Addresses\nec2:UnAssignIpv6Addresses\nAWSServiceRoleForVPCTransitGateway\ntrusts the\ntransitgateway.amazonaws.com\nservice to assume the role.\nAWSServiceRoleForNetworkManager\nAWS Cloud WAN uses the service-linked role named\nAWSServiceRoleForNetworkManager\nto call actions on\n            your behalf when you work with global networks.\nThe\nAWSServiceRoleForNetworkManager\nservice-linked role trusts the following service to assume\n            the role:\nnetworkmanager.amazonaws.com\nThe following\nAWSNetworkManagerServiceRolePolicy\npolicy is attached to\n            the role.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"directconnect:DescribeDirectConnectGateways\",\n                \"directconnect:DescribeConnections\",\n                \"directconnect:DescribeDirectConnectGatewayAttachments\",\n                \"directconnect:DescribeLocations\",\n                \"directconnect:DescribeVirtualInterfaces\",\n                \"ec2:DescribeCustomerGateways\",\n                \"ec2:DescribeTransitGatewayAttachments\",\n                \"ec2:DescribeTransitGatewayRouteTables\",\n                \"ec2:DescribeTransitGateways\",\n                \"ec2:DescribeVpnConnections\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:GetTransitGatewayRouteTableAssociations\",\n                \"ec2:GetTransitGatewayRouteTablePropagations\",\n                \"ec2:SearchTransitGatewayRoutes\",\n                \"ec2:DescribeTransitGatewayPeeringAttachments\",\n                \"ec2:DescribeTransitGatewayConnects\",\n                \"ec2:DescribeTransitGatewayConnectPeers\",\n                \"ec2:DescribeRegions\",\n                \"organizations:DescribeAccount\",\n                \"organizations:DescribeOrganization\",\n                \"organizations:ListAccounts\", \n                \"organizations:ListAWSServiceAccessForOrganization\",\n                \"organizations:ListDelegatedAdministrators\",\n                \"ec2:DescribeTransitGatewayRouteTableAnnouncements\",\n                \"ec2:DescribeTransitGatewayPolicyTables\",\n                \"ec2:GetTransitGatewayPolicyTableAssociations\",\n                \"ec2:GetTransitGatewayPolicyTableEntries\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nAWS Cloud WAN uses the service-linked role named\nAWSServiceRoleForNetworkManagerCloudWAN\nto create and announce transit gateway\n                routing tables, and then propagates transit gateway routes to those tables.\nThe\nAWSServiceRoleForNetworkManager\nservice-linked role trusts the following service to assume\n                the role:\nnetworkmanager.amazonaws.com\nThe following\nAWSNetworkManagerCloudWANServiceRolePolicy\npolicy is\n                attached to the role.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTransitGatewayRouteTableAnnouncement\",\n                \"ec2:DeleteTransitGatewayRouteTableAnnouncement\",\n                \"ec2:EnableTransitGatewayRouteTablePropagation\",\n                \"ec2:DisableTransitGatewayRouteTablePropagation\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nCreate the service-linked role\nYou don't need to manually create the\nAWSServiceRoleForNetworkManager\nor\nAWSServiceRoleForVPCTransitGateway\nroles.\nNetwork Manager creates the\nAWSServiceRoleForNetworkManager\nrole when you create your first\n                    global network.\nAmazon VPC creates the\nAWSServiceRoleForVPCTransitGateway\nrole when\n                    you attach a VPC to a transit gateway in your account.\nFor Network Manager to create a service-linked role on your behalf, you must have the\n            required permissions. For more information, see\nService-Linked Role Permissions\nin the\nIAM User Guide\n.\nEdit the service-linked role\nYou can edit the\nAWSServiceRoleForNetworkManager\nor\nAWSServiceRoleForVPCTransitGateway\ndescriptions using IAM. For more\n            information, see\nEditing\n                a Service-Linked Role\nin the\nIAM User Guide\n.\nDelete the service-linked role\nIf you no longer need to use Network Manager, we recommend that you delete the\nAWSServiceRoleForNetworkManager\nor\nAWSServiceRoleForVPCTransitGateway\nroles.\nYou can delete these service-linked roles only after you delete your global network.\n            For information about deleting your global network, see\nDelete a\n                global network\n.\nYou can use the IAM console, the IAM CLI, or the IAM API to delete service-linked roles.\n            For more information, see\nDeleting a Service-Linked Role\nin the\nIAM User Guide\n.\nAfter you delete\nAWSServiceRoleForNetworkManager\n< Network Manager will create the role again when you\n            create a new global network. After you delete\nAWSServiceRoleForVPCTransitGateway\nAmazon VPC will create that  role again\n            when you attach a VPC to a transit gateway in your account.\nSupported Regions for Network Manager service-linked\n                roles\nNetwork Manager supports the service-linked roles in all of AWS Regions where the service\n            is available. For more information, see\nAWS endpoints\nin the\nAWS General Reference\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS managed policies\nEvents and metrics\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-events-metrics.html": "AWS Cloud WAN Events and metrics - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nAWS Cloud WAN Events and metrics\nAWS provides the following monitoring tools to watch the resources in your global network,\n        report when something is wrong, and take automatic actions when appropriate.\nAmazon CloudWatch\nmonitors your AWS resources and the applications\n                that you run on AWS in real time. You can collect and track metrics, create\n                customized dashboards, and set alarms that notify you or take actions when a\n                specified metric reaches a threshold that you specify. For more information, see the\nAmazon CloudWatch User Guide\n.\nAmazon CloudWatch Events\ndelivers a near-real-time stream of system events\n                that describe changes in AWS resources. CloudWatch Events enables automated event-driven\n                computing, as you can write rules that watch for certain events and then trigger\n                automated actions in other AWS services when these events happen. For more\n                information, see the\nAmazon CloudWatch Events User Guide\n.\nYou must first onboard CloudWatch Logs Insights before you can view Events on the AWS Cloud WAN dashboards.\n        See\nOnboard CloudWatch Logs Insights\nfor the onboarding steps.\nTopics\nOnboard CloudWatch Logs Insights\nMonitor with CloudWatch Events\nMonitor with CloudWatch metrics\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nService-linked roles\nOnboard CloudWatch Logs Insights\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-onboard-events.html": "Onboard CloudWatch Logs Insights - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nOnboard CloudWatch Logs Insights\nBefore viewing events on the Events dashboard, you must complete a one-time setup that\n        registers your events with CloudWatch Logs Insights. Until you register your events, you'll be\n        unable to view any of your events on the dashboard.\nTo onboard CloudWatch Logs Insights\nBefore you begin, verify that an AWS Identity and Access Management (IAM) principal (user) in your\n            account has the appropriate permissions to onboard to CloudWatch Logs Insights. Ensure that the\n            IAM policy contains the following permissions.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"events:PutTargets\",\n                \"events:DescribeRule\",\n                \"logs:PutResourcePolicy\",\n                \"logs:DescribeLogGroups\",\n                \"logs:DescribeResourcePolicies\",\n                \"events:PutRule\",\n                \"logs:CreateLogGroup\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore network\n.\nThe\nOverview\npage opens by default.\nChoose the\nEvents\ntab.\nChoose\nOnboard to CloudWatch Logs Insights\n.\nWhen you onboard to CloudWatch Logs Insights, the following occurs:\nA CloudWatch Events rule with the name\nDON_NOT_DELETE_networkmanager_rule\nis created in the US\n                        West (Oregon) Region.\nA CloudWatch Logs group with the name\n/aws/events/networkmanagerloggroup\nis created in the US\n                        West (Oregon) Region.\nA CloudWatch Events rule is configured with the CloudWatch Logs group as a target.\nA CloudWatch resource policy named\nDO_NOT_DELETE_networkmanager_TrustEventsToStoreLogEvents\nis created in the US West (Oregon) Region.\nTo view this policy, run the following AWS CLI command:\naws logs describe-resource-policies --region\n                        us-west-2\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nEvents and metrics\nMonitor with CloudWatch Events\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-cloudwatch-events.html": "Monitor with CloudWatch Events - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nTopology changes\nRoute changes\nStatus updates\nPolicy updates\nSegment update events\nMonitor with CloudWatch Events\nYou can monitor your core network using Amazon CloudWatch Events, which delivers a near-real-time stream\n        of system events that describe changes in your resources. You set up simple rules, which\n        then can match events and route them to one or more target functions or streams. For more\n        information, see the\nAmazon CloudWatch Events\n                User Guide\n.\nThe following events can be sent to CloudWatch Events:\nTopology changes\nRoute changes\nStatus updates\nPolicy updates\nSegment update events\nTopology changes\nTopology change events occur when there are changes to your core network resources.\n            These changes include the following:\nAn edge location was added to the core network.\nAn edge location was deleted from a core network.\nA Site-to-Site VPN attachment was created for a core network.\nA Site-to-Site VPN attachment was deleted from a core network.\nA VPC attachment was created for a core network.\nA VPC attachment was deleted from a core network.\nA VPN attachment was created for a core network.\nA VPN attachment was deleted from a core network.\nA Connect attachment was created for a core network.\nA Connect attachment was deleted from a core network.\nA Connect peer attachment was created for a core network.\nA Connect peer attachment was deleted from a core network.\nThe following example shows a topology update event where a core network VPC\n            attachment was deleted.\n{\n\"version\": \"0\", \n  \"id\": \"13143a7e-806e-a904-300b-ef874c56eaac\", \n  \"detail-type\": \"Network Manager Topology Change\", \n  \"source\": \"aws.networkmanager\", \n  \"account\": \"166889823465\", \n  \"time\": \"2021-09-02T12:00:38Z\", \n  \"region\": \"us-west-2\", \n  \"resources\": [ \n    \"arn:aws:networkmanager::166889823465:global-network/global-network-0de3af1d5c665d6d8\", \n    \"arn:aws:networkmanager::166889823465:core-network/core-network-03ad314394f3f014d\"   \n  ], \n  \"detail\":\n{\n\"changeType\": \"VPC-ATTACHMENT-DELETED\", \n    \"changeDescription\": \"A VPC attachment has been deleted from a Core Network.\", \n    \"edgeLocation\": \"us-east-2\", \n    \"attachmentArn\": \"arn:aws:networkmanager::166889823465:attachment/attachment-092077875ecbe596b\",\n    \"vpcArn\": \"arn:aws:ec2:us-east-2:212869205455:vpc/vpc-049a3a24f48fcc47d\", \n    \"coreNetworkArn\": \"arn:aws:networkmanager::166889823465:core-network/core-network-03ad314394f3f014d\"   \n  } \n}\nRoute changes\nRouting events occur when there are changes to your core network routes. These changes\n            include the following:\nRoutes in one or more segments have been installed.\nRoutes in one or more segments have been uninstalled.\nThe following example shows a routing update event where a route was installed in one\n            or more segments.\n{\n\"version\": \"0\", \n   \"id\": \"13143a7e-806e-a904-300b-ef874c56eaac\", \n   \"detail-type\": \"Network Manager Routing Update\", \n   \"source\": \"aws.networkmanager\", \n   \"account\": \"166889823465\", \n   \"time\": \"2021-09-02T12:00:38Z\", \n   \"region\": \"us-west-2\", \n   \"resources\": [ \n     \"arn:aws:networkmanager::166889823465:global-network/global-network-0de3af1d5c665d6d8\", \n     \"arn:aws:networkmanager::166889823465:core-network/core-network-092077875ecbe596b\" \n   ], \n   \"detail\":\n{\n\"changeType\": \"SEGMENT-ROUTES-INSTALLED\", \n     \"changeDescription\": \"Routes in one or more Segments have been installed.\", \n     \"region\": \"us-east-2\", \n     \"segments\": [ \n       \"development\" \n     ], \n     \"sequenceNumber\": 1630585228195, \n     \"routes\": [\n{\n\"destinationCidrBlock\": \"169.254.137.220/30\", \n         \"attachments\": [\n{\n\"attachmentId\": \"attachment-06d30d085574773ee\", \n             \"attachmentType\": \"vpn\", \n             \"vpnOutsideIpAddress\": \"3.138.83.40\" \n           } \n         ],\n         \"routeType\": \"route_propagated\", \n         \"routeState\": \"active\", \n         \"propagatedRouteFamily\": \"bgp\", \n         \"bgpAttributes\":\n{\n\"med\": \"0\", \n           \"asPath\": [ \"AS_SEQ: [65001]\" ] \n         } \n       } \n     ], \n     \"coreNetworkArn\": \"arn:aws:networkmanager::166889823465:core-network/core-network-03ad314394f3f\"\n   } \n }\n}\nStatus updates\nRouting events occur when there are changes to your core network status. These changes\n            include the following:\nIPsec for a VPN connection has gone down.\nIPsec for a VPN connection has come back up.\nBGP for a VPN connection has gone down.\nBGP for a VPN connection has come back up.\nBGP for a Connect peer connection has gone down.\nBGP for a Connect peer connection has come back up.\nThe following example shows a status update event where IPsec for a VPN connection\n            has come up.\n{\n\"version\": \"0\", \n   \"id\": \"13143a7e-806e-a904-300b-ef874c56eaac\", \n   \"detail-type\": \"Network Manager Status Update\", \n   \"source\": \"aws.networkmanager\", \n   \"account\": \"166889823465\", \n   \"time\": \"2021-09-02T12:00:38Z\", \n   \"region\": \"us-west-2\", \n   \"resources\": [ \n     \"arn:aws:networkmanager::166889823465:global-network/global-network-0de3af1d5c665d6d8\", \n     \"arn:aws:networkmanager::166889823465:core-network/core-network-092077875ecbe596b\" \n   ], \n   \"detail\":\n{\n\"changeType\": \"VPN-CONNECTION-IPSEC-UP\", \n     \"changeDescription\": \"IPsec for a VPN connection has come up.\", \n     \"region\": \"us-west-2\", \n     \"attachmentArn\": \"arn:aws:networkmanager::166889823465:attachment/attachment-092077875ecbe596b\", \n     \"outsideIpAddress\": \"35.161.41.136\", \n     \"coreNetworkArn\": \"arn:aws:networkmanager::166889823465:core-network/core-network-03ad314394f3f014d\" \n   } \n }\nPolicy updates\nRouting events occur when there are changes to your core network policies. These\n            changes include the following:\nA change set is ready to run for a core network policy.\nA change set was run successfully for a core network policy.\nThe following example shows a policy update event where a change set was run\n            successfully.\n{\n\"version\": \"0\", \n   \"id\": \"13143a7e-806e-a904-300b-ef874c56eaac\", \n   \"detail-type\": \"Network Manager Policy Update\", \n   \"source\": \"aws.networkmanager\", \n   \"account\": \"166889823465\", \n   \"time\": \"2021-09-02T12:00:38Z\", \n   \"region\": \"us-west-2\", \n   \"resources\": [ \n     \"arn:aws:networkmanager::166889823465:global-network/global-network-0de3af1d5c665d6d8\", \n     \"arn:aws:networkmanager::166889823465:core-network/core-network-092077875ecbe596b\" \n   ], \n   \"detail\":\n{\n\"changeType\": \"CHANGE-SET-EXECUTED\", \n     \"changeDescription\": \"A change-set has been sucessfully executed for a Core Network policy.\", \n     \"policyVersionId\":\"1\",\n     \"coreNetworkArn\": \"arn:aws:networkmanager::166889823465:core-network/core-network-03ad314394f3f014d\"\n   } \n }\nSegment update events\nRouting events occur when there are changes to your core network segments. These\n            changes include the following:\nAn attachment was associated with a segment.\nAn attachment was mapped to a different segment.\nAn attachment was disassociated from a segment.\nThe following example shows a segment update event where an attachment was mapped to\n            a different segment.\n{\n\"version\": \"0\", \n   \"id\": \"13143a7e-806e-a904-300b-ef874c56eaac\", \n   \"detail-type\": \"Network Manager Segment Update\", \n   \"source\": \"aws.networkmanager\", \n   \"account\": \"166889823465\", \n   \"time\": \"2021-09-02T12:00:38Z\", \n   \"region\": \"us-west-2\", \n   \"resources\": [ \n     \"arn:aws:networkmanager::166889823465:global-network/global-network-0de3af1d5c665d6d8\", \n     \"arn:aws:networkmanager::166889823465:core-network/core-network-092077875ecbe596b\" \n   ], \n   \"detail\":\n{\n\"changeType\": \"ATTACHMENT-ASSOCIATION-MODIFIED\", \n     \"changeDescription\": \"An attachment has been mapped to a different Segment.\", \n     \"attachmentArn\": \"arn:aws:networkmanager::166889823465:attachment/attachment-092077875ecbe596b\",\n     \"previousSegmentName\": \"development\",\n     \"segmentName\": \"production\",\n     \"edgeLocation\": \"us-west-2\",\n     \"coreNetworkArn\": \"arn:aws:networkmanager::166889823465:core-network/core-network-03ad314394f3f014d\"\n   } \n }\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nOnboard CloudWatch Logs Insights\nMonitor with CloudWatch metrics\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-cloudwatch-metrics.html": "Monitor with CloudWatch metrics - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nView usage metrics for an edge location\nMonitor with CloudWatch metrics\nYou can monitor your core network and core network attachments using Amazon CloudWatch under the\n        AWS/NetworkManager namespace, which collects raw data and processes it into readable,\n        near-real-time metrics. These statistics are kept for 15 months, so that you can access\n        historical information and gain a better perspective on how your network is performing. You\n        can also set alarms that watch for certain thresholds, and send notifications or take\n        actions when those thresholds are met. For more information, see the\nAmazon CloudWatch User Guide\n.\nNote\nCloudWatch metrics in the AWS/NetworkManager namespace are available only in the\n            following Regions:\nUS West (Oregon) for all Regions except AWS GovCloud (US)\nAWS GovCloud (US-West) for AWS GovCloud (US-West) and AWS GovCloud (US-East)\nYou can view usage metrics for any of your core network edge locations.\nView usage metrics for an edge location\nView usage metrics for a specific core network edge.\nTo access usage metrics for a core network edge location\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nConnectivity\n, choose\nGlobal Networks\n.\nOn the\nGlobal networks\npage, choose the global network ID.\nIn the navigation pane, choose\nCore networks\n, and then\n                    choose the\nMonitoring\ntab.\nOn the\nCore network\npage, choose the\nShow\n                    metrics\ndropdown list, and then choose\nUsage\n.\nFrom the\nCore network edge\ndropdown list, choose the edge\n                    location that you want to see metrics for.\n(Optional) Metrics and events use the default time set up in the CloudWatch Events event. To set a custom time frame, choose\nCustom\nand then choose a\nRelative\nor\nAbsolute\ntime, and then choose if you want to see that date range in\nUTC\nor the edge location's\nLocal time zone\n.\nChoose\nAdd to dashboard\nto add this metric to your CloudWatch dashboard. For more information about using CloudWatch dashboards, see\nUsing\n                        Amazon CloudWatch Dashboards\nin the\nAmazon CloudWatch User\n                            Guide\n.\nNote\nThe\nAdd to dashboard\noption only works if your registered transit gateway is in the US West (Oregon) Region.\nThe Metrics page displays the following usage metrics for the specified edge\n                    location during the chosen time frame.\nBytes in\nBytes out\nBytes dropped - black hole\nBytes dropped - no route\nPackets in\nPackets out\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMonitor with CloudWatch Events\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-quotas.html": "Quotas - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nGeneral\nBandwidth\nRouting\nMaximum transmission unit (MTU)\nQuotas\nYour AWS account has the quotas shown in the following table for AWS Cloud WAN.\nThe Service Quotas console also provides information about AWS Cloud WAN quotas. You can use the\n        Service Quotas console to view default quotas and\nrequest quota increases\nfor\n        adjustable quotas. For more information, see\nRequesting a quota\n            increase\nin the\nService Quotas User Guide\n.\nGeneral\nThe following AWS Cloud WAN general quotas apply.\nQuota\nDefault\nAdjustable\nGlobal networks per AWS account\n5\nYes\nCore networks per global network\n1\nNo\nEdges per Region per core network\n1\nNo\nSegments per core network\n20\nNo\nRetention duration (in seconds) for core network policies with\n                            out-of-date change sets\n7776000\nYes\nNumber of policy versions per core network\n10,000\nYes\nSize of a core network policy (in KB)\n100\nNo\nNumber of policy versions\n10000\nYes\nNumber of attachments per core network\n5000\nYes\nNumber of core network Connect attachments\nNo limit, up to 5000 maximum attachments per core network\nNo\nNumber of core network attachments per VPC\n5\nNo\nNumber of VPN attachments per core network\n50\nNo\nNumber of Connect peers per Connect attachment\n4\nNo\nNumber of Connect peers per tunnel-less Connect attachment\n4\nNo\nNumber of devices per global network\n200\nYes\nNumber of sites per global network\n200\nYes\nNumber of links per global network\n200\nYes\nNumber of connections per global network\n500\nYes\nNumber of transit gateway peers\n50\nYes\nNumber of transit gateway routing tables\nNo limit\nBandwidth\nYour AWS account has the following bandwidth quotas for AWS Cloud WAN.\nYou can use equal-cost multipath routing (ECMP) to get higher VPN bandwidth by\n            aggregating multiple VPN tunnels. To use ECMP, the VPN connection must be configured for\n            dynamic routing. ECMP is not supported on VPN connections that use static\n            routing.\nYou can create up to four Connect peers per Connect attachment (up to 20 Gbps in total\n            bandwidth per Connect attachment). You can use ECMP to get higher bandwidth by scaling\n            horizontally across multiple Connect peers of the same Connect attachment or across\n            multiple Connect attachments. Core network cannot use ECMP between the BGP peerings of\n            the same Connect peer.\nQuota\nDefault\nAdjustable\nBandwidth per VPC attachment per Availability Zone\nUp to 100 Gbps\nContact your Solutions Architect (SA) or Technical Account Manager\n                            (TAM) for further assistance.\nPackets per second per transit gateway VPC attachment per Availability\n                            Zone\nUp to 7,500,000\nContact your Solutions Architect (SA) or Technical Account Manager\n                            (TAM) for further assistance.\nMaximum bandwidth per VPN tunnel\nUp to 1.25 Gbps\nNo\nMaximum bandwidth per Connect peer (GRE tunnel) per Connect\n                                attachment\nUp to 5 Gbps\nNo\nMaximum bandwidth per Connect peer (Tunnel-less)\n                            per Connect\n                            attachment\nUp to 100 Gbps per availability\n                            zone\nContact your Solutions Architect (SA) or Technical\n                            Account Manager (TAM) for further\n                            assistance.\nRouting\nYour AWS account has the following routing quotas for AWS Cloud WAN.\nQuota\nDefault\nAdjustable\nRoutes per core network, across all segments\n10,000\nNo\nRoutes advertised over VPN to core network\n1,000\nNo\nRoutes advertised from core network over VPN\n5,000\nNo\nRoutes advertised over Connect peer to core network\n1,000\nNo\nRoutes advertised from core network over Connect peer\n5,000\nNo\nMaximum of Tunnel-less Connect routes\n5,000 outbound\n1,000 inbound\nNo\nMaximum transmission unit (MTU)\nYour AWS account has the following MTU quotas for AWS Cloud WAN:\nThe MTU of a network connection is the size, in bytes, of the largest\n                    permissible packet that can be passed over the connection. The larger the MTU of\n                    a connection, the more data that can be passed in a single packet. A Cloud WAN\n                    core network supports an MTU of 8500 bytes for traffic between\n                    VPCs,\n                    including Tunnel-less Connect VPC attachments. Traffic over VPN connections\n                    can have an MTU of 1500 bytes.\nPackets with a size larger than 8500 bytes that arrive at the core network are\n                    dropped.\nThe core network does not generate the FRAG_NEEDED for ICMPv4 packet, or the\n                    Packet Too Big (PTB) for ICMPv6 packet. Therefore, the Path MTU Discovery\n                    (PMTUD) is not supported.\nThe core network enforces Maximum Segment Size (MSS) clamping for all packets.\n                    For more information, see\nRFC879\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMonitor with CloudWatch metrics\nDocument history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/cloudwan/doc-history.html": "Document history for AWS Cloud WAN - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nAWS Cloud WAN User Guide\nDocument history for AWS Cloud WAN\nThe following table describes the releases for AWS Cloud WAN.\nChange\nDescription\nDate\nSupport added for appliance mode.\nVPD attachments now support appliance mode in AWS Cloud WAN.\nDecember 14, 2022\nOfficial launch date\nThe official launch of AWS Cloud WAN.\nJuly 12, 2022\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/what-is-reachability-analyzer.html": "What is Reachability Analyzer? - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nUse cases\nWorking with Reachability Analyzer\nPricing\nWhat is Reachability Analyzer?\nReachability Analyzer is a configuration analysis tool that enables you to perform connectivity\n    testing between a source resource and a destination resource in your virtual private clouds\n    (VPCs). When the destination is reachable, Reachability Analyzer produces hop-by-hop details of the virtual\n    network path between the source and the destination. When the destination is not reachable,\n    Reachability Analyzer identifies the blocking component. For example, paths can be blocked by configuration\n    issues in a security group, network ACL, route table, or load balancer.\nFor more information, see\nHow Reachability Analyzer works\n.\nUse cases\nYou can use Reachability Analyzer to do the following:\nTroubleshoot connectivity issues caused by network misconfiguration.\nVerify that your network configuration matches your intended connectivity.\nAutomate the verification of your connectivity intent as your network configuration\n          changes.\nWorking with Reachability Analyzer\nYou can use any of the following interfaces to work with Reachability Analyzer:\nAWS Management Console\n\u00e2\u0080\u0094 A web interface for\n          AWS services, including Reachability Analyzer.\nAWS Command Line Interface (AWS CLI)\n\u00e2\u0080\u0094 Provides commands for  \n          AWS services, including Reachability Analyzer. The AWS CLI is supported on Windows, macOS, and Linux. \n          For more information, see the\nAWS Command Line Interface User Guide\n.\nAWS CloudFormation\n\u00e2\u0080\u0094 Enables you to create templates that\n          describe your AWS resources. You use a template to provision and manage AWS resources   \n          as a single unit. For more information, see the following resources:\nAWS::EC2::NetworkInsightsAnalysis\nand\nAWS::EC2::NetworkInsightsPath\n.\nAWS SDKs\n\u00e2\u0080\u0094 Provides language-specific APIs and\n          takes care of many of the connection details, such as calculating signatures, handling\n          request retries, and handling errors. For more information, see\nAWS SDKs\n.\nQuery API\n\u00e2\u0080\u0094 Provides low-level API actions that\n          you call using HTTPS requests. Using the Query API is the most direct way to access\n          Reachability Analyzer. However, the Query API requires that your application handle low-level details\n          such as generating the hash to sign the request, and handling errors. For more\n          information, see the\nAmazon EC2 API Reference\n.\nPricing\nYou are charged per analysis run between a source and destination. For more information,\n      see\nPricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow Reachability Analyzer works\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/how-reachability-analyzer-works.html": "How Reachability Analyzer works - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nSource and destination resources\nIntermediate components\nPath components\nConsiderations\nResource configuration\nHow Reachability Analyzer works\nReachability Analyzer analyzes the path between a source and destination by building a model of the \n    network configuration, and then checking for reachability based on the configuration. It does \n    not send packets or analyze the data plane.\nTo use Reachability Analyzer, you specify the path for the traffic from a source to a destination. For\n    example, you could specify an internet gateway as the source, an EC2 instance as the\n    destination, 22 as the destination port, and TCP as the protocol. This would allow you to verify\n    that you can connect to the EC2 instance through the internet gateway using SSH.\nIf there are multiple reachable paths between a source and a destination, Reachability Analyzer\n    identifies and displays the shortest path. You can analyze the path again, specifying an\n    intermediate component, to find an alternative reachable path that traverses the intermediate\n    component.\nIf the path is not reachable, Reachability Analyzer displays information about the component or\n    combination of components that is blocking the path. There might be additional components\n    blocking the path.\nContents\nSource and destination resources\nIntermediate components\nPath components\nConsiderations\nResource configuration\nSource and destination resources\nThe source and destination resources must be in the same Region. \n      The source and destination resources must be in the same VPC or in VPCs\n      that are connected through a VPC peering connection or a transit gateway.\n      The source and destination resources can belong to different AWS accounts  \n      in the same organization from AWS Organizations.\nReachability Analyzer supports the following resource types as sources and destinations:\nInstances\nInternet gateways\nNetwork interfaces\nTransit gateways\nTransit gateway attachments\nVPC endpoint services\nVPC endpoints\nVPC peering connections\nVPN gateways\nIn addition, Reachability Analyzer supports IP addresses as destinations.\nIntermediate components\nReachability Analyzer supports the following resource types as intermediate components:\nLoad balancers\nNAT gateways\nNetwork Firewall firewall\nTransit gateways\nTransit gateway attachments\nVPC peering connections\nPath components\nThe following resource types can appear in reachable paths and in explanations when\n      a path is not reachable:\nEC2 instances\nInternet gateways\nLoad balancers\nNAT gateways\nNetwork ACLs\nNetwork Firewall firewall\nNetwork interfaces\nPrefix lists\nRoute tables\nSecurity groups\nSubnets\nTarget groups\nTransit gateways\nTransit gateway attachments\nTransit gateway route tables\nVirtual private gateways\nVPC endpoint services\nVPC endpoints\nVPC gateway endpoints\nVPC peering connections\nVPCs\nVPN connections\nConsiderations\nConsider the following when working with Reachability Analyzer:\nReachability Analyzer supports only resources with an IPv4 address. If a resource has both IPv4 \n          and IPv6 addresses, Reachability Analyzer includes only the IPv4 addresses in its analysis.\nReachability Analyzer supports shared resources only if they can be fully described by the calling\n          principal. For example, if a route references a prefix list owned by another account,\n          the owner must share the prefix list with the calling principal for the analysis to\n          succeed.\nIf you enable trusted access, the delegated administrator account can create and \n          delete paths that traverse owner and participant subnets within your organization from \n          AWS Organizations. This account can also start and delete path analyses. For more information, \n          see\nCross-account analyses for Reachability Analyzer\n.\nPaths are not a shareable resource.\nTransit gateway Connect attachments are not supported. Reachability Analyzer analyzes connectivity\n          only up to these attachments.\nWith the TCP protocol, when a network path traverses a transit gateway route table, \n          only forward traffic is analyzed.\nReachability Analyzer can find paths through at most two transit gateway route tables. To analyze \n          paths through additional transit gateway route tables, use Route Analyzer. For more \n          information, see\nRoute Analyzer\nin the\nAmazon VPC Transit Gateways\nguide.\nPaths through a Gateway Load Balancer endpoint do not include the Gateway Load Balancer or its targets. You should\n          verify connectivity between the Gateway Load Balancer and its targets using a separate analysis.\nReachability Analyzer does not support Network Firewall rule groups that reference a resource group. In\n          this case, the analysis fails.\nReachability Analyzer supports all stateful and stateless 5-tuple rules in Network Firewall. It doesn't\n          support domain lists, Suricata rules, rule options, and tag-based resource groups. \n          When Reachability Analyzer encounters an unsupported rule in Network Firewall, it provides an informational \n          message in the path details.\nThe packet header leaving the source and the packet header arriving at the destination\n          can differ, due to intermediate components transforming the packets. For example, internet\n          gateways and NAT gateways provide network address translation (NAT).\nReachability Analyzer does not report connectivity due to traffic mirroring.\nReachability Analyzer automatically deletes an analysis 120 days after its creation date.\nYour account has quotas related to Reachability Analyzer. For more information, see\nQuotas for Reachability Analyzer\n.\nResource configuration\nUse the following documentation to help you update the configuration of your network resources:\nElastic network interfaces\nFirewalls (AWS Network Firewall)\nInternet gateways\nLoad balancers and target groups (Elastic Load Balancing)\nApplication Load Balancers\nClassic Load Balancers\nGateway Load Balancers\nNetwork Load Balancers\nNetwork ACLs\nRoute tables\nSecurity groups for Linux instances\nSecurity groups for Windows instances\nTransit gateways\nVPC endpoint services (AWS PrivateLink)\nVPC peering configurations\nVPN connections\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWhat is Reachability Analyzer?\nGetting started\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/getting-started.html": "Getting started with Reachability Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nStep 1: Create and analyze a path\nStep 2: View the results of the path analysis\nStep 3: Change the network configuration and analyze the path\nStep 4: Delete the path\nGetting started with Reachability Analyzer\nYou can use Reachability Analyzer to determine whether a destination resource in your virtual private\n  cloud (VPC) is reachable from a source resource. To get started, you specify a source and a\n  destination. For example, you can run a reachability analysis between two network interfaces or\n  between a network interface and a gateway. If there is a reachable path between the source and\n  destination, Reachability Analyzer displays the details. Otherwise, Reachability Analyzer identifies the blocking\n  component.\nTasks\nStep 1: Create and analyze a path\nStep 2: View the results of the path analysis\nStep 3: Change the network configuration and analyze the path\nStep 4: Delete the path\nStep 1: Create and analyze a path\nSpecify the path for the traffic from a source to a destination. After you create the path,\n   Reachability Analyzer analyzes the path once. You can analyze a path at any time to determine whether your\n   intended connectivity is supported, even as your network configuration changes.\nTo create a path\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home\n.\nIn the navigation pane, choose\nReachability Analyzer\n.\nChoose\nCreate and analyze path\n.\n(Optional) For\nName tag\n, enter a descriptive name for the\n     analysis.\nTo specify the source resource, choose the resource type from\nSource\n      type\n, and then choose the specific resource from\nSource\n.\n(Optional) You can filter the scope of the result based on the packet header leaving the\n     source resource. For example, use the source and destination IP addresses and ports of\n     interest. By default, the analysis considers all combinations of IP addresses and ports.\nTo specify the destination resource, choose the resource type from\nDestination\n      type\n, and then choose the specific resource from\nDestination\n.\n(Optional) You can filter the scope of the result based on the packet header arriving at\n     the destination resource. For example, use the source and destination IP addresses and ports of\n     interest. By default, the analysis considers all combinations of IP addresses and ports.\nFor\nProtocol\n, choose\nTCP\nor\nUDP\n.\n(Optional) To add a tag, choose\nAdd new tag\nand then enter the tag\n     key and tag value.\nChoose\nCreate and analyze path\n.\nStep 2: View the results of the path analysis\nAfter the path analysis completes, you can view the result of the analysis.\nTo view the results of the path analysis\nChoose the ID of the path in the\nPath ID\ncolumn to view the path details page.\nIn the\nAnalysis explorer\npanel, find\nReachability status\nand check whether it is\nReachable\nor\nNot reachable\n. If the \n     path is reachable, the console displays the shortest route found between the source and destination. \n     Otherwise, expand\nExplanations\n,\nDetails\nfor information \n     about the blocking component.\nIf the reachability status matches your intent, there is no further action required. Consider\n     running the analysis again if you change your network configuration so that you can ensure that\n     the reachability status still matches your intent. Otherwise, proceed to\nStep 3\n.\nStep 3: Change the network configuration and analyze the path\nIf the reachability status does not match your intent, you can change your network\n   configuration. Then you can analyze the path again to confirm that the reachability status\n   matches your intent.\nTo restore connectivity for a path that is not reachable\nThe\nAnalysis explorer\npanel includes an\nexplanation code\nand detailed information about the\n     component or combination of components that is blocking the path (under\nExplanations\n,\nDetails\n). For example, in the\n     following explanation, a security group is missing a required inbound rule.\nUpdate the configuration of the component so that the desired traffic can traverse the component.\nChoose\nAnalyze path\nto confirm that the path is now reachable. You\n     can optionally specify the Amazon Resource Name (ARN) of a resource that the path must\n     traverse.\nTo remove connectivity for a reachable path\nThe\nAnalysis explorer\npanel includes a visual representation of the\n     shortest route found between the source and destination. It includes all components between the\n     source and destination. For example, the following diagram shows the components that traffic\n     traverses from the source internet gateway to the destination EC2 instance.\nIdentify the component that is overly permissive and update its configuration.\nChoose\nAnalyze path\nto confirm that the path is no longer\n     reachable.\nStep 4: Delete the path\nIf you no longer need the path, you can delete it. When you delete a path, you also delete\n   all its analyses. If you keep the path, note that Reachability Analyzer will automatically delete the\n   analysis 120 days after its creation date.\nTo delete the path\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home\n.\nIn the navigation pane, choose\nReachability Analyzer\n.\nSelect the path.\nChoose\nActions\n,\nDelete path\n.\nWhen prompted for confirmation, choose\nDelete path\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow Reachability Analyzer works\nGetting started using the CLI\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/getting-started-cli.html": "Getting started with Reachability Analyzer using the AWS CLI - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nStep 1: Create a path\nStep 2: Analyze the path\nStep 3: Get the results of the path analysis\nStep 4: Delete the path\nGetting started with Reachability Analyzer using the AWS CLI\nYou can use Reachability Analyzer to determine whether a destination resource in your virtual private\n    cloud (VPC) is reachable from a source resource. To get started, you specify a source and a\n    destination. For example, you can run a reachability analysis between two network interfaces or\n    between a network interface and a gateway. If there is a reachable path between the source and\n    destination, Reachability Analyzer displays the details. Otherwise, Reachability Analyzer identifies the blocking\n    component.\nTasks\nStep 1: Create a path\nStep 2: Analyze the path\nStep 3: Get the results of the path analysis\nStep 4: Delete the path\nStep 1: Create a path\nUse the following\ncreate-network-insights-path\ncommand to create a path. In this example, the source\n      is an internet gateway and the destination is an EC2 instance.\naws ec2 create-network-insights-path \n    --source\nigw-0797cccdc9d73b0e5\n--destination\ni-0495d385ad28331c7\n--protocol\nTCP\n--filter-at-source file://source-filter.json\nThe following is an example\nsource-filter.json\n.\n{\n\"DestinationPortRange\":\n{\n\"FromPort\":\n22\n,\n        \"ToPort\":\n22\n}\n}\nThe following is example output.\n{\n\"NetworkInsightsPaths\":\n{\n\"NetworkInsightsPathId\": \"nip-0b26f224f1d131fa8\",\n        \"NetworkInsightsPathArn\": \"arn:aws:ec2:us-east-1:123456789012:network-insights-path/nip-0b26f224f1d131fa8\",\n        \"CreatedDate\": \"2023-03-20T22:43:46.933Z\",\n        \"Source\": \"igw-0797cccdc9d73b0e5\",\n        \"Destination\": \"i-0495d385ad28331c7\",\n        \"SourceArn\": \"arn:aws:ec2:us-east-1:123456789012:internet-gateway/0797cccdc9d73b0e5\",\n        \"DestinationArn\": \"arn:aws:ec2:us-east-1:123456789012:instance/0495d385ad28331c7\",\n        \"Protocol\": \"tcp\"\n    }\n}\nTo specify an IP address as the destination resource, omit the\n--destination\nparameter and filter on the destination address as\n            follows.\naws ec2 create-network-insights-path \n    --source\nigw-0797cccdc9d73b0e5\n--protocol\nTCP\n--filter-at-source file://source-filter.json\nThe following is an example of\nsource-filter.json\n.\n{\n\"DestinationAddress\": \"\n34.230.71.227\n\",\n    \"DestinationPortRange\":\n{\n\"FromPort\":\n22\n,\n        \"ToPort\":\n22\n}\n}\nStep 2: Analyze the path\nUse the following\nstart-network-insights-analysis\ncommand to determine whether the destination is \n      reachable using the protocol and port that you specified for the path. The analysis can\n      take a few minutes to complete.\naws ec2 start-network-insights-analysis --network-insights-path-id\nnip-0b26f224f1d131fa8\nThe following is example output.\n{\n\"NetworkInsightsAnalysis\":\n{\n\"NetworkInsightsAnalysisId\": \"nia-02207aa13eb480c7a\",\n        \"NetworkInsightsAnalysisArn\": \"arn:aws:ec2:us-east-1:123456789012:network-insights-analysis/nia-02207aa13eb480c7a\",\n        \"NetworkInsightsPathId\": \"nip-0b26f224f1d131fa8\",\n        \"StartDate\": \"2023-03-20T22:58:37.495Z\",\n        \"Status\": \"running\"\n    }\n}\nStep 3: Get the results of the path analysis\nAfter the path analysis completes, you can view the results using the\ndescribe-network-insights-analyses\ncommand.\naws ec2 describe-network-insights-analyses --network-insights-analysis-ids\nnia-02207aa13eb480c7a\nExample 1: Not reachable\nThe following is example output where the path is not reachable. When a path is not reachable,\nNetworkPathFound\nis\nfalse\nand\nExplanationCode\ncontains an \n        explanation code. For descriptions of the explanation codes, see\nReachability Analyzer explanation codes\n. In this example,\nENI_SG_RULES_MISMATCH\nindicates\n        that the security group does not allow the traffic. After you add a rule to the security group to\n        allow the traffic, you can reanalyze the same path and confirm that it is reachable.\n{\n\"NetworkInsightsAnalyses\": [\n{\n\"NetworkInsightsAnalysisId\": \"nia-02207aa13eb480c7a\",\n            \"NetworkInsightsAnalysisArn\": \"arn:aws:ec2:us-east-1:123456789012:network-insights-analysis/nia-02207aa13eb480c7a\",\n            \"NetworkInsightsPathId\": \"nip-0b26f224f1d131fa8\",\n            \"StartDate\": \"2023-03-20T22:58:37.495Z\",\n            \"Status\": \"succeeded\",\n            \"NetworkPathFound\": false,\n            \"ForwardPathComponents\": [\n{\n\"SequenceNumber\": 1,\n                    \"Component\":\n{\n\"Id\": \"igw-0797cccdc9d73b0e5\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:internet-gateway/igw-0797cccdc9d73b0e5\"\n                    },\n                    \"OutboundHeader\":\n{\n\"DestinationAddresses\": [\n                            \"10.0.4.120/32\"\n                        ]\n                    },\n                    \"InboundHeader\":\n{\n\"DestinationAddresses\": [\n                            \"34.230.71.227/32\"\n                        ],\n                        \"DestinationPortRanges\": [\n{\n\"From\": 22,\n                                \"To\": 22\n                            }\n                        ],\n                        \"Protocol\": \"6\",\n                        \"SourceAddresses\": [\n                            \"11.0.0.0/32\"\n                        ],\n                        \"SourcePortRanges\": [\n{\n\"From\": 0,\n                                \"To\": 0\n                            }\n                        ]\n                    },\n                    \"Vpc\":\n{\n\"Id\": \"vpc-f1663d98ad28331c7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:vpc/vpc-f1663d98ad28331c7\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                },\n{\n\"SequenceNumber\": 2,\n                    \"AclRule\":\n{\n\"Cidr\": \"0.0.0.0/0\",\n                        \"Egress\": \"false\",\n                        \"Protocol\": \"all\",\n                        \"RuleAction\": \"allow\",\n                        \"RuleNumber\": 100\n                    },\n                    \"Component\":\n{\n\"Id\": \"acl-04fbcfb79260f6c5b\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:network-acl/acl-04fbcfb79260f6c5b\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                },\n{\n\"SequenceNumber\": 3,\n                    \"AttachedTo\":\n{\n\"Id\": \"i-0495d385ad28331c7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:instance/i-0495d385ad28331c7\"\n                    },\n                    \"Component\":\n{\n\"Id\": \"eni-0a25edef15a6cc08c\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:network-interface/eni-0a25edef15a6cc08c\"\n                    },\n                    \"Subnet\":\n{\n\"Id\": \"subnet-004ff41eccb4d1194\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:subnet/subnet-004ff41eccb4d1194\"\n                    },\n                    \"Vpc\":\n{\n\"Id\": \"vpc-f1663d98ad28331c7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:vpc/vpc-f1663d98ad28331c7\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": [\n{\n\"Direction\": \"ingress\",\n                            \"ExplanationCode\": \"ENI_SG_RULES_MISMATCH\",\n                            \"NetworkInterface\":\n{\n\"Id\": \"eni-0a25edef15a6cc08c\",\n                                \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:network-interface/eni-0a25edef15a6cc08c\"\n                            },\n                            \"SecurityGroups\": [\n{\n\"Id\": \"sg-02f0d35a850ba727f\",\n                                    \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:security-group/sg-02f0d35a850ba727f\"\n                                }\n                            ],\n                            \"Subnet\":\n{\n\"Id\": \"subnet-004ff41eccb4d1194\",\n                                \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:subnet/subnet-004ff41eccb4d1194\"\n                            },\n                            \"Vpc\":\n{\n\"Id\": \"vpc-f1663d98ad28331c7\",\n                                \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:vpc/vpc-f1663d98ad28331c7\"\n                            },\n                        }\n                    ]\n                },\n{\n\"SequenceNumber\": 4,\n                    \"Component\":\n{\n\"Id\": \"i-0495d385ad28331c7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:instance/i-0495d385ad28331c7\"\n                    },\n                    \"InboundHeader\":\n{\n\"DestinationAddresses\": [\n                            \"10.0.4.120/32\"\n                        ],\n                        \"DestinationPortRanges\": [\n{\n\"From\": 22,\n                                \"To\": 22\n                            }\n                        ],\n                        \"Protocol\": \"6\",\n                        \"SourceAddresses\": [\n                            \"11.0.0.0/32\"\n                        ],\n                        \"SourcePortRanges\": [\n{\n\"From\": 0,\n                                \"To\": 0\n                            }\n                        ]\n                    },\n                    \"AdditionalDetails\": [\n{\n\"AdditionalDetailType\": \"UNIDIRECTIONAL_PATH_ANALYSIS_ONLY\"\n                        }\n                    ],\n                    \"Explanations\": []\n                }\n            ],\n            \"Explanations\": [\n{\n\"Direction\": \"ingress\",\n                    \"ExplanationCode\": \"ENI_SG_RULES_MISMATCH\",\n                    \"NetworkInterface\":\n{\n\"Id\": \"eni-0a25edef15a6cc08c\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:network-interface/eni-0a25edef15a6cc08c\"\n                    },\n                    \"SecurityGroups\": [\n{\n\"Id\": \"sg-02f0d35a850ba727f\",\n                            \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:security-group/sg-02f0d35a850ba727f\"\n                        }\n                    ],\n                    \"Subnet\":\n{\n\"Id\": \"subnet-004ff41eccb4d1194\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:subnet/subnet-004ff41eccb4d1194\"\n                    },\n                    \"Vpc\":\n{\n\"Id\": \"vpc-f1663d98ad28331c7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:vpc/vpc-f1663d98ad28331c7\"\n                    }\n                }\n            ],\n            \"Tags\": []\n        }\n    ]\n}\nExample 2: Reachable\nThe following is example output where the path is reachable. When a path is reachable,\nNetworkPathFound\nis\ntrue\n,\nForwardPathComponents\ncontains\n        component-by-component details about the shortest reachable path from source to destination, and\nReturnPathComponents\ncontains component-by-component details about the shortest \n        reachable path from destination to source.\n{\n\"NetworkInsightsAnalyses\": [\n{\n\"NetworkInsightsAnalysisId\": \"nia-076744f74a04c3c7f\",\n            \"NetworkInsightsAnalysisArn\": \"arn:aws:ec2:us-east-1:123456789012:network-insights-analysis/nia-076744f74a04c3c7f\",\n            \"NetworkInsightsPathId\": \"nip-0614b9507b4e3e989\",\n            \"StartDate\": \"2023-03-20T23:47:08.080Z\",\n            \"Status\": \"succeeded\",\n            \"NetworkPathFound\": true,\n            \"ForwardPathComponents\": [\n{\n\"SequenceNumber\": 1,\n                    \"Component\":\n{\n\"Id\": \"igw-0797cccdc9d73b0e5\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:internet-gateway/igw-0797cccdc9d73b0e5\",\n                    },\n                    \"OutboundHeader\":\n{\n\"DestinationAddresses\": [\"10.0.2.87/32\"]\n                    },\n                    \"InboundHeader\":\n{\n\"DestinationAddresses\": [\"34.230.71.227/32\"],\n                        \"DestinationPortRanges\": [\n{\n\"From\": 22,\n                            \"To\": 22\n                        }],\n                        \"Protocol\": \"6\",\n                        \"SourceAddresses\": [\"0.0.0.0/5\", \"11.0.0.0/8\", \"12.0.0.0/6\", ...],\n                        \"SourcePortRanges\": [\n{\n\"From\": 0,\n                            \"To\": 65535\n                        }]\n                    },\n                    \"Vpc\":\n{\n\"Id\": \"vpc-f1663d98ad28331c7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:vpc/vpc-f1663d98ad28331c7\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                },\n{\n\"SequenceNumber\": 2,\n                    \"AclRule\":\n{\n\"Cidr\": \"0.0.0.0/0\",\n                        \"Egress\": false,\n                        \"Protocol\": \"all\",\n                        \"RuleAction\": \"allow\",\n                        \"RuleNumber\": 100\n                    },\n                    \"Component\":\n{\n\"Id\": \"acl-04fbcfb79260f6c5b\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:network-acl/acl-04fbcfb79260f6c5b\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                },\n{\n\"SequenceNumber\": 3,\n                    \"Component\":\n{\n\"Id\": \"sg-02f0d35a850ba727f\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:security-group/sg-02f0d35a850ba727f\"\n                    },\n                    \"SecurityGroupRule\":\n{\n\"Cidr\": \"0.0.0.0/0\",\n                        \"Direction\": \"ingress\",\n                        \"PortRange\":\n{\n\"From\": 22,\n                            \"To\": 22\n                        },\n                        \"Protocol\": \"tcp\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                },\n{\n\"SequenceNumber\": 4,\n                    \"AttachedTo\":\n{\n\"Id\": \"i-0495d385ad28331c7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:instance/i-0495d385ad28331c7\"\n                    },\n                    \"Component\":\n{\n\"Id\": \"eni-0a25edef15a6cc08c\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:network-interface/eni-0a25edef15a6cc08c\"\n                    },\n                    \"Subnet\":\n{\n\"Id\": \"subnet-004ff41eccb4d1194\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:subnet/subnet-004ff41eccb4d1194\"\n                    },\n                    \"Vpc\":\n{\n\"Id\": \"vpc-f1663d98ad28331c7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:vpc/vpc-f1663d98ad28331c7\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                },\n{\n\"SequenceNumber\": 5,\n                    \"Component\":\n{\n\"Id\": \"i-0626d4edd54f1286d\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:instance/i-0626d4edd54f1286d\"\n                    },\n                    \"InboundHeader\":\n{\n\"DestinationAddresses\": [\"10.0.4.120/32\"],\n                        \"DestinationPortRanges\": [\n{\n\"From\": 22,\n                            \"To\": 22\n                        }],\n                        \"Protocol\": \"6\",\n                        \"SourceAddresses\": [\"0.0.0.0/5\", \"11.0.0.0/8\", \"12.0.0.0/6\", ...],\n                        \"SourcePortRanges\": [\n{\n\"From\": 0,\n                            \"To\": 65535\n                        }]\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                }\n            ],\n            \"ReturnPathComponents\": [\n{\n\"SequenceNumber\": 1,\n                    \"Component\":\n{\n\"Id\": \"i-0626d4edd54f1286d\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:instance/i-0626d4edd54f1286d\"\n                    },\n                    \"OutboundHeader\":\n{\n\"DestinationAddresses\": [\"0.0.0.0/5\", \"11.0.0.0/8\", \"12.0.0.0/6\", ...],\n                        \"DestinationPortRanges\": [\n{\n\"From\": 0,\n                            \"To\": 65535\n                        }],\n                        \"Protocol\": \"6\",\n                        \"SourceAddresses\": [\"10.0.2.87/32\"],\n                        \"SourcePortRanges\": [\n{\n\"From\": 22,\n                            \"To\": 22\n                        }]\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                },\n{\n\"SequenceNumber\": 2,\n                    \"AttachedTo\":\n{\n\"Id\": \"i-0495d385ad28331c7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:instance/i-0495d385ad28331c7\"\n                    },\n                    \"Component\":\n{\n\"Id\": \"eni-0a25edef15a6cc08c\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:network-interface/eni-0a25edef15a6cc08c\"\n                    },\n                    \"Subnet\":\n{\n\"Id\": \"subnet-004ff41eccb4d1194\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:subnet/subnet-004ff41eccb4d1194\"\n                    },\n                    \"Vpc\":\n{\n\"Id\": \"vpc-f1663d98ad28331c7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:vpc/vpc-f1663d98ad28331c7\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                },\n{\n\"SequenceNumber\": 3,\n                    \"Component\":\n{\n\"Id\": \"sg-02f0d35a850ba727f\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:security-group/sg-02f0d35a850ba727f\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                },\n{\n\"SequenceNumber\": 4,\n                    \"AclRule\":\n{\n\"Cidr\": \"0.0.0.0/0\",\n                        \"Egress\": true,\n                        \"Protocol\": \"all\",\n                        \"RuleAction\": \"allow\",\n                        \"RuleNumber\": 100\n                    },\n                    \"Component\":\n{\n\"Id\": \"acl-0a8e20a0a9f144d36\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:network-acl/acl-0a8e20a0a9f144d36\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                },\n{\n\"SequenceNumber\": 5,\n                    \"Component\":\n{\n\"Id\": \"rtb-0d49a54c0a8c0bd9b\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:route-table/rtb-0d49a54c0a8c0bd9b\"\n                    },\n                    \"RouteTableRoute\":\n{\n\"DestinationCidr\": \"0.0.0.0/0\",\n                        \"GatewayId\": \"igw-0797cccdc9d73b0e5\",\n                        \"Origin\": \"createroute\",\n                        \"State\": \"active\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                },\n{\n\"SequenceNumber\": 6,\n                    \"Component\":\n{\n\"Id\": \"igw-0797cccdc9d73b0e5\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:internet-gateway/igw-0797cccdc9d73b0e5\"\n                    },\n                    \"OutboundHeader\":\n{\n\"DestinationAddresses\": [\"0.0.0.0/5\", \"11.0.0.0/8\", \"12.0.0.0/6\", ...],\n                        \"DestinationPortRanges\": [\n{\n\"From\": 0,\n                            \"To\": 65535\n                        }],\n                        \"Protocol\": \"6\",\n                        \"SourceAddresses\": [\"34.230.71.227/32\"],\n                        \"SourcePortRanges\": [\n{\n\"From\": 22,\n                            \"To\": 22\n                        }]                    \n                    },\n                    \"Vpc\":\n{\n\"Id\": \"vpc-f1663d98ad28331c7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:vpc/vpc-f1663d98ad28331c7\"\n                    },\n                    \"AdditionalDetails\": [],\n                    \"Explanations\": []\n                }\n            ],\n            \"Tags\": []\n        }\n    ]\n}\nStep 4: Delete the path\nIf you no longer need the path, you can delete it. Before you can delete the path, you\n            must delete its analyses.\nTo delete the path\nUse the following\ndelete-network-insights-analysis\ncommand to delete the path analysis.\naws ec2 delete-network-insights-analysis --network-insights-analysis-id\nnia-02207aa13eb480c7a\nUse the following\ndelete-network-insights-path\nto delete the path.\naws ec2 delete-network-insights-path --network-insights-path-id\nnip-0b26f224f1d131fa8\nIf you keep the path, note that Reachability Analyzer will automatically delete the analysis 120\n            days after its creation date.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGetting started\nExplanation codes\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html": "Reachability Analyzer explanation codes - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nPath is not reachable\nConfiguration\nSearch filter codes\nReachability Analyzer explanation codes\nIf a destination is not reachable, Reachability Analyzer provides one or more explanation codes to help\n    you diagnose and address network misconfiguration.\nContents\nPath is not reachable\nConfiguration\nSearch filter codes\nPath is not reachable\nThe following explanation codes indicate that the path analysis determined that the path\n      is not reachable.\nBAD_STATE\nThis component is not in a functional state.\nBAD_STATE_ATTACHMENT\nThe attachment between these components is not in a functional state.\nBAD_STATE_ROUTE\nThis route is not in a functional state.\nBAD_STATE_VPN\nThis VPN connection is not in a functional state.\nCANNOT_ROUTE\nThis route can't transmit traffic because its destination CIDR or prefix list does not match\n            the destination address of the packet.\nELB_ACL_RESTRICTION\nClassic Load Balancers apply network ACLs to outbound traffic, even if it's destined for a target in the same\n            subnet as the load balancer.\nELB_INSTALLED_AZ_RESTRICTION\nThis load balancer can send traffic only to targets in Availability Zones that are enabled for\n            the load balancer.\nELB_LISTENER_PORT_RESTRICTION\nThis Classic Load Balancer listener allows only inbound traffic destined for the specified port, and outbound\n            traffic with the specified destination port.\nELB_LISTENERS_MISMATCH\nThis Classic Load Balancer does not have a listener that accepts the traffic.\nELB_NOT_CROSSZONE\nThis load balancer can't send traffic to some targets because cross-zone load balancing is\n            disabled.\nELBV2_LISTENER_HAS_NO_TG\nThis listener is associated with target groups that have no targets.\nELBV2_LISTENER_PORT_RESTRICTION\nThis listener does not accept traffic unless it has the specified destination port.\nELBV2_LISTENER_REQUIRES_TG_ACCEPT\nThis listener does not have a target group that accepts the traffic.\nELBV2_LISTENERS_MISMATCH\nThis load balancer does not have a listener that accepts the traffic.\nELBV2_NO_TARGETS_IN_AZ\nThe load balancer does not have targets in the specified Availability Zones.\nELBV2_SOURCE_ADDRESS_PRESERVATION\nIf source address preservation is enabled, the outgoing source address is unaltered while\n            traversing the Network Load Balancer.\nENI_ADDRESS_RESTRICTION\nThis network interface does not allow inbound or outbound traffic unless the source or\n            destination address matches its private IP address.\nENI_SG_RULES_MISMATCH\nThis security group has no inbound or outbound rules that apply.\nENI_SOURCE_DEST_CHECK_RESTRICTION\nNetwork interfaces with source/destination check enabled reject inbound traffic if the \n            destination address does not match one of its private IP addresses, and reject outbound traffic if \n            the source address does not match one of their private IP addresses.\nFIREWALL_RULES_RESTRICTION\nThe traffic is blocked by a matching Network Firewall firewall rule.\nGATEWAY_REJECTS_SPOOFED_TRAFFIC\nGateways reject traffic from network interfaces if the source IP address is not a\n          public IP address associated with the network interface.\nGWLB_DESTINATION_PORT_RESTRICTION\nTraffic between a Gateway Load Balancer and its targets must use port 6081 as the destination port.\n          To analyze connectivity through a Gateway Load Balancer, specify port 6081 in the path definition.\nGWLB_PROTOCOL_RESTRICTION\nTraffic between a Gateway Load Balancer and its targets must use the GENEVE protocol, which is UDP-based.\n          To analyze connectivity through a Gateway Load Balancer, specify the UDP protocol in the path definition.\nHIGHER_PRIORITY_ROUTE\nThis route table contains a route to the destination that can't be used because there is a\n            higher priority route with the same destination CIDR.\nIGW_DESTINATION_ADDRESS_IN_VPC_CIDRS\nInternet gateways accept traffic only if the destination address is within the VPC CIDR\n            block.\nIGW_DESTINATION_ADDRESS_NOT_IN_RFC1918_EGRESS\nInternet gateways reject outbound traffic with destination addresses in the private IP address\n          range (see\nRFC1918\n).\nIGW_DESTINATION_ADDRESS_NOT_IN_RFC6598_EGRESS\nInternet gateways reject outbound traffic with destination addresses in the shared IP address\n          range (see\nRFC6598\n).\nIGW_NAT_REFLECTION\nThe path has an internet gateway as an intermediate component, which Reachability Analyzer does not \n          support. Instead, analyze the path from the source to the internet gateway and then analyze the path \n          from the internet gateway to the destination.\nIGW_PRIVATE_IP_ASSOCIATION_FOR_INGRESS\nInternet gateways reject inbound traffic with a destination address that is not the public IP\n            address of a network interface in the VPC with an available attachment.\nIGW_PUBLIC_IP_ASSOCIATION_FOR_EGRESS\nTraffic can't reach the internet through the internet gateway if the source address is not\n            paired with a public IP address or if the source address does not  belong to a network\n            interface in the VPC with an available attachment.\nIGW_SOURCE_ADDRESS_NOT_IN_RFC1918_INGRESS\nInternet gateways reject inbound traffic with source addresses in the private IP address range\n          (see\nRFC1918\n).\nIGW_SOURCE_ADDRESS_NOT_IN_RFC6598_INGRESS\nInternet gateways reject inbound traffic with source addresses in the shared IP address range\n          (see\nRFC6598\n).\nINGRESS_RTB_NO_PUBLIC_IP\nA middlebox appliance can't receive traffic from the internet through an ingress route table\n            if it does not have a public IP address.\nINGRESS_RTB_TRAFFIC_REDIRECTION\nSubnets whose traffic is redirected to a middlebox appliance can't use a direct route to the\n            internet gateway even when the subnet route table provides one.\nMORE_SPECIFIC_ROUTE\nThe specified route can't be used to transmit traffic because there is a more specific route\n            that matches. You can use filters to require that a path include a specific intermediate\n            component.\nNGW_DEST_ADDRESS_PRESERVATION\nNAT gateways do not alter destination addresses.\nNGW_REQUIRES_SOURCE_IN_VPC\nNAT gateways can only transmit traffic that originates from network interfaces within the same\n            VPC. NAT gateways can't transmit traffic that originates from peering connections, VPN\n            connections, or AWS Direct Connect.\nNGW_SOURCE_ADDRESS_REASSIGN\nNAT gateways transform the source's addresses in outbound traffic to match its private IP\n            address.\nNO_POSSIBLE_DESTINATION\nThe network component can't deliver the packet to any possible destination, or the network\n            component sent traffic to a destination in another account or Region. If the destination is in\n            another account,\nenable cross-account analyses\n.\nNO_ROUTE_TO_DESTINATION\nThe route table does not have an applicable route to the destination resource.\nPCX_REQUIRES_ADDRESS_IN_VPC_CIDR\nTraffic can traverse this peering connection only if the destination or source address is\n            within the CIDR block of the destination VPC.\nPROTOCOL_RESTRICTION\nThis component only accepts traffic with specific protocols.\nREMAP_EPHEMERAL_PORT\nOutbound traffic from a NAT gateway or load balancer has the source port remapped to an\n            ephemeral port in the range [1024\u00e2\u0080\u009365535].\nSG_HAS_NO_RULES\nThis security group has no inbound or outbound rules.\nSUBNET_ACL_RESTRICTION\nInbound or outbound traffic for a subnet must be admitted by the network ACL for the\n            subnet.\nTARGET_ADDRESS_RESTRICTION\nA load balancer can only route traffic that is destined for the address of one of its\n            targets.\nTARGET_PORT_RESTRICTION\nA load balancer can only route traffic to a target using its registered port.\nTGW_ATTACH_MISSING_TGW_RTB_ASSOCIATION\nThis transit gateway attachment doesn't have a valid transit gateway route table association.\nTGW_ATTACH_VPC_AZ_RESTRICTION\nTraffic from a VPC attachment in the default mode can't be forwarded to the network interface\n            in this Availability Zone because it comes from an Availability Zone where the\n            attachment has a different network interface. Traffic from a VPC attachment in appliance\n            mode can't be forwarded to the network interface in this Availability Zone because on\n            the forward path it used a different Availability Zone.\nTGW_BAD_STATE_VPN\nThis VPN connection is in a non-functional state.\nTGW_ROUTE_AZ_RESTRICTION\nThis transit gateway is not registered in the Availability Zone where the traffic originates.\n            The VPC attachment must have a subnet association in the Availability Zone.\nTGW_RTB_BAD_STATE_ROUTE\nThis transit gateway route table has a route to the destination that is in a bad state.\nTGW_RTB_CANNOT_ROUTE\nThis transit gateway route table has a route to the intended destination, but the route does not\n            match the package destination address.\nTGW_RTB_HIGHER_PRIORITY_ROUTE\nThis transit gateway route table contains a route to the intended destination that can't be\n            used because there is a higher-priority route with the same destination CIDR.\nTGW_RTB_MORE_SPECIFIC_ROUTE\nThis transit gateway route table has a route to the destination, but there is a more specific route.\nTGW_RTB_NO_ROUTE_TO_TGW_ATTACHMENT\nThis transit gateway route table has no route to this transit gateway attachment.\nTGW_RTB_ROUTES_ARE_UNKNOWN\nThe routes of this transit gateway route table are not known. This might be due to an internal\n            error or because the transit gateway route table does not belong to the account running\n            the analysis.\nUNKNOWN_DESTINATION\nThe path can't be extended because the information about the destination is insufficient.\nUNKNOWN_PEERED_SGS\nOne of the VPCs in the VPC peering connection is unknown. This is typically because the VPC \n          is in a different account. Access controls referencing security groups are treated as inaccessible and \n          deny traffic crossing this peering connection.\nVGW_PRIVATE_IP_ASSOCIATION_FOR_EGRESS\nVirtual private gateways can't accept outbound traffic if the source address does\n            not belong to a network interface in the VPC with an available attachment.\nVGW_PRIVATE_IP_ASSOCIATION_FOR_INGRESS\nVirtual private gateways can't accept inbound traffic if the destination address is not the\n            private IP address of a network interface in the VPC with an available\n            attachment.\nVPC_LOCAL_ROUTE_CIDR_RESTRICTION\nLocal routes apply only to packets with a destination address within the VPC CIDR block.\nVPCE_GATEWAY_EGRESS_SOURCE_ADDRESS_RESTRICTION\nVPC gateway endpoints emit only traffic with source addresses within the CIDRs of their \n          corresponding prefix lists.\nVPCE_GATEWAY_PROTOCOL_RESTRICTION\nVPC gateway endpoints accept only TCP or ICMP ECHO traffic, and emit only TCP or ICMP ECHO\n            reply traffic.\nVPCE_SERVICE_NOT_INSTALLED_IN_AZ\nThe VPC endpoint service is not installed in the specified Availability Zone.\nConfiguration\nThe following explanation codes indicate that the path analysis determined that no path\n      is possible.\nDISCONNECTED_VPCS\nThe source and destination are in separate VPCs that are not connected by a supported\n            resource.\nNO_PATH\nReachability Analyzer was unable to find a path from the source to the destination. The following\n            are the most common causes:\nThe path does not meet the optional configuration details, such as an IP address, \n                port, or filter.\nThe source or destination components are temporarily isolated from the network\n                (for example, a newly started instance that does not yet have a network interface).\nThe source can't initiate traffic to the destination (for example, an interface VPC endpoint\n                or gateway VPC endpoint can't initiate connections with components in the same VPC\n                as the VPC endpoint).\nThe path requires the ability to analyze an unsupported feature (for example, IPv6)\n                or an unsupported network component.\nNO_SOURCE_OR_DESTINATION\nThe source or destination resource does not exist.\nUNASSOCIATED_COMPONENT\nThe component is not associated with a VPC in your account (for example, a recently terminated\n            instance), or none of its network interfaces has an IPv4 address.\nUNSUPPORTED_COMPONENT\nThe component is not supported by Reachability Analyzer.\nSearch filter codes\nThe following explanation codes indicate that the path analysis couldn't find a path from\n      the source to the destination that matched the specified filters. However, there might be a\n      path that matches some of the specified filters. Verify that the filters are as intended.\n      Otherwise, remove the filters that didn't match.\nCOMPONENT_FILTER_RESTRICTION\nThere is no path that traverses the specified component.\nCOMPONENT_FILTER_RESTRICTION_REMOVED_COMPONENT\nThere is no path that traverses the specified component because of an intermediate component\n            filter.\nFILTER_AT_DESTINATION_DESTINATION_ADDRESS\nThere is no path that matches the specified destination IP address at the destination.\nFILTER_AT_DESTINATION_DESTINATION_PORT_RANGE\nThere is no path that matches the specified destination port range at the destination.\nFILTER_AT_DESTINATION_SOURCE_ADDRESS\nThere is no path that matches the specified source address at the destination.\nFILTER_AT_DESTINATION_SOURCE_PORT_RANGE\nThere is no path that matches the specified source port range at the destination.\nFILTER_AT_SOURCE_DESTINATION_ADDRESS\nThere is no path that matches the specified destination IP address at the source.\nFILTER_AT_SOURCE_DESTINATION_PORT_RANGE\nThere is no path that matches the specified destination port range at the source.\nFILTER_AT_SOURCE_PROTOCOL\nThere is no path that matches the specified protocol.\nFILTER_AT_SOURCE_SOURCE_ADDRESS\nThere is no path that matches the specified source IP address at the source.\nFILTER_AT_SOURCE_SOURCE_PORT_RANGE\nThere is no path that matches the specified source port range at the source.\nIGW_EXPECTS_PUBLIC_ADDRESS\nIP addresses must be public IP addresses when the resource is an internet gateway.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGetting started using the CLI\nAdditional detail codes\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/additional-detail-codes.html": "Reachability Analyzer additional detail codes - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nReachability Analyzer additional detail codes\nReachability Analyzer uses additional detail codes to provide information about the result of a\n        path analysis.\nThe following additional detail codes are supported.\nASSUMPTION_PRESERVE_CLIENT_IP_IS_DISABLED\nThe analysis could not describe target group attributes for the target group, \n                so the network path is based on the assumption that client IP preservation is disabled on \n                the target group. You should verify this assumption.\nASSUMPTION_PRESERVE_CLIENT_IP_IS_ENABLED\nThe analysis could not describe target group attributes for the target group, \n                so the network path is based on the assumption that client IP preservation is enabled on\n                the target group. You should verify this assumption.\nAVAILABILITY_ZONE_CROSSED\nThe network path crosses Availability Zones.\nFIREWALL_UNSUPPORTED_HIGHER_PRIORITY_RULE_GROUP_TYPE\nThere is at least one higher priority rule that could match the traffic\n              in this path, but we ignored because it contains an unsupported rule type. Verify that\n              the result of the analysis matches the behavior of AWS Network Firewall in your network.\nFIREWALL_UNSUPPORTED_HIGHER_PRIORITY_RULES\nThere is at least one higher priority rule that could match the traffic\n                in this path, but we ignored because it contains an unsupported rule option. Verify that\n                the result of the analysis matches the behavior of AWS Network Firewall in your network.\nFIREWALL_UNSUPPORTED_RULE_OPTIONS\nThe matching firewall rule contains an unsupported rule option. Verify that\n                the result of the analysis matches the behavior of AWS Network Firewall in your network.\nMISSING_ROUTE_TO_TRANSIT_GATEWAY\nTraffic is routed from the transit gateway to the VPC endpoint. However, \n                there is no route from the VPC endpoint to the transit gateway, so we might drop the \n                response traffic.\nMISSING_TARGET_GROUP_ATTRIBUTES\nThe target group attributes for the target were missing, so the analysis\n                could not consider them.\nPATH_THROUGH_GWLB_NOT_CHECKED\nThe analysis does not consider that traffic entering the VPC endpoint is\n              forwarded to a Gateway Load Balancer for inspection before exiting the VPC endpoint.\nRECOMMENDED_APPLIANCE_MODE\nThe transit gateway VPC attachment has\nappliance mode\ndisabled, but traffic is inspected through a Network Firewall. \n                We recommend that you enable appliance mode for the VPC attachment.\nUNIDIRECTIONAL_PATH_ANALYSIS_ONLY\nThe results include forward path analysis from the source to the destination. \n                There might be a blocking configuration in the reverse path, which could not be\n                analyzed.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nExplanation codes\nCross-account analyses\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/multi-account.html": "Cross-account analyses for Reachability Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nEnable trusted access\nIAM role deployments\nManage delegated administrator accounts\nDisable trusted access\nTroubleshoot\nCross-account analyses for Reachability Analyzer\nReachability Analyzer analyzes the path between a source and destination. To analyze paths across\n        multiple AWS accounts, enable trusted access for Reachability Analyzer with your organization from \n        AWS Organizations. You can also register member accounts as delegated administrator accounts.\n        A user in the management account or a delegated administrator account can define a path\n        and run an analysis using a source from any account in the organization, and a destination\n        resource from any account in the organization.\nFor more information, see\nVisualize and diagnose network reachability across AWS accounts\n.\nPricing\nThere is no additional charge to run cross-account analyses.\nConsiderations\nBefore accounts in the organization can use this feature in an opt-in Region, \n                the management account must enable the opt-in Region. For more information, see\nEnable a Region in your organization\nin the\nAWS Account Management Guide\n.\nThe accounts in the organization must be able to make calls to the AWS CloudFormation\n                API in US East (N. Virginia) (\nus-east-1\n).\nAWS CloudTrail logs are always written to US East (N. Virginia) (\nus-east-1\n).\nTasks\nEnable trusted access\nIAM role deployments\nManage delegated administrator accounts\nDisable trusted access\nTroubleshoot\nEnable trusted access\nWhen you enable trusted access, Reachability Analyzer deploys the\nAWSServiceRoleForReachabilityAnalyzer\nservice-linked role and the \n            required\ncross-account access roles\nto all accounts in your organization.\nTo enable trusted access using the console\nSign in to the management account.\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home\n.\nFrom the navigation pane, choose\nReachability Analyzer\n,\nSettings\n.\nFor\nTrusted Access\n, choose\nTurn on trusted \n                    access\n.\nDo not close or navigate away from this page until you see a success\n                    notification indicating that trusted access is turned on. This can take\n                    several minutes.\nTo enable trusted access using the AWS CLI\nFrom the management account, use the\nenable-reachability-analyzer-organization-sharing\ncommand.\nIAM role deployments\nWhen you enable trusted access, the following roles are deployed in your organization:\nAWSServiceRoleForReachabilityAnalyzer\n\u00e2\u0080\u0093 \n                    The service-linked role for Reachability Analyzer.\nIAMRoleForReachabilityAnalyzerCrossAccountResourceAccess\n\u00e2\u0080\u0093 The\n                    role for cross-account resource access for Reachability Analyzer.\nAWSServiceRoleForCloudFormationStackSetsOrgAdmin\n\u00e2\u0080\u0093 \n                    The service-linked role for AWS CloudFormation StackSets for the management account.\nAWSServiceRoleForCloudFormationStackSetsOrgMember\n\u00e2\u0080\u0093\n                    The service-linked role for AWS CloudFormation StackSets for the member accounts.\nThe deployments can take several minutes to complete, depending on the number  \n            of member accounts in your organization. You can view the status of the role \n            deployments as follows.\nTo view IAM role deployments\nSign in to the management account.\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home\n.\nFrom the navigation pane, choose\nReachability Analyzer\n,\nSettings\n.\nCheck\nIAM role deployments status\n.\nManage delegated administrator accounts\nYou can register up to 5 delegated administrator accounts. If you deregister\n            a delegated administrator account, the users in the account can't run a new\n            cross-account analysis, but they can still see the previously run analyses.\nTo manage delegated administrators\nSign in to the management account.\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home\n.\nFrom the navigation pane, choose\nReachability Analyzer\n,\nSettings\n.\nTo register a member account as a delegated administrator account, choose\nRegister delegated administrator\n. Select the check box\n                    for the account, and then choose\nRegister delegated\n                        administrator\n.\nTo deregister a delegated administrator account, select the checkbox for \n                    the account, and then choose\nDeregister\n.\nDisable trusted access\nAfter you disable trusted access, the users in the management account and delegated\n            administrator accounts can't run a new cross-account analysis. However, they can still\n            see the previously run analyses. Before you can disable trusted access, you must\n            deregister the delegated administrator accounts.\nYou can enable trusted access again after disabling it. However, you must first\n            re-register the delegated administrator accounts.\nTo disable trusted access using the console\nSign in to the management account.\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home\n.\nFrom the navigation pane, choose\nReachability Analyzer\n,\nSettings\n.\nFor\nTrusted Access\n, choose\nTurn off trusted\n                        access\n.\nDo not close or navigate away from this page until you see a success\n                    notification indicating that trusted access is turned off. This can take\n                    several minutes.\nTo disable trusted access using the AWS CLI\nFrom the management account, use the\ndisable-aws-service-access\ncommand.\nTroubleshoot\nThe following information can help you troubleshoot common issues.\nIssues\n\"StackSet is not empty\" or \"StackSet already exists\"\n\"Error fetching resources\"\n\"Organizational unit not found in StackSet\"\n\"StackSet is not empty\" or \"StackSet already exists\"\nIf you receive one of these errors while enabling trusted access, do the following\n                to resolve the issue.\nTo resolve the issue\nChoose\nTurn off trusted access\n.\nWait until you see a banner at the top of the screen indicating that the operation\n                       was successful.\nChoose\nTurn on trusted access\n.\n\"Error fetching resources\"\nIf you receive this error while attempting to access resources from another\n                account in the organization, it usually indicates that your account doesn't\n                have all permissions required.\nVerify that you have permission to call the\nAssumeRole\nand\nSetSourceIdentity\nAPI actions. For example, the following policy \n                        grants permission to call these actions.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"sts:AssumeRole\",\n                \"sts:SetSourceIdentity\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nVerify that you have permission to call AWS CloudFormation API actions. For example, the\nAWSCloudFormationFullAccess\nand\nAWSCloudFormationReadOnlyAccess\npolicies grant permissions to\n                        call these actions.\nVerify that you have permission to call AWS Organizations API actions. For example, the\nAWSOrganizationsFullAccess\nand\nAWSOrganizationsReadOnlyAccess\npolicies grant permissions to\n                        call these actions.\n\"Organizational unit not found in StackSet\"\nIf you receive this error while disabling trusted access, do the following to\n                resolve the issue.\nTo resolve the issue\nOpen the AWS CloudFormation console at\nhttps://console.aws.amazon.com/cloudformation\n.\nIn the navigation pane, choose\nStackSets\n.\nSelect\nReachabilityAnalyzerCrossAccountResourceAccessStackSet\nand then choose\nActions\n,\nDelete StackSet\n.\nReturn to the Reachability Analyzer settings page and refresh the page.\nChoose\nTurn off trusted access\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAdditional detail codes\nIdentity and access management\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/identity-access-management.html": "Identity and access management for Reachability Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nAudience\nAuthenticating with identities\nManaging access using policies\nIdentity and access management for\n      Reachability Analyzer\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely control access\n      to AWS resources. IAM administrators control who can be\nauthenticated\n(signed in) and\nauthorized\n(have permissions) to use Reachability Analyzer resources. IAM is an AWS service that you can\n      use with no additional charge.\nContents\nAudience\nAuthenticating with identities\nManaging access using policies\nHow Reachability Analyzer works with IAM\nRequired API\n        permissions\nUse service-linked roles\nAWS managed policies\nCross-account access roles\nAudience\nHow you use AWS Identity and Access Management (IAM) differs, depending on the work that you do in Reachability Analyzer.\nService user\n\u00e2\u0080\u0093 If you use the Reachability Analyzer service to do your job, then your administrator provides you\n         with the credentials and permissions that you need. As you use more Reachability Analyzer features to do your work, you might need additional permissions.\n         Understanding how access is managed can help you request the right permissions from your administrator.\nService administrator\n\u00e2\u0080\u0093 If you're in charge of Reachability Analyzer resources at your company, you probably have\n         full access to Reachability Analyzer. It's your job to determine which Reachability Analyzer features and resources your service users should access. You must then\n         submit requests to your IAM administrator to change the permissions of your service users. Review the information on this page to understand the\n         basic concepts of IAM.\nIAM administrator\n\u00e2\u0080\u0093 If you're an IAM administrator, you might want to learn details about how you can\n         write policies to manage access to Reachability Analyzer.\nAuthenticating with identities\nAuthentication is how you sign in to AWS using your identity credentials. You must be\nauthenticated\n(signed in to AWS) as the AWS account root user, as an\nIAM user, or by assuming an IAM role.\nYou can sign in to AWS as a federated identity by using credentials provided through an identity source.\nAWS IAM Identity Center (IAM Identity Center) users, your company's single sign-on authentication, and your Google or Facebook\ncredentials are examples of federated identities. When you sign in as a federated identity, your administrator previously set up identity federation using IAM roles. When you access AWS by using federation, you are indirectly assuming a role.\nDepending on the type of user you are, you can sign in to the AWS Management Console or the AWS access\nportal. For more information about signing in to AWS, see\nHow to sign in to your AWS account\nin the\nAWS Sign-In User Guide\n.\nIf you access AWS programmatically, AWS provides a software development kit (SDK) and a command line \ninterface (CLI) to cryptographically sign your requests by using your credentials. If you don't use AWS tools, \nyou must sign requests yourself. For more information about using the recommended method to sign requests yourself, see\nSigning AWS API requests\nin the\nIAM User Guide\n.\nRegardless of the authentication method that you use, you might be required to provide\nadditional security information. For example, AWS recommends that you use multi-factor\nauthentication (MFA) to increase the security of your account. To learn more, see\nMulti-factor authentication\nin the\nAWS IAM Identity Center User Guide\nand\nUsing multi-factor authentication (MFA) in AWS\nin the\nIAM User Guide\n.\nAWS account root user\nWhen you create an AWS account, you begin with one sign-in identity that has complete access to all AWS services\n and resources in the account. This identity is called the AWS account\nroot user\nand is accessed by\n signing in with the email address and password that you used to create the account. We \n strongly recommend that you don't use the root user for your everyday tasks. Safeguard your root user credentials and use them to\n perform the tasks that only the root user can perform. For the complete list of tasks that require you to sign in as the root user, see\nTasks that require root user credentials\nin the\nIAM User Guide\n.\nFederated identity\nAs a best practice, require human users, including users that require administrator access, to use federation with an identity provider to access AWS services by using temporary credentials.\nA\nfederated identity\nis a user from your enterprise user directory, a web identity provider, the AWS Directory Service,\nthe Identity Center directory,\nor any user that\naccesses AWS services by using credentials provided through an identity source. When federated identities access AWS accounts, they assume roles, and the roles provide temporary credentials.\nFor centralized access management, we recommend that you use AWS IAM Identity Center. You can create users and groups in IAM Identity Center, or you can connect and synchronize \nto a set of users and groups in your own identity source for use across all your AWS accounts and applications. For information \nabout IAM Identity Center, see\nWhat is IAM Identity Center?\nin the\nAWS IAM Identity Center User Guide\n.\nIAM users and groups\nAn\nIAM user\nis an identity within your AWS account that has specific permissions for a single person or application. Where possible, we recommend relying on temporary credentials instead of creating IAM users who have long-term credentials such as passwords and access keys. However, if you have specific use cases that require long-term credentials with IAM users, we recommend that you rotate access keys. For more information, see\nRotate access keys regularly for use cases that require long-term credentials\nin the\nIAM User Guide\n.\nAn\nIAM group\nis an identity that specifies a collection of IAM users.\n            You can't sign in as a group. You can use groups to specify permissions for multiple users at a time. Groups make permissions easier to manage for\n            large sets of users. For example, you could have a group named\nIAMAdmins\nand give that group permissions to administer IAM\n            resources.\nUsers are different from roles. A user is uniquely associated with one person or application, but a role is intended to be assumable by anyone\n            who needs it. Users have permanent long-term credentials, but roles provide temporary credentials. To learn more, see\nWhen to create an IAM user (instead of a role)\nin the\nIAM User Guide\n.\nIAM roles\nAn\nIAM role\nis an identity within your AWS account that\n            has specific permissions. It is similar to an IAM user, but is not associated with a specific person. You can temporarily assume an IAM role in\n            the AWS Management Console by\nswitching roles\n. You can assume a role by calling an AWS CLI\n            or AWS API operation or by using a custom URL. For more information about methods for using roles, see\nUsing IAM roles\nin the\nIAM User Guide\n.\nIAM roles with temporary credentials are useful in the following situations:\nFederated user access\n\u00e2\u0080\u0093 \n\nTo assign permissions to a federated identity, you create a role and define permissions for the role. When a federated identity authenticates, the identity is associated with the role and is granted the permissions that are defined by the role. For information about roles for federation, see\nCreating a role for a third-party Identity Provider\nin the\nIAM User Guide\n.\nIf you use IAM Identity Center, you configure a permission set. To control what your identities can access after they authenticate, IAM Identity Center correlates the permission set to a role in IAM. \nFor information about permissions sets, see\nPermission sets\nin the\nAWS IAM Identity Center User Guide\n.\nTemporary IAM user permissions\n\u00e2\u0080\u0093 An IAM user or role can assume an IAM role to temporarily take on\n            different permissions for a specific task.\nCross-account access\n\u00e2\u0080\u0093 You can use an\n                  IAM role to allow someone (a trusted principal) in a different account to access\n                  resources in your account. Roles are the primary way to grant cross-account\n                  access. However, with some AWS services, you can attach a policy directly to a\n                  resource (instead of using a role as a proxy). To learn the difference between\n                  roles and resource-based policies for cross-account access, see\nHow IAM roles\n                     differ from resource-based policies\nin the\nIAM User Guide\n.\nCross-service access\n\u00e2\u0080\u0093\n\n      Some AWS services use features in other AWS services. For example, when you make a call in a service, \n      it's common for that service to run applications in Amazon EC2 or store objects in Amazon S3. A service might do this \n      using the calling principal's permissions, using a service role, or using a service-linked role.\nPrincipal permissions\n\u00e2\u0080\u0093\n\n      When you use an IAM user or role to perform actions in AWS, you are considered a principal. Policies \n      grant permissions to a principal. When you use some services, you might perform an action that then triggers \n      another action in a different service. In this case, you must have permissions to perform both actions. To \n      see whether an action requires additional dependent actions in a policy, see\nActions, resources, and condition keys for Amazon EC2\nin the\nService Authorization Reference\n.\nService role\n\u00e2\u0080\u0093\n\n      A service role is an\nIAM role\nthat a service assumes to perform \n      actions on your behalf. An IAM administrator can create, modify, and delete a service role from within IAM. For \n      more information, see\nCreating a role to delegate permissions \n      to an AWS service\nin the\nIAM User Guide\n.\nService-linked role\n\u00e2\u0080\u0093\n\n      A service-linked role is a type of service role that is linked to an AWS service. The service can assume the role to perform an action on your behalf. \n      Service-linked roles appear in your AWS account and are owned by the service. An IAM administrator can view, \n      but not edit the permissions for service-linked roles.\nApplications running on Amazon EC2\n\u00e2\u0080\u0093\n\n      You can use an IAM role to manage temporary credentials for applications that are running on an EC2 instance and making AWS CLI or AWS API requests. \n      This is preferable to storing access keys within the EC2 instance. To assign an AWS role to an EC2 instance and make it \n      available to all of its applications, you create an instance profile that is attached to the \n      instance. An instance profile contains the role and enables programs that are running on the EC2 instance to\n      get temporary credentials. For more information, see\nUsing an IAM role to grant permissions to applications running on Amazon EC2 instances\nin the\nIAM User Guide\n.\nTo learn whether to use IAM roles or IAM users, see\nWhen to create an IAM role (instead of a\n               user)\nin the\nIAM User Guide\n.\nManaging access using policies\nYou control access in AWS by creating policies and attaching them to AWS identities or resources. A policy is an object in AWS that,\n when associated with an identity or resource, defines their permissions. AWS evaluates these policies when a principal (user, root user, or role session) makes a request. \n Permissions in the policies determine whether the request is allowed or denied. \n Most policies are stored in AWS as JSON documents. For more information about the structure and contents \n of JSON policy documents, see\nOverview of JSON policies\nin the\nIAM User Guide\n.\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nBy default, users and roles have no permissions. To grant users permission to perform actions on the resources that they need, an \nIAM administrator can create IAM policies. The administrator can then add the IAM policies to roles, and users can assume the roles.\nIAM policies define permissions for an action regardless of the method that you use to perform the operation. For example, suppose that you have a\n policy that allows the\niam:GetRole\naction. A user with that policy can get role information from the AWS Management Console, the AWS CLI, or the AWS\n API.\nIdentity-based\n               policies\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity, such as an IAM user, group of users, or role. These\n            policies control what actions users and roles can perform, on which resources, and under what conditions. To learn how to create an identity-based\n            policy, see\nCreating IAM policies\nin the\nIAM User Guide\n.\nIdentity-based policies can be further categorized as\ninline policies\nor\nmanaged\n               policies\n. Inline policies are embedded directly into a single user, group, or role. Managed policies are standalone policies that you\n            can attach to multiple users, groups, and roles in your AWS account. Managed policies include AWS managed policies and customer managed\n            policies. To learn how to choose between a managed policy or an inline policy, see\nChoosing between managed policies and inline\n               policies\nin the\nIAM User Guide\n.\nResource-based\n               policies\nResource-based policies are JSON policy documents that you attach to a resource. Examples of resource-based policies are \n         IAM\nrole trust policies\nand Amazon S3\nbucket policies\n. In services that support resource-based policies, service \n         administrators can use them to control access to a specific resource. For the resource where the policy is attached, the policy defines what actions\n            a specified principal can perform on that resource and under what conditions. You must\nspecify a principal\nin a resource-based policy. Principals \n            can include accounts, users, roles, federated users, or AWS services.\nResource-based policies are inline policies that are located in that service. You can't use AWS managed policies from IAM in a \n   resource-based policy.\nAccess control lists (ACLs)\nAccess control lists (ACLs) control which principals (account members, users, or roles) have permissions to access a resource. ACLs are\n            similar to resource-based policies, although they do not use the JSON policy document format.\nAmazon S3, AWS WAF, and Amazon VPC\n            are examples of services that support ACLs. To learn more about ACLs, see\nAccess control list (ACL)\n               overview\nin the\nAmazon Simple Storage Service Developer Guide\n.\nOther policy types\nAWS supports additional, less-common policy types. These policy types can set the maximum permissions granted to you by the more common policy\n            types.\nPermissions boundaries\n\u00e2\u0080\u0093 A permissions\n                  boundary is an advanced feature in which you set the maximum permissions that an\n                  identity-based policy can grant to an IAM entity (IAM user or role). You can\n                  set a permissions boundary for an entity. The resulting permissions are the\n                  intersection of an entity's identity-based policies and its permissions boundaries.\n                  Resource-based policies that specify the user or role in the\nPrincipal\nfield are not limited by the permissions boundary. An\n                  explicit deny in any of these policies overrides the allow. For more information\n                  about permissions boundaries, see\nPermissions boundaries for\n                     IAM entities\nin the\nIAM User Guide\n.\nService control policies (SCPs)\n\u00e2\u0080\u0093 SCPs are JSON policies that specify the maximum permissions for\n                  an organization or organizational unit (OU) in AWS Organizations. AWS Organizations is a service for grouping and centrally managing multiple AWS accounts that your business owns. If you enable all features in an organization, then you can apply service control policies (SCPs) to any or all of\n                  your accounts. The SCP limits permissions for entities in member accounts, including each AWS account root user. For more information about Organizations and\n                  SCPs, see\nHow SCPs work\nin the\nAWS Organizations User Guide\n.\nSession policies\n\u00e2\u0080\u0093 Session policies are\n                  advanced policies that you pass as a parameter when you programmatically create a\n                  temporary session for a role or federated user. The resulting session's\n                  permissions are the intersection of the user or role's identity-based policies and\n                  the session policies. Permissions can also come from a resource-based policy. An\n                  explicit deny in any of these policies overrides the allow. For more information,\n                  see\nSession\n                     policies\nin the\nIAM User Guide\n.\nMultiple policy\n               types\nWhen multiple types of policies apply to a request, the resulting permissions are more complicated to understand. To learn how AWS determines\n            whether to allow a request when multiple policy types are involved, see\nPolicy\n               evaluation logic\nin the\nIAM User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCross-account analyses\nHow Reachability Analyzer works with IAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/security_iam_service-with-iam.html": "How Reachability Analyzer works with IAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nIdentity-based policies\nResource-based policies\nPolicy actions\nPolicy resources\nPolicy condition keys\nACLs\nABAC\nTemporary credentials\nPrincipal permissions\nService roles\nService-linked\n          roles\nHow Reachability Analyzer works with IAM\nBefore you use IAM to manage access to Reachability Analyzer, learn what IAM features are\n         available to use with Reachability Analyzer.\nIAM features you can use with Reachability Analyzer\nIAM feature\nReachability Analyzer support\nIdentity-based policies\nYes\nResource-based policies\nNo\nPolicy actions\nYes\nPolicy resources\nYes\nPolicy condition keys (service-specific)\nNo\nACLs\nNo\nABAC (tags in\n                policies)\nYes\nTemporary\n                credentials\nYes\nPrincipal permissions\nYes\nService\n                roles\nNo\nService-linked roles\nYes\nTo get a high-level view of how AWS FIS and other AWS services work with most IAM\n      features, see\nAWS services that work with IAM\nin the\nIAM User Guide\n.\nIdentity-based policies for Reachability Analyzer\nSupports identity-based policies\nYes\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity, such as an IAM user, group of users, or role. These\n            policies control what actions users and roles can perform, on which resources, and under what conditions. To learn how to create an identity-based\n            policy, see\nCreating IAM policies\nin the\nIAM User Guide\n.\nWith IAM identity-based policies, you can specify allowed or denied actions and\n            resources as well as the conditions under which actions are allowed or denied.  You\n            can't specify the principal in an identity-based policy because it applies to the user\n            or role to which it is attached. To learn about all of the elements that you can use in a\n            JSON policy, see\nIAM JSON\n               policy elements reference\nin the\nIAM User Guide\n.\nResource-based\n          policies within Reachability Analyzer\nSupports resource-based policies\nNo\nResource-based policies are JSON policy documents that you attach to a resource. Examples of resource-based policies are \n         IAM\nrole trust policies\nand Amazon S3\nbucket policies\n. In services that support resource-based policies, service \n         administrators can use them to control access to a specific resource. For the resource where the policy is attached, the policy defines what actions\n            a specified principal can perform on that resource and under what conditions. You must\nspecify a principal\nin a resource-based policy. Principals \n            can include accounts, users, roles, federated users, or AWS services.\nTo enable cross-account access, you can specify an entire account or IAM entities\n            in another account as the principal in a\n               resource-based policy. Adding a cross-account principal to a resource-based\n            policy is only half of establishing the trust relationship. When the principal and the\n            resource are in different AWS accounts, an IAM administrator in the trusted account \n            must also grant the principal entity (user or role) permission to access the resource. They grant \n            permission by attaching an identity-based policy to the entity. However, if a resource-based \n            policy grants access to a principal in the same account, no additional identity-based policy is \n            required. For more information, see\nHow\n               IAM roles differ from resource-based policies\nin the\nIAM User Guide\n.\nPolicy actions for Reachability Analyzer\nSupports policy actions\nYes\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nAction\nelement of a JSON policy describes the\n               actions that you can use to allow or deny access in a policy. Policy\n               actions usually have the same name as the associated AWS API operation. There are some exceptions, such as\npermission-only \n               actions\nthat don't have a matching API operation. There are also some operations that require multiple actions in a policy. \n               These additional actions are called\ndependent actions\n.\nInclude actions in a policy to grant permissions to perform the associated operation.\nReachability Analyzer shares its API namespace with Amazon EC2.\n        Policy actions in Reachability Analyzer use the following prefix before the action:\nec2\nTo specify multiple actions in a single statement, separate them with commas.\n\"Action\": [\n    \"ec2:\naction1\n\",\n    \"ec2:\naction2\n\"\n]\nYou can specify multiple actions using wildcards (*). For example, to specify all\n        actions that begin with the word\nDescribe\n, include the following\n        action.\n\"Action\": \"ec2:Describe*\"\nThe following actions are supported by Reachability Analyzer:\nCreateNetworkInsightsPath\nDeleteNetworkInsightsAnalysis\nDeleteNetworkInsightsPath\nDescribeNetworkInsightsAnalyses\nDescribeNetworkInsightsPaths\nEnableReachabilityAnalyzerOrganizationSharing\nStartNetworkInsightsAnalysis\nFor more information, see\nActions Defined by Amazon EC2\nin the\nService Authorization Reference\n.\nPolicy resources for Reachability Analyzer\nSupports policy resources\nYes\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nResource\nJSON policy element specifies the object or objects to which the action applies. Statements must include either a\nResource\nor a\nNotResource\nelement. As a best practice, specify a resource using its\nAmazon Resource Name (ARN)\n. You can do this for actions that support a \n                  specific resource type, known as\nresource-level permissions\n.\nFor actions that don't support resource-level permissions, such as listing operations,\n                  use a wildcard (*) to indicate that the statement applies to all resources.\n\"Resource\": \"*\"\nThe following Reachability Analyzer API actions do not support resource-level permissions.\nDescribeNetworkInsightsAnalyses\nDescribeNetworkInsightsPaths\nPolicy\n            condition keys for Reachability Analyzer\nSupports service-specific policy condition keys\nNo\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nCondition\nelement (or\nCondition\nblock\n) lets you specify conditions in which a\n               statement is in effect. The\nCondition\nelement is optional. You can create\n               conditional expressions that use\ncondition\n                  operators\n, such as equals or less than, to match the condition in the\n               policy with values in the request.\nIf you specify multiple\nCondition\nelements in a statement, or\n               multiple keys in a single\nCondition\nelement, AWS evaluates them using\n               a logical\nAND\noperation. If you specify multiple values for a single\n               condition key, AWS evaluates the condition using a logical\nOR\noperation. All of the conditions must be met before the statement's permissions are\n               granted.\nYou can also use placeholder variables when you specify conditions. For example,\n               you can grant an IAM user permission to access a resource only if it is tagged with\n               their IAM user name. For more information, see\nIAM policy elements:\n                  variables and tags\nin the\nIAM User Guide\n.\nAWS supports global condition keys and service-specific condition keys. To see all AWS global\n               condition keys, see\nAWS global condition context keys\nin the\nIAM User Guide\n.\nACLs in Reachability Analyzer\nSupports ACLs\nNo\nAccess control lists (ACLs) control which principals (account members, users, or roles) have permissions to access a resource. ACLs are\n            similar to resource-based policies, although they do not use the JSON policy document format.\nABAC with Reachability Analyzer\nSupports ABAC (tags in policies)\nYes\nAttribute-based access control (ABAC) is an authorization strategy that defines permissions\n      based on attributes. In AWS, these attributes are called\ntags\n. You can attach tags to IAM entities (users\n      or roles) and to many AWS resources. Tagging entities and resources is the first step of ABAC. Then you \n      design ABAC policies to allow operations when the principal's tag matches the tag on the resource that they \n      are trying to access.\nABAC is helpful in environments that are growing rapidly and helps with situations where policy management becomes cumbersome.\nTo control access based on tags, you provide tag information in the\ncondition\n         element\nof a policy using the\naws:ResourceTag/\nkey-name\n,\naws:RequestTag/\nkey-name\n, or\naws:TagKeys\ncondition keys.\nIf a service supports all three condition keys for every resource type, then the value is\nYes\nfor the service. \n  If a service supports all three condition keys for only some resource types, then the value is\nPartial\n.\nFor more information about ABAC, see\nWhat is ABAC?\nin the\nIAM User Guide\n. To view a tutorial with steps for setting up ABAC, see\nUse attribute-based access control (ABAC)\nin the\nIAM User Guide\n.\nUsing temporary\n          credentials with Reachability Analyzer\nSupports temporary credentials\nYes\nSome AWS services don't work when you sign in using temporary credentials. For additional \n         information, including which AWS services work with temporary credentials, see\nAWS services\n               that work with IAM\nin the\nIAM User Guide\n.\nYou are using temporary credentials if you sign in to the AWS Management Console using any method\n            except a user name and password. For example, when you access AWS using your\n            company's single sign-on (SSO) link, that process automatically creates temporary credentials.\n            You also automatically create temporary credentials when you sign in to the console as a user and\n            then switch roles. For more information about switching roles, see\nSwitching to a role\n               (console)\nin the\nIAM User Guide\n.\nYou can manually create temporary credentials using the AWS CLI or AWS API. You can\n            then use those temporary credentials to access AWS. AWS recommends that you\n            dynamically generate temporary credentials instead of using long-term access keys. For\n            more information, see\nTemporary\n               security credentials in IAM\n.\nCross-service\n          principal permissions for Reachability Analyzer\nSupports principal permissions\nYes\nWhen you use an IAM user or role to perform actions in AWS, you are considered a principal. Policies \n      grant permissions to a principal. When you use some services, you might perform an action that then triggers \n      another action in a different service. In this case, you must have permissions to perform both actions. To \n      see whether an action requires additional dependent actions in a policy, see\nActions, resources, and condition keys for Amazon EC2\nin the\nService Authorization Reference\n.\nService roles for Reachability Analyzer\nSupports service roles\nNo\nA service role is an\nIAM role\nthat a service assumes to perform \n      actions on your behalf. An IAM administrator can create, modify, and delete a service role from within IAM. For \n      more information, see\nCreating a role to delegate permissions \n      to an AWS service\nin the\nIAM User Guide\n.\nService-linked roles\n          for Reachability Analyzer\nSupports service-linked roles\nYes\nA service-linked role is a type of service role that is linked to an AWS service. The service can assume the role to perform an action on your behalf. \n      Service-linked roles appear in your AWS account and are owned by the service. An IAM administrator can view, \n      but not edit the permissions for service-linked roles.\nFor details about creating or managing Reachability Analyzer service-linked roles, see\nUse service-linked roles for Reachability Analyzer\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIdentity and access management\nRequired API\n        permissions\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/using-service-linked-roles.html": "Use service-linked roles for Reachability Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nService-linked role permissions\nCreate a service-linked role\nEdit a service-linked role\nDelete a service-linked role\nUse service-linked roles for Reachability Analyzer\nReachability Analyzer uses AWS Identity and Access Management (IAM)\nservice-linked roles\nfor multi-account analysis. A service-linked role is a unique\n    type of IAM role that is linked directly to Reachability Analyzer. Service-linked roles are predefined by\n    Reachability Analyzer and include all the permissions that the service requires to call other AWS services\n    on your behalf.\nA service-linked role makes setting up Reachability Analyzer easier because you don't have to add the \n    necessary permissions yourself. Reachability Analyzer defines the permissions of its\n    service-linked roles, and unless defined otherwise, only Reachability Analyzer can assume its roles. The\n    defined permissions include the trust policy and the permissions policy, and that permissions\n    policy cannot be attached to any other IAM entity.\nService-linked role permissions for Reachability Analyzer\nReachability Analyzer uses the service-linked role named\nAWSServiceRoleForReachabilityAnalyzer\nto access AWS resources and integrate with AWS Organizations on your behalf.\nThe\nAWSServiceRoleForReachabilityAnalyzer\nrole trusts the following services to assume the\n      role:\nreachabilityanalyzer.networkinsights.amazonaws.com\nThe\nAWSServiceRoleForReachabilityAnalyzer\nservice-linked role uses the managed policy\nAWSReachabilityAnalyzerServiceRolePolicy\n.\nYou must configure permissions to allow an IAM entity (such as a user, group, or role)\n      to create, edit, or delete a service-linked role. For more information, see\nService-linked role permissions\nin the\nIAM User Guide\n.\nCreate a service-linked role for Reachability Analyzer\nYou don't need to create this service-linked role yourself. When you\n      enable integration with AWS Organizations, Reachability Analyzer creates the\nAWSServiceRoleForReachabilityAnalyzer\nrole for you.\n      For more information, see\nEnable trusted access\n.\nIf you delete this service-linked role and then enable integration with AWS Organizations, Reachability Analyzer\n      creates the\nAWSServiceRoleForReachabilityAnalyzer\nrole for you again.\nEdit a service-linked role for Reachability Analyzer\nReachability Analyzer does not allow you to edit the\nAWSServiceRoleForReachabilityAnalyzer\nrole. After you create a \n      service-linked role, you cannot change the name of the role because various entities\n      might reference the role. However, you can edit the description of the role using IAM. \n      For more information, see\nEditing a service-linked role\nin the\nIAM User Guide\n.\nDelete a service-linked role for Reachability Analyzer\nIf you are finished performing multi-account analysis, we recommend that you delete the\nAWSServiceRoleForReachabilityAnalyzer\nrole. You can delete this service-linked role only after you disable the\n      integration of Reachability Analyzer with AWS Organizations.\nIf the Reachability Analyzer service is using the role when you try to delete the resources,\n      then the deletion might fail. If that happens, wait for a few minutes and try the\n      operation again.\nTo disable integration with AWS Organizations\nMake sure that you are not running a path analysis. To disable integration using the\n        Reachability Analyzer console, see\nDisable trusted access\n. To disable integration using \n        the AWS CLI or an API, see\nHow to enable or disabled trusted access\nin the\nAWS Organizations User Guide\n.\nTo delete the service-linked role using IAM\nUse IAM to delete the\nAWSServiceRoleForReachabilityAnalyzer\nrole. For more information, see\nDeleting a service-linked role\nin the\nIAM User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nRequired API\n        permissions\nAWS managed policies\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/security-iam-awsmanpol.html": "AWS managed policies for Reachability Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nAmazonVPCReachabilityAnalyzerFullAccessPolicy\nAmazonVPCReachabilityAnalyzerPathComponentReadPolicy\nAWSReachabilityAnalyzerServiceRolePolicy\nPolicy updates\nAWS managed policies for Reachability Analyzer\nTo add permissions to users, groups, and roles, it is easier to use AWS managed policies\n      than to write policies yourself. It takes time and expertise to\ncreate IAM customer\n         managed policies\nthat provide your team with only the permissions they need. To get\n      started quickly, you can use our AWS managed policies. These policies cover common use cases\n      and are available in your AWS account. For more information about AWS managed policies,\n      see\nAWS managed policies\nin the\nIAM User Guide\n.\nAWS services maintain and update AWS managed policies. You can't change the\n      permissions in AWS managed policies. Services occasionally add additional permissions to an\n      AWS managed policy to support new features. This type of update affects all identities\n      (users, groups, and roles) where the policy is attached. Services are most likely to update an\n      AWS managed policy when a new feature is launched or when new operations become available.\n      Services do not remove permissions from an AWS managed policy, so policy updates won't\n      break your existing permissions.\nAdditionally, AWS supports managed policies for job functions that span multiple\n      services. For example, the\nReadOnlyAccess\nAWS managed\n      policy provides read-only access to all AWS services and resources. When a service launches\n      a new feature, AWS adds read-only permissions for new operations and resources. For a list\n      and descriptions of job function policies, see\nAWS managed policies for\n         job functions\nin the\nIAM User Guide\n.\nAWS managed policy: AmazonVPCReachabilityAnalyzerFullAccessPolicy\nProvides permissions to create, analyze, and delete paths, and to describe path resources, such as EC2 instances, \n         firewalls, internet gateways, load balancers, NAT gateways, network interfaces, transit gateways, VPC endpoint services, \n         VPC endpoints, VPC peering connections, and virtual private gateways.\nTo view the permissions for this policy, see\nAmazonVPCReachabilityAnalyzerFullAccessPolicy\nin the\nAWS Managed Policy Reference\n.\nAWS managed policy: AmazonVPCReachabilityAnalyzerPathComponentReadPolicy\nThis policy is attached to the role\nIAMRoleForReachabilityAnalyzerCrossAccountResourceAccess\n. This role is\n         deployed to the member accounts in an organization when the management account enables\n         trusted access for Reachability Analyzer using the console. It provides permissions to view resources\n         from across your organization using the Reachability Analyzer console. For more information, see\nCross-account access roles\n.\nTo view the permissions for this policy, see\nAmazonVPCReachabilityAnalyzerPathComponentReadPolicy\nin the\nAWS Managed Policy Reference\n.\nAWS managed policy: AWSReachabilityAnalyzerServiceRolePolicy\nThis policy is attached to a service-linked role that allows Reachability Analyzer to perform actions \n         on your behalf. For more information, see\nUse service-linked roles\n.\nTo view the permissions for this policy, see\nAWSReachabilityAnalyzerServiceRolePolicy\nin the\nAWS Managed Policy Reference\n.\nReachability Analyzer updates to AWS managed policies\nView details about updates to AWS managed policies for Reachability Analyzer since this service\n         began tracking these changes.\nChange\nDescription\nDate\nAmazonVPCReachabilityAnalyzerFullAccessPolicy\n\u00e2\u0080\u0093 New policy\nAdded a policy that provides full access to Reachability Analyzer for single account\n                     use.\nJune 14, 2023\nAmazonVPCReachabilityAnalyzerPathComponentReadPolicy\n\u00e2\u0080\u0093 New policy\nAdded a policy that grants member accounts permission to view resources\n                     from across your organization. The policy is attached to a role that is\n                     deployed to member accounts when the management account enables trusted access\n                     for Reachability Analyzer using the console.\nMay 1, 2023\nAWSReachabilityAnalyzerServiceRolePolicy\n- New policy\nAdded a policy that is attached to a service-linked role that\n                     allows it to access AWS resources and integrate with AWS Organizations on your\n                     behalf.\nNovember, 23, 2022\nReachability Analyzer started tracking changes\nReachability Analyzer started tracking changes for its AWS managed policies.\nMarch 1, 2021\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nUse service-linked roles\nCross-account access roles\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/cross-account-access-roles.html": "Cross-account access roles for Reachability Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nIAMRoleForReachabilityAnalyzerCrossAccountResourceAccess\nManage IAM role deployments\nTroubleshoot self-managed role deployments\nCross-account access roles for Reachability Analyzer\nWhen you enable trusted access for Reachability Analyzer, we use AWS CloudFormation StackSets to deploy the\n        IAMRoleForReachabilityAnalyzerCrossAccountResourceAccess IAM role to all\n      member accounts in the organization. This role allows the management account and delegated\n      administrator accounts to specify resources from member accounts in path analyses.\nReachability Analyzer creates the custom IAM role automatically when you turn on trusted \n        access using the Network Manager console. We strongly recommend that you use the console to\n        turn on trusted access, as alternate approaches require an advanced level of\n        expertise and are more prone to error.\nDeregistering a delegated administrator removes it from the account list so that\n        it can no longer assume this custom IAM role. If you turn off trusted access, we\n        delete the StackSets.\nIAMRoleForReachabilityAnalyzerCrossAccountResourceAccess\nThis IAM policy role enables cross-account read-only access to resources \n          through role switching. For more information, see\nAmazonEC2ReadOnlyAccess\nand\nAWSDirectConnectReadOnlyAccess\nin the IAM console.\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: Enables Console Access role\nResources:\n  ConsoleRole:\n    Type: AWS::IAM::Role\n    Properties:\n      RoleName: IAMRoleForReachabilityAnalyzerCrossAccountResourceAccess\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Effect: Allow\n          Principal:\n            AWS:\n            - arn:aws:iam::\nmanagement-account-id\n:root\n            - arn:aws:iam::\ndelegated-admin-1-account-id\n:root\n            - arn:aws:iam::\ndelegated-admin-2-account-id\n:root\n          Action:\n          - sts:AssumeRole\n      Path: \"/\"\n      ManagedPolicyArns:\n      - arn:aws:iam::aws:policy/AWSDirectConnectReadOnlyAccess\n      - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess\n      - arn:aws:iam::aws:policy/AmazonVPCReachabilityAnalyzerPathComponentReadPolicy\nManage IAM role deployments\nIf you make changes to your role policies, or if you've updated a self-managed\n           role, you can deploy the updated policy to the accounts in your organization.\nWith a self-managed deployment, you are responsible for attaching the \n           required policies and managing the trust relationship required for the \n           delegated administrator and management accounts to use cross-account \n           analyses.\nTroubleshoot self-managed role deployments\nIf the StackSets deployment to an account fails and the message is \"IAM role\n        exists\", delete the IAM role from the member account and then retry the role deployment in\n        the management account.\nTo retry the IAM role deployments\nSign in to the management account.\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home\n.\nFrom the navigation pane, choose\nReachability Analyzer\n,\nSettings\n.\nUnder\nIAM role deployments status\n, choose\nRetry role deployment\n. The deployments can take \n              several minutes to complete, depending on the number of member accounts \n              in your organization.\nFor a message other than \"IAM role exists\", open a case with AWS Support.\n          For more information, see\nCreate a support case\nin the\nAWS Support Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS managed policies\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/reachability-analyzer-limits.html": "Quotas for Reachability Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nQuotas for Reachability Analyzer\nYour AWS account has default quotas, formerly referred to as limits, for each \n        AWS service. You can request increases for some quotas, but not for all quotas.\nTo view the quotas for Reachability Analyzer, open the\nService Quotas console\n. In the navigation pane, choose\nAWS services\n, and then \n        select\nNetwork Insights\n. To request a quota increase, see\nRequesting a quota\n            increase\nin the\nService Quotas User Guide\n.\nYour AWS account has the following quotas related to Reachability Analyzer.\nName\nDefault\nAdjustable\nPaths\n1,000\nYes\nAnalyses\n10,000\nYes\nConcurrent analyses\n100\nYes\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nCross-account access roles\nDocument history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/reachability/doc-history.html": "Document history for Reachability Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nReachability Analyzer\nDocument history for Reachability Analyzer\nThe following table describes the releases for Reachability Analyzer.\nChange\nDescription\nDate\nNew feature\nYou can specify VPC endpoints as sources and destinations, and Network Firewall firewalls as \n     intermediate path components.\nMarch 21, 2023\nMulti-account support\nReachability Analyzer supports reachability analysis between AWS resources in different \n        AWS accounts within an organization from AWS Organizations.\nNovember 27, 2022\nNew feature\nYou can specify transit gateways as sources, destinations, and intermediate path components.\nMarch 25, 2022\nInitial release\nThis release introduces Reachability Analyzer.\nDecember 10, 2020\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/infrastructure-performance/what-is-nmip.html": "What is Infrastructure Performance? - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nInfrastructure Performance User Guide\nWhat is Infrastructure Performance?\nInfrastructure Performance allows you to obtain near real-time and historical network latency across\n    AWS Regions and across or within Availability Zones for a specified time period. However,\n    network performance data is not available prior to Oct 26 2022 00:00:00 GMT+000. Performance\n    metrics are aggregated according to a time period that you choose. Network performance results\n    are returned for that time period, showing whether the performance was healthy or if there was\n    any performance degradation. This can help  you to more easily evaluate whether network\n    performance might affect your applications. Infrastructure Performance also supports publishing metrics as\n    subscriptions to Amazon CloudWatch, allowing you to view performance metrics in CloudWatch. There is no cost\n    associated with using Infrastructure Performance. However, you might incur charges when using subscriptions to\n    view performance in CloudWatch. For more information about CloudWatch pricing guidelines, see\nAmazon CloudWatch pricing\n.\nNote\nInfrastructure Performance is designed to give you an overview showing whether network performance is\n   normal or degraded. It does not provide details about the specific causes of degradation, such as\n   a hardware failure.\nInfrastructure Performance works in the following geographical areas:\nAvailability zones\n\u00e2\u0080\u0094 Generate network performance metrics between two\n    Availability Zones or within a single Availability Zone.\nRegions\n\u00e2\u0080\u0094 Generate network performance metrics to see\n    performance between two Regions.\nYou can use the Region metrics to evaluate a Region\n        expansion strategy. Infrastructure Performance can help you gather information needed to understand\n        network performance between Regions where you currently have a presence, and\n        Regions that you're exploring expanding into. For example, you might have a\n        presence in\nus-west-2\nand are looking to expand into\neu-central-\n1.\n        Use Infrastructure Performance to check the latency between these two Regions to help you\n        make a more informed choice for Region expansion. For a list of the\n        Regions that support Infrastructure Performance, see\nRegion availability\n.\nNote\nInfrastructure Performance does not incorporate performance metrics for paths through VPC networking resources,\n   such as transit gateways, NAT gateways, VPC endpoints, Elastic Load Balancing, or Amazon EC2 network interfaces.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow Infrastructure Performance works\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/infrastructure-performance/how-nmip-works.html": "How Infrastructure Performance works - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nInfrastructure Performance User Guide\nHow latency is calculated\nRegion availability\nHow Infrastructure Performance works\nNetwork latency measurements are an aggregate of latency performance information captured by\n    active probing between AWS managed probes within the AWS global network.\nInter-Region latency metrics are generated by aggregating latency measurements from\n        probes located across AWS Regions, filtered on your chosen source and\n        destination AWS Region pairs.\nInter-Availability Zone latency metrics are generated by aggregating latency\n        measurements from probes located across Availability Zones, filtered on your chosen source\n        and destination Availability Zones.\nIntra-Availability Zone latency metrics are generated by aggregating latency\n        measurements between all probes within a single Availability Zone. This includes all probes\n        that are across AWS data centers, and within the same data center, for the chosen\n        Availability Zone.\nThe placement of the probes is not related to EC2 instances or AWS services running in\n    your account. For these reasons, the same latency metric data is presented in all AWS\n    accounts.\nHow latency is calculated\nMetric data is generated by computing the median (\nP50\n) of all latency\n      measurements from AWS managed probes for every five-minute (\n5M\n) interval.\nLatency metrics represent round-trip traffic latency of synthetic traffic streams between\n      selected sources and destinations. This is a combination of the latency of the underlying\n      physical network and the latency between the host and the underlying physical network. The\n      Infrastructure Performance dashboard also provides a network health status, indicating whether\n      the aggregate network latency is normal or degraded. The health status is determined based on\n      expected AWS network performance between AWS Regions and Availability Zones. The health\n      status is available only for inter-Region and inter-Availability Zone metrics.\nNote\nIn case of a degraded health status, AWS is automatically notified of the incident.\nRegion availability\nInfrastructure Performance is available in the following AWS Regions:\nAWS Region\nDescription\nus-east-1\nUS East (N. Virginia)\nus-east-2\nUS East (Ohio)\nus-west-1\nUS West (N. California)\nus-west-2\nUS West (Oregon)\nap-east-1\nAsia Pacific (Hong Kong)\nap-south-1\nAsia Pacific (Mumbai)\nap-northeast-3\nAsia Pacific (Osaka)\nap-northeast-2\nAsia Pacific (Seoul)\nap-southeast-1\nAsia Pacific (Singapore)\nap-southeast-2\nAsia Pacific (Sydney)\nap-northeast-1\nAsia Pacific (Tokyo)\nap-southeast-3\nAsia Pacific (Jakarta)\nca-central-1\nCanada (Central)\neu-central-1\nEurope (Frankfurt)\neu-west-1\nEurope (Ireland)\neu-west-2\nEurope (London)\neu-west-3\nEurope (Paris)\neu-north-1\nEurope (Stockholm)\neu-south-1\nEurope (Milan)\nsa-east-1\nSouth America (S\u00c3\u00a3o Paulo)\naf-south-1\nAfrica (Cape Town)\nme-south-1\nMiddle East (Bahrain)\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWhat is Infrastructure Performance?\nMonitor network performance\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/infrastructure-performance/getting-started-nmip-console.html": "Monitor network infrastructure performance - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nInfrastructure Performance User Guide\nRegions and Availability Zones\nHealth status timeline\nNetwork latency\nGet network performance using the CLI\nMonitor network infrastructure performance\nView the network performance between two Regions, between two Availability\n  Zones, or in the two connections within an Availability Zone. After you choose a starting and\n  ending date, and a period by which to aggregate performance, the network performance metrics\n  display in the\nHealth status timeline\nand\nNetwork latency\n   timeline\nfor that time period. You can also subscribe or unsubscribe performance\n  metrics from Amazon CloudWatch. When you subscribe, you're able to view performance metrics in CloudWatch.\nNote\nEnabling subscriptions with CloudWatch might incur a charge. For more information about CloudWatch pricing\n   guidelines, see\nAmazon CloudWatch\n    pricing\n.\nRegions and Availability Zones\nChoose between two Regions, two Availability Zones, or connections within an Availability Zone. You can choose\n   multiple Region, Availability Zones or intra-Availability Zones, but you can't have a\n   combination of all three. Combinations of Regions, Inter-Availability Zones, or\n   Intra-Availability Zones are not supported.\nTo choose a Region or Availability Zone\nAccess the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home/\n.\nUnder\nMonitoring and troubleshooting\n, choose\nInfrastructure Performance\n.\nFrom the Regions drop-down list, choose whether you want to see\nInter-Region\n,\nInter-Availability\n      Zone\n, or\nIntra-Availability Zone\nperformance data.\nBy default the table populates all possible\nSource\nand\nDestination\npairs of Regions or Availability Zones, or\n     all possible pairs within an intra-Availability Zone. This section displays whether that pair\n     is subscribed to Amazon CloudWatch. Sort on\nSource\n,\nDestination\n, or\nSubscription\nto more easily select\n     which Regions or Availability Zones you want to check network performance\n     for.\nScroll through the pages and choose one or more pairs.\n(Optional). To choose specific Regions or Availability Zone, choose\nFind metrics\n.\nIn the\nFind metrics\nfield, choose one of the following\nProperties\n:\nSource\n\u00e2\u0080\u0094 The Region or Inter/Intra Availability\n         Zone that's the source of the network traffic.\nDestination\n\u00e2\u0080\u0094 The Region or Inter/Intra\n         Availability Zone that's the destination for the network source.\nSubscription\n\u00e2\u0080\u0094 Indicates whether the Region or\n         Availability Zone is\nSubscribed\nor\nUnsubscribed\nfor CloudWatch notifications. For more information about managing\n         subscriptions with CloudWatch, see\nManage Amazon CloudWatch subscriptions\n.\nFor the property operator, choose one of the following operators:\nSource =\n\u00e2\u0080\u0094 Returns network performance results only for the\n         chosen Region, Availability Zone, or an\nunsubscribed\nsubscription status.\nSource !=\n\u00e2\u0080\u0094 Does not equal. Excludes the chosen\n         Region, Availability Zone, or\nunsubscribed\nsubscription status from the network performance results.\nFrom the\nSource Values\ndrop-down list, choose the value to apply to\n       the operator.\nRepeat the previous step if you want to include multiple metrics in the results.\nBy default, each metric that you add is separated by\nand\nconnecting\n       logic, restricting results to the criteria that meet all of the requirements. To return\n       results that match any of your chosen metrics, choose\nor\nfrom the\n       drop-down list.\nAll metrics use the same connecting logic. Combinations of\nand\n/\nor\nlogic are not supported. If you change the\n       connecting logic between two metrics, all other metrics will use the same connecting\n       logic.\nThe following example shows a filter for a single Source Region,\nus-east-1\nand\na single Destination\n       Region,\neu-central-1\n. The results return one combination:\nChoose a time range, and then choose\nApply\n. You can choose a\nRelative range\nor an\nAbsolute range\n.\nRelative range\noptions use a date range based on your current date\n     and time:\nLast 30 minutes\nLast 1 hour\nLast 6 hour\nLast 1 day\nLast 1 week\nCustom range\n\u00e2\u0080\u0094 Set a custom date range. Enter a\nDuration\n, and then choose one of the following\nUnits of\n        time\n:\nseconds\nminutes\n(default)\nhours\ndays\nweeks\nyears\nAbsolute range\nallows you to set a specific start date and time and\n     end date and time. The date range cannot exceed 30 days.\nNote\nPerformance metrics are not available prior to Oct 26, 2022 00:00:00 GMT+000.\nOn the calendar control, choose the start and end dates. Or,\nEnter a\nStart date\nand\nEnd date\nusing a\nYYYY/MM/DD\nformat.\nEnter a\nStart time\nand\nEnd time\nusing an\nhh:mm\nformat.\nIf you choose dates using the calendar control, the default start and end times are set to\n00:00\n. You can change those times by entering your preferred times in\n     the fields.\nWhen using an absolute range, both start and end dates are required.\nChoose the time period by which you want the performance aggregated. Options are:\n5M\n\u00e2\u0080\u0094 Five minutes (default)\n15M\n\u00e2\u0080\u0094 Fifteen minutes\n1H\n\u00e2\u0080\u0094 One hour\n1D\n\u00e2\u0080\u0094 One day\n1W\n\u00e2\u0080\u0094 One week\nThe\nHealth status timeline\nand\nNetwork latency\n      sections\nupdate.\nHealth status timeline\nThe\nHealth status timeline\nshows a single consolidated view of network\n   performance for the chosen Region, Inter-Availability Zone, or Intra-Availability\n   Zone pairs over the starting and end times, consolidated by the aggregation period. The timeline\n   displays the following network latency statuses:\nHealthy\n(green) \u00e2\u0080\u0094 Network performance fell within the expected range.\nDegraded\n(yellow) \u00e2\u0080\u0094 Network latency fell below the expected\n     range.\nHover over the status bar at a particular date and time to display the health status at that\n   time for the pairs you've chosen.\nIn the following example, network performance is checked for two pairs of\n   Regions:\neu-north-1\nand\nme-south-1\n, as well as\neu-north-1\nand\nap-south-1\n. The time period uses a\nRelative\n    time\nof\nLast 1 hour\non November 11, and the aggregation period\n   is\n5M\n(five minutes). From\n11:55\nAM to 12:05 PM during\n   this hour there was\nDegraded\nperformance. Hovering over the status bar shows\n   that degraded performance occurred only between the\neu-north-1\nand\nme-south-1\nRegions, while network performance for the other\n   Region pair was healthy.\nNote\nThis example is provided for illustrative purposes only and does not represent the actual\n    network health status between these Regions during this time.\nNetwork latency\nThe Network latency section shows the actual network performance speed between the chosen\n   Region, Availability Zone, or within an Availability Zone pairs over the starting and end times,\n   consolidated by the aggregation period. Latency can run from a minimum of\n0\n    ms\nto a maximum of\n160 ms\n. Each chosen pair is represented by\n   individual lines in the section, with a legend at the bottom of the page mapping a line to a\n   pair. Hover anywhere over the graph at a particular time to view a comprehensive list of all\n   chosen pairs and the actual latency at that time. Or, if you want to see the latency for a\n   specific pair, choose that line. The following example shows the latency of two\n   Region pairs :\neu-north-1\nand\nme-south-1\n, as well as\neu-north-1\nand\nap-south-1\nat\n02:15\non\nNov 11\n.\nNote\nThis example is provided for illustrative purposes only and does not represent the actual\n    network latency between these Regions during this time.\nGet network performance using the CLI\nGetAwsNetworkPerformanceData\nreturns network performance metrics. For more information,\n   see\nGetAwsNetworkPerformanceData\n.\nIn the following example, network performance is queried between two\n   Regions,\nus-east-1\nand\nus-west-2\non\n2022-10-26\nbetween a start-time of\n12:00:00\nand an end time of\n12:30:00\n. The request also uses the following parameters:\nMetric\nindicates what type of metric is being requested. In this example,\naggregate-latency\n, indicates that the performance metrics are aggregated and\n     returned for latency.\nStatistic\nis the median value of the metric. In this example,\np50\nis\n     the statistic of all the data points gathered within those five minutes.\nNote\np50\nis the only supported statistic.\nPeriod\nindicates the interval at which performance the\nmetric\nis returned. In this example,\naggregated-latency\nmetrics are returned for every\nfive-minutes\n.\naws ec2 --region ap-southeast-3 get-aws-network-performance-data --start-time\n   2022-10-26T12:00:00.000Z --end-time 2022-10-26T12:30:00.000Z --data-queries\n   Id=id1,Source=us-east-1,Destination=us-west-2,Metric=aggregate-latency,Statistic=p50,Period=five-minutes\nThe results return the following:\n{\n\"DataResponses\": [\n{\n\"Id\": \"id1\",\n            \"Source\": \"us-east-1\",\n            \"Destination\": \"us-west-2\",\n            \"Metric\": \"aggregate-latency\",\n            \"Statistic\": \"p50\",\n            \"Period\": \"five-minutes\",\n            \"MetricPoints\": [\n{\n\"StartDate\": \"2022-10-26T12:00:00+00:00\",\n                    \"EndDate\": \"2022-10-26T12:05:00+00:00\",\n                    \"Value\": 62.44349,\n                    \"Status\": \"OK\"\n                },\n{\n\"StartDate\": \"2022-10-26T12:05:00+00:00\",\n                    \"EndDate\": \"2022-10-26T12:10:00+00:00\",\n                    \"Value\": 62.483498,\n                    \"Status\": \"OK\"\n                },\n{\n\"StartDate\": \"2022-10-26T12:10:00+00:00\",\n                    \"EndDate\": \"2022-10-26T12:15:00+00:00\",\n                    \"Value\": 62.51248,\n                    \"Status\": \"OK\"\n                },\n{\n\"StartDate\": \"2022-10-26T12:15:00+00:00\",\n                    \"EndDate\": \"2022-10-26T12:20:00+00:00\",\n                    \"Value\": 62.635475,\n                    \"Status\": \"OK\"\n                },\n{\n\"StartDate\": \"2022-10-26T12:20:00+00:00\",\n                    \"EndDate\": \"2022-10-26T12:25:00+00:00\",\n                    \"Value\": 62.733974,\n                    \"Status\": \"OK\"\n                },\n{\n\"StartDate\": \"2022-10-26T12:25:00+00:00\",\n                    \"EndDate\": \"2022-10-26T12:30:00+00:00\",\n                    \"Value\": 62.773975,\n                    \"Status\": \"OK\"\n                },\n{\n\"StartDate\": \"2022-10-26T12:30:00+00:00\",\n                    \"EndDate\": \"2022-10-26T12:35:00+00:00\",\n                    \"Value\": 62.75349,\n                    \"Status\": \"OK\"\n                }\n            ]\n        }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow Infrastructure Performance works\nManage CloudWatch subscriptions\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/infrastructure-performance/nmip-subscriptions-cw.html": "Manage Amazon CloudWatch subscriptions - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nInfrastructure Performance User Guide\nEnable or disable subscriptions\nSubscription metrics\nManage subscriptions using the CLI\nManage Amazon CloudWatch subscriptions\nInfrastructure Performance subscriptions publish network performance metrics in five-minute periods to Amazon CloudWatch for any pair of inter Regions, inter-Availability Zones, or intra-Availability Zones that you optionally subscribe to. Once a subscription is enabled, performance metrics continue to publish to CloudWatch for those pairs until you unsubscribe any pair that you no longer want to publish performance metrics for.\nNote\nThere's a separate CloudWatch metrics subscription charge for each inter-Region,\n   inter-Availability Zone, or intra-Availability Zone pair you subscribe to. You won't be charged\n   for any CloudWatch performance metrics that you unsubscribe from, or for any pair that you've not\n   enabled subscriptions for. For more information about pricing guidelines, see\nAmazon CloudWatch pricing\n.\nManage CloudWatch subscriptions using the console\nSubscriptions allow you to send and view Infrastructure Performance metrics in Amazon CloudWatch.\n   Using the console you can either subscribe to, or unsubscribe from, CloudWatch performance\n   metrics.\nTo manage CloudWatch subscriptions\nOpen the Amazon VPC console at\nhttps://console.aws.amazon.com/vpc/\n.\nIn the navigation pane, choose\nNetwork Manager\n.\nUnder\nMonitoring and troubleshooting\n, choose\nInfrastructure Performance\n.\nChoose the Regions,\nInter-Availability Zone\n, or\nIntra-Availability Zone\nthat you want to manage subscriptions for. For\n     detailed steps on how to choose them, see\nRegions and Availability Zones\n.\nChoose\nManage Subscriptions\n.\nFrom the\nUpdate Subscriptions\ndrop-down list, choose whether you want\n     to\nSubscribe\nor\nUnsubscribe\nthe pair.\nChoose\nConfirm\n.\nSubscription metrics for CloudWatch\nWhen subscriptions are enabled, you can use CloudWatch to view metrics. For more information on\n   using CloudWatch for your Infrastructure Performance subscriptions, see\nWhat is CloudWatch Management\nin the\nAmazon CloudWatch User Guide\n.\nThe following\nEC2\nnamespace metric for Infrastructure Performance is tracked in\n   CloudWatch:\nMetric\nDescription\nAggregateAWSNetworkPerformance\nThe latency between Regions, inter-Availability Zones, or\n        intra-Availability\n        Zones.\nManage CloudWatch subscriptions using the CLI\nUse the AWS CLI or APIs to get network performance information and to enable or disable\n   Amazon CloudWatch subscriptions.\nTopics\nDescribeAwsNetworkPerformanceMetricSubscriptions\nDisableAwsNetworkPerformanceMetricSubscription\nEnableAwsNetworkPerformanceMetricSubscription\nDescribeAwsNetworkPerformanceMetricSubscriptions\nThis provides details about any Infrastructure Performance metric subscriptions for\n    Amazon CloudWatch. For more information, see\nDescribeAwsNetworkPerformanceMetricSubscriptions\n.\nIn this example, a\nfilter\nis used where:\nThe filter\nName\nis\nSource\n.\nThe\nValue\nof the filter\nName\nis\nus-east-1\n.\nIn this example, CloudWatch subscriptions are being described for the Region\nus-east-1\n.\naws ec2  --region us-east-1 describe-aws-network-performance-metric-subscriptions --filters Name=Source,Values=us-east-1\nThe results describe the\nus-east-1\nsubscriptions, including the\n    following:\nSource\nis the originating location of the subscription. In this example, the\nSource\nis the Region\nus-east-1\n.\nDestination\nis the target location of the subscription. In this example, the\nDestination\nis the  Region\nus-east-2\n.\nMetric\nindicates what type of metric is being requested. In this example,\naggregate-latency\n, indicates that the performance metrics are aggregated and\n      returned for latency.\nStatistic\nis the median value of the metric. In this example,\np50\nis\n      the statistic of all the data points gathered within those five minutes.\nNote\np50\nis the only supported statistic.\nPeriod\nindicates the interval at which performance the\nmetric\nis returned. In this example,\naggregated-latency\nmetrics are returned for every\nfive-minutes\n.\n{\n\"Subscriptions\": [\n{\n\"Source\": \"us-east-1\",\n            \"Destination\": \"us-east-2\",\n            \"Metric\": \"aggregate-latency\",\n            \"Statistic\": \"p50\",\n            \"Period\": \"five-minutes\"\n        }\n    ]\n}\nDisableAwsNetworkPerformanceMetricSubscription\nThis disables Amazon CloudWatch subscriptions for Infrastructure Performance.  For more information,\n    see\nDisableAwsNetworkPerformanceMetricSubscription\n.\nThe following example disables subscriptions between a source Region,\nus-east-1\n, and a destination Region,\nus-east-2\n. In\n    addition to the\nsource\nand\ndestination\nparameters, the request uses\n    the following parameters:\nmetric\nindicates what type of metric is being requested. In this example,\naggregate-latency\n, indicates that the performance metrics are aggregated and\n      returned for latency.\nstatistic\nis the median value of the metric. In this example,\np50\nis\n      the statistic of all the data points gathered within those five minutes.\nNote\np50\nis the only supported statistic.\naws ec2 --region us-east-1 disable-aws-network-performance-metric-subscription --source us-east-1 --destination us-east-2 --metric aggregate-latency --statistic p50\nThe results return the following Boolean,\ntrue\n, indicating that the Amazon CloudWatch\n    subscription between the two Regions was disabled. CloudWatch will no longer receive\n    these metrics.\n{\n\"Output\": true\n}\nEnableAwsNetworkPerformanceMetricSubscription\nThis enables Amazon CloudWatch subscriptions for Infrastructure Performance. For more information,\n    see\nEnableAwsNetworkPerformanceMetricSubscription\n.\nIn the following example, subscriptions are enabled between a source\n    Region,\nus-east-1\n, and a destination Region,\nus-east-2\n.  In addition to the\nsource\nand\ndestination\nparameters, the request also uses the following parameters:\nmetric\nindicates what type of metric is being requested. In this example,\naggregate-latency\n, indicates that the performance metrics are aggregated and\n      returned for latency.\nstatistic\nis the median value of the metric. In this example,\np50\nis\n      the statistic of all the data points gathered within those five minutes.\nNote\np50\nis the only supported statistic.\naws ec2 --region us-east-1 enable-aws-network-performance-metric-subscription --source us-east-1 --destination us-east-2 --metric aggregate-latency --statistic p50\nThe results return the following Boolean,\ntrue\n, indicating that an Amazon CloudWatch subscription as been enabled between the two Regions. CloudWatch will begin receiving \n    metrics.\n{\n\"Output\": true\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nMonitor network performance\nIdentity and access\n      management\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/infrastructure-performance/identity-access-management.html": "Identity and access management for Infrastructure Performance - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nInfrastructure Performance User Guide\nIdentity and access management for\n      Infrastructure Performance\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely control access\n      to AWS resources. IAM administrators control who can be\nauthenticated\n(signed in) and\nauthorized\n(have permissions) to use Infrastructure Performance resources. IAM is an AWS service that you can\n      use with no additional charge.\nTo use Infrastructure Performance, you'll need an AWS account and AWS credentials. To increase the\n    security of your AWS account, we recommend that you use an IAM user to provide access\n    credentials instead of using your AWS account credentials. For more information, see\nAWS account root user\n      credentials and IAM identities\nin the\nAmazon Web Services General Reference\nand\nIAM best\n      practices\nin the\nIAM User Guide\n.\nThe following sections provide details on how an IAM administrator can use IAM to help\n    secure your AWS resources, by controlling who can perform Infrastructure Performance actions.\nContents\nHow Infrastructure Performance works with IAM\nAllow IAM users or groups to access\n        Infrastructure Performance\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nManage CloudWatch subscriptions\nHow Infrastructure Performance works with\n        IAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/infrastructure-performance/security_iam_service-with-iam.html": "How Infrastructure Performance works with IAM - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nInfrastructure Performance User Guide\nInfrastructure Performance\n          identity-based policies\nInfrastructure Performance IAM roles\nHow Infrastructure Performance works with IAM\nThe following sections describe how Infrastructure Performance works with IAM.\nContents\nInfrastructure Performance\n          identity-based policies\nInfrastructure Performance IAM roles\nInfrastructure Performance\n          identity-based policies\nWith IAM identity-based policies, you can specify allowed or denied actions and\n        resources as well as the conditions under which actions are allowed or denied. Infrastructure Performance\n        supports specific actions and resources. There are no Infrastructure Performance service-specific condition\n        keys that can be used in the\nCondition\nelement of policy statements. To learn\n        about all of the elements that you use in a JSON policy, see\nIAM JSON policy elements\n          reference\nin the\nIAM User Guide\n.\nActions\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nAction\nelement of a JSON policy describes the\n               actions that you can use to allow or deny access in a policy. Policy\n               actions usually have the same name as the associated AWS API operation. There are some exceptions, such as\npermission-only \n               actions\nthat don't have a matching API operation. There are also some operations that require multiple actions in a policy. \n               These additional actions are called\ndependent actions\n.\nInclude actions in a policy to grant permissions to perform the associated operation.\nInfrastructure Performance shares its API namespace with Amazon EC2. Policy actions in Infrastructure Performance use the following\n          prefix before the action:\nec2\n:. For example, to grant someone permission to\n          create a path with the\nGetAwsNetworkPerformanceData\nAPI operation, you\n          include the\nec2:GetAwsNetworkPerformanceData\naction in their policy. Policy\n          statements must include either an\nAction\nor\nNotAction\nelement.\nTo specify multiple actions in a single statement, separate them with commas as shown\n          in the following example.\n\"Action\": [\n      \"ec2:action1\",\n      \"ec2:action2\"\n]\nYou can specify multiple actions using wildcards (*). For example, to specify all\n          actions that begin with the word\nDescribe\n, include the following\n          action.\n\"Action\": \"ec2:Describe*\"\nThe following actions are supported by Infrastructure Performance:\nDescribeAwsNetworkPerformanceMetricSubscriptions\nDisableAwsNetworkPerformanceMetricSubscription\nEnableAwsNetworkPerformanceMetricSubscription\nGetAwsNetworkPerformanceData\nResources\nInfrastructure Performance does not support resource-level permissions.\nFor actions that don't support resource-level permissions, such as listing operations,\n          use a wildcard (*) to indicate that the statement applies to all resources.\n\"Resource\": \"*\"\nCondition\n            keys\nThe\nCondition\nelement (or\nCondition\nblock\n) lets you specify conditions in which a statement\n          is in effect. For example, you might want a policy to be applied only after a specific\n          date. To express conditions, use predefined condition keys.\nInfrastructure Performance does not provide any service-specific condition keys, but it does support\n          using some global condition keys. To see all AWS global condition keys, see\nAWS global condition\n            context keys\nin the\nIAM User Guide\n.\nAll Amazon EC2 actions support the\naws:RequestedRegion\nand\nec2:Region\ncondition keys. For more information, see\nExample: Restricting\n            Access to a Specific Region\n.\nThe\nCondition\nelement is optional.\nInfrastructure Performance IAM roles\nAn\nIAM role\nis an entity within your\n        AWS account that has specific permissions.\nUsing temporary\n            credentials with Infrastructure Performance\nYou can use temporary credentials to sign in with federation, to assume an IAM role,\n          or to assume a cross-account role. You obtain temporary security credentials by calling\n          AWS STS API operations such as\nAssumeRole\nor\nGetFederationToken\n.\nInfrastructure Performance supports using temporary credentials.\nService-linked\n            roles\nInfrastructure Performance has no service-linked roles.\nService roles\nInfrastructure Performance has no service roles.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIdentity and access\n      management\nAllow IAM users to access\n        Infrastructure Performance\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/infrastructure-performance/security_iam_create-iam-policy.html": "Allow IAM users or groups to access Infrastructure Performance - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nInfrastructure Performance User Guide\nCreate an IAM policy\nAllow IAM users or groups to access\n        Infrastructure Performance\nAny user user that signs in to the AWS Management Console or AWS Command Line Interface (AWS CLI) must have permissions to\n      access specific resources. You provide those permissions by using AWS Identity and Access Management (IAM), through\n      policies.\nThe following procedure shows you how to attach an IAM policy to a user or group that\n      allows full access to Infrastructure Performance.\nNote\nWe recommend creating a new IAM policy that grants only the permissions necessary to\n        use Infrastructure Performance.\nCreate an IAM policy\nCreate a policy that provides users full access to Infrastructure Performance. Then attach the policy to\n        a user or group.\nTo create and attach an IAM policy using the console\nSign in to the IAM console at\nhttps://console.aws.amazon.com/iam/\nwith administrator\n            credentials.\nIn the navigation pane, choose\nPolicies\n.\nIn the content pane, choose\nCreate policy\n.\nChoose the\nJSON\ntab.\nPaste the following JSON policy document in the text field.\n{\n\"Version\": \"2012-10-17\",\n    \"Statement\": [\n{\n\"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DisableAwsNetworkPerformanceMetricSubscription\",\n                \"ec2:DescribeAwsNetworkPerformanceMetricSubscriptions\",\n                \"ec2:EnableAwsNetworkPerformanceMetricSubscription\",\n                \"ec2:GetAwsNetworkPerformanceData\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nWhen you are finished, choose\nReview policy\n.\nOn the\nReview\npage, enter a name for the policy, for example,\nInfrastructurePerformancePolicy\n. Optionally, enter a description for\nDescription\n.\nIn\nSummary\n, review the policy to see the permissions that it\n            grants, and then choose\nCreate policy\n.\nAttach the new policy to your  user or group.\nFor information on attaching a policy to a user, see\nChanging permissions for\n              an IAM user\nin the\nIAM User Guide\n. For information on\n            attaching a policy to a group, see\nAttaching a policy to\n              an IAM Group\nin the\nIAM User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow Infrastructure Performance works with\n        IAM\nDocument history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/network-manager/latest/infrastructure-performance/doc-history.html": "Document history for Infrastructure Performance - AWS Network Manager\nAWS\nDocumentation\nAWS Network Manager\nInfrastructure Performance User Guide\nDocument history for Infrastructure Performance\nThe following table describes the releases for Infrastructure Performance.\nChange\nDescription\nDate\nInitial release\nThis release introduces Infrastructure Performance.\nNovember 28, 2022\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAllow IAM users to access\n        Infrastructure Performance\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/what-is-network-access-analyzer.html": "What is Network Access Analyzer? - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nNetwork Access Analyzer\nConcepts\nAccess Network Access Analyzer\nPricing\nWhat is Network Access Analyzer?\nNetwork Access Analyzer is a feature that identifies unintended network access to your resources on\n    AWS. You can use Network Access Analyzer to specify your network access requirements and to\n    identify potential network paths that do not meet your specified requirements.\n    You can use Network Access Analyzer to:\nUnderstand, verify, and improve your network security posture\n\u00e2\u0080\u0093 \n        Network Access Analyzer helps you identify unintended network access relative to your security and\n        compliance requirements, enabling you to take steps to improve your network security.\nDemonstrate compliance\n\u00e2\u0080\u0093 \n        Network Access Analyzer helps you demonstrate that your network on AWS meets your compliance requirements.\nNetwork Access Analyzer can help you verify the following example requirements:\nNetwork segmentation\n\u00e2\u0080\u0093 Verify that your\n        production environment VPCs and development environment VPCs are isolated from one another.\n        Likewise, you can verify that a separate logical network is used for systems that process\n        credit card information, and that it's isolated from the rest of your environment.\nInternet accessibility\n\u00e2\u0080\u0093 Identify resources in\n        your environment that can be accessed from internet gateways, and verify that they are\n        limited to only those resources that have a legitimate need to be accessible from the\n        internet.\nTrusted network paths\n\u00e2\u0080\u0093 Verify that you have\n        appropriate network controls such as network firewalls and NAT gateways on all network paths\n        between your resources and internet gateways.\nTrusted network access\n\u00e2\u0080\u0093 Verify that your\n        resources have network access only from a trusted IP address range, over specific ports and\n        protocols. You can specify your network access requirements in terms of:\nResource IDs (for example,\nvpc-1234567890abcdef0\n)\nResource types (for example,\nAWS::EC2::InternetGateway\n)\nResource tags\nIP address ranges, port ranges, and traffic protocols\nNetwork Access Analyzer concepts\nThe following are the key concepts for Network Access Analyzer.\nNetwork Access Scopes\nYou can specify your network access requirements as Network Access Scopes, which determine\n            the types of findings that the analysis produces. You add entries to\nMatchPaths\nto specify the types of network paths to identify. You add entries to\nExcludePaths\nto specify the types of network paths to exclude.\nMatchPaths\n\u00e2\u0080\u0093 Specifies the types of network paths\n                that an analysis produces. Typically, you specify network paths that you consider to\n                be a violation of your security or compliance requirements. For example, if you\n                don't want to allow network paths that start in VPC A and end in VPC B, specify VPC\n                A as a source and VPC B as a destination. When you analyze this Network Access\n                Scope, you would see any findings that indicate any potential network paths that\n                start in VPC A and end in VPC B.\nExcludePaths\n\u00e2\u0080\u0093 Prevents certain network paths from appearing \n                in your findings. Typically, you specify network paths that you consider to be a legitimate \n                exception to your network security or compliance requirements. For example, to identify all \n                network interfaces that are reachable from an internet gateway except for your web servers, \n                specify the relevant paths using\nMatchPaths\n, and then exclude any path \n                with your web servers as a destination using\nExcludePaths\n. When you analyze \n                this Network Access Scope, you would see any network paths that originate from an internet \n                gateway and end at a network interface, except for any paths that end at your web servers.\nFindings\nFindings are potential paths in your network that match any of the\nMatchPaths\nentries in your Network Access Scope,\n            but do not match any of the\nExcludePaths\nentries in \n            your Network Access Scope.\nAccess Network Access Analyzer\nYou can use any of the following interfaces to work with Network Access Analyzer:\nAWS Management Console\n\u00e2\u0080\u0093 Provides a web interface that you\n          can use to create and manage Network Access Analyzer resources.\nAWS Command Line Interface (AWS CLI)\n\u00e2\u0080\u0093 Provides commands for \n          AWS services including Network Access Analyzer. The AWS CLI is supported on Windows, macOS, and Linux. \n          For more information, see the\nAWS Command Line Interface User Guide\n.\nAWS CloudFormation\n\u00e2\u0080\u0093 Create templates to provision and manage \n          AWS resources as a single unit. For more information, see\nAWS::EC2::NetworkInsightsAccessScope\nand\nAWS::EC2::NetworkInsightsAccessScopeAnalysis\n.\nAWS SDKs\n\u00e2\u0080\u0093 Provides language-specific APIs and\n          takes care of many of the connection details, such as calculating signatures, and handling\n          request retries and errors. For more information, see\nTools to build on AWS\n.\nQuery API\n\u00e2\u0080\u0093 Provides low-level API actions that\n          you call using HTTPS requests. Using the Query API is the most direct way to access\n          Network Access Analyzer. However, the Query API requires your application to handle low-level details \n          such as generating the hash to sign the request and handling errors. For more information, \n          see\nAmazon VPC actions\nin the\nAmazon EC2 API Reference\n.\nPricing\nWhen you run a Network Access Analyzer analysis, you are charged based on the number of\n      network interfaces that are analyzed. For more information, see\nPricing\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow Network Access Analyzer works\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/how-network-access-analyzer-works.html": "How Network Access Analyzer works - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nNetwork Access Analyzer\nSupported source and destination resources\nSupported path resources\nUnsupported resources\nUnsupported network configurations\nLimitations\nHow Network Access Analyzer works\nNetwork Access Analyzer uses automated reasoning algorithms to analyze the network paths that a packet \n    can take between resources in an AWS network.\n    It then produces findings for paths that match a customer defined Network Access Scope.\n    Network Access Analyzer performs a static analysis of a network configuration, meaning that no packets\n    are transmitted in the network as part of this analysis. Because Network Access Analyzer only considers\n    the state of the network as described in the network configuration, packet loss that is due to\n    to transient network interruptions or service failures is not considered in the analysis.\nNetwork Access Analyzer makes a best effort attempt to return a diverse, representative set of findings \n    from among all possible findings.\nNot all AWS network configurations are supported by Network Access Analyzer. The following sections\n    describe the types of network paths that Network Access Analyzer produces as findings. For more information\n    about resources that you can reference in Network Access Scopes, see\nWorking with Network Access Scopes\n.\nContents\nSupported source and destination resources\nSupported path resources\nUnsupported resources\nUnsupported network configurations\nLimitations\nSupported source and destination resources\nA Network Access Analyzer finding is a network path that a packet can take in a network. Network Access Analyzer\n      can only produce findings for network paths that start or end at the following types of\n      resources:\nInternet gateways\nNetwork interfaces\nTransit gateway attachments\nVPC interface endpoints\nVPC gateway endpoints\nVPC gateway load balancer endpoints\nVPC service endpoints\nVPC peering connections\nVirtual private gateways\nSupported path resources\nA Network Access Analyzer network path can pass through multiple resources from the start to the end\n      of the network path. Only the following resource types are supported as resources on network\n      paths in Network Access Analyzer findings:\nInternet gateways\nLoad balancers\nNAT gateways\nNetwork ACLs\nNetwork firewalls\nNetwork interfaces\nVPC route\n          tables\nSecurity groups\nTarget groups\nTransit gateway route tables\nTransit gateway attachments\nVPC interface endpoints\nVPC gateway endpoints\nVPC gateway load balancer endpoints\nVPC endpoints services\nVPC peering connections\nVirtual private gateways\nUnsupported resources\nNetwork Access Analyzer does not produce network paths through resources that are associated\n          with Amazon API Gateway, AWS Global Accelerator, Traffic Mirroring, AWS Wavelength, or AWS Direct Connect. Network Access Analyzer\n          can't produce network paths containing customer managed Amazon EC2 instances that modify packet\n          forwarding behavior.\nNetwork Access Analyzer doesn't support nested Resource Groups.\nUnsupported network configurations\nThe following network configurations are not supported by Network Access Analyzer.\nInternet gateways and virtual private gateways\nNetwork Access Analyzer supports internet gateways and virtual private gateways at the \n          beginning or end of a path, but does not report paths that pass through internet\n          gateways or virtual private gateways. For example, Network Access Analyzer does not produce \n          paths that start in one VPC, pass through the internet, and end in a second Amazon VPC\n          after passing through an internet  gateway. These resources are outside of AWS \n          networking and therefore out of scope.\nNetwork Access Analyzer does not support NAT reflection at internet gateways. For example, \n          Network Access Analyzer does not report network paths from one network interface to another \n          network interface that are addressed to the second network interface's public IPV4 \n          address.\nApplication Load Balancers\nNetwork Access Analyzer does not support\nadvanced forwarding rules\n.\nGateway Load Balancers\nPacket transformations applied by Gateway Load Balancer targets are ignored. A packet\n          is reflected from the targets back to the Gateway Load Balancer untouched.\nFindings through a Gateway Load Balancer must start at a Gateway Load Balancer endpoint service.\nGateway Load Balancer endpoints\nPaths through a Gateway Load Balancer endpoint do not include the load balancer and its targets.\nNetwork interfaces\nNetwork Access Analyzer does not produce findings that start or terminate at network interfaces \n          that belong to a NAT gateway or Network Load Balancer.\nNetwork Load Balancers\nNetwork Access Analyzer does not support instance targets without\nclient IP preservation\nenabled.\nNetwork firewalls\nNetwork Access Analyzer does not analyze network firewall rules. Paths as reported in findings\n          containing network firewalls may be spurious if the firewall on the path is configured\n          with rules that would otherwise block the reported network traffic.\nTransit gateways\nNetwork Access Analyzer does not support paths through AWS Transit Gateway\n          peering connections to other regions or accounts, or AWS Transit Gateway\n          direct connections.\nLimitations\nThe analysis that Network Access Analyzer performs is limited to IPv4, using UDP or TCP.\nNetwork Access Analyzer does not report paths that contain resources in accounts or Regions other \n          than the account or Region being analyzed. In particular, Network Access Analyzer does not produce paths \n          containing resources in subnets shared from other accounts, or to resources connected by VPC \n          peering connections, virtual private gateways, internet gateways, or transit gateways\n          to resources in other accounts or in different Regions.\nThe paths that Network Access Analyzer reports contain a bounded number of resources. Network Access Analyzer\n          does not produce arbitrary length network paths through atypical network configurations, such\n          as load balancers that target themselves, or NAT gateways that send packets immediately to another \n          NAT gateway.\nNetwork Access Analyzer does not ensure that the same findings are produced if you analyze the same \n          Network Access Scope in the same network. Network Access Analyzer might produce new findings for existing \n          Network Access Scope analyses if new configurations are supported in the future.\nNetwork Access Analyzer reports only unidirectional analysis. That is, Network Access Analyzer findings only indicate that\n          a packet can be sent successfully from a source to a destination.\nNetwork Access Analyzer does not report connectivity due to traffic mirroring.\nA running analysis times out after 1 hour and 30 minutes.\nYour account has quotas related to Network Access Analyzer. For more information, see\nQuotas and considerations for Network Access Analyzer\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWhat is Network Access Analyzer\nGetting started\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/getting-started.html": "Getting started with Network Access Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nNetwork Access Analyzer\nStep 1: Analyze your network using an Amazon created Network Access Scope\nStep 2: Review your findings\nCreate your own Network Access Scopes\nDuplicate a Network Access Scope\nDelete a Network Access Scope\nGetting started with Network Access Analyzer\nYou can use Network Access Analyzer to understand network access to resources in your virtual private\n  clouds (VPCs). You can get started with Network Access Analyzer using one of the Amazon created Network\n  Access Scopes.\nTasks\nStep 1: Analyze your network using an Amazon created Network Access Scope\nStep 2: Review your findings\nCreate your own Network Access Scopes\nDuplicate a Network Access Scope\nDelete a Network Access Scope\nNote\nNetwork Access Analyzer evaluates network paths only within the account and Region from which you \n    run the analysis.\nStep 1: Analyze your network using an Amazon created Network Access Scope\nThe analysis can take a few minutes to complete.\nTo analyze a Network Access Scope\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home\n.\nIn the navigation pane, choose\nNetwork Access Analyzer\n.\nIf you are using Network Access Analyzer for the first time, choose\nGet\n     Started\n.\nSelect one of the Amazon created Network Access Scopes:\nAll-IGW-Ingress (Amazon created)\n\u00e2\u0080\u0093 Identifies network paths\n     from internet gateways to all network interfaces in your account.\nAll-IGW-Egress (Amazon created)\n\u00e2\u0080\u0093 Identifies network paths from all\n     network interfaces to internet gateways in your account.\nAll-VPC-Ingress (Amazon created)\n\u00e2\u0080\u0093 Identifies inbound paths from\n     internet gateways, peering connections, VPC endpoints, VPNs, and transit gateways to all VPCs\n     in your account.\nAll-VPC-Egress (Amazon created)\n\u00e2\u0080\u0093 Identifies outbound paths to\n     internet gateways, peering connections, VPC endpoints, VPNs, and transit gateways from all VPCs\n     in your account.\nChoose\nAnalyze\n.\nWait for the analysis to complete. Your screen will refresh with the results of the\n     findings when the analysis is complete.\nStep 2: Review your findings\nAfter your analysis is complete, you can review its results.\nTo review your findings\nIf your Network Access Scope analysis produces any findings,\nLast analysis result\non the\nLatest analysis\ntab shows\nFindings detected\n, as shown in the following figure. \n     Otherwise,\nLast analysis result\nshows\nNo findings detected\n.\nIf you have findings present in your analysis, you can see the various network paths\n     identified by your Network Access Scope, as shown in the following figure. For example, if you\n     chose\nAll-IGW-Egress (Amazon created)\n, the findings demonstrate network\n     paths from all network interfaces to internet gateways in your account and Region.\nYou can expand the pane from the bottom to view the details of the elements in the path. The\n     information provided helps you understand the network configurations that produced the path.\n     For example, as shown in the following figure, you can select a route table that appears on the\n     path and see the route table entry that corresponds to traffic that is destined to\n     0.0.0.0/0.\nYou can filter for paths that have a particular resource type by selecting the inner ring of\n     the chart. For example, you can filter for all paths that go through a NAT gateway, as shown in\n     the following figure. You can filter based on multiple resources or resource types to help\n     understand your findings.\nYou can also filter based on any of the individual resource elements in your findings by\n     selecting a resource from the outer ring of the chart. For example, you can filter for paths\n     that contain a particular security group and route table, as shown in the following\n     figure.\nCreate your own Network Access Scopes\nYou can also get started with Network Access Analyzer by using built-in templates which are based on\n   common network access scenarios. For example, you can identify access from internet gateways or\n   identify non-permissible traffic types. You can identify access paths and potential compliance\n   issues for your AWS resources. You can also create your own scopes by choosing an empty\n   template.\nTo create a Network Access Scope\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home\n.\nIn the navigation pane, choose\nNetwork Access Analyzer\n.\nChoose\nCreate Network Access Scope\n.\nAdd\nName\nand\nDescription\n. Optionally, enter\nMatch\nand\nExclusion\nconditions and\nTags\ninto\n     your template. To specify the source resource, choose the resource type from\nSource\n, and then choose the specific\nResource\n      selection\nand\nResource types\noptions. You can\n     choose multiple match conditions.\nTo specify the destination resource, choose the resource type from\nDestination\n, and then choose the specific resource from\nResources\nand\nTraffic type\n. You can\n     choose multiple exclusion conditions.\n(Optional) For\nDestination port\n, enter the port number. By default,\n     Network Access Analyzer considers all ports.\n(Optional) To add a tag, choose\nAdd new tag\nand then enter the tag\n     key and tag value.\nChoose\nNext\nand then choose\nCreate Network Access\n      Scope\n.\nDuplicate a Network Access Scope\nYou can create a new Network Access Scope by starting from an existing one. You copy over\n   all content from the previous Network Access Scope, and then change only the parameters that you\n   want to alter.\nTo duplicate a Network Access Scope\nOpen the Network Manager console at\nhttps://console.aws.amazon.com/networkmanager/home\n.\nChoose the Network Access Scope. Choose\nActions\n,\nDuplicate and modify\n.\nChange any of the details, match conditions, exclusion conditions, or tags as\n     needed.\nChoose\nDuplicate and analyze Network Access Scope\n.\nDelete a Network Access Scope\nIf you no longer need a Network Access Scope, you can delete it. This action can't be\n   undone.\nTo delete a Network Access Scope\nOn the Network Access Scopes page, select the check box next to the Network Access Scope that you want to remove.\nNote\nYou can select only one Network Access Scope at a time.\nChoose the\nActions\nbutton and then choose\nDelete Network\n     Access Scope\n.\nWhen prompted for confirmation, enter\nDelete\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nHow Network Access Analyzer works\nGetting started using the CLI\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/getting-started-cli.html": "Getting started with Network Access Analyzer using the AWS CLI - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nNetwork Access Analyzer\nStep 1: Create a Network Access Scope\nStep 2: Analyze a Network Access Scope\nStep 3: Get the results of a Network Access Scope analysis\nGetting started with Network Access Analyzer using the\n            AWS CLI\nThe following procedure describes how to get started with Network Access Analyzer using the AWS CLI.\nTasks\nStep 1: Create a Network Access Scope\nStep 2: Analyze a Network Access Scope\nStep 3: Get the results of a Network Access Scope analysis\nStep 1: Create a Network Access Scope\nUse the following\ncreate-network-insights-access-scope\ncommand to create a Network Access Scope.\naws ec2 create-network-insights-access-scope\n# optional/example input\n--match-paths 'Source=\n{\nResourceStatement=\n{\nResources=vpc-abcd12e3}}'\n# optional/example input\n--exclude-paths 'Source=\n{\nResourceStatement=\n{\nResourceTypes=[\"AWS::EC2::InternetGateway\"]}}'\nThe following is example output.\n{\n\"NetworkInsightsAccessScope\":\n{\n\"NetworkInsightsAccessScopeId\": \"nis-0e123eecc45c67d8\",\n        \"NetworkInsightsAccessScopeArn\": \"arn:aws:ec2:us-east-1:123456789012:network-insights-access-scope/nis-0e123eecc45c67d8\",\n        \"CreatedDate\": \"2021-11-08T19:01:38.297000+00:00\",\n        \"UpdatedDate\": \"2021-11-08T19:01:38.298000+00:00\"\n    },\n    \"NetworkInsightsAccessScopeContent\":\n{\n\"NetworkInsightsAccessScopeId\": \"nis-0e123eecc45c67d8\"\n    }\n}\nYou can also create a scope using the CLI JSON input option, as shown in the following\n            example.\naws ec2 create-network-insights-access-scope --cli-input-json file://path-to-access-scope-file.json\nThe following is an example input file.\n{\n\"MatchPaths\": [\n{\n\"Source\":\n{\n\"ResourceStatement\":\n{\n\"Resources\": [\n                              \"vpc-abcd12e3\"\n                         ]\n                    }\n               }\n          }\n     ],\n     \"ExcludePaths\": [\n{\n\"Source\":\n{\n\"ResourceStatement\":\n{\n\"ResourceTypes\": [\n                              \"AWS::EC2::InternetGateway\"\n                         ]\n                    }\n               }\n          }\n     ]\n}\nSee\nGenerating an AWS CLI skeleton and input file\nfor more details about using\n            the CLI with JSON input.\nUse the following\ndescribe-network-insights-access-scopes\ncommand to describe a Network Access Scope.\naws ec2 describe-network-insights-access-scopes\nUse the following\nget-network-insights-access-scope-content\ncommand to get a Network Access Scope.\naws ec2 get-network-insights-access-scope-content --network-insights-access-scope-id nis-0e123eecc45c67d8\nUse the following\ndelete-network-insights-access-scope\ncommand to delete a Network Access Scope.\naws ec2 delete-network-insights-access-scope --network-insights-access-scope-id nis-0e123eecc45c67d8\nStep 2: Analyze a Network Access Scope\nUse the following\nstart-network-insights-access-scope-analysis\ncommand to analyze a Network Access\n            Scope. The analysis can take a few minutes to complete.\naws ec2 start-network-insights-access-scope-analysis --network-insights-access-scope-id nis-0e123eecc45c67d8\nThe following is example output.\n{\n\"NetworkInsightsAccessScopeAnalysis\":\n{\n\"NetworkInsightsAccessScopeAnalysisId\": \"nisa-0e123eecc45c67d89\",\n        \"NetworkInsightsAccessScopeAnalysisArn\": \"arn:aws:ec2:us-east-1:123456789012:network-insights-access-scope-analysis/nisa-0e123eecc45c67d89\",\n        \"NetworkInsightsAccessScopeId\": \"nis-0e123eecc45c67d8\",\n        \"Status\": \"running\",\n        \"StartDate\": \"2021-11-08T19:29:30.179000+00:00\"\n    }\n}\nStep 3: Get the results of a Network Access Scope analysis\nAfter the analysis completes, you can view the results\n            using the\ndescribe-network-insights-analyses\ncommand.\naws ec2 describe-network-insights-access-scope-analyses\nExample 1: Success\nThe following is example output for a successful analysis.\n{\n\"NetworkInsightsAccessScopeAnalyses\": [\n{\n\"NetworkInsightsAccessScopeAnalysisId\": \"nisa-09aeb24f525f2d9f7\",\n            \"NetworkInsightsAccessScopeAnalysisArn\": \"arn:aws:ec2:us-east-1:123456789012:network-insights-access-scope-analysis/nisa-09aeb24f525f2d9f7\",\n            \"NetworkInsightsAccessScopeId\": \"nis-0af1fcfd38e5cad4e\",\n            \"Status\": \"succeeded\",\n            \"StartDate\": \"2021-11-08T19:29:30.179000+00:00\",\n            \"FindingsFound\": \"true\",\n            \"Tags\": []\n        }\n    ]\n}\nExample 2: No findings\nThe following is example output when no network paths are found in the\n                analysis.\naws ec2 get-network-insights-access-scope-analysis-findings --network-insights-access-scope-analysis-id nisa-07bcaad8bd8160e63\n{\n\"NetworkInsightsAccessScopeAnalysisId\": \"nisa-09aeb24f525f2d9f7\",\n    \"AnalysisFindings\": []\n}\nExample 3: Findings reported\nThe following is example output where findings were reported in the\n            analysis.\naws ec2 describe-network-insights-access-scope-analyses --network-insights-access-scope-analysis-id nisa-0c0d3ec68a9bb2f22\n{\n\"NetworkInsightsAccessScopeAnalyses\": [\n{\n\"NetworkInsightsAccessScopeAnalysisId\": \"nisa-09aeb24f525f2d9f7\",\n            \"NetworkInsightsAccessScopeAnalysisArn\": \"arn:aws:ec2:us-east-1:123456789012:network-insights-access-scope-analysis/nisa-0c0d3ec68a9bb2f22\",\n            \"NetworkInsightsAccessScopeId\": \"nis-096f763940bb6bcf2\",\n            \"Status\": \"succeeded\",\n            \"StartDate\": \"2021-10-06T20:23:53.604000+00:00\",\n            \"FindingsFound\": \"true\",\n            \"Tags\": []\n        }\n    ]\n}\naws ec2 get-network-insights-access-scope-analysis-findings --network-insights-access-scope-analysis-id nisa-0c0d3ec68a9bb2f22 --max-results 1\n{\n\"NetworkInsightsAccessScopeAnalysisId\": \"nisa-09aeb24f525f2d9f7\",\n    \"AnalysisFindings\": [\n{\n\"NetworkInsightsAccessScopeAnalysisId\": \"nisa-09aeb24f525f2d9f7\",\n            \"NetworkInsightsAccessScopeId\": \"nis-096f763940bb6bcf2\",\n            \"FindingComponents\": [\n{\n\"SequenceNumber\": 1,\n                    \"Component\":\n{\n\"Id\": \"igw-1a23b4cd\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:internet-gateway/igw-1a23b4cd\"\n                    },\n                    \"OutboundHeader\":\n{\n\"DestinationAddresses\": [\n                            \"172.31.22.225/32\"\n                        ]\n                    },\n                    \"InboundHeader\":\n{\n\"DestinationAddresses\": [\n                            \"52.2.112.57/32\"\n                        ],\n                        \"DestinationPortRanges\": [\n{\n\"From\": 80,\n                                \"To\": 80\n                            }\n                        ],\n                        \"Protocol\": \"6\",\n                        \"SourceAddresses\": [\n                            \"0.0.0.0/5\",\n                            \"11.0.0.0/8\",\n                            \"12.0.0.0/6\",\n                            \"128.0.0.0/3\",\n                            \"16.0.0.0/4\",\n                            \"160.0.0.0/5\",\n                            \"168.0.0.0/6\",\n                            \"172.0.0.0/12\",\n                            \"172.128.0.0/9\",\n                            \"172.32.0.0/11\",\n                            \"172.64.0.0/10\",\n                            \"173.0.0.0/8\",\n                            \"174.0.0.0/7\",\n                            \"176.0.0.0/4\",\n                            \"192.0.0.0/9\",\n                            \"192.128.0.0/11\",\n                            \"192.160.0.0/13\",\n                            \"192.169.0.0/16\",\n                            \"192.170.0.0/15\",\n                            \"192.172.0.0/14\",\n                            \"192.176.0.0/12\",\n                            \"192.192.0.0/10\",\n                            \"193.0.0.0/8\",\n                            \"194.0.0.0/7\",\n                            \"196.0.0.0/6\",\n                            \"200.0.0.0/5\",\n                            \"208.0.0.0/4\",\n                            \"224.0.0.0/3\",\n                            \"32.0.0.0/3\",\n                            \"64.0.0.0/2\",\n                            \"8.0.0.0/7\"\n                        ],\n                        \"SourcePortRanges\": [\n{\n\"From\": 0,\n                                \"To\": 65535\n                            }\n                        ]\n                    }\n                },\n{\n\"SequenceNumber\": 2,\n                    \"AclRule\":\n{\n\"Cidr\": \"0.0.0.0/0\",\n                        \"Egress\": false,\n                        \"Protocol\": \"all\",\n                        \"RuleAction\": \"allow\",\n                        \"RuleNumber\": 100\n                    },\n                    \"Component\":\n{\n\"Id\": \"acl-579af131\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:network-acl/acl-579af131\"\n                    }\n                },\n{\n\"SequenceNumber\": 3,\n                    \"Component\":\n{\n\"Id\": \"sg-0cab31773e042794f\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:security-group/sg-0cab31773e042794f\"\n                    },\n                    \"SecurityGroupRule\":\n{\n\"Cidr\": \"0.0.0.0/0\",\n                        \"Direction\": \"ingress\",\n                        \"PortRange\":\n{\n\"From\": 80,\n                            \"To\": 80\n                        },\n                        \"Protocol\": \"tcp\"\n                    }\n                },\n{\n\"SequenceNumber\": 4,\n                    \"Component\":\n{\n\"Id\": \"eni-0680af09e502660e7\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:network-interface/eni-0680af09e502660e7\"\n                    },\n                    \"Subnet\":\n{\n\"Id\": \"subnet-8061f9db\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:subnet/subnet-8061f9db\"\n                    },\n                    \"Vpc\":\n{\n\"Id\": \"vpc-abcd12e3\",\n                        \"Arn\": \"arn:aws:ec2:us-east-1:123456789012:vpc/vpc-abcd12e3\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"NextToken\": \"AYADeDdyvQENR4bFEGARVczOdwQAhwACABFFbmNyeXB0aW9uQ29udGV4dAATVG9rZW5FbmNyeXB0aW9uVXRpbAAVYXdzLWNyeXB0by1wdWJsaWMta2V5AERBb3RYci9LdXdNYXhheHdYOG5WbjZGTlk0Mk1ia3hYVFdOU0EwV2ovYjVmQVRqMWpSM3I3dFhPRXFKK0QrTWVJenc9PQABAA9QYXJoZWxpb25MYW1iZGEAGi05NjU1NwAAAIAAAAAM4NzUsusuKSY0yHVOADB9dYDlEuVXCHlFz4qXPHql2SEAe0TED2c1LstAFqJlHl8Chtk3Cq8uWXWU2yXNuTMCAAAAAAwAABAAAAAAAAAAAAAAAAAA559thKnp1ZJuDMynsbizu/////8AAAABAAAAAAAAAAAAAAABAAAAs+v6C/JyLKmZzcGXs3NAp676D8RwoAdF/sSfYUnAA7JwYLPlYSfBZ5fHHPjJ8Y6AVkJEzpGGza1CuzHFG9dqvkyuLoYxkpqGgbv0e0T2Q0rLfJID+vNWEqSb03/6JXltR5ipYGD7yAnOb6vCBmheU9dDdbPE1SnidTc6XLpR8ihzdqSaJZnslAxYXNcsjrSEWmERdBhOIBaUUhRjvxaEABVsShfamuzZIBvQrvDHFeiV8BKQj5rF1y1hfJ+lzU9BgN/NrgBnMGUCMQDSA4E1zrjcR+iFS4RNJincDtRKZz3T2AmoI23+Xh44OHSrTR2XgBdewZZzvKX1tdkCMHDGRfeLrJMXLvVo/sHL6ZqGR1FYWs3UWhMpkMGDdXZcQL+is60dXqAY1LOJLaDpaQ==\"\n}\nNote\nThe list of source addresses in the previous example\n                includes everything in the 0.0.0.0/0 address range except for the RFC1918 range.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGetting started\nWorking with Network Access Scopes\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/working-with-network-access-scopes.html": "Working with Network Access Scopes - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nNetwork Access Analyzer\nResource statements\nPacket header statements\nMatch conditions\nExclude conditions\nExample Network Access Scopes\nWorking with Network Access Scopes\nWith Network Access Analyzer, you can specify your network access requirements by using Network Access\n    Scopes. A Network Access Scope defines outbound and inbound traffic patterns, including sources,\n    destinations, paths, and traffic types. Each Network Access Scope consists of one or more match\n    conditions, and zero or more exclusion conditions.\nWhen you start an analysis on a Network Access Scope, Network Access Analyzer produces findings. It\n    identifies network paths in the Network Access Scope that match at least one of the match\n    conditions, and none of the exclude conditions. By combining match and exclude conditions, you\n    can refine the findings produced by Network Access Analyzer to identify unexpected connectivity in your\n    network.\nMatch and exclude conditions have similar structures. They consist of resource statements\n    and packet header statements that specify the network traffic to match or exclude.\nResource statements\nA resource statement defines the network components for a match or exclude condition. Each\n      resource statement includes resource IDs, resource ARNs, or resource types. A single resource\n      statement can include either resource IDs or resource types, but not both.\nYou can specify the following components by resource ID or resource ARN:\nEC2 instances (source and destination only)\nInternet gateways (source and destination only)\nNAT gateways (through only)\nNetwork firewalls (through only)\nNetwork interfaces (source and destination only)\nResource groups\nSecurity groups (source and destination only)\nSubnets (source and destination only)\nTransit gateway attachments\nVirtual private clouds (VPC) (source and destination only)\nVirtual private gateways (source and destination only)\nVPC endpoint services\nVPC endpoints\nVPC peering connections\nYou must specify the following components by ARN:\nClassic, Application, Network, and Gateway Load Balancers (through only)\nYou can specify the following components by resource type:\nAWS::EC2::InternetGateway\n(source and destination only)\nAWS::EC2::NatGateway\n(through only)\nAWS::EC2::TransitGatewayAttachment\nAWS::EC2::VPCEndpoint\n(destination and through only)\nAWS::EC2::VPCEndpointService\nAWS::EC2::VPCPeeringConnection\nAWS::EC2::VPNGateway\n(source and destination only)\nAWS::ElasticLoadBalancing::LoadBalancer\n(through only)\nAWS::ElasticLoadBalancingV2::LoadBalancer\n(through only)\nAWS::NetworkFirewall::NetworkFirewall\n(through only)\nPacket header statements\nA packet header statement defines the traffic types for a match or exclude condition. If\n      you omit the packet header statement, all traffic types match. All fields are optional, but if\n      you use a packet header statement, you must use at least one of its fields.\nYou can specify the following fields:\nProtocols\n\u00e2\u0080\u0093\n          The protocol strings to match. The possible values are\ntcp\nand\nudp\n. You can specify one of the values or both of the values.\n          If you omit this field, packets with either the\ntcp\nor\nudp\nprotocol are admitted.\nSourceAddress\n\u00e2\u0080\u0093\n          The IP addresses or CIDR ranges. You can't specify this option with\nSourcePrefixLists\n. If specified, only packets with matching source addresses are admitted.\n          If you don't specify\nSourcePrefixLists\nor\nSourceAddresses\n, packets with any source address are admitted.\nSourcePrefixLists\n\u00e2\u0080\u0093\n          The IDs or ARNs of the prefix lists. You can't specify this option with\nSourceAddresses\n. If specified, only packets with matching source addresses are admitted.\n          If you don't specify\nSourcePrefixLists\nor\nSourceAddresses\n, packets with any source address are admitted.\nDestinationAddress\n\u00e2\u0080\u0093\n          The IP addresses or CIDR ranges. This option is mutually exclusive with\nDestinationPrefixLists\n. If specified, only packets with matching destination addresses are\n          admitted. If you don't specify\nDestinationPrefixLists\nor\nDestinationAddress\n, \n          packets with any destination address are admitted.\nDestinationPrefixLists\n\u00e2\u0080\u0093\n          The IDs or ARNs of the prefix lists. This option is mutually exclusive with\nDestinationAddress\n. If specified, only packets with matching destination addresses are\n          admitted. If you don't specify\nDestinationPrefixLists\nor\nDestinationAddress\n, \n          packets with any destination address are admitted.\nSourcePorts\n\u00e2\u0080\u0093\n          The ports or port ranges. If specified, only packets with source\n          ports that match one of the ports or port ranges are admitted. If omitted, packets with any\n          source port are admitted.\nDestinationPorts\n\u00e2\u0080\u0093\n          The ports or port ranges. If specified, only packets\n          with destination ports that match one of the ports or ranges are admitted. If omitted,\n          packets with any destination port are admitted.\nMatch conditions\nA match condition defines the types of network paths that should be produced as findings.\n      A Network Access Scope must specify at least one match condition. A match condition can\n      contain a source and a destination. Each source and destination can include a resource\n      statement, a packet header statement, or both.\nIf a match condition has a source but no destination, it produces findings for the\n        following:\nNetwork paths that end at any supported resource\nNetwork paths that start at a network component specified in the resource statement of\n          the source (if defined)\nNetwork paths with a packet header that matches the packet header statement of the\n          source (if defined)\nIf a match condition has a destination but no source, it produces findings for the\n        following:\nNetwork paths that start at any supported resource and end at a network component\n          specified in the resource statement of the destination (if defined)\nNetwork paths with a packet header that matches the packet header statement of the\n          destination (if defined)\nIf a match condition has both a source and destination, the network path must at the\n      source entry and end at the destination.\nIf a Network Access Scope has multiple match conditions, it produces findings for any path\n      that satisfies at least one of the match conditions.\nExclude conditions\nA Network Access Scope produces findings only for paths that match at least one match\n      condition, but do not match any exclude conditions.\nAn exclude condition can contain source, destination, and through fields. Each field is\n      optional, but you must specify at least one field. Each source and destination can include a\n      resource statement, a packet header statement, or both.\nA through entry contains exactly one element that contains a resource statement. It excludes \n      paths that contain the specified network component anywhere along the path, not just at the \n      beginning or end. You can use a through entry in combination with a source, a destination, or \n      both a source and a destination.\nExample Network Access Scopes\nThe following are examples of Network Access Scopes.\nExample: Identify all traffic between two subnets\nTo identify traffic between two subnets that are intended to be isolated from each\n        other, create an access scope with two match conditions. The first condition identifies paths \n        from network interfaces in the first subnet to network interfaces in the second subnet. The \n        second condition identifies paths from network interfaces in second subnet to network interfaces \n        in the first subnet.\n{\n\"MatchPaths\": [\n{\n\"Source\":\n{\n\"ResourceStatement\":\n{\n\"Resources\": [ \"\nsubnet-1-id\n\" ]\n                }\n            },\n            \"Destination\":\n{\n\"ResourceStatement\":\n{\n\"Resources\": [ \"\nsubnet-2-id\n\" ]\n                }\n            }  \n        },\n{\n\"Source\":\n{\n\"ResourceStatement\":\n{\n\"Resources\": [ \"\nsubnet-2-id\n\" ]\n                }\n            },\n            \"Destination\":\n{\n\"ResourceStatement\":\n{\n\"Resources\": [ \"\nsubnet-1-id\n\" ]\n                }\n            }  \n        }\n    ]\n}\nExample: Use resource groups with Network Access Scopes\nTo identify paths to or from resources with specific resource tags, you can use AWS\n        resource groups. With resource groups, you define a set of resources that contain a specific\n        tag. For more information, see\nBuild a tag-based query and create a\n          group\n.\nThe following example identifies inbound paths to any Amazon EC2 instances in the specified\n      resource group.\n{\n\"MatchPaths\": [\n{\n\"Destination\":\n{\n\"ResourceStatement\":\n{\n\"Resources\": [\n                        \"arn:aws:resource-groups:us-east-1:123456789012:group/bastions\"\n                    ]\n                }\n            }  \n        }\n    ]\n}\nTo identify inbound paths to bastion hosts that use a port other than port 22 (SSH),\n      combine the match condition in the previous example with an exclude condition that specifies\n      destination port 22.\n{\n\"MatchPaths\": [\n{\n\"Destination\":\n{\n\"ResourceStatement\":\n{\n\"Resources\": [\n                        \"arn:aws:resource-groups:us-east-1:123456789012:group/bastions\"\n                    ]\n                }\n            }  \n        }\n    ],\n    \"ExcludePaths\": [\n{\n\"Destination\":\n{\n\"PacketHeaderStatement\":\n{\n\"DestinationPorts\": [\n                        \"22\"\n                    ]\n                }\n            }\n        }\n    ]    \n}\nExample: Identify all inbound traffic from the public internet, except for a trusted CIDR range\nThe following example identifies traffic from the internet while excluding paths that\n        start from a trusted address range.\n{\n\"MatchPaths\": [\n{\n\"Source\":\n{\n\"ResourceStatement\":\n{\n\"ResourceTypes\": [\n                        \"AWS::EC2::InternetGateway\"\n                    ]\n                }\n            }           \n        }\n    ],\n    \"ExcludePaths\": [\n{\n\"Source\":\n{\n\"PacketHeaderStatement\":\n{\n\"SourceAddresses\": [\n                        \"\n55.3.0.0/16\n\"\n                    ]\n                }\n            }\n        }\n    ]\n}\nExample: Exclude traffic that originates at the addresses in a prefix list\nThe following example identifies traffic to the public internet while excluding traffic\n        that originates at the addresses in the specified prefix list.\n{\n\"MatchPaths\": [\n{\n\"Source\":\n{\n\"ResourceStatement\":\n{\n\"ResourceTypes\": [\n                        \"AWS::EC2::InternetGateway\"\n                    ]\n                }\n            }           \n        }\n    ],\n    \"ExcludePaths\": [\n{\n\"Source\":\n{\n\"PacketHeaderStatement\":\n{\n\"SourcePrefixLists\": [\n                        \"\npl-02cd2c6b\n\"\n                    ]\n                }\n            }\n        }\n    ]\n}\nExample: Identify all outbound traffic to the public internet, excluding a trusted CIDR range\nThe following example identifies traffic to the public internet while excluding a\n        trusted address range.\n{\n\"MatchPaths\": [\n{\n\"Destination\":\n{\n\"ResourceStatement\":\n{\n\"ResourceTypes\": [\n                        \"AWS::EC2::InternetGateway\"\n                    ]\n                }\n            }           \n        }\n    ],\n    \"ExcludePaths\": [\n{\n\"Destination\":\n{\n\"PacketHeaderStatement\":\n{\n\"DestinationAddresses\": [\n                        \"\n55.3.0.0/16\n\"\n                    ]\n                }\n            }\n        }\n    ]\n}\nExample: Identify inbound traffic that bypasses a network firewall\nThe following example identifies inbound traffic to network interfaces in a subnet that\n        bypasses a network firewall.\n{\n\"MatchPaths\": [\n{\n\"Source\":\n{\n\"ResourceStatement\":\n{\n\"ResourceTypes\": [\n\t                  \"AWS::EC2::InternetGateway\"\n                    ]\n                }\n            }, \n            \"Destination\":\n{\n\"ResourceStatement\":\n{\n\"Resources\": [\n                        \"\nsubnet-814424dd\n\"\n                    ]\n                }\n            }\n        }\n    ],\n    \"ExcludePaths\": [\n{\n\"ThroughResources\": [\n{\n\"ResourceStatement\":\n{\n\"ResourceTypes\": [\n                            \"AWS::NetworkFirewall::Firewall\"\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}\nExample: Identify traffic to network interface with a specific security group\nThe following example identifies traffic to network interfaces with a specific security\n        group.\n{\n\"MatchPaths\": [\n{\n\"Source\":\n{\n\"ResourceStatement\":\n{\n\"ResourceTypes\": [\n                        \"AWS::EC2::InternetGateway\"\n                    ]\n                }\n            }, \n\t      \"Destination\":\n{\n\"ResourceStatement\":\n{\n\"Resources\": [\n\t                  \"\nsg-f15d59b3\n\"\n\t              ]\n\t          }\n\t      }\n\t  }\n    ]\n}\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nGetting started using the CLI\nIdentity and access management\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/identity-access-management.html": "Identity and access management for Network Access Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nNetwork Access Analyzer\nAudience\nAuthenticating with identities\nManaging access using policies\nIdentity and access management for Network Access Analyzer\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely control access\n      to AWS resources. IAM administrators control who can be\nauthenticated\n(signed in) and\nauthorized\n(have permissions) to use Network Access Analyzer resources. IAM is an AWS service that you can\n      use with no additional charge.\nContents\nAudience\nAuthenticating with identities\nManaging access using policies\nHow Network Access Analyzer works with IAM\nRequired API\n        permissions\nAWS managed policies\nAudience\nHow you use AWS Identity and Access Management (IAM) differs, depending on the work that you do in Network Access Analyzer.\nService user\n\u00e2\u0080\u0093 If you use the Network Access Analyzer service to do your job, then your administrator provides you\n         with the credentials and permissions that you need. As you use more Network Access Analyzer features to do your work, you might need additional permissions.\n         Understanding how access is managed can help you request the right permissions from your administrator.\nService administrator\n\u00e2\u0080\u0093 If you're in charge of Network Access Analyzer resources at your company, you probably have\n         full access to Network Access Analyzer. It's your job to determine which Network Access Analyzer features and resources your service users should access. You must then\n         submit requests to your IAM administrator to change the permissions of your service users. Review the information on this page to understand the\n         basic concepts of IAM.\nIAM administrator\n\u00e2\u0080\u0093 If you're an IAM administrator, you might want to learn details about how you can\n         write policies to manage access to Network Access Analyzer.\nAuthenticating with identities\nAuthentication is how you sign in to AWS using your identity credentials. You must be\nauthenticated\n(signed in to AWS) as the AWS account root user, as an\nIAM user, or by assuming an IAM role.\nYou can sign in to AWS as a federated identity by using credentials provided through an identity source.\nAWS IAM Identity Center (IAM Identity Center) users, your company's single sign-on authentication, and your Google or Facebook\ncredentials are examples of federated identities. When you sign in as a federated identity, your administrator previously set up identity federation using IAM roles. When you access AWS by using federation, you are indirectly assuming a role.\nDepending on the type of user you are, you can sign in to the AWS Management Console or the AWS access\nportal. For more information about signing in to AWS, see\nHow to sign in to your AWS account\nin the\nAWS Sign-In User Guide\n.\nIf you access AWS programmatically, AWS provides a software development kit (SDK) and a command line \ninterface (CLI) to cryptographically sign your requests by using your credentials. If you don't use AWS tools, \nyou must sign requests yourself. For more information about using the recommended method to sign requests yourself, see\nSigning AWS API requests\nin the\nIAM User Guide\n.\nRegardless of the authentication method that you use, you might be required to provide\nadditional security information. For example, AWS recommends that you use multi-factor\nauthentication (MFA) to increase the security of your account. To learn more, see\nMulti-factor authentication\nin the\nAWS IAM Identity Center User Guide\nand\nUsing multi-factor authentication (MFA) in AWS\nin the\nIAM User Guide\n.\nAWS account root user\nWhen you create an AWS account, you begin with one sign-in identity that has complete access to all AWS services\n and resources in the account. This identity is called the AWS account\nroot user\nand is accessed by\n signing in with the email address and password that you used to create the account. We \n strongly recommend that you don't use the root user for your everyday tasks. Safeguard your root user credentials and use them to\n perform the tasks that only the root user can perform. For the complete list of tasks that require you to sign in as the root user, see\nTasks that require root user credentials\nin the\nIAM User Guide\n.\nFederated identity\nAs a best practice, require human users, including users that require administrator access, to use federation with an identity provider to access AWS services by using temporary credentials.\nA\nfederated identity\nis a user from your enterprise user directory, a web identity provider, the AWS Directory Service,\nthe Identity Center directory,\nor any user that\naccesses AWS services by using credentials provided through an identity source. When federated identities access AWS accounts, they assume roles, and the roles provide temporary credentials.\nFor centralized access management, we recommend that you use AWS IAM Identity Center. You can create users and groups in IAM Identity Center, or you can connect and synchronize \nto a set of users and groups in your own identity source for use across all your AWS accounts and applications. For information \nabout IAM Identity Center, see\nWhat is IAM Identity Center?\nin the\nAWS IAM Identity Center User Guide\n.\nIAM users and groups\nAn\nIAM user\nis an identity within your AWS account that has specific permissions for a single person or application. Where possible, we recommend relying on temporary credentials instead of creating IAM users who have long-term credentials such as passwords and access keys. However, if you have specific use cases that require long-term credentials with IAM users, we recommend that you rotate access keys. For more information, see\nRotate access keys regularly for use cases that require long-term credentials\nin the\nIAM User Guide\n.\nAn\nIAM group\nis an identity that specifies a collection of IAM users.\n            You can't sign in as a group. You can use groups to specify permissions for multiple users at a time. Groups make permissions easier to manage for\n            large sets of users. For example, you could have a group named\nIAMAdmins\nand give that group permissions to administer IAM\n            resources.\nUsers are different from roles. A user is uniquely associated with one person or application, but a role is intended to be assumable by anyone\n            who needs it. Users have permanent long-term credentials, but roles provide temporary credentials. To learn more, see\nWhen to create an IAM user (instead of a role)\nin the\nIAM User Guide\n.\nIAM roles\nAn\nIAM role\nis an identity within your AWS account that\n            has specific permissions. It is similar to an IAM user, but is not associated with a specific person. You can temporarily assume an IAM role in\n            the AWS Management Console by\nswitching roles\n. You can assume a role by calling an AWS CLI\n            or AWS API operation or by using a custom URL. For more information about methods for using roles, see\nUsing IAM roles\nin the\nIAM User Guide\n.\nIAM roles with temporary credentials are useful in the following situations:\nFederated user access\n\u00e2\u0080\u0093 \n\nTo assign permissions to a federated identity, you create a role and define permissions for the role. When a federated identity authenticates, the identity is associated with the role and is granted the permissions that are defined by the role. For information about roles for federation, see\nCreating a role for a third-party Identity Provider\nin the\nIAM User Guide\n.\nIf you use IAM Identity Center, you configure a permission set. To control what your identities can access after they authenticate, IAM Identity Center correlates the permission set to a role in IAM. \nFor information about permissions sets, see\nPermission sets\nin the\nAWS IAM Identity Center User Guide\n.\nTemporary IAM user permissions\n\u00e2\u0080\u0093 An IAM user or role can assume an IAM role to temporarily take on\n            different permissions for a specific task.\nCross-account access\n\u00e2\u0080\u0093 You can use an\n                  IAM role to allow someone (a trusted principal) in a different account to access\n                  resources in your account. Roles are the primary way to grant cross-account\n                  access. However, with some AWS services, you can attach a policy directly to a\n                  resource (instead of using a role as a proxy). To learn the difference between\n                  roles and resource-based policies for cross-account access, see\nHow IAM roles\n                     differ from resource-based policies\nin the\nIAM User Guide\n.\nCross-service access\n\u00e2\u0080\u0093\n\n      Some AWS services use features in other AWS services. For example, when you make a call in a service, \n      it's common for that service to run applications in Amazon EC2 or store objects in Amazon S3. A service might do this \n      using the calling principal's permissions, using a service role, or using a service-linked role.\nPrincipal permissions\n\u00e2\u0080\u0093\n\n      When you use an IAM user or role to perform actions in AWS, you are considered a principal. Policies \n      grant permissions to a principal. When you use some services, you might perform an action that then triggers \n      another action in a different service. In this case, you must have permissions to perform both actions. To \n      see whether an action requires additional dependent actions in a policy, see\nActions, resources, and condition keys for Amazon EC2\nin the\nService Authorization Reference\n.\nService role\n\u00e2\u0080\u0093\n\n      A service role is an\nIAM role\nthat a service assumes to perform \n      actions on your behalf. An IAM administrator can create, modify, and delete a service role from within IAM. For \n      more information, see\nCreating a role to delegate permissions \n      to an AWS service\nin the\nIAM User Guide\n.\nService-linked role\n\u00e2\u0080\u0093\n\n      A service-linked role is a type of service role that is linked to an AWS service. The service can assume the role to perform an action on your behalf. \n      Service-linked roles appear in your AWS account and are owned by the service. An IAM administrator can view, \n      but not edit the permissions for service-linked roles.\nApplications running on Amazon EC2\n\u00e2\u0080\u0093\n\n      You can use an IAM role to manage temporary credentials for applications that are running on an EC2 instance and making AWS CLI or AWS API requests. \n      This is preferable to storing access keys within the EC2 instance. To assign an AWS role to an EC2 instance and make it \n      available to all of its applications, you create an instance profile that is attached to the \n      instance. An instance profile contains the role and enables programs that are running on the EC2 instance to\n      get temporary credentials. For more information, see\nUsing an IAM role to grant permissions to applications running on Amazon EC2 instances\nin the\nIAM User Guide\n.\nTo learn whether to use IAM roles or IAM users, see\nWhen to create an IAM role (instead of a\n               user)\nin the\nIAM User Guide\n.\nManaging access using policies\nYou control access in AWS by creating policies and attaching them to AWS identities or resources. A policy is an object in AWS that,\n when associated with an identity or resource, defines their permissions. AWS evaluates these policies when a principal (user, root user, or role session) makes a request. \n Permissions in the policies determine whether the request is allowed or denied. \n Most policies are stored in AWS as JSON documents. For more information about the structure and contents \n of JSON policy documents, see\nOverview of JSON policies\nin the\nIAM User Guide\n.\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nBy default, users and roles have no permissions. To grant users permission to perform actions on the resources that they need, an \nIAM administrator can create IAM policies. The administrator can then add the IAM policies to roles, and users can assume the roles.\nIAM policies define permissions for an action regardless of the method that you use to perform the operation. For example, suppose that you have a\n policy that allows the\niam:GetRole\naction. A user with that policy can get role information from the AWS Management Console, the AWS CLI, or the AWS\n API.\nIdentity-based\n               policies\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity, such as an IAM user, group of users, or role. These\n            policies control what actions users and roles can perform, on which resources, and under what conditions. To learn how to create an identity-based\n            policy, see\nCreating IAM policies\nin the\nIAM User Guide\n.\nIdentity-based policies can be further categorized as\ninline policies\nor\nmanaged\n               policies\n. Inline policies are embedded directly into a single user, group, or role. Managed policies are standalone policies that you\n            can attach to multiple users, groups, and roles in your AWS account. Managed policies include AWS managed policies and customer managed\n            policies. To learn how to choose between a managed policy or an inline policy, see\nChoosing between managed policies and inline\n               policies\nin the\nIAM User Guide\n.\nResource-based\n               policies\nResource-based policies are JSON policy documents that you attach to a resource. Examples of resource-based policies are \n         IAM\nrole trust policies\nand Amazon S3\nbucket policies\n. In services that support resource-based policies, service \n         administrators can use them to control access to a specific resource. For the resource where the policy is attached, the policy defines what actions\n            a specified principal can perform on that resource and under what conditions. You must\nspecify a principal\nin a resource-based policy. Principals \n            can include accounts, users, roles, federated users, or AWS services.\nResource-based policies are inline policies that are located in that service. You can't use AWS managed policies from IAM in a \n   resource-based policy.\nAccess control lists (ACLs)\nAccess control lists (ACLs) control which principals (account members, users, or roles) have permissions to access a resource. ACLs are\n            similar to resource-based policies, although they do not use the JSON policy document format.\nAmazon S3, AWS WAF, and Amazon VPC\n            are examples of services that support ACLs. To learn more about ACLs, see\nAccess control list (ACL)\n               overview\nin the\nAmazon Simple Storage Service Developer Guide\n.\nOther policy types\nAWS supports additional, less-common policy types. These policy types can set the maximum permissions granted to you by the more common policy\n            types.\nPermissions boundaries\n\u00e2\u0080\u0093 A permissions\n                  boundary is an advanced feature in which you set the maximum permissions that an\n                  identity-based policy can grant to an IAM entity (IAM user or role). You can\n                  set a permissions boundary for an entity. The resulting permissions are the\n                  intersection of an entity's identity-based policies and its permissions boundaries.\n                  Resource-based policies that specify the user or role in the\nPrincipal\nfield are not limited by the permissions boundary. An\n                  explicit deny in any of these policies overrides the allow. For more information\n                  about permissions boundaries, see\nPermissions boundaries for\n                     IAM entities\nin the\nIAM User Guide\n.\nService control policies (SCPs)\n\u00e2\u0080\u0093 SCPs are JSON policies that specify the maximum permissions for\n                  an organization or organizational unit (OU) in AWS Organizations. AWS Organizations is a service for grouping and centrally managing multiple AWS accounts that your business owns. If you enable all features in an organization, then you can apply service control policies (SCPs) to any or all of\n                  your accounts. The SCP limits permissions for entities in member accounts, including each AWS account root user. For more information about Organizations and\n                  SCPs, see\nHow SCPs work\nin the\nAWS Organizations User Guide\n.\nSession policies\n\u00e2\u0080\u0093 Session policies are\n                  advanced policies that you pass as a parameter when you programmatically create a\n                  temporary session for a role or federated user. The resulting session's\n                  permissions are the intersection of the user or role's identity-based policies and\n                  the session policies. Permissions can also come from a resource-based policy. An\n                  explicit deny in any of these policies overrides the allow. For more information,\n                  see\nSession\n                     policies\nin the\nIAM User Guide\n.\nMultiple policy\n               types\nWhen multiple types of policies apply to a request, the resulting permissions are more complicated to understand. To learn how AWS determines\n            whether to allow a request when multiple policy types are involved, see\nPolicy\n               evaluation logic\nin the\nIAM User Guide\n.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nWorking with Network Access Scopes\nHow Network Access Analyzer works with IAM\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/security_iam_service-with-iam.html": "How Network Access Analyzer works with IAM - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nNetwork Access Analyzer\nIdentity-based policies\nResource-based policies\nPolicy actions\nPolicy resources\nPolicy condition keys\nACLs\nABAC\nTemporary\n          credentials\nPrincipal permissions\nService roles\nService-linked\n          roles\nHow Network Access Analyzer works with IAM\nBefore you use IAM to manage access to Network Access Analyzer, learn what IAM features are\n         available to use with Network Access Analyzer.\nIAM features you can use with Network Access Analyzer\nIAM feature\nNetwork Access Analyzer support\nIdentity-based policies\nYes\nResource-based policies\nNo\nPolicy actions\nYes\nPolicy resources\nYes\nPolicy condition keys (service-specific)\nNo\nACLs\nNo\nABAC (tags in\n                policies)\nYes\nTemporary\n                credentials\nYes\nPrincipal permissions\nYes\nService\n                roles\nNo\nService-linked roles\nNo\nTo get a high-level view of how Network Access Analyzer and other AWS services work with most IAM\n      features, see\nAWS services that work with IAM\nin the\nIAM User Guide\n.\nIdentity-based policies for Network Access Analyzer\nSupports identity-based policies\nYes\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity, such as an IAM user, group of users, or role. These\n            policies control what actions users and roles can perform, on which resources, and under what conditions. To learn how to create an identity-based\n            policy, see\nCreating IAM policies\nin the\nIAM User Guide\n.\nWith IAM identity-based policies, you can specify allowed or denied actions and\n            resources as well as the conditions under which actions are allowed or denied.  You\n            can't specify the principal in an identity-based policy because it applies to the user\n            or role to which it is attached. To learn about all of the elements that you can use in a\n            JSON policy, see\nIAM JSON\n               policy elements reference\nin the\nIAM User Guide\n.\nResource-based\n          policies within Network Access Analyzer\nSupports resource-based policies\nNo\nResource-based policies are JSON policy documents that you attach to a resource. Examples of resource-based policies are \n         IAM\nrole trust policies\nand Amazon S3\nbucket policies\n. In services that support resource-based policies, service \n         administrators can use them to control access to a specific resource. For the resource where the policy is attached, the policy defines what actions\n            a specified principal can perform on that resource and under what conditions. You must\nspecify a principal\nin a resource-based policy. Principals \n            can include accounts, users, roles, federated users, or AWS services.\nTo enable cross-account access, you can specify an entire account or IAM entities\n            in another account as the principal in a\n               resource-based policy. Adding a cross-account principal to a resource-based\n            policy is only half of establishing the trust relationship. When the principal and the\n            resource are in different AWS accounts, an IAM administrator in the trusted account \n            must also grant the principal entity (user or role) permission to access the resource. They grant \n            permission by attaching an identity-based policy to the entity. However, if a resource-based \n            policy grants access to a principal in the same account, no additional identity-based policy is \n            required. For more information, see\nHow\n               IAM roles differ from resource-based policies\nin the\nIAM User Guide\n.\nPolicy actions for Network Access Analyzer\nSupports policy actions\nYes\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nAction\nelement of a JSON policy describes the\n               actions that you can use to allow or deny access in a policy. Policy\n               actions usually have the same name as the associated AWS API operation. There are some exceptions, such as\npermission-only \n               actions\nthat don't have a matching API operation. There are also some operations that require multiple actions in a policy. \n               These additional actions are called\ndependent actions\n.\nInclude actions in a policy to grant permissions to perform the associated operation.\nNetwork Access Analyzer shares its API namespace with Amazon EC2.\n          Policy actions in Network Access Analyzer use the following prefix before the action:\nec2\nTo specify multiple actions in a single statement, separate them with commas.\n\"Action\": [\n    \"ec2:\naction1\n\",\n    \"ec2:\naction2\n\"\n]\nYou can specify multiple actions using wildcards (*). For example, to specify all\n          actions that begin with the word\nDescribe\n, include the following\n          action.\n\"Action\": \"ec2:Describe*\"\nThe following actions are supported by Network Access Analyzer:\nCreateNetworkInsightsAccessScope\nDeleteNetworkInsightsAccessScope\nDeleteNetworkInsightsAccessScopeAnalysi\ns\nDescribeNetworkInsightsAccessScopeAnalyses\nDescribeNetworkInsightsAccessScopes\nGetNetworkInsightsAccessScopeAnalysisFindings\nGetNetworkInsightsAccessScopeContent\nStartNetworkInsightsAccessScopeAnalysis\nFor more information, see\nActions Defined by Amazon EC2\nin the\nService Authorization Reference\n.\nPolicy resources for Network Access Analyzer\nSupports policy resources\nYes\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nResource\nJSON policy element specifies the object or objects to which the action applies. Statements must include either a\nResource\nor a\nNotResource\nelement. As a best practice, specify a resource using its\nAmazon Resource Name (ARN)\n. You can do this for actions that support a \n                  specific resource type, known as\nresource-level permissions\n.\nFor actions that don't support resource-level permissions, such as listing operations,\n                  use a wildcard (*) to indicate that the statement applies to all resources.\n\"Resource\": \"*\"\nThe following Network Access Analyzer API actions do not support resource-level permissions:\nDescribeNetworkInsightsAccessScopeAnalyses\nDescribeNetworkInsightsAccessScopes\nPolicy\n          condition keys for Network Access Analyzer\nSupports service-specific policy condition keys\nNo\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal\ncan perform\nactions\non what\nresources\n, and under what\nconditions\n.\nThe\nCondition\nelement (or\nCondition\nblock\n) lets you specify conditions in which a\n               statement is in effect. The\nCondition\nelement is optional. You can create\n               conditional expressions that use\ncondition\n                  operators\n, such as equals or less than, to match the condition in the\n               policy with values in the request.\nIf you specify multiple\nCondition\nelements in a statement, or\n               multiple keys in a single\nCondition\nelement, AWS evaluates them using\n               a logical\nAND\noperation. If you specify multiple values for a single\n               condition key, AWS evaluates the condition using a logical\nOR\noperation. All of the conditions must be met before the statement's permissions are\n               granted.\nYou can also use placeholder variables when you specify conditions. For example,\n               you can grant an IAM user permission to access a resource only if it is tagged with\n               their IAM user name. For more information, see\nIAM policy elements:\n                  variables and tags\nin the\nIAM User Guide\n.\nAWS supports global condition keys and service-specific condition keys. To see all AWS global\n               condition keys, see\nAWS global condition context keys\nin the\nIAM User Guide\n.\nACLs in Network Access Analyzer\nSupports ACLs\nNo\nAccess control lists (ACLs) control which principals (account members, users, or roles) have permissions to access a resource. ACLs are\n            similar to resource-based policies, although they do not use the JSON policy document format.\nABAC with Network Access Analyzer\nSupports ABAC (tags in policies)\nYes\nAttribute-based access control (ABAC) is an authorization strategy that defines permissions\n      based on attributes. In AWS, these attributes are called\ntags\n. You can attach tags to IAM entities (users\n      or roles) and to many AWS resources. Tagging entities and resources is the first step of ABAC. Then you \n      design ABAC policies to allow operations when the principal's tag matches the tag on the resource that they \n      are trying to access.\nABAC is helpful in environments that are growing rapidly and helps with situations where policy management becomes cumbersome.\nTo control access based on tags, you provide tag information in the\ncondition\n         element\nof a policy using the\naws:ResourceTag/\nkey-name\n,\naws:RequestTag/\nkey-name\n, or\naws:TagKeys\ncondition keys.\nIf a service supports all three condition keys for every resource type, then the value is\nYes\nfor the service. \n  If a service supports all three condition keys for only some resource types, then the value is\nPartial\n.\nFor more information about ABAC, see\nWhat is ABAC?\nin the\nIAM User Guide\n. To view a tutorial with steps for setting up ABAC, see\nUse attribute-based access control (ABAC)\nin the\nIAM User Guide\n.\nUsing temporary\n          credentials with Network Access Analyzer\nSupports temporary credentials\nYes\nSome AWS services don't work when you sign in using temporary credentials. For additional \n         information, including which AWS services work with temporary credentials, see\nAWS services\n               that work with IAM\nin the\nIAM User Guide\n.\nYou are using temporary credentials if you sign in to the AWS Management Console using any method\n            except a user name and password. For example, when you access AWS using your\n            company's single sign-on (SSO) link, that process automatically creates temporary credentials.\n            You also automatically create temporary credentials when you sign in to the console as a user and\n            then switch roles. For more information about switching roles, see\nSwitching to a role\n               (console)\nin the\nIAM User Guide\n.\nYou can manually create temporary credentials using the AWS CLI or AWS API. You can\n            then use those temporary credentials to access AWS. AWS recommends that you\n            dynamically generate temporary credentials instead of using long-term access keys. For\n            more information, see\nTemporary\n               security credentials in IAM\n.\nCross-service\n          principal permissions for Network Access Analyzer\nSupports principal permissions\nYes\nWhen you use an IAM user or role to perform actions in AWS, you are considered a principal. Policies \n      grant permissions to a principal. When you use some services, you might perform an action that then triggers \n      another action in a different service. In this case, you must have permissions to perform both actions. To \n      see whether an action requires additional dependent actions in a policy, see\nActions, resources, and condition keys for Amazon EC2\nin the\nService Authorization Reference\n.\nService roles for Network Access Analyzer\nSupports service roles\nNo\nA service role is an\nIAM role\nthat a service assumes to perform \n      actions on your behalf. An IAM administrator can create, modify, and delete a service role from within IAM. For \n      more information, see\nCreating a role to delegate permissions \n      to an AWS service\nin the\nIAM User Guide\n.\nService-linked\n          roles for Network Access Analyzer\nSupports service-linked roles\nNo\nA service-linked role is a type of service role that is linked to an AWS service. The service can assume the role to perform an action on your behalf. \n      Service-linked roles appear in your AWS account and are owned by the service. An IAM administrator can view, \n      but not edit the permissions for service-linked roles.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nIdentity and access management\nRequired API\n        permissions\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/security-iam-awsmanpol.html": "AWS managed policies for Network Access Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nNetwork Access Analyzer\nAmazonVPCNetworkAccessAnalyzerFullAccessPolicy\nPolicy updates\nAWS managed policies for Network Access Analyzer\nTo add permissions to users, groups, and roles, it is easier to use AWS managed policies\n      than to write policies yourself. It takes time and expertise to\ncreate IAM customer\n         managed policies\nthat provide your team with only the permissions they need. To get\n      started quickly, you can use our AWS managed policies. These policies cover common use cases\n      and are available in your AWS account. For more information about AWS managed policies,\n      see\nAWS managed policies\nin the\nIAM User Guide\n.\nAWS services maintain and update AWS managed policies. You can't change the\n      permissions in AWS managed policies. Services occasionally add additional permissions to an\n      AWS managed policy to support new features. This type of update affects all identities\n      (users, groups, and roles) where the policy is attached. Services are most likely to update an\n      AWS managed policy when a new feature is launched or when new operations become available.\n      Services do not remove permissions from an AWS managed policy, so policy updates won't\n      break your existing permissions.\nAdditionally, AWS supports managed policies for job functions that span multiple\n      services. For example, the\nReadOnlyAccess\nAWS managed\n      policy provides read-only access to all AWS services and resources. When a service launches\n      a new feature, AWS adds read-only permissions for new operations and resources. For a list\n      and descriptions of job function policies, see\nAWS managed policies for\n         job functions\nin the\nIAM User Guide\n.\nAWS managed policy: AmazonVPCNetworkAccessAnalyzerFullAccessPolicy\nProvides permissions to create, analyze, and delete Network Access Scopes, and to describe network path resources, \n         such as firewalls, internet gateways, load balancers, NAT gateways, network interfaces, transit gateway attachments, \n         VPC endpoints, VPC peering connections, and virtual private gateways.\nTo view the permissions for this policy, see\nAmazonVPCNetworkAccessAnalyzerFullAccessPolicy\nin the\nAWS Managed Policy Reference\n.\nNetwork Access Analyzer updates to AWS managed policies\nView details about updates to AWS managed policies for Network Access Analyzer since this service\n         began tracking these changes.\nChange\nDescription\nDate\nAmazonVPCNetworkAccessAnalyzerFullAccessPolicy\n\u00e2\u0080\u0093 New policy\nAdded a policy that provides full access to Network Access Analyzer.\nJune 15, 2023\nNetwork Access Analyzer started tracking changes\nNetwork Access Analyzer started tracking changes for its AWS managed policies.\nDecember 1, 2021\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nRequired API\n        permissions\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/network-access-analyzer-limits.html": "Quotas and considerations for Network Access Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nNetwork Access Analyzer\nAnalysis runtime\nQuotas and considerations for Network Access Analyzer\nYour AWS account has default quotas, formerly referred to as limits, for each \n        AWS service. You can request increases for some quotas, but not for all quotas.\nTo view the quotas for Network Access Analyzer, open the\nService Quotas console\n. In the navigation pane, choose\nAWS services\n, and \n        then select\nNetwork Insights\n. To request a quota increase, see\nRequesting a quota increase\nin the\nService Quotas User Guide\n.\nYour AWS account has the following quotas related to Network Access Analyzer.\nName\nDefault\nAdjustable\nAccess scopes\n1,000\nYes\nAccess scope analyses\n10,000\nYes\nConcurrent access scope analyses\n25\nYes\nFindings per scope analysis\n1,000\nNo\nAnalysis runtime\nAll network interfaces in the account and Region are included in every\n            analysis. The running analysis times out after 1 hour and 30 minutes.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nAWS managed policies\nDocument history\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better.", "https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/doc-history.html": "Document history for Network Access Analyzer - Amazon Virtual Private Cloud\nAWS\nDocumentation\nAmazon Virtual Private Cloud\nNetwork Access Analyzer\nDocument history for Network Access Analyzer\nThe following table describes the releases for Network Access Analyzer.\nChange\nDescription\nDate\nInitial release\nThis release introduces Network Access Analyzer.\nDecember 1, 2021\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nDocument Conventions\nQuotas\nDid this page help you? - Yes\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nDid this page help you? - No\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better."}